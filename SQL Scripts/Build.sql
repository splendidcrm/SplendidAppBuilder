if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnSqlSingularName' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnSqlSingularName;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnSqlSingularName(@NAME varchar(80))
returns varchar(80)
as
  begin
	declare @SINGULAR_NAME varchar(80);
	if right(@NAME, 3) = 'IES' begin -- then
		set @SINGULAR_NAME = substring(@NAME, 1, len(@NAME) - 3) + 'Y';
	end else if right(@NAME, 1) = 'S' begin -- then
		set @SINGULAR_NAME = substring(@NAME, 1, len(@NAME) - 1);
	end else begin
		set @SINGULAR_NAME = @NAME;
	end -- if;
	return @SINGULAR_NAME;
  end
GO

Grant Execute on dbo.fnSqlSingularName to public
GO



if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlGetTransactionToken' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlGetTransactionToken;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/10/2008 Paul.  sp_getbindtoken may not be accessible in a hosted environment. 
-- Wrap sp_getbindtoken in a procedure that can be bypassed.
-- The EXECUTE permission was denied on the object 'sp_getbindtoken', database 'mssqlsystemresource', 
-- 04/23/2008 Paul.  The token must be a varchar. 
-- Implicit conversion from data type nvarchar to varchar is not allowed. Use the CONVERT function to run this query.
-- 09/27/2009 Paul.  Allow the Azure commands to be enabled by the SplendidCRM Configuration Wizard.
-- 05/11/2013 Paul.  Dynamically create the procedure so that the same code would work on SQL Server and SQL Azure. 
-- 01/30/2016 Paul.  sp_getbindtoken was added back to SQL Azure, though I'm not sure if we should re-enable. 
declare @Command varchar(max);
if charindex('Microsoft SQL Azure', @@VERSION) > 0 begin -- then
	print 'Microsoft SQL Azure';
	set @Command = 'Create Procedure dbo.spSqlGetTransactionToken(@TRANSACTION_TOKEN varchar(255) out)
as
  begin
	set nocount on

	if @@TRANCOUNT > 0 begin -- then
		-- 09/15/2009 Paul.  If sp_getbindtoken is not available, use date and time until we can find a better solution. 
		-- set @TRANSACTION_TOKEN = convert(varchar(19), getutcdate(), 120);

		-- 10/07/2009 Paul.  MODIFIED_USER_ID will never be NULL, though it may be 00000000-0000-0000-0000-000000000000. 
		select @TRANSACTION_TOKEN = cast(ID as char(36)) + '','' + cast(MODIFIED_USER_ID as char(36))
		  from SYSTEM_TRANSACTIONS
		 where SESSION_SPID = @@SPID;
		-- 10/07/2009 Paul.  The SPID should always exists, but just in case, lets create it if it does not exist. 
		-- One possible reason for it not existing is if the database is modified internally. 
		if @TRANSACTION_TOKEN is null begin -- then
			declare @ID uniqueidentifier;
			exec dbo.spSYSTEM_TRANSACTIONS_Create @ID out, null;

			select @TRANSACTION_TOKEN = cast(ID as char(36)) + '','' + cast(MODIFIED_USER_ID as char(36))
			  from SYSTEM_TRANSACTIONS
			 where SESSION_SPID = @@SPID;
		end -- if;
	end -- if;
  end
';
	exec(@Command);
end else begin
	print 'Microsoft SQL Server';
	set @Command = 'Create Procedure dbo.spSqlGetTransactionToken(@TRANSACTION_TOKEN varchar(255) out)
as
  begin
	set nocount on

	if @@TRANCOUNT > 0 begin -- then
		exec sp_getbindtoken @TRANSACTION_TOKEN out;
	end -- if;
  end
';
	exec(@Command);
end -- if;
GO


Grant Execute on dbo.spSqlGetTransactionToken to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlPrintByLine' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlPrintByLine;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spSqlPrintByLine
	( @COMMAND nvarchar(max)
	)
as
  begin
	set nocount on

	declare @CurrentPosR  int;
	declare @NextPosR     int;
	declare @CRLF         nchar(2);
	declare @Line         nvarchar(4000);

	set @CRLF = char(13) + char(10);
	set @CurrentPosR = 1;
	while @CurrentPosR <= len(@COMMAND) begin -- do
		set @NextPosR = charindex(@CRLF, @COMMAND,  @CurrentPosR);
		if @NextPosR = 0 or @NextPosR is null begin -- then
			set @NextPosR = len(@COMMAND) + 1;
		end -- if;
		set @Line = substring(@COMMAND, @CurrentPosR, @NextPosR - @CurrentPosR);
		print @Line;
		set @CurrentPosR = @NextPosR + 2;
	end -- while;
  end
GO


Grant Execute on dbo.spSqlPrintByLine to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlTableColumnExists' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlTableColumnExists;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 06/28/2018 Paul.  Output should be int. 
Create Procedure dbo.spSqlTableColumnExists
	( @EXISTS           bit output
	, @TABLE_NAME       nvarchar(80)
	, @COLUMN_NAME      nvarchar(80)
	, @ARCHIVE_DATABASE nvarchar(50)
	)
as
  begin
	set nocount on

	declare @COMMAND              nvarchar(max);
	declare @PARAM_DEFINTION      nvarchar(100);
	declare @ARCHIVE_DATABASE_DOT nvarchar(50);
	set @PARAM_DEFINTION = N'@COUNT_VALUE int output';
	set @EXISTS   = 0;
	
	if len(@ARCHIVE_DATABASE) > 0 begin -- then
		if charindex('.', @ARCHIVE_DATABASE) > 0 begin -- then
			set @ARCHIVE_DATABASE_DOT = @ARCHIVE_DATABASE;
		end else begin
			set @ARCHIVE_DATABASE_DOT = '[' + @ARCHIVE_DATABASE + '].';
		end -- if;
	end else begin
		set @ARCHIVE_DATABASE_DOT = '';
	end -- if;

	set @COMMAND = N'select @COUNT_VALUE = count(*) from ' + @ARCHIVE_DATABASE_DOT + 'INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = ''' + @TABLE_NAME + ''' and COLUMN_NAME = ''' + @COLUMN_NAME + '''';
	exec sp_executesql @COMMAND, @PARAM_DEFINTION, @COUNT_VALUE = @EXISTS output;
  end
GO


Grant Execute on dbo.spSqlTableColumnExists to public;
GO

/*
declare @EXISTS bit;
exec spSqlTableColumnExists @EXISTS out, 'ACCOUNTS', 'ID', null;
print @EXISTS
exec spSqlTableColumnExists @EXISTS out, 'ACCOUNTS', 'ID', '';
print @EXISTS
exec spSqlTableColumnExists @EXISTS out, 'ACCOUNTS', 'XXXX', '[SplendidCRM_Archive].';
print @EXISTS
*/

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlTableColumnsChanged' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlTableColumnsChanged;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spSqlTableColumnsChanged
	( @EXISTS           bit output
	, @TABLE_NAME       nvarchar(80)
	, @ARCHIVE_DATABASE nvarchar(50)
	)
as
  begin
	set nocount on

	declare @COLUMNS_CHANGED      int;
	declare @COMMAND              nvarchar(max);
	declare @PARAM_DEFINTION      nvarchar(100);
	declare @ARCHIVE_DATABASE_DOT nvarchar(50);
	set @PARAM_DEFINTION = N'@CONFIG_VALUE nvarchar(50) OUTPUT';
	set @EXISTS   = 0;
	
	if len(@ARCHIVE_DATABASE) > 0 begin -- then
		set @ARCHIVE_DATABASE_DOT = '[' + @ARCHIVE_DATABASE + '].';
	end else begin
		set @ARCHIVE_DATABASE_DOT = '';
	end -- if;

	set @COMMAND = N'select @CONFIG_VALUE = count(*)
	  from            INFORMATION_SCHEMA.COLUMNS   vwSqlColumns
	  left outer join ' + @ARCHIVE_DATABASE_DOT + 'INFORMATION_SCHEMA.COLUMNS   vwSqlColumnsArchive
	               on vwSqlColumnsArchive.TABLE_NAME  = vwSqlColumns.TABLE_NAME + ''_ARCHIVE''
	              and vwSqlColumnsArchive.COLUMN_NAME = vwSqlColumns.COLUMN_NAME
	 where vwSqlColumnsArchive.TABLE_NAME is null
	   and vwSqlColumns.TABLE_NAME = ''' + @TABLE_NAME + '''';

	exec sp_executesql @COMMAND, @PARAM_DEFINTION, @CONFIG_VALUE = @COLUMNS_CHANGED output;
	if @COLUMNS_CHANGED > 0 begin -- then
		set @EXISTS = 1;
	end -- if;
  end
GO


Grant Execute on dbo.spSqlTableColumnsChanged to public;
GO

/*
declare @EXISTS bit;
exec spSqlTableColumnsChanged @EXISTS out, 'OPPORTUNITIES', null;
print @EXISTS
exec spSqlTableColumnsChanged @EXISTS out, 'OPPORTUNITIES', '';
print @EXISTS
exec spSqlTableColumnsChanged @EXISTS out, 'OPPORTUNITIES', 'SplendidCRM_Archive';
print @EXISTS
*/

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlTableExists' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlTableExists;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 06/28/2018 Paul.  Output should be int. 
Create Procedure dbo.spSqlTableExists
	( @EXISTS           bit output
	, @TABLE_NAME       nvarchar(80)
	, @ARCHIVE_DATABASE nvarchar(50)
	)
as
  begin
	set nocount on

	declare @COMMAND              nvarchar(max);
	declare @PARAM_DEFINTION      nvarchar(100);
	declare @ARCHIVE_DATABASE_DOT nvarchar(50);
	set @PARAM_DEFINTION = N'@COUNT_VALUE int OUTPUT';
	set @EXISTS = 0;
	
	if len(@ARCHIVE_DATABASE) > 0 begin -- then
		set @ARCHIVE_DATABASE_DOT = '[' + @ARCHIVE_DATABASE + '].';
	end else begin
		set @ARCHIVE_DATABASE_DOT = '';
	end -- if;

	set @COMMAND = N'select @COUNT_VALUE = count(*) from ' + @ARCHIVE_DATABASE_DOT + 'INFORMATION_SCHEMA.TABLES where TABLE_NAME = ''' + @TABLE_NAME + ''' and TABLE_TYPE = ''BASE TABLE''';
	exec sp_executesql @COMMAND, @PARAM_DEFINTION, @COUNT_VALUE = @EXISTS output;
  end
GO


Grant Execute on dbo.spSqlTableExists to public;
GO

/*
declare @EXISTS bit;
exec spSqlTableExists @EXISTS out, 'ACCOUNTS', null;
print @EXISTS
exec spSqlTableExists @EXISTS out, 'ACCOUNTS', '';
print @EXISTS
exec spSqlTableExists @EXISTS out, 'ACCOUNTS_XXX';
print @EXISTS
*/

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlTableIndexExists' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlTableIndexExists;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 06/28/2018 Paul.  Output should be int. 
Create Procedure dbo.spSqlTableIndexExists
	( @EXISTS           bit output
	, @TABLE_NAME       nvarchar(80)
	, @INDEX_NAME       nvarchar(120)
	, @ARCHIVE_DATABASE nvarchar(50)
	)
as
  begin
	set nocount on

	declare @COMMAND              nvarchar(max);
	declare @PARAM_DEFINTION      nvarchar(100);
	declare @ARCHIVE_DATABASE_DOT nvarchar(50);
	set @PARAM_DEFINTION = N'@COUNT_VALUE int output';
	set @EXISTS   = 0;
	
	if len(@ARCHIVE_DATABASE) > 0 begin -- then
		set @ARCHIVE_DATABASE_DOT = '[' + @ARCHIVE_DATABASE + '].';
	end else begin
		set @ARCHIVE_DATABASE_DOT = '';
	end -- if;

	set @COMMAND = N'select @COUNT_VALUE = count(*) from ' + @ARCHIVE_DATABASE_DOT + 'sys.indexes where name = ''' + @INDEX_NAME + '''';
	exec sp_executesql @COMMAND, @PARAM_DEFINTION, @COUNT_VALUE = @EXISTS output;
  end
GO


Grant Execute on dbo.spSqlTableIndexExists to public;
GO

/*
declare @EXISTS bit;
exec spSqlTableIndexExists @EXISTS out, 'OPPORTUNITIES', 'IDXR_OPPORTUNITIES_ASSIGNED_SET_ID', 'SplendidCRM_Archive';
print @EXISTS;
*/


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlBackupDatabase' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlBackupDatabase;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 02/09/2008 Paul.  Remove the SplendidCRM folder in the backup path.  
-- It is not automatically created and we don't want to create it manually at this time. 
-- 02/25/2008 Paul.  Increase size of DBNAME. 
-- 02/21/2017 Paul.  Allow both parameters to be optional. 
Create Procedure dbo.spSqlBackupDatabase
	( @FILENAME nvarchar(255) = null out
	, @TYPE nvarchar(20) = null
	)
as
  begin
	set nocount on

	-- 12/31/2007 Paul.  The backup is place relative to the default backup directory. 
	declare @TIMESTAMP varchar(30);
	-- 02/25/2008 Paul.  The database name can be large.
	declare @DBNAME    varchar(200);
	declare @NOW       datetime;
	set @NOW    = getdate();
	set @DBNAME = db_name();
	set @TYPE   = upper(@TYPE);
	set @TIMESTAMP = convert(varchar(30), @NOW, 112) + convert(varchar(30), @NOW, 108);
	set @TIMESTAMP = substring(replace(@TIMESTAMP, ':', ''), 1, 12);
	-- 02/21/2017 Paul.  Allow both parameters to be optional. 
	if @TYPE = 'FULL' or @TYPE is null begin -- then
		if @FILENAME is null or @FILENAME = '' begin -- then
			set @FILENAME = @DBNAME + '_db_' + @TIMESTAMP + '.bak';
		end -- if;
		backup database @DBNAME to disk = @FILENAME;
	end else if @TYPE = 'LOG' begin -- then
		if @FILENAME is null or @FILENAME = '' begin -- then
			set @FILENAME = @DBNAME + '_tlog_' + @TIMESTAMP + '.trn';
		end -- if;
		backup log @DBNAME to disk = @FILENAME;
	end else begin
		raiserror(N'Unknown backup type', 16, 1);
	end -- if;
  end
GO


Grant Execute on dbo.spSqlBackupDatabase to public;
GO

-- exec spSqlBackupDatabase null, 'FULL';
-- exec spSqlBackupDatabase null, 'LOG';

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlBuildAuditIndex' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlBuildAuditIndex;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/25/2011 Paul.  We've stopped supporting SQL 2000, so we can use varchar(max). 
-- This also fixes a problem for a customer with 100 custom fields. 
Create Procedure dbo.spSqlBuildAuditIndex(@TABLE_NAME varchar(80))
as
  begin
	set nocount on

	-- 04/25/2011 Paul.  We've stopped supporting SQL 2000, so we can use varchar(max). 
	declare @Command           varchar(max);
	declare @AUDIT_TABLE       varchar(90);
	declare @CRLF              char(2);
	declare @TEST              bit;
	
	set @TEST = 0;
	set @CRLF = char(13) + char(10);
	set @AUDIT_TABLE = @TABLE_NAME + '_AUDIT';
	if exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = @AUDIT_TABLE and TABLE_TYPE = 'BASE TABLE') begin -- then
		if exists (select * from sys.indexes where name = 'IDX_' + @AUDIT_TABLE) begin -- then
			set @Command = 'drop   index ' + @AUDIT_TABLE + '.IDX_' + @AUDIT_TABLE;
			if @TEST = 1 begin -- then
				print @Command;
			end else begin
				print @Command;
				exec(@Command);
			end -- if;
		end -- if;

		if right(@TABLE_NAME, 5) = '_CSTM' begin -- then
			-- 11/18/2008 Paul.  Include the audit action in the CSTM table as the workflow engine needs to get just the update action and not the insert. 
			set @Command = 'create index IDX_' + @AUDIT_TABLE + ' on dbo.' + @AUDIT_TABLE + '(ID_C, AUDIT_TOKEN, AUDIT_ACTION)';
			if @TEST = 1 begin -- then
				print @Command;
			end else begin
				print @Command;
				exec(@Command);
			end -- if;
		end -- if;
		-- 12/17/2009 Paul.  end if is the same as having a line break, so lets make it explicit. 
		if exists (select * from vwSqlColumns where ObjectName = @AUDIT_TABLE and ColumnName = 'ID') begin -- then
			set @Command = 'create index IDX_' + @AUDIT_TABLE + ' on dbo.' + @AUDIT_TABLE + '(ID, AUDIT_VERSION, AUDIT_TOKEN)';
			if @TEST = 1 begin -- then
				print @Command;
			end else begin
				print @Command;
				exec(@Command);
			end -- if;
		end -- if;
	end -- if;
  end
GO


Grant Execute on dbo.spSqlBuildAuditIndex to public;
GO

-- exec dbo.spSqlBuildAuditIndex 'CONTACTS';

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlBuildAuditTable' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlBuildAuditTable;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/07/2008 Paul.  Create an index in the ID field as this will be the primary lookup field when viewing the history. 
-- 09/20/2009 Paul.  Use a unique name for the cursor to prevent a collision with another procedure. 
-- 06/13/2010 Paul.  We need to prevent from adding auditing to non-SplendidCRM tables, so check for the base fields. 
-- 07/21/2010 Paul.  Custom tables were being excluded from the audit. 
-- 04/25/2011 Paul.  We've stopped supporting SQL 2000, so we can use varchar(max). 
-- This also fixes a problem for a customer with 100 custom fields. 
Create Procedure dbo.spSqlBuildAuditTable(@TABLE_NAME varchar(80))
as
  begin
	set nocount on

	-- 04/25/2011 Paul.  We've stopped supporting SQL 2000, so we can use varchar(max). 
	declare @Command           varchar(max);
	declare @AUDIT_TABLE       varchar(90);
	declare @AUDIT_PK          varchar(90);
	declare @COLUMN_NAME       varchar(80);
	declare @COLUMN_TYPE       varchar(20);
	declare @CRLF              char(2);
	declare @COLUMN_MAX_LENGTH int;
	declare @TEST              bit;
	declare @SPLENDID_FIELDS   int;
	
	set @TEST = 0;
	set @SPLENDID_FIELDS = 0;
	set @CRLF = char(13) + char(10);
	set @AUDIT_TABLE = @TABLE_NAME + '_AUDIT';
	set @AUDIT_PK    = 'PKA_' + @TABLE_NAME;

	-- 07/21/2010 Paul.  Custom tables were being excluded from the audit. 
	if right(@TABLE_NAME, 5) = '_CSTM' begin -- then
		-- 07/21/2010 Paul.  A custom table will only have an ID_C field, so if found then allow to continue. 
		if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @TABLE_NAME and COLUMN_NAME = 'ID_C') begin -- then
			set @SPLENDID_FIELDS = 6;
		end -- if;
	end else begin
		-- 06/13/2010 Paul.  We need to prevent from adding auditing to non-SplendidCRM tables, so check for the base fields. 
		if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @TABLE_NAME and COLUMN_NAME = 'ID') begin -- then
			set @SPLENDID_FIELDS = @SPLENDID_FIELDS + 1;
		end -- if;
		if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @TABLE_NAME and COLUMN_NAME = 'DELETED') begin -- then
			set @SPLENDID_FIELDS = @SPLENDID_FIELDS + 1;
		end -- if;
		if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @TABLE_NAME and COLUMN_NAME = 'CREATED_BY') begin -- then
			set @SPLENDID_FIELDS = @SPLENDID_FIELDS + 1;
		end -- if;
		if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @TABLE_NAME and COLUMN_NAME = 'DATE_ENTERED') begin -- then
			set @SPLENDID_FIELDS = @SPLENDID_FIELDS + 1;
		end -- if;
		if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @TABLE_NAME and COLUMN_NAME = 'MODIFIED_USER_ID') begin -- then
			set @SPLENDID_FIELDS = @SPLENDID_FIELDS + 1;
		end -- if;
		if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @TABLE_NAME and COLUMN_NAME = 'DATE_MODIFIED') begin -- then
			set @SPLENDID_FIELDS = @SPLENDID_FIELDS + 1;
		end -- if;
	end -- if;

	if @SPLENDID_FIELDS = 6 begin -- then
		-- 12/29/2007 Paul.  On Oracle, we will likely need to avoid auditing tables with length > 30. 
		-- The only two tables are DETAILVIEWS_RELATIONSHIPS and EMAIL_MARKETING_PROSPECT_LISTS. 
		if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = @AUDIT_TABLE and TABLE_TYPE = 'BASE TABLE') begin -- then
			declare TABLE_COLUMNS_CURSOR cursor for
			select ColumnName
			     , ColumnType
			  from vwSqlColumns
			 where ObjectName = @TABLE_NAME
			 order by colid;
		
			select @COLUMN_MAX_LENGTH = max(len(ColumnName)) + 1
			  from vwSqlColumns
			 where ObjectName = @TABLE_NAME;
			if @COLUMN_MAX_LENGTH < 20 begin -- then
				set @COLUMN_MAX_LENGTH = 20;
			end -- if;
		
			set @Command = '';
			set @Command = @Command + 'Create Table dbo.' + @AUDIT_TABLE + @CRLF;
			-- 12/29/2007 Paul.  We need a transaction ID to be able to join operations into a single workflow operation. 
			-- sp_getbindtoken - Returns a unique identifier for the transaction. This unique identifier is referred to as a bind token. 
			set @Command = @Command + '	( AUDIT_ID'      + space(@COLUMN_MAX_LENGTH+1-len('AUDIT_ID'       )) + 'uniqueidentifier   not null constraint ' + @AUDIT_PK + ' primary key' + @CRLF;
			set @Command = @Command + '	, AUDIT_ACTION'  + space(@COLUMN_MAX_LENGTH+1-len('AUDIT_ACTION'   )) + 'int                not null' + @CRLF;
			set @Command = @Command + '	, AUDIT_DATE'    + space(@COLUMN_MAX_LENGTH+1-len('AUDIT_DATE'     )) + 'datetime           not null' + @CRLF;
			set @Command = @Command + '	, AUDIT_VERSION' + space(@COLUMN_MAX_LENGTH+1-len('AUDIT_VERSION'  )) + 'rowversion         not null' + @CRLF;
			set @Command = @Command + '	, AUDIT_COLUMNS' + space(@COLUMN_MAX_LENGTH+1-len('AUDIT_COLUMNS'  )) + 'varbinary(128)     null' + @CRLF;
			set @Command = @Command + '	, AUDIT_TOKEN'   + space(@COLUMN_MAX_LENGTH+1-len('AUDIT_TOKEN'    )) + 'varchar(255)       null' + @CRLF;
			open TABLE_COLUMNS_CURSOR;
			fetch next from TABLE_COLUMNS_CURSOR into @COLUMN_NAME, @COLUMN_TYPE;
			while @@FETCH_STATUS = 0 begin -- while
				set @Command = @Command + '	, ' + @COLUMN_NAME + space(@COLUMN_MAX_LENGTH+1-len(@COLUMN_NAME)) + @COLUMN_TYPE + space(18-len(@COLUMN_TYPE)) + ' null' + @CRLF;
				fetch next from TABLE_COLUMNS_CURSOR into @COLUMN_NAME, @COLUMN_TYPE;
			end -- while;
			close TABLE_COLUMNS_CURSOR;
			deallocate TABLE_COLUMNS_CURSOR;
			set @Command = @Command + '	)' + @CRLF;
			
			print 'Create Table dbo.' + @AUDIT_TABLE + ';';
			if @TEST = 1 begin -- then
				print @Command;
			end else begin
				exec(@Command);
			end -- if;
	
			-- 01/07/2008 Paul.  Create an index in the ID field as this will be the primary lookup field when viewing the history. 
			-- 11/17/2008 Paul.  Add audit token to main audit index as it is used in the workflow engine to get the old audit record. 
			-- 11/18/2008 Paul.  Include the audit action in the CSTM table as the workflow engine needs to get just the update action and not the insert. 
			-- We may want to remove the insert trigger on the CSTM table. 
			if right(@TABLE_NAME, 5) = '_CSTM' begin -- then
				set @Command = 'create index IDX_' + @AUDIT_TABLE + ' on dbo.' + @AUDIT_TABLE + '(ID_C, AUDIT_TOKEN, AUDIT_ACTION)';
			end else begin
				set @Command = 'create index IDX_' + @AUDIT_TABLE + ' on dbo.' + @AUDIT_TABLE + '(ID, AUDIT_VERSION, AUDIT_TOKEN)';
			end -- if;
			if @TEST = 1 begin -- then
				print @Command;
			end else begin
				exec(@Command);
			end -- if;
		end else begin
			print 'Alter Table dbo.' + @AUDIT_TABLE + ';';
			declare AUDIT_TABLE_COLUMNS_CURSOR cursor for
			select vwSqlColumns.ColumnName
			     , vwSqlColumns.ColumnType
			  from            vwSqlColumns
			  left outer join vwSqlColumns                   vwSqlColumnsAudit
			               on vwSqlColumnsAudit.ObjectName = vwSqlColumns.ObjectName + '_AUDIT'
			              and vwSqlColumnsAudit.ColumnName = vwSqlColumns.ColumnName
			 where vwSqlColumnsAudit.ObjectName is null
			   and vwSqlColumns.ObjectName = @TABLE_NAME
			 order by vwSqlColumns.colid;
	
			select @COLUMN_MAX_LENGTH = max(len(ColumnName)) + 1
			  from vwSqlColumns
			 where ObjectName = @TABLE_NAME;
			if @COLUMN_MAX_LENGTH < 20 begin -- then
				set @COLUMN_MAX_LENGTH = 20;
			end -- if;
	
			open AUDIT_TABLE_COLUMNS_CURSOR;
			fetch next from AUDIT_TABLE_COLUMNS_CURSOR into @COLUMN_NAME, @COLUMN_TYPE;
			while @@FETCH_STATUS = 0 begin -- while
				set @Command = 'alter table ' + @AUDIT_TABLE + ' add ' + @COLUMN_NAME + space(@COLUMN_MAX_LENGTH+1-len(@COLUMN_NAME)) + @COLUMN_TYPE + space(18-len(@COLUMN_TYPE)) + ' null' + @CRLF;
				print @Command;
				if @TEST = 0 begin -- then
					exec(@Command);
				end -- if;
				fetch next from AUDIT_TABLE_COLUMNS_CURSOR into @COLUMN_NAME, @COLUMN_TYPE;
			end -- while;
			close AUDIT_TABLE_COLUMNS_CURSOR;
			deallocate AUDIT_TABLE_COLUMNS_CURSOR;
		end -- if;
	end -- if;
  end
GO


Grant Execute on dbo.spSqlBuildAuditTable to public;
GO

-- exec dbo.spSqlBuildAuditTable 'CONTACTS';

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlBuildAuditTrigger' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlBuildAuditTrigger;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/10/2008 Paul.  sp_getbindtoken may not be accessible in a hosted environment. 
-- Wrap sp_getbindtoken in a procedure that can be bypassed.
-- The EXECUTE permission was denied on the object 'sp_getbindtoken', database 'mssqlsystemresource', 
-- 07/26/2008 Paul.  Add AUDIT_ACTION to speed workflow processing. 
-- 12/03/2008 Paul.  AUDIT_PARENT_ID is needed to roll-up events within a transaction. 
-- 12/04/2008 Paul.  We don't need the insert trigger on the CSTM tables. 
-- 01/09/2009 Paul.  spSqlGetTransactionToken should be used instead of sp_getbindtoken. 
-- 09/20/2009 Paul.  Use a unique name for the cursor to prevent a collision with another procedure. 
-- 01/20/2010 Paul.  Insert CREATED_BY and MODIFIED_USER_ID to simplify tracking of who performed the action. 
-- 06/13/2010 Paul.  We need to prevent from adding auditing to non-SplendidCRM tables, so check for the base fields. 
-- 04/25/2011 Paul.  We've stopped supporting SQL 2000, so we can use varchar(max). 
-- This also fixes a problem for a customer with 100 custom fields. 
Create Procedure dbo.spSqlBuildAuditTrigger(@TABLE_NAME varchar(80))
as
  begin
	set nocount on
	
	-- 04/25/2011 Paul.  We've stopped supporting SQL 2000, so we can use varchar(max). 
	declare @Command           varchar(max);
	declare @CRLF         char(2);
	declare @AUDIT_TABLE  varchar(90);
	declare @TRIGGER_NAME varchar(90);
	declare @COLUMN_NAME  varchar(80);
	declare @COLUMN_TYPE  varchar(20);
	declare @PRIMARY_KEY  varchar(10);
	declare @TEST         bit;
	declare @SPLENDID_FIELDS   int;

	set @TEST = 0;
	set @SPLENDID_FIELDS = 0;
	set @PRIMARY_KEY = 'ID';
	if right(@TABLE_NAME, 5) = '_CSTM' begin -- then
		set @PRIMARY_KEY = 'ID_C';
	end -- if;
	set @AUDIT_TABLE = @TABLE_NAME + '_AUDIT';

	-- 06/30/2011 Paul.  Custom tables were being excluded from the audit. 
	if right(@TABLE_NAME, 5) = '_CSTM' begin -- then
		-- 06/30/2011 Paul.  A custom table will only have an ID_C field, so if found then allow to continue. 
		if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @TABLE_NAME and COLUMN_NAME = 'ID_C') begin -- then
			set @SPLENDID_FIELDS = 6;
		end -- if;
	end else begin
		-- 06/13/2010 Paul.  We need to prevent from adding auditing to non-SplendidCRM tables, so check for the base fields. 
		if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @AUDIT_TABLE and COLUMN_NAME = 'ID') begin -- then
			set @SPLENDID_FIELDS = @SPLENDID_FIELDS + 1;
		end -- if;
		if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @AUDIT_TABLE and COLUMN_NAME = 'DELETED') begin -- then
			set @SPLENDID_FIELDS = @SPLENDID_FIELDS + 1;
		end -- if;
		if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @AUDIT_TABLE and COLUMN_NAME = 'CREATED_BY') begin -- then
			set @SPLENDID_FIELDS = @SPLENDID_FIELDS + 1;
		end -- if;
		if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @AUDIT_TABLE and COLUMN_NAME = 'DATE_ENTERED') begin -- then
			set @SPLENDID_FIELDS = @SPLENDID_FIELDS + 1;
		end -- if;
		if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @AUDIT_TABLE and COLUMN_NAME = 'MODIFIED_USER_ID') begin -- then
			set @SPLENDID_FIELDS = @SPLENDID_FIELDS + 1;
		end -- if;
		if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @AUDIT_TABLE and COLUMN_NAME = 'DATE_MODIFIED') begin -- then
			set @SPLENDID_FIELDS = @SPLENDID_FIELDS + 1;
		end -- if;
	end -- if;

	if @SPLENDID_FIELDS = 6 begin -- then
		if exists (select * from vwSqlTables where TABLE_NAME = @AUDIT_TABLE) begin -- then
			set @CRLF = char(13) + char(10);
			declare TRIGGER_COLUMNS_CURSOR cursor for
			select vwSqlColumns.ColumnName
			     , vwSqlColumns.ColumnType
			  from       vwSqlColumns
			  inner join vwSqlColumns                   vwSqlColumnsAudit
			          on vwSqlColumnsAudit.ObjectName = vwSqlColumns.ObjectName + '_AUDIT'
			         and vwSqlColumnsAudit.ColumnName = vwSqlColumns.ColumnName
			 where vwSqlColumns.ObjectName = @TABLE_NAME
			 order by vwSqlColumns.colid;
	
			-- 12/29/2007 Paul.  Creating the audit record on insert will duplicate the data, with little benefit. 
			-- By skipping this trigger, data imports will be significantly faster. 
			-- 12/29/2007 Paul.  Actually, we will need the insert record for workflow tracking. 
			set @TRIGGER_NAME = 'tr' + @TABLE_NAME + '_Ins_AUDIT';
			if exists (select * from sys.objects where name = @TRIGGER_NAME and type = 'TR') begin -- then
				set @Command = 'Drop   Trigger dbo.' + @TRIGGER_NAME;
				if @TEST = 0 begin -- then
					print @Command;
					exec(@Command);
				end -- if;
			end -- if;
	
			-- 12/04/2008 Paul.  We don't need the insert trigger on the CSTM tables. 
			-- We already handle the issue in the workflow code, but lets reduce our events. 
			if right(@TABLE_NAME, 5) <> '_CSTM' begin -- then
				if not exists (select * from sys.objects where name = @TRIGGER_NAME and type = 'TR') begin -- then
					set @Command = '';
					set @Command = @Command + 'Create Trigger dbo.' + @TRIGGER_NAME + ' on dbo.' + @TABLE_NAME + @CRLF;
					set @Command = @Command + 'for insert' + @CRLF;
					set @Command = @Command + 'as' + @CRLF;
					set @Command = @Command + '  begin' + @CRLF;
					set @Command = @Command + '	declare @BIND_TOKEN varchar(255);' + @CRLF;
					set @Command = @Command + '	exec spSqlGetTransactionToken @BIND_TOKEN out;' + @CRLF;
					set @Command = @Command + '	insert into dbo.' + @AUDIT_TABLE + @CRLF;
					set @Command = @Command + '	     ( AUDIT_ID'      + @CRLF;
					set @Command = @Command + '	     , AUDIT_ACTION'  + @CRLF;
					set @Command = @Command + '	     , AUDIT_DATE'    + @CRLF;
					set @Command = @Command + '	     , AUDIT_COLUMNS' + @CRLF;
					set @Command = @Command + '	     , AUDIT_TOKEN'   + @CRLF;
					open TRIGGER_COLUMNS_CURSOR;
					fetch next from TRIGGER_COLUMNS_CURSOR into @COLUMN_NAME, @COLUMN_TYPE;
					while @@FETCH_STATUS = 0 begin -- while
						--Cannot use text, ntext, or image columns in the 'inserted' and 'deleted' tables.
						--if @COLUMN_TYPE <> 'text' and @COLUMN_TYPE <> 'ntext' and @COLUMN_TYPE <> 'image' begin -- then
							set @Command = @Command + '	     , ' + @COLUMN_NAME + @CRLF;
						--end -- if;
						fetch next from TRIGGER_COLUMNS_CURSOR into @COLUMN_NAME, @COLUMN_TYPE;
					end -- while;
					close TRIGGER_COLUMNS_CURSOR
					set @Command = @Command + '	     )' + @CRLF;
					set @Command = @Command + '	select newid()'           + @CRLF;
					set @Command = @Command + '	     , 0  -- insert'      + @CRLF;
					set @Command = @Command + '	     , getdate()'         + @CRLF;
					set @Command = @Command + '	     , columns_updated()' + @CRLF;
					set @Command = @Command + '	     , @BIND_TOKEN'       + @CRLF;
					
					open TRIGGER_COLUMNS_CURSOR;
					fetch next from TRIGGER_COLUMNS_CURSOR into @COLUMN_NAME, @COLUMN_TYPE;
					while @@FETCH_STATUS = 0 begin -- while
						--Cannot use text, ntext, or image columns in the 'inserted' and 'deleted' tables.
						--if @COLUMN_TYPE <> 'text' and @COLUMN_TYPE <> 'ntext' and @COLUMN_TYPE <> 'image' begin -- then
							set @Command = @Command + '	     , ' + @TABLE_NAME + '.' + @COLUMN_NAME + @CRLF;
						--end -- if;
						fetch next from TRIGGER_COLUMNS_CURSOR into @COLUMN_NAME, @COLUMN_TYPE;
					end -- while;
					close TRIGGER_COLUMNS_CURSOR;
					set @Command = @Command + '	  from       inserted' + @CRLF;
					set @Command = @Command + '	  inner join ' + @TABLE_NAME + @CRLF;
					set @Command = @Command + '	          on ' + @TABLE_NAME + '.' + @PRIMARY_KEY + ' = inserted.' + @PRIMARY_KEY + ';' + @CRLF;
					set @Command = @Command + '  end' + @CRLF;
					if @TEST = 1 begin -- then
						print @Command + @CRLF;
					end else begin
						print substring(@Command, 1, charindex(@CRLF, @Command));
						exec(@Command);
					end -- if;
				end -- if;
			end -- if;
	
			set @TRIGGER_NAME = 'tr' + @TABLE_NAME + '_Upd_AUDIT';
			if exists (select * from sys.objects where name = @TRIGGER_NAME and type = 'TR') begin -- then
				set @Command = 'Drop   Trigger dbo.' + @TRIGGER_NAME;
				if @TEST = 0 begin -- then
					print @Command;
					exec(@Command);
				end -- if;
			end -- if;
	
			if not exists (select * from sys.objects where name = @TRIGGER_NAME and type = 'TR') begin -- then
				set @Command = '';
				set @Command = @Command + 'Create Trigger dbo.' + @TRIGGER_NAME + ' on dbo.' + @TABLE_NAME + @CRLF;
				set @Command = @Command + 'for update' + @CRLF;
				set @Command = @Command + 'as' + @CRLF;
				set @Command = @Command + '  begin' + @CRLF;
				set @Command = @Command + '	declare @BIND_TOKEN varchar(255);' + @CRLF;
				-- 01/09/2009 Paul.  spSqlGetTransactionToken should be used instead of sp_getbindtoken. 
				set @Command = @Command + '	exec spSqlGetTransactionToken @BIND_TOKEN out;' + @CRLF;
				set @Command = @Command + '	insert into dbo.' + @AUDIT_TABLE + @CRLF;
				set @Command = @Command + '	     ( AUDIT_ID'      + @CRLF;
				set @Command = @Command + '	     , AUDIT_ACTION'  + @CRLF;
				set @Command = @Command + '	     , AUDIT_DATE'    + @CRLF;
				set @Command = @Command + '	     , AUDIT_COLUMNS' + @CRLF;
				set @Command = @Command + '	     , AUDIT_TOKEN'   + @CRLF;
				open TRIGGER_COLUMNS_CURSOR;
				fetch next from TRIGGER_COLUMNS_CURSOR into @COLUMN_NAME, @COLUMN_TYPE;
				while @@FETCH_STATUS = 0 begin -- while
					--Cannot use text, ntext, or image columns in the 'inserted' and 'deleted' tables.
					--if @COLUMN_TYPE <> 'text' and @COLUMN_TYPE <> 'ntext' and @COLUMN_TYPE <> 'image' begin -- then
						set @Command = @Command + '	     , ' + @COLUMN_NAME + @CRLF;
					--end -- if;
					fetch next from TRIGGER_COLUMNS_CURSOR into @COLUMN_NAME, @COLUMN_TYPE;
				end -- while;
				close TRIGGER_COLUMNS_CURSOR;
				set @Command = @Command + '	     )' + @CRLF;
				set @Command = @Command + '	select newid()'           + @CRLF;
				-- 12/03/2008 Paul.  We need to make sure that we treat the delete flag as a delete event. 
				if right(@TABLE_NAME, 5) <> '_CSTM' begin -- then
					set @Command = @Command + '	     , (case inserted.DELETED when 1 then -1 else 1 end) -- updated'      + @CRLF;
				end else begin
					set @Command = @Command + '	     , 1 -- updated'      + @CRLF;
				end -- if;
				set @Command = @Command + '	     , getdate()'         + @CRLF;
				set @Command = @Command + '	     , columns_updated()' + @CRLF;
				set @Command = @Command + '	     , @BIND_TOKEN'       + @CRLF;
				
				open TRIGGER_COLUMNS_CURSOR;
				fetch next from TRIGGER_COLUMNS_CURSOR into @COLUMN_NAME, @COLUMN_TYPE;
				while @@FETCH_STATUS = 0 begin -- while
					--Cannot use text, ntext, or image columns in the 'inserted' and 'deleted' tables.
					--if @COLUMN_TYPE <> 'text' and @COLUMN_TYPE <> 'ntext' and @COLUMN_TYPE <> 'image' begin -- then
						set @Command = @Command + '	     , ' + @TABLE_NAME + '.' + @COLUMN_NAME + @CRLF;
					--end -- if;
					fetch next from TRIGGER_COLUMNS_CURSOR into @COLUMN_NAME, @COLUMN_TYPE;
				end -- while;
				close TRIGGER_COLUMNS_CURSOR;
				set @Command = @Command + '	  from       inserted' + @CRLF;
				set @Command = @Command + '	  inner join ' + @TABLE_NAME + @CRLF;
				set @Command = @Command + '	          on ' + @TABLE_NAME + '.' + @PRIMARY_KEY + ' = inserted.' + @PRIMARY_KEY + ';' + @CRLF;
				set @Command = @Command + '  end' + @CRLF;
				if @TEST = 1 begin -- then
					print @Command + @CRLF;
				end else begin
					print substring(@Command, 1, charindex(@CRLF, @Command));
					exec(@Command);
				end -- if;
			end -- if;
	
			-- 12/29/2007 Paul.  Records are not deleted, they are marked as deleted, so the delete trigger will rarely fire. 
			-- We may want to enable it some day. 
			/*
			set @TRIGGER_NAME = 'tr' + @TABLE_NAME + '_Del_AUDIT';
			if exists (select * from sys.objects where name = @TRIGGER_NAME and type = 'TR') begin -- then
				set @Command = 'Drop   Trigger dbo.' + @TRIGGER_NAME;
				if @TEST = 0 begin -- then
					print @Command;
					exec(@Command);
				end -- if;
			end -- if;
	
			if not exists (select * from sys.objects where name = @TRIGGER_NAME and type = 'TR') begin -- then
				set @Command = ''
				set @Command = @Command + 'Create Trigger dbo.' + @TRIGGER_NAME + ' on dbo.' + @TABLE_NAME + @CRLF;
				set @Command = @Command + 'for delete' + @CRLF;
				set @Command = @Command + 'as' + @CRLF;
				set @Command = @Command + '  begin' + @CRLF;
				-- 01/09/2009 Paul.  spSqlGetTransactionToken should be used instead of sp_getbindtoken. 
				set @Command = @Command + '	declare @BIND_TOKEN varchar(255);' + @CRLF;
				set @Command = @Command + '	exec spSqlGetTransactionToken @BIND_TOKEN out;' + @CRLF;
				set @Command = @Command + '	insert into dbo.' + @AUDIT_TABLE + @CRLF;
				set @Command = @Command + '	     ( AUDIT_ID'     + @CRLF;
				set @Command = @Command + '	     , AUDIT_ACTION' + @CRLF;
				set @Command = @Command + '	     , AUDIT_DATE'   + @CRLF;
				set @Command = @Command + '	     , AUDIT_TOKEN'  + @CRLF;
				open TRIGGER_COLUMNS_CURSOR;
				fetch next from TRIGGER_COLUMNS_CURSOR into @COLUMN_NAME, @COLUMN_TYPE;
				while @@FETCH_STATUS = 0 begin -- while
					--Cannot use text, ntext, or image columns in the 'inserted' and 'deleted' tables.
					if @COLUMN_TYPE <> 'text' and @COLUMN_TYPE <> 'ntext' and @COLUMN_TYPE <> 'image' begin -- then
						set @Command = @Command + '	     , ' + @COLUMN_NAME + @CRLF;
					end -- if;
					fetch next from TRIGGER_COLUMNS_CURSOR into @COLUMN_NAME, @COLUMN_TYPE;
				end -- while;
				close TRIGGER_COLUMNS_CURSOR;
				set @Command = @Command + '	     )' + @CRLF;
				set @Command = @Command + '	select newid()'       + @CRLF;
				set @Command = @Command + '	     , -1  -- delete' + @CRLF;
				set @Command = @Command + '	     , getdate()'     + @CRLF;
				set @Command = @Command + '	     , @BIND_TOKEN'   + @CRLF;
				
				open TRIGGER_COLUMNS_CURSOR;
				fetch next from TRIGGER_COLUMNS_CURSOR into @COLUMN_NAME, @COLUMN_TYPE;
				while @@FETCH_STATUS = 0 begin -- while
					--Cannot use text, ntext, or image columns in the 'inserted' and 'deleted' tables.
					if @COLUMN_TYPE <> 'text' and @COLUMN_TYPE <> 'ntext' and @COLUMN_TYPE <> 'image' begin -- then
						set @Command = @Command + '	     , ' + @COLUMN_NAME + @CRLF;
					end -- if;
					fetch next from TRIGGER_COLUMNS_CURSOR into @COLUMN_NAME, @COLUMN_TYPE;
				end -- while;
				close TRIGGER_COLUMNS_CURSOR;
				set @Command = @Command + '	  from deleted;' + @CRLF;
				set @Command = @Command + '  end' + @CRLF;
				if @TEST = 1 begin -- then
					print @Command + @CRLF;
				end else begin
					print substring(@Command, 1, charindex(@CRLF, @Command));
					exec(@Command);
				end -- if;
			end -- if;
			*/
			deallocate TRIGGER_COLUMNS_CURSOR;
	
			if right(@TABLE_NAME, 5) <> '_CSTM' begin -- then
				set @TRIGGER_NAME = 'tr' + @AUDIT_TABLE + '_Ins_WORK';
				if exists (select * from sys.objects where name = @TRIGGER_NAME and type = 'TR') begin -- then
					set @Command = 'Drop   Trigger dbo.' + @TRIGGER_NAME;
					if @TEST = 0 begin -- then
						print @Command;
						exec(@Command);
					end -- if;
				end -- if;
		
				if not exists (select * from sys.objects where name = @TRIGGER_NAME and type = 'TR') begin -- then
					-- 07/26/2008 Paul.  Add AUDIT_ACTION to speed workflow processing. 
					-- 12/03/2008 Paul.  AUDIT_PARENT_ID is needed to roll-up events within a transaction. 
					-- 01/20/2010 Paul.  Insert CREATED_BY and MODIFIED_USER_ID to simplify tracking of who performed the action. 
					-- This primarily to allow AUDIT_EVENTS entries to contain the who information. 
					set @Command = '';
					set @Command = @Command + 'Create Trigger dbo.' + @TRIGGER_NAME + ' on dbo.' + @AUDIT_TABLE + @CRLF;
					set @Command = @Command + 'for insert' + @CRLF;
					set @Command = @Command + 'as' + @CRLF;
					set @Command = @Command + '  begin' + @CRLF;
					set @Command = @Command + '	insert into dbo.WORKFLOW_EVENTS' + @CRLF;
					set @Command = @Command + '	     ( ID'              + @CRLF;
					set @Command = @Command + '	     , DATE_ENTERED'    + @CRLF;
					set @Command = @Command + '	     , CREATED_BY'      + @CRLF;
					set @Command = @Command + '	     , MODIFIED_USER_ID'+ @CRLF;
					set @Command = @Command + '	     , AUDIT_ID'        + @CRLF;
					set @Command = @Command + '	     , AUDIT_TABLE'     + @CRLF;
					set @Command = @Command + '	     , AUDIT_TOKEN'     + @CRLF;
					set @Command = @Command + '	     , AUDIT_ACTION'    + @CRLF;
					set @Command = @Command + '	     , AUDIT_PARENT_ID' + @CRLF;
					set @Command = @Command + '	     )' + @CRLF;
					set @Command = @Command + '	select newid()'         + @CRLF;
					set @Command = @Command + '	     , getdate()'       + @CRLF;
					set @Command = @Command + '	     , CREATED_BY'      + @CRLF;
					set @Command = @Command + '	     , MODIFIED_USER_ID'+ @CRLF;
					set @Command = @Command + '	     , AUDIT_ID'        + @CRLF;
					set @Command = @Command + '	     , ''' + @AUDIT_TABLE  + '''' + @CRLF;
					set @Command = @Command + '	     , AUDIT_TOKEN'     + @CRLF;
					set @Command = @Command + '	     , AUDIT_ACTION'    + @CRLF;
					set @Command = @Command + '	     , ID'              + @CRLF;
					set @Command = @Command + '	  from inserted;'       + @CRLF;
					set @Command = @Command + '  end' + @CRLF;
					if @TEST = 1 begin -- then
						print @Command + @CRLF;
					end else begin
						print substring(@Command, 1, charindex(@CRLF, @Command));
						exec(@Command);
					end -- if;
				end -- if;
			end -- if;
		end -- if;
	end -- if;
  end
GO


Grant Execute on dbo.spSqlBuildAuditTrigger to public;
GO

-- exec dbo.spSqlBuildAllAuditTriggers;
-- exec spSqlBuildAuditTrigger 'LEADS';
-- exec spSqlBuildAuditTrigger 'LEADS_CSTM';

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlBuildAuditView' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlBuildAuditView;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/17/2008 Paul.  Audit views are used to simplify support of custom fields in workflow engine. 
-- 11/19/2008 Paul.  Join to the USERS table and the TEAMS table to match the base view. 
-- 09/20/2009 Paul.  Use a unique name for the cursor to prevent a collision with another procedure. 
-- 06/13/2010 Paul.  We need to prevent from adding auditing to non-SplendidCRM tables, so check for the base fields. 
-- 04/25/2011 Paul.  We've stopped supporting SQL 2000, so we can use varchar(max). 
-- This also fixes a problem for a customer with 100 custom fields. 
-- 09/25/2017 Paul.  Join to team sets and tag sets. 
-- 09/25/2017 Paul.  Simplify code by only having one section adding joins. 
-- 11/30/2017 Paul.  Add ASSIGNED_SET_ID for Dynamic User Assignment. 
Create Procedure dbo.spSqlBuildAuditView(@TABLE_NAME varchar(80))
as
  begin
	set nocount on
	
	-- 04/25/2011 Paul.  We've stopped supporting SQL 2000, so we can use varchar(max). 
	declare @Command           varchar(max);
	declare @CRLF              char(2);
	declare @AUDIT_TABLE       varchar(90);
	declare @CSTM_AUDIT_TABLE  varchar(90);
	declare @VIEW_NAME         varchar(90);
	declare @COLUMN_NAME       varchar(80);
	declare @TEST              bit;
	declare @JOIN_ASSIGNED     bit;
	declare @JOIN_ASSIGNED_SET bit;
	declare @JOIN_TEAMS        bit;
	-- 09/25/2017 Paul.  Join to team sets. 
	declare @JOIN_TEAM_SETS    bit;
	declare @JOIN_TAG_SETS     bit;
	declare @SPLENDID_FIELDS   int;

	set @TEST = 0;
	set @SPLENDID_FIELDS = 0;
	set @AUDIT_TABLE      = @TABLE_NAME + '_AUDIT';
	set @CSTM_AUDIT_TABLE = @TABLE_NAME + '_CSTM_AUDIT';

	-- 06/30/2011 Paul.  Custom tables were being excluded from the audit. 
	if right(@TABLE_NAME, 5) = '_CSTM' begin -- then
		-- 06/30/2011 Paul.  A custom table will only have an ID_C field, so if found then allow to continue. 
		if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @TABLE_NAME and COLUMN_NAME = 'ID_C') begin -- then
			set @SPLENDID_FIELDS = 6;
		end -- if;
	end else begin
		-- 06/13/2010 Paul.  We need to prevent from adding auditing to non-SplendidCRM tables, so check for the base fields. 
		if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @AUDIT_TABLE and COLUMN_NAME = 'ID') begin -- then
			set @SPLENDID_FIELDS = @SPLENDID_FIELDS + 1;
		end -- if;
		if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @AUDIT_TABLE and COLUMN_NAME = 'DELETED') begin -- then
			set @SPLENDID_FIELDS = @SPLENDID_FIELDS + 1;
		end -- if;
		if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @AUDIT_TABLE and COLUMN_NAME = 'CREATED_BY') begin -- then
			set @SPLENDID_FIELDS = @SPLENDID_FIELDS + 1;
		end -- if;
		if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @AUDIT_TABLE and COLUMN_NAME = 'DATE_ENTERED') begin -- then
			set @SPLENDID_FIELDS = @SPLENDID_FIELDS + 1;
		end -- if;
		if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @AUDIT_TABLE and COLUMN_NAME = 'MODIFIED_USER_ID') begin -- then
			set @SPLENDID_FIELDS = @SPLENDID_FIELDS + 1;
		end -- if;
		if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @AUDIT_TABLE and COLUMN_NAME = 'DATE_MODIFIED') begin -- then
			set @SPLENDID_FIELDS = @SPLENDID_FIELDS + 1;
		end -- if;
	end -- if;

	if @SPLENDID_FIELDS = 6 begin -- then
		if exists (select * from vwSqlTables where TABLE_NAME = @AUDIT_TABLE) begin -- then
			set @CRLF = char(13) + char(10);
			declare VIEW_COLUMNS_CURSOR cursor for
			select vwSqlColumns.ColumnName
			  from       vwSqlColumns
			  inner join vwSqlColumns                   vwSqlColumnsAudit
			          on vwSqlColumnsAudit.ObjectName = vwSqlColumns.ObjectName + '_AUDIT'
			         and vwSqlColumnsAudit.ColumnName = vwSqlColumns.ColumnName
			 where vwSqlColumns.ObjectName = @TABLE_NAME
			 order by vwSqlColumns.colid;
	
			declare VIEW_CSTM_COLUMNS_CURSOR cursor for
			select vwSqlColumns.ColumnName
			  from       vwSqlColumns
			  inner join vwSqlColumns                   vwSqlColumnsAudit
			          on vwSqlColumnsAudit.ObjectName = vwSqlColumns.ObjectName + '_AUDIT'
			         and vwSqlColumnsAudit.ColumnName = vwSqlColumns.ColumnName
			 where vwSqlColumns.ObjectName = @TABLE_NAME + '_CSTM'
			   and vwSqlColumns.ColumnName not in ('AUDIT_ID', 'AUDIT_ACTION', 'AUDIT_DATE', 'AUDIT_COLUMNS', 'AUDIT_TOKEN')
			 order by vwSqlColumns.colid;
	
			set @VIEW_NAME = 'vw' + @TABLE_NAME + '_AUDIT';
			if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = @VIEW_NAME) begin -- then
				set @Command = 'Drop   View dbo.' + @VIEW_NAME;
				print @Command;
				exec(@Command);
			end -- if;
	
			set @JOIN_ASSIGNED     = 0;
			set @JOIN_ASSIGNED_SET = 0;
			set @JOIN_TEAMS        = 0;
			set @JOIN_TEAM_SETS    = 0;
			set @JOIN_TAG_SETS     = 0;
			if not exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = @VIEW_NAME) begin -- then
				set @Command = '';
				set @Command = @Command + 'Create View dbo.' + @VIEW_NAME + @CRLF;
				set @Command = @Command + 'as' + @CRLF;
				set @Command = @Command + 'select ' + @AUDIT_TABLE + '.AUDIT_ID     ' + @CRLF;
				set @Command = @Command + '     , ' + @AUDIT_TABLE + '.AUDIT_ACTION ' + @CRLF;
				set @Command = @Command + '     , ' + @AUDIT_TABLE + '.AUDIT_DATE   ' + @CRLF;
				set @Command = @Command + '     , ' + @AUDIT_TABLE + '.AUDIT_VERSION' + @CRLF;
				set @Command = @Command + '     , ' + @AUDIT_TABLE + '.AUDIT_TOKEN  ' + @CRLF;
				-- 08/07/2013 Paul.  The audit table needs a NAME field in order to allow searching in the Undelete area. 
				-- 09/29/2015 Paul.  Table names will be in upper case.  Not important on SQL Server, but important for Oracle. 
				if @TABLE_NAME = 'CONTACTS' or @TABLE_NAME = 'LEADS' or @TABLE_NAME = 'PROSPECTS' or @TABLE_NAME = 'USERS' begin -- then
					set @Command = @Command + '     , dbo.fnFullName(' + @AUDIT_TABLE + '.FIRST_NAME, ' + @AUDIT_TABLE + '.LAST_NAME) as NAME' + @CRLF;
				end else if @TABLE_NAME = 'DOCUMENTS' begin -- then
					set @Command = @Command + '     , ' + @AUDIT_TABLE + '.DOCUMENT_NAME as NAME  ' + @CRLF;
				end -- if;
				
				open VIEW_COLUMNS_CURSOR;
				fetch next from VIEW_COLUMNS_CURSOR into @COLUMN_NAME;
				while @@FETCH_STATUS = 0 begin -- while
					if @COLUMN_NAME = 'CREATED_BY' begin -- then
						set @Command = @Command + '     , ' + @AUDIT_TABLE + '.CREATED_BY       as CREATED_BY_ID' + @CRLF;
						set @Command = @Command + '     , USERS_CREATED_BY.USER_NAME      as CREATED_BY' + @CRLF;
					end else begin
						set @Command = @Command + '     , ' + @AUDIT_TABLE + '.' + @COLUMN_NAME + @CRLF;
						if @COLUMN_NAME = 'MODIFIED_USER_ID' begin -- then
							set @Command = @Command + '     , USERS_MODIFIED_BY.USER_NAME     as MODIFIED_BY' + @CRLF;
						end else if @COLUMN_NAME = 'ASSIGNED_USER_ID' begin -- then
							set @Command = @Command + '     , USERS_ASSIGNED.USER_NAME        as ASSIGNED_TO' + @CRLF;
							set @JOIN_ASSIGNED = 1;
						end else if @COLUMN_NAME = 'TEAM_ID' begin -- then
							set @Command = @Command + '     , TEAMS.NAME                      as TEAM_NAME' + @CRLF;
							set @JOIN_TEAMS = 1;
						-- 09/25/2017 Paul.  Join to team sets. 
						end else if @COLUMN_NAME = 'TEAM_SET_ID' begin -- then
							set @Command = @Command + '     , TEAM_SETS.TEAM_SET_NAME         as TEAM_SET_NAME' + @CRLF;
							set @Command = @Command + '     , TEAM_SETS.TEAM_SET_LIST         as TEAM_SET_LIST' + @CRLF;
							set @JOIN_TEAM_SETS = 1;
						-- 11/30/2017 Paul.  Add ASSIGNED_SET_ID for Dynamic User Assignment. 
						end else if @COLUMN_NAME = 'ASSIGNED_SET_ID' begin -- then
							set @Command = @Command + '     , ASSIGNED_SETS.ASSIGNED_SET_NAME as ASSIGNED_SET_NAME' + @CRLF;
							set @Command = @Command + '     , ASSIGNED_SETS.ASSIGNED_SET_LIST as ASSIGNED_SET_LIST' + @CRLF;
							set @JOIN_ASSIGNED_SET = 1;
						end else if @COLUMN_NAME = 'TAG_ID' begin -- then
							set @Command = @Command + '     , TAG_SETS.TAG_SET_NAME' + @CRLF;
							set @JOIN_TAG_SETS  = 1;
						end -- if;
					end -- if;
					fetch next from VIEW_COLUMNS_CURSOR into @COLUMN_NAME;
				end -- while;
				close VIEW_COLUMNS_CURSOR
				if exists(select * from vwSqlColumns where ObjectName = @CSTM_AUDIT_TABLE) begin -- then
					open VIEW_CSTM_COLUMNS_CURSOR;
					fetch next from VIEW_CSTM_COLUMNS_CURSOR into @COLUMN_NAME;
					while @@FETCH_STATUS = 0 begin -- while
						set @Command = @Command + '     , ' + @CSTM_AUDIT_TABLE + '.' + @COLUMN_NAME + @CRLF;
						fetch next from VIEW_CSTM_COLUMNS_CURSOR into @COLUMN_NAME;
					end -- while;
					close VIEW_CSTM_COLUMNS_CURSOR
				end -- if;
				-- 09/25/2017 Paul.  Simplify code by only having one section adding joins. 
				set @Command = @Command + '  from            ' + @AUDIT_TABLE + @CRLF;
				if @JOIN_TEAMS = 1 begin -- then
					set @Command = @Command + '  left outer join TEAMS' + @CRLF;
					set @Command = @Command + '               on TEAMS.ID                 = ' + @AUDIT_TABLE + '.TEAM_ID' + @CRLF;
					set @Command = @Command + '              and TEAMS.DELETED            = 0' + @CRLF;
				end -- if;
				-- 09/25/2017 Paul.  Join to team sets. 
				if @JOIN_TEAM_SETS = 1 begin -- then
					set @Command = @Command + '  left outer join TEAM_SETS' + @CRLF;
					set @Command = @Command + '               on TEAM_SETS.ID             = ' + @AUDIT_TABLE + '.TEAM_SET_ID' + @CRLF;
					set @Command = @Command + '              and TEAM_SETS.DELETED        = 0' + @CRLF;
				end -- if;
				-- 11/30/2017 Paul.  Add ASSIGNED_SET_ID for Dynamic User Assignment. 
				if @JOIN_ASSIGNED_SET = 1 begin -- then
					set @Command = @Command + '  left outer join ASSIGNED_SETS' + @CRLF;
					set @Command = @Command + '               on ASSIGNED_SETS.ID         = ' + @AUDIT_TABLE + '.ASSIGNED_SET_ID' + @CRLF;
					set @Command = @Command + '              and ASSIGNED_SETS.DELETED    = 0' + @CRLF;
				end -- if;
				if @JOIN_TAG_SETS = 1 begin -- then
					set @Command = @Command + '  left outer join TAG_SETS' + @CRLF;
					set @Command = @Command + '               on TAG_SETS.BEAN_ID         = ' + @AUDIT_TABLE + '.ID' + @CRLF;
					set @Command = @Command + '              and TAG_SETS.DELETED         = 0' + @CRLF;
				end -- if;
				if @JOIN_ASSIGNED = 1 begin -- then
					set @Command = @Command + '  left outer join USERS                      USERS_ASSIGNED' + @CRLF;
					set @Command = @Command + '               on USERS_ASSIGNED.ID        = ' + @AUDIT_TABLE + '.ASSIGNED_USER_ID' + @CRLF;
				end -- if;
				set @Command = @Command + '  left outer join USERS                      USERS_CREATED_BY' + @CRLF;
				set @Command = @Command + '               on USERS_CREATED_BY.ID      = ' + @AUDIT_TABLE + '.CREATED_BY' + @CRLF;
				set @Command = @Command + '  left outer join USERS                      USERS_MODIFIED_BY' + @CRLF;
				set @Command = @Command + '               on USERS_MODIFIED_BY.ID     = ' + @AUDIT_TABLE + '.MODIFIED_USER_ID' + @CRLF;
				-- 09/25/2017 Paul.  Simplify code by only having one section adding joins. 
				if exists(select * from vwSqlColumns where ObjectName = @CSTM_AUDIT_TABLE) begin -- then
					set @Command = @Command + '  left outer join ' + @CSTM_AUDIT_TABLE + @CRLF;
					set @Command = @Command + '               on ' + @CSTM_AUDIT_TABLE + '.ID_C         = ' + @AUDIT_TABLE + '.ID         ' + @CRLF;
					set @Command = @Command + '              and ' + @CSTM_AUDIT_TABLE + '.AUDIT_TOKEN  = ' + @AUDIT_TABLE + '.AUDIT_TOKEN' + @CRLF;
					-- 11/18/2008 Paul.  Only use the update action as the insert action in the custom table is almost always just the ID_C.
					set @Command = @Command + '              and ' + @CSTM_AUDIT_TABLE + '.AUDIT_ACTION = 1' + @CRLF;
				end -- if;
				if @TEST = 1 begin -- then
					print @Command + @CRLF;
				end else begin
					print substring(@Command, 1, charindex(@CRLF, @Command));
					exec(@Command);
				end -- if;
	
				set @Command = 'Grant Select on dbo.' + @VIEW_NAME + ' to public' + @CRLF;
				if @TEST = 1 begin -- then
					print @Command + @CRLF;
				end else begin
					print @Command + @CRLF;
					exec(@Command);
				end -- if;
			end -- if;
	
			deallocate VIEW_COLUMNS_CURSOR;
			deallocate VIEW_CSTM_COLUMNS_CURSOR;
		end -- if;
	end -- if;
  end
GO


Grant Execute on dbo.spSqlBuildAuditView to public;
GO

-- exec dbo.spSqlBuildAuditView 'ACCOUNTS';
-- sp_helptext vwACCOUNTS_AUDIT

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlBuildSystemTrigger' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlBuildSystemTrigger;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/25/2011 Paul.  We've stopped supporting SQL 2000, so we can use varchar(max). 
-- This also fixes a problem for a customer with 100 custom fields. 
Create Procedure dbo.spSqlBuildSystemTrigger(@TABLE_NAME varchar(80))
as
  begin
	set nocount on
	
	-- 04/25/2011 Paul.  We've stopped supporting SQL 2000, so we can use varchar(max). 
	declare @Command           varchar(max);
	declare @CRLF         char(2);
	declare @TRIGGER_NAME varchar(90);
	declare @COLUMN_NAME  varchar(80);
	declare @COLUMN_TYPE  varchar(20);
	declare @PRIMARY_KEY  varchar(10);
	declare @TEST         bit;

	set @TEST = 0;
	set @PRIMARY_KEY = 'ID';
	if exists (select * from vwSqlTables where TABLE_NAME = @TABLE_NAME) begin -- then
		set @CRLF = char(13) + char(10);

		set @TRIGGER_NAME = 'tr' + @TABLE_NAME + '_System';
		if exists (select * from sys.objects where name = @TRIGGER_NAME and type = 'TR') begin -- then
			set @Command = 'Drop   Trigger dbo.' + @TRIGGER_NAME;
			if @TEST = 0 begin -- then
				print @Command;
				exec(@Command);
			end -- if;
		end -- if;

		if not exists (select * from sys.objects where name = @TRIGGER_NAME and type = 'TR') begin -- then
			-- 07/26/2008 Paul.  Add AUDIT_ACTION to speed workflow processing. 
			set @Command = '';
			set @Command = @Command + 'Create Trigger dbo.' + @TRIGGER_NAME + ' on dbo.' + @TABLE_NAME + @CRLF;
			set @Command = @Command + 'for insert, update' + @CRLF;
			set @Command = @Command + 'as' + @CRLF;
			set @Command = @Command + '  begin' + @CRLF;
			set @Command = @Command + '	declare @BIND_TOKEN varchar(255);' + @CRLF;
			set @Command = @Command + '	exec spSqlGetTransactionToken @BIND_TOKEN out;' + @CRLF;
			set @Command = @Command + '	insert into dbo.SYSTEM_EVENTS' + @CRLF;
			set @Command = @Command + '	     ( ID'            + @CRLF;
			set @Command = @Command + '	     , DATE_ENTERED'  + @CRLF;
			set @Command = @Command + '	     , TABLE_ID'      + @CRLF;
			set @Command = @Command + '	     , TABLE_NAME'    + @CRLF;
			set @Command = @Command + '	     , TABLE_COLUMNS' + @CRLF;
			set @Command = @Command + '	     , TABLE_TOKEN'   + @CRLF;
			set @Command = @Command + '	     , TABLE_ACTION'  + @CRLF;
			set @Command = @Command + '	     )' + @CRLF;
			set @Command = @Command + '	select newid()'       + @CRLF;
			set @Command = @Command + '	     , getdate()'     + @CRLF;
			set @Command = @Command + '	     , inserted.ID'   + @CRLF;
			set @Command = @Command + '	     , ''' + @TABLE_NAME  + '''' + @CRLF;
			set @Command = @Command + '	     , columns_updated()'   + @CRLF;
			set @Command = @Command + '	     , @BIND_TOKEN'         + @CRLF;
			set @Command = @Command + '	     , (case when deleted.ID is null then 0 else 1 end)' + @CRLF;
			set @Command = @Command + '	  from            inserted' + @CRLF;
			set @Command = @Command + '	  left outer join deleted'  + @CRLF;
			set @Command = @Command + '	               on deleted.ID = inserted.ID;' + @CRLF;
			set @Command = @Command + '  end' + @CRLF;
			if @TEST = 1 begin -- then
				print @Command + @CRLF;
			end else begin
				print substring(@Command, 1, charindex(@CRLF, @Command));
				exec(@Command);
			end -- if;
		end -- if;
	end -- if;
  end
GO


Grant Execute on dbo.spSqlBuildSystemTrigger to public;
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlDropDefaultConstraint' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlDropDefaultConstraint;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spSqlDropDefaultConstraint(@TABLE_NAME nvarchar(50) out, @COLUMN_NAME nvarchar(50))
as
  begin
	set nocount on

	declare @COMMAND varchar(1000);
	select @COMMAND = 'alter table ' + sys.tables.name + ' drop constraint ' + sys.default_constraints.name
	  from      sys.all_columns
	 inner join sys.tables
	         on sys.tables.object_id              = sys.all_columns.object_id
	 inner join sys.default_constraints
	         on sys.default_constraints.object_id = sys.all_columns.default_object_id
	 where sys.tables.name      = @TABLE_NAME
	   and sys.all_columns.name = @COLUMN_NAME;

	if @COMMAND is not null begin -- then
		print @COMMAND;
		exec(@COMMAND);
	end -- if;
  end
GO


Grant Execute on dbo.spSqlDropDefaultConstraint to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlDropForeignKeys' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlDropForeignKeys;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spSqlDropForeignKeys(@TABLE_NAME varchar(80))
as
  begin
	set nocount on

	declare @Command           varchar(max);
	declare @AddConstraint     varchar(1000);
	declare @FOREIGN_TABLE     varchar(90);
	declare @CONSTRAINT_NAME   varchar(90);
	declare @TEST              bit;
	set @TEST = 0;

	declare FOREIGN_KEYS_CURSOR cursor for
	select TABLE_CONSTRAINTS.TABLE_NAME
	     , TABLE_CONSTRAINTS.CONSTRAINT_NAME
	--     , N'alter table '      + TABLE_CONSTRAINTS.TABLE_SCHEMA + '.' + TABLE_CONSTRAINTS.TABLE_NAME + space(30-len(TABLE_CONSTRAINTS.TABLE_NAME       )) 
	--     + N' add  constraint ' + TABLE_CONSTRAINTS.CONSTRAINT_NAME                                   + space(60-len(TABLE_CONSTRAINTS.CONSTRAINT_NAME  )) 
	--     + N' foreign key ( '   + CONSTRAINT_COLUMN_USAGE.COLUMN_NAME                                 + space(30-len(CONSTRAINT_COLUMN_USAGE.COLUMN_NAME)) + N')'
	--     + N' references '      + PRIMARY_KEYS.TABLE_SCHEMA + '.' + PRIMARY_KEYS.TABLE_NAME           + space(30-len(PRIMARY_KEYS.TABLE_NAME            )) 
	--     + N' ('                + PRIMARY_COLUMN_USAGE.COLUMN_NAME                                    + space(30-len(PRIMARY_COLUMN_USAGE.COLUMN_NAME   )) + N');'
	  from      INFORMATION_SCHEMA.TABLE_CONSTRAINTS         TABLE_CONSTRAINTS
	 inner join INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE   CONSTRAINT_COLUMN_USAGE
	         on CONSTRAINT_COLUMN_USAGE.CONSTRAINT_NAME    = TABLE_CONSTRAINTS.CONSTRAINT_NAME
	 inner join INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS   REFERENTIAL_CONSTRAINTS
	         on REFERENTIAL_CONSTRAINTS.CONSTRAINT_NAME    = TABLE_CONSTRAINTS.CONSTRAINT_NAME
	 inner join INFORMATION_SCHEMA.TABLE_CONSTRAINTS         PRIMARY_KEYS
	         on PRIMARY_KEYS.CONSTRAINT_NAME               = REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_NAME
	        and PRIMARY_KEYS.CONSTRAINT_TYPE               = 'PRIMARY KEY'
	 inner join INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE   PRIMARY_COLUMN_USAGE
	         on PRIMARY_COLUMN_USAGE.CONSTRAINT_NAME       = PRIMARY_KEYS.CONSTRAINT_NAME
	 where TABLE_CONSTRAINTS.CONSTRAINT_TYPE = 'FOREIGN KEY'
	   and PRIMARY_KEYS.TABLE_NAME           = @TABLE_NAME
	 order by 1;

	open FOREIGN_KEYS_CURSOR;
	fetch next from FOREIGN_KEYS_CURSOR into @FOREIGN_TABLE, @CONSTRAINT_NAME;  --, @AddConstraint;
	while @@FETCH_STATUS = 0 begin -- while
		--print @AddConstraint;
		set @Command = 'alter table dbo.' + @FOREIGN_TABLE + space(30-len(@FOREIGN_TABLE)) + ' drop constraint ' + @CONSTRAINT_NAME;
		if @TEST = 1 begin -- then
			print @Command;
		end else begin
			exec(@Command);
		end -- if;
		fetch next from FOREIGN_KEYS_CURSOR into @FOREIGN_TABLE, @CONSTRAINT_NAME;  --, @AddConstraint;
	end -- while;
	close FOREIGN_KEYS_CURSOR;
	deallocate FOREIGN_KEYS_CURSOR;
  end
GO


Grant Execute on dbo.spSqlDropForeignKeys to public;
GO

-- exec dbo.spSqlDropForeignKeys 'LEADS';

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlTableAddColumn' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlTableAddColumn;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 06/03/2008 Paul.  Add suport for bigint. 
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
Create Procedure dbo.spSqlTableAddColumn
	( @TABLE_NAME        varchar(255)
	, @COLUMN_NAME       varchar(255)
	, @DATA_TYPE         varchar(255)
	, @MAX_SIZE          int
	, @REQUIRED          bit
	, @DEFAULT_VALUE     varchar(255)
	)
as
  begin
	set nocount on
	
	declare @Command     varchar(2000);
	declare @NullStmt    varchar(  10);
	declare @DefaultStmt varchar( 300);
	-- 08/02/2008 Paul.  We can only enforce the not null attribute if a default value is specified. 
	-- This is because we create the custom field record before we assign the values.
	if @REQUIRED = 1 and @DefaultStmt is not null begin -- then
		set @NullStmt = ' not null';
	end else begin
		set @NullStmt = ' null';
	end -- if;
	-- 02/09/2007 Paul.  We should always create unicode fields.  Use nvarchar and not varchar. 
	if @DATA_TYPE = 'varchar' begin -- then
		set @Command = 'alter table ' + @TABLE_NAME + ' add ' + @COLUMN_NAME + ' nvarchar(' + cast(@MAX_SIZE as char(10)) + ')';
	end else if @DATA_TYPE = 'enum'    begin -- then
		set @Command = 'alter table ' + @TABLE_NAME + ' add ' + @COLUMN_NAME + ' nvarchar(' + cast(@MAX_SIZE as char(10)) + ')';
	end else if @DATA_TYPE = 'text'    begin -- then
		set @Command = 'alter table ' + @TABLE_NAME + ' add ' + @COLUMN_NAME + ' nvarchar(max)';
	end else if @DATA_TYPE = 'bool'    begin -- then
		set @Command = 'alter table ' + @TABLE_NAME + ' add ' + @COLUMN_NAME + ' bit';
	end else if @DATA_TYPE = 'int'     begin -- then
		set @Command = 'alter table ' + @TABLE_NAME + ' add ' + @COLUMN_NAME + ' int';
	end else if @DATA_TYPE = 'bigint'  begin -- then
		set @Command = 'alter table ' + @TABLE_NAME + ' add ' + @COLUMN_NAME + ' bigint';
	end else if @DATA_TYPE = 'float'   begin -- then
		set @Command = 'alter table ' + @TABLE_NAME + ' add ' + @COLUMN_NAME + ' float';
	end else if @DATA_TYPE = 'date'    begin -- then
		set @Command = 'alter table ' + @TABLE_NAME + ' add ' + @COLUMN_NAME + ' datetime';
	end else if @DATA_TYPE = 'guid'    begin -- then
		set @Command = 'alter table ' + @TABLE_NAME + ' add ' + @COLUMN_NAME + ' uniqueidentifier';
	-- 04/23/2007 Paul.  Add money type. This will allow default handling of currencies. 
	end else if @DATA_TYPE = 'money'    begin -- then
		set @Command = 'alter table ' + @TABLE_NAME + ' add ' + @COLUMN_NAME + ' money';
	end else begin
		raiserror(N'spSqlTableAddColumn: %s is not a supported DATA_TYPE. ', 16, 1, @DATA_TYPE);
	end -- if;

	if @DEFAULT_VALUE is not null begin -- then
		-- 01/06/2006 Paul.  For bool, int and float, cast to the type as a form of error checking.
		-- We want the cast to fail if it is not appropriate. 
		set @DefaultStmt = ' constraint DF_' + @TABLE_NAME + '_' + @COLUMN_NAME;
		if @DATA_TYPE = 'bool'    begin -- then
			set @DefaultStmt = @DefaultStmt + ' default(' + cast(cast(@DEFAULT_VALUE as int          ) as char(10)) + ')';
		end else if @DATA_TYPE = 'int' begin -- then
			set @DefaultStmt = @DefaultStmt + ' default(' + cast(cast(@DEFAULT_VALUE as int          ) as char(10)) + ')';
		end else if @DATA_TYPE = 'float' begin -- then
			set @DefaultStmt = @DefaultStmt + ' default(' + cast(cast(@DEFAULT_VALUE as decimal(19,4)) as char(20)) + ')';
		end else if @DATA_TYPE = 'guid' begin -- then
			if @DEFAULT_VALUE = 'newid()' begin -- then
				set @DefaultStmt = @DefaultStmt + ' default(newid())';
			end else begin
				set @DefaultStmt = @DefaultStmt + ' default(''' + replace(@DEFAULT_VALUE, '''', '''''') + ''')';
			end -- if;
		end else begin
			-- 01/06/2006 Paul.  Most default values need to be quoted. 
			set @DefaultStmt = @DefaultStmt + ' default(''' + replace(@DEFAULT_VALUE, '''', '''''') + ''')';
		end -- if;
	end -- if;
	if @Command is not null and @@ERROR = 0 begin -- then
		set @Command = @Command + @NullStmt;
		if @DefaultStmt is not null begin -- then
			set @Command = @Command + @DefaultStmt;
		end -- if;
		exec (@Command);
	end -- if;
  end
GO

Grant Execute on dbo.spSqlTableAddColumn to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlTableDisableTriggers' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlTableDisableTriggers;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spSqlTableDisableTriggers
	( @TABLE_NAME        varchar(255)
	)
as
  begin
	set nocount on

	declare @COMMAND       varchar(2000);
	declare @COLUMN_NAME   varchar(255);

	-- 04/27/2014 Paul.  Use simplified call to manage triggers. Both are valid. 
	set @COMMAND = 'alter table ' + upper(@TABLE_NAME) + ' disable trigger all';
	--set @COMMAND = 'disable trigger all on ' + upper(@TABLE_NAME);
	exec(@COMMAND);
	--declare TRIGGER_CURSOR cursor for
	--select TRIGGERS.name
	--  from      sys.objects        TRIGGERS
	-- inner join sys.objects        TABLES
	--         on TABLES.object_id = TRIGGERS.parent_object_id
	-- where TRIGGERS.type = 'TR'
	--   and TABLES.name = @TABLE_NAME;
	--open TRIGGER_CURSOR;
	--fetch next from TRIGGER_CURSOR into @COLUMN_NAME;
	--while @@FETCH_STATUS = 0 begin -- do
	--	set @COMMAND = 'alter table ' + upper(@TABLE_NAME) + ' disable trigger ' +  @COLUMN_NAME + ';';
	--	exec(@COMMAND);
	--	fetch next from TRIGGER_CURSOR into @COLUMN_NAME;
	--end -- while;
	--close TRIGGER_CURSOR;
	--deallocate TRIGGER_CURSOR;
  end
GO

Grant Execute on dbo.spSqlTableDisableTriggers to public;
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlTableDropColumnConstraint' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlTableDropColumnConstraint;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/15/2009 Paul.  Use alias to get working on Azure. 
-- Deprecated feature 'More than two-part column name' is not supported in this version of SQL Server.
-- 09/12/2010 Paul.  Add Oracle code to lookup the constraint name. 
Create Procedure dbo.spSqlTableDropColumnConstraint
	( @TABLE_NAME        varchar(255)
	, @COLUMN_NAME       varchar(255)
	)
as
  begin
	set nocount on
	
	declare @Command varchar(2000);
-- #if SQL_Server /*
	select @Command = 'alter table ' + objects.name + ' drop constraint ' + default_constraints.name + ';'
	  from      sys.default_constraints  default_constraints
	 inner join sys.objects              objects
	         on objects.object_id      = default_constraints.parent_object_id
	 inner join sys.columns              columns
	         on columns.object_id      = objects.object_id
	        and columns.column_id      = default_constraints.parent_column_id
	 where objects.type = 'U'
	   and default_constraints.type = 'D'
	   and objects.name = @TABLE_NAME
	   and columns.name = @COLUMN_NAME;
-- #endif SQL_Server */



	if @Command is not null begin -- then
		exec (@Command);
	end -- if;
  end
GO

Grant Execute on dbo.spSqlTableDropColumnConstraint to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlTableEnableTriggers' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlTableEnableTriggers;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spSqlTableEnableTriggers
	( @TABLE_NAME        varchar(255)
	)
as
  begin
	set nocount on

	declare @COMMAND       varchar(2000);
	declare @COLUMN_NAME   varchar(255);

	-- 04/27/2014 Paul.  Use simplified call to manage triggers. Both are valid. 
	set @COMMAND = 'alter table ' + upper(@TABLE_NAME) + ' enable trigger all';
	--set @COMMAND = 'enable trigger all on ' + upper(@TABLE_NAME);
	exec(@COMMAND);
	--declare TRIGGER_CURSOR cursor for
	--select TRIGGERS.name
	--  from      sys.objects        TRIGGERS
	-- inner join sys.objects        TABLES
	--         on TABLES.object_id = TRIGGERS.parent_object_id
	-- where TRIGGERS.type = 'TR'
	--   and TABLES.name = @TABLE_NAME;
	--open TRIGGER_CURSOR;
	--fetch next from TRIGGER_CURSOR into @COLUMN_NAME;
	--while @@FETCH_STATUS = 0 begin -- do
	--	set @COMMAND = 'alter table ' + upper(@TABLE_NAME) + ' enable trigger ' +  @COLUMN_NAME + ';';
	--	exec(@COMMAND);
	--	fetch next from TRIGGER_CURSOR into @COLUMN_NAME;
	--end -- while;
	--close TRIGGER_CURSOR;
	--deallocate TRIGGER_CURSOR;
  end
GO

Grant Execute on dbo.spSqlTableEnableTriggers to public;
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlUpdateIndex' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlUpdateIndex;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/15/2009 Paul.  Azure does not support sysindexes view. 
-- 08/17/2010 Paul.  If the index is not found, then the value will be NULL. 
-- 04/25/2011 Paul.  We've stopped supporting SQL 2000, so we can use varchar(max). 
-- This also fixes a problem for a customer with 100 custom fields. 
Create Procedure dbo.spSqlUpdateIndex
	( @INDEX_NAME  varchar(80)
	, @TABLE_NAME  varchar(80)
	, @FIELD1      varchar(40)
	, @FIELD2      varchar(40) = null
	, @FIELD3      varchar(40) = null
	, @FIELD4      varchar(40) = null
	, @FIELD5      varchar(40) = null
	, @FIELD6      varchar(40) = null
	)
as
  begin
	set nocount on

	-- 04/25/2011 Paul.  We've stopped supporting SQL 2000, so we can use varchar(max). 
	declare @Command           varchar(max);
	declare @CRLF              char(2);
	declare @TEST              bit;
	declare @REBUILD_INDEX     bit;
	declare @INDEX_ID          int;
	declare @EXISTING_FIELD1   varchar(40);
	declare @EXISTING_FIELD2   varchar(40);
	declare @EXISTING_FIELD3   varchar(40);
	declare @EXISTING_FIELD4   varchar(40);
	declare @EXISTING_FIELD5   varchar(40);
	declare @EXISTING_FIELD6   varchar(40);
	
	set @TEST = 0
	set @CRLF = char(13) + char(10);
	select @INDEX_ID = index_id
	  from sys.indexes
	 where name = @INDEX_NAME;

	if exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = @TABLE_NAME) begin -- then
		if @INDEX_ID is not null begin -- then
			set @EXISTING_FIELD1 = index_col(@TABLE_NAME, @INDEX_ID, 1);
			set @EXISTING_FIELD2 = index_col(@TABLE_NAME, @INDEX_ID, 2);
			set @EXISTING_FIELD3 = index_col(@TABLE_NAME, @INDEX_ID, 3);
			set @EXISTING_FIELD4 = index_col(@TABLE_NAME, @INDEX_ID, 4);
			set @EXISTING_FIELD5 = index_col(@TABLE_NAME, @INDEX_ID, 5);
			set @EXISTING_FIELD6 = index_col(@TABLE_NAME, @INDEX_ID, 6);
	
			set @REBUILD_INDEX = 0;
			if          isnull(@FIELD1, '') <> isnull(@EXISTING_FIELD1, '') begin -- then
				set @REBUILD_INDEX = 1;
			end else if isnull(@FIELD2, '') <> isnull(@EXISTING_FIELD2, '') begin -- then
				set @REBUILD_INDEX = 1;
			end else if isnull(@FIELD3, '') <> isnull(@EXISTING_FIELD3, '') begin -- then
				set @REBUILD_INDEX = 1;
			end else if isnull(@FIELD4, '') <> isnull(@EXISTING_FIELD4, '') begin -- then
				set @REBUILD_INDEX = 1;
			end else if isnull(@FIELD5, '') <> isnull(@EXISTING_FIELD5, '') begin -- then
				set @REBUILD_INDEX = 1;
			end else if isnull(@FIELD6, '') <> isnull(@EXISTING_FIELD6, '') begin -- then
				set @REBUILD_INDEX = 1;
			end -- if;
	
			if @REBUILD_INDEX = 1 begin -- then
				-- 09/15/2009 Paul.  Use new syntax to drop an index. 
				-- Deprecated feature 'DROP INDEX with two-part name' is not supported in this version of SQL Server.
				set @Command = 'drop   index ' + @INDEX_NAME + ' on ' + @TABLE_NAME;
				if @TEST = 1 begin -- then
					print @Command + ';';
				end else begin
					print @Command + ';';
					exec(@Command);
				end -- if;
				-- 08/17/2010 Paul.  Use NULL instead of zero as the indicator. 
				set @INDEX_ID = null;
			end -- if;
		end -- if;
	
		-- 08/17/2010 Paul.  If the index is not found, then the value will be NULL. 
		if @INDEX_ID is null begin -- then
			set @Command = 'create index ' + @INDEX_NAME + ' on dbo.' + @TABLE_NAME + ' (' + @FIELD1;
			if @FIELD2 is not null begin -- then
				set @Command = @Command + ', ' + @FIELD2;
			end -- if;
			if @FIELD3 is not null begin -- then
				set @Command = @Command + ', ' + @FIELD3;
			end -- if;
			if @FIELD4 is not null begin -- then
				set @Command = @Command + ', ' + @FIELD4;
			end -- if;
			if @FIELD5 is not null begin -- then
				set @Command = @Command + ', ' + @FIELD5;
			end -- if;
			if @FIELD6 is not null begin -- then
				set @Command = @Command + ', ' + @FIELD6;
			end -- if;
	
			set @Command = @Command + ')';
			if @TEST = 1 begin -- then
				print @Command + ';';
			end else begin
				print @Command + ';';
				exec(@Command);
			end -- if;
		end -- if;
	end -- if;
  end
GO


Grant Execute on dbo.spSqlUpdateIndex to public;
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlBuildAllAuditIndexes' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlBuildAllAuditIndexes;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spSqlBuildAllAuditIndexes
as
  begin
	set nocount on
	print N'spSqlBuildAllAuditIndexes';

	declare @TABLE_NAME varchar(80);
	declare TABLES_CURSOR cursor for
	select TABLE_NAME
	  from vwSqlTablesAudited
	order by TABLE_NAME;
	
	open TABLES_CURSOR;
	fetch next from TABLES_CURSOR into @TABLE_NAME;
	while @@FETCH_STATUS = 0 begin -- do
		exec dbo.spSqlBuildAuditIndex @TABLE_NAME;
		fetch next from TABLES_CURSOR into @TABLE_NAME;
	end -- while;
	close TABLES_CURSOR;
	deallocate TABLES_CURSOR;
  end
GO


Grant Execute on dbo.spSqlBuildAllAuditIndexes to public;
GO

-- exec dbo.spSqlBuildAllAuditIndexes;




if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlRefreshAllViews' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlRefreshAllViews;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/16/2006 Paul.  Provide a way to disable the refresh. 
-- 08/02/2007 Paul.  We need to catch view errors as they can abort the entire procedure mid-way.
-- This error is hard to trap, so use the FMTONLY trick. 
-- http://www.developmentnow.com/g/95_2006_3_0_0_728267/Im-sure-this-is-an-easy-one--Error-trap-to-skip-over-a-bad-object-.htm
-- exec ('set fmtonly on select * from ' + @ViewName + ' where 1 = 0');
-- 08/02/2007 Paul.  Skipping invalid views is not a solution.  The solution appears to be to order the views by table name length. 
-- By compiling short views first, dependent views should work because their length is typically longer. 
-- 01/07/2008 Paul.  Filter schema by TABLE_SCHEMA to prevent compiler errors. 
-- 07/14/2010 Paul.  Some customers are encountering issues with our refresh.  So only refresh views that start with vw. 
-- 11/02/2017 Paul.  Use try/catch to allow recompile to continue after error. 
Create Procedure dbo.spSqlRefreshAllViews
as
  begin
	set nocount on

	declare @Pass     int;
	declare @PassMax  int;
	declare @ViewName varchar(90);
	declare views_cursor cursor for
	select TABLE_NAME
	  from INFORMATION_SCHEMA.VIEWS
	 where TABLE_NAME not in ('sysconstraints', 'syssegments')
	   and TABLE_SCHEMA = 'dbo'
	   and TABLE_NAME like 'vw%'
	 order by len(TABLE_NAME);
/* -- #if IBM_DB2
	declare continue handler for not found
		set @FETCH_STATUS = 1;
-- #endif IBM_DB2 */
	set @PassMax = dbo.fnCONFIG_Int('refreshallviews_maxpass');
	if @PassMax is null begin -- then
		set @PassMax = 9;
	end -- if;
-- #if SQL_Server /*
	if @PassMax = 0 begin -- then
		print 'spSqlRefreshAllViews has been disabled';
	end -- if;
-- #endif SQL_Server */

	-- 01/02/2005 Paul.  There is no way to get a list of view dependencies, 
	-- so just repeat the refresh as many times as the views are deep.
	set @Pass = 1;
	while @Pass <= @PassMax begin -- do
		print 'Pass ' + cast(@Pass as varchar(10));
		open views_cursor;
		fetch next from views_cursor into @ViewName;
		while @@FETCH_STATUS = 0 begin -- do
			--print 'sp_refreshview ' + @ViewName;
			-- 11/02/2017 Paul.  Use try/catch to allow recompile to continue after error. 
			begin try
				exec sp_refreshview @ViewName;
			end try
			begin catch
				print 'Failed to recompile view ' + @ViewName;
				print ERROR_MESSAGE();
			end catch
			fetch next from views_cursor into @ViewName;
		end -- while;
		close views_cursor;
		set @Pass = @Pass + 1;
	end -- while;
	deallocate views_cursor;
  end
GO


Grant Execute on dbo.spSqlRefreshAllViews to public;
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlTableAlterColumn' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlTableAlterColumn;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
Create Procedure dbo.spSqlTableAlterColumn
	( @TABLE_NAME        varchar(255)
	, @COLUMN_NAME       varchar(255)
	, @DATA_TYPE         varchar(255)
	, @MAX_SIZE          int
	, @REQUIRED          bit
	, @DEFAULT_VALUE     varchar(255)
	)
as
  begin
	set nocount on
	
	declare @Command     varchar(2000);
	declare @NullStmt    varchar(  10);
	declare @DefaultStmt varchar( 300);
	-- 08/02/2008 Paul.  We can only enforce the not null attribute if a default value is specified. 
	-- This is because we create the custom field record before we assign the values.
	if @REQUIRED = 1 and @DefaultStmt is not null begin -- then
		set @NullStmt = ' not null';
	end else begin
		set @NullStmt = ' null';
	end -- if;
	-- 02/09/2007 Paul.  We should always create unicode fields.  Use nvarchar and not varchar. 
	if @DATA_TYPE = 'varchar' begin -- then
		set @Command = 'alter table ' + @TABLE_NAME + ' alter column ' + @COLUMN_NAME + ' nvarchar(' + cast(@MAX_SIZE as char(10)) + ')';
	end else if @DATA_TYPE = 'enum'    begin -- then
		set @Command = 'alter table ' + @TABLE_NAME + ' alter column ' + @COLUMN_NAME + ' nvarchar(' + cast(@MAX_SIZE as char(10)) + ')';
	end else if @DATA_TYPE = 'text'    begin -- then
		set @Command = 'alter table ' + @TABLE_NAME + ' alter column ' + @COLUMN_NAME + ' nvarchar(max)';
	end else if @DATA_TYPE = 'bool'    begin -- then
		set @Command = 'alter table ' + @TABLE_NAME + ' alter column ' + @COLUMN_NAME + ' bit';
	end else if @DATA_TYPE = 'int'     begin -- then
		set @Command = 'alter table ' + @TABLE_NAME + ' alter column ' + @COLUMN_NAME + ' int';
	end else if @DATA_TYPE = 'float'   begin -- then
		set @Command = 'alter table ' + @TABLE_NAME + ' alter column ' + @COLUMN_NAME + ' float';
	end else if @DATA_TYPE = 'date'    begin -- then
		set @Command = 'alter table ' + @TABLE_NAME + ' alter column ' + @COLUMN_NAME + ' datetime';
	end else if @DATA_TYPE = 'guid'    begin -- then
		set @Command = 'alter table ' + @TABLE_NAME + ' alter column ' + @COLUMN_NAME + ' uniqueidentifier';
	end else begin
		raiserror(N'spSqlTableAlterColumn: %s is not a supported DATA_TYPE. ', 16, 1, @DATA_TYPE);
	end -- if;
	-- 01/06/2006 Paul.  Alter Column cannot modify the default constraint. 
	if @Command is not null and @@ERROR = 0 begin -- then
		set @Command = @Command + @NullStmt;
		if @DefaultStmt is not null begin -- then
			set @Command = @Command + @DefaultStmt;
		end -- if;
		exec (@Command);
		-- 07/15/2009 Jamie.  If we alter the column, we must also alter the audit column. 
		if exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @TABLE_NAME + '_AUDIT' and COLUMN_NAME = @COLUMN_NAME) begin -- then
			set @Command = replace(@Command, ' table ' + @TABLE_NAME + ' ', ' table ' + @TABLE_NAME + '_AUDIT ');
			exec (@Command);
		end -- if;
	end -- if;

	-- 01/06/2006 Paul.  The default constraint needs to be dropped and created again. 
	if @@ERROR = 0 begin -- then
		exec dbo.spSqlTableDropColumnConstraint @TABLE_NAME, @COLUMN_NAME;
	end -- if;

	if @DEFAULT_VALUE is not null begin -- then
		-- 01/06/2006 Paul. Example: alter table ACCOUNTS_CSTM add constraint DF_ACCOUNTS_CSTM_CUSTOM1111 default('000') for CUSTOM1111;
		set @DefaultStmt = 'alter table ' + @TABLE_NAME + ' add constraint DF_' + @TABLE_NAME + '_' + @COLUMN_NAME;
		if @DATA_TYPE = 'bool'    begin -- then
			set @DefaultStmt = @DefaultStmt + ' default(' + cast(cast(@DEFAULT_VALUE as int          ) as char(10)) + ')';
		end else if @DATA_TYPE = 'int' begin -- then
			set @DefaultStmt = @DefaultStmt + ' default(' + cast(cast(@DEFAULT_VALUE as int          ) as char(10)) + ')';
		end else if @DATA_TYPE = 'float' begin -- then
			set @DefaultStmt = @DefaultStmt + ' default(' + cast(cast(@DEFAULT_VALUE as decimal(19,4)) as char(20)) + ')';
		end else if @DATA_TYPE = 'guid' begin -- then
			if @DEFAULT_VALUE = 'newid()' begin -- then
				set @DefaultStmt = @DefaultStmt + ' default(newid())';
			end else begin
				set @DefaultStmt = @DefaultStmt + ' default(''' + replace(@DEFAULT_VALUE, '''', '''''') + ''')';
			end -- if;
		end else begin
			-- 01/06/2006 Paul.  Most default values need to be quoted. 
			set @DefaultStmt = @DefaultStmt + ' default(''' + replace(@DEFAULT_VALUE, '''', '''''') + ''')';
		end -- if;
		set @Command = @DefaultStmt + ' for ' + @COLUMN_NAME;
		if @Command is not null and @@ERROR = 0 begin -- then
			exec (@Command);
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spSqlTableAlterColumn to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlTableDropColumn' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlTableDropColumn;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spSqlTableDropColumn
	( @TABLE_NAME        varchar(255)
	, @COLUMN_NAME       varchar(255)
	)
as
  begin
	set nocount on

	declare @Command   varchar(2000);
	declare @OldColumn varchar(100);
	declare @NewColumn varchar(100);

	exec dbo.spSqlTableDropColumnConstraint @TABLE_NAME, @COLUMN_NAME;

	set @Command = 'alter table ' + @TABLE_NAME + ' drop column ' + @COLUMN_NAME;
	exec (@Command);

	-- 07/15/2009 Jamie.  When dropping a column, we also need to drop it from the audit table. 
	-- However, since we want to retain the audit, just rename the filed and include the drop date. 
	if exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @TABLE_NAME + '_AUDIT' and COLUMN_NAME = @COLUMN_NAME) begin -- then
-- #if SQL_Server /*
		set @OldColumn = @TABLE_NAME + '_AUDIT' + '.' + @COLUMN_NAME;
		set @NewColumn = upper(@COLUMN_NAME) + '_' + convert(varchar(8), getdate(), 112) + '_' + replace(convert(varchar(8), getdate(), 108), ':', '');
		exec sp_rename @OldColumn, @NewColumn, 'COLUMN';
-- #endif SQL_Server */
	end -- if;
  end
GO

Grant Execute on dbo.spSqlTableDropColumn to public;
GO



if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlBuildAllAuditTriggers' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlBuildAllAuditTriggers;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/20/2008 Paul.  Build the triggers for the cached tables. 
Create Procedure dbo.spSqlBuildAllAuditTriggers
as
  begin
	set nocount on
	print N'spSqlBuildAllAuditTriggers';

	declare @TABLE_NAME varchar(80);
	declare TABLES_CURSOR cursor for
	select vwSqlTablesAudited.TABLE_NAME
	  from      vwSqlTablesAudited
	 inner join vwSqlTables
	         on vwSqlTables.TABLE_NAME = vwSqlTablesAudited.TABLE_NAME + '_AUDIT'
	order by vwSqlTablesAudited.TABLE_NAME;
	
	declare CACHE_CURSOR cursor for
	select TABLE_NAME
	  from vwSqlTablesCachedSystem
	union
	select TABLE_NAME
	  from vwSqlTablesCachedData
	 order by TABLE_NAME;
	
	open TABLES_CURSOR;
	fetch next from TABLES_CURSOR into @TABLE_NAME;
	while @@FETCH_STATUS = 0 begin -- do
		exec dbo.spSqlBuildAuditTrigger @TABLE_NAME;
		fetch next from TABLES_CURSOR into @TABLE_NAME;
	end -- while;
	close TABLES_CURSOR;
	deallocate TABLES_CURSOR;

	open CACHE_CURSOR;
	fetch next from CACHE_CURSOR into @TABLE_NAME;
	while @@FETCH_STATUS = 0 begin -- do
		exec dbo.spSqlBuildSystemTrigger @TABLE_NAME;
		fetch next from CACHE_CURSOR into @TABLE_NAME;
	end -- while;
	close CACHE_CURSOR;
	deallocate CACHE_CURSOR;
  end
GO


Grant Execute on dbo.spSqlBuildAllAuditTriggers to public;
GO

-- exec dbo.spSqlBuildAllAuditTables;
-- exec dbo.spSqlBuildAllAuditTriggers;
-- exec dbo.spSqlDropAllAuditTriggers;
-- exec dbo.spSqlDropAllAuditTables;

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlBuildAllAuditViews' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlBuildAllAuditViews;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/17/2008 Paul.  Audit views are used to simplify support of custom fields in workflow engine. 
-- 06/02/2009 Paul.  This procedure must be run after the data for the MODULES table has been loaded. 
-- 10/11/2015 Paul.  Don't use vwMODULES as disabled tables can cause errors with the stream generation. 
Create Procedure dbo.spSqlBuildAllAuditViews
as
  begin
	set nocount on
	print N'spSqlBuildAllAuditViews';

	declare @TABLE_NAME varchar(80);
	-- 11/17/2008 Paul.  Only use module-based tables and exclude the custom fields tables. 
	declare TABLES_CURSOR cursor for
	select vwSqlTablesAudited.TABLE_NAME
	  from      vwSqlTablesAudited
	 inner join vwSqlTables
	         on vwSqlTables.TABLE_NAME = vwSqlTablesAudited.TABLE_NAME + '_AUDIT'
	 inner join MODULES
	         on MODULES.TABLE_NAME   = vwSqlTablesAudited.TABLE_NAME
	        and MODULES.DELETED      = 0
	 where vwSqlTablesAudited.TABLE_NAME not like '%[_]CSTM'
	order by vwSqlTablesAudited.TABLE_NAME;
	
	open TABLES_CURSOR;
	fetch next from TABLES_CURSOR into @TABLE_NAME;
	while @@FETCH_STATUS = 0 begin -- do
		exec dbo.spSqlBuildAuditView @TABLE_NAME;
		fetch next from TABLES_CURSOR into @TABLE_NAME;
	end -- while;
	close TABLES_CURSOR;
	deallocate TABLES_CURSOR;
  end
GO


Grant Execute on dbo.spSqlBuildAllAuditViews to public;
GO

-- exec dbo.spSqlBuildAllAuditTables;
-- exec dbo.spSqlBuildAllAuditViews;
-- exec dbo.spSqlDropAllAuditTriggers;
-- exec dbo.spSqlDropAllAuditTables;

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlDropAllAuditTriggers' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlDropAllAuditTriggers;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/20/2008 Paul.  Drop triggers for the cached tables. 
-- 04/25/2011 Paul.  We've stopped supporting SQL 2000, so we can use varchar(max). 
-- This also fixes a problem for a customer with 100 custom fields. 
-- 07/25/2015 Paul.  Starting on 05/11/2014, we started dropping triggers in ~\Tables\_Update Sync Fields.5.sql
-- The problem is that vwSqlTablesCachedSystem may not exist on an old database and thereby will generate an error. 
Create Procedure dbo.spSqlDropAllAuditTriggers
as
  begin
	set nocount on

	-- 04/25/2011 Paul.  We've stopped supporting SQL 2000, so we can use varchar(max). 
	declare @Command           varchar(max);
	declare @AUDIT_TABLE  varchar(90);
	declare @TABLE_NAME   varchar(80);
	declare @TRIGGER_NAME varchar(90);

	-- 07/25/2015 Paul.  Remove references to vwSql views as they may not have been created. 
	-- SplendidCRM has a unique signature of these triggers, so it should be safe. 
	declare TRIGGERS_CURSOR cursor for
	select name
	  from sys.triggers
	 where name like 'tr%_System'
	    or name like 'tr%_Ins_AUDIT'
	    or name like 'tr%_Upd_AUDIT'
	    or name like 'tr%_Del_AUDIT'
	    or name like 'tr%_Ins_WORK'
	 order by name;
	open TRIGGERS_CURSOR;
	fetch next from TRIGGERS_CURSOR into @TRIGGER_NAME;
	while @@FETCH_STATUS = 0 begin -- do
		set @Command = 'Drop Trigger dbo.' + @TRIGGER_NAME;
		print @Command;
		exec(@Command);
		fetch next from TRIGGERS_CURSOR into @TRIGGER_NAME;
	end -- while;
	close TRIGGERS_CURSOR;
	deallocate TRIGGERS_CURSOR;

	/*
	declare TABLES_CURSOR cursor for
	select vwSqlTablesAudited.TABLE_NAME
	  from      vwSqlTablesAudited
	 inner join vwSqlTables
	         on vwSqlTables.TABLE_NAME = vwSqlTablesAudited.TABLE_NAME + '_AUDIT'
	order by vwSqlTablesAudited.TABLE_NAME;

	declare CACHE_CURSOR cursor for
	select TABLE_NAME
	  from vwSqlTablesCachedSystem
	union
	select TABLE_NAME
	  from vwSqlTablesCachedData
	 order by TABLE_NAME;
	
	open TABLES_CURSOR;
	fetch next from TABLES_CURSOR into @TABLE_NAME;
	while @@FETCH_STATUS = 0 begin -- do
		set @TRIGGER_NAME = 'tr' + @TABLE_NAME + '_Ins_AUDIT';
		if exists (select * from sys.objects where name = @TRIGGER_NAME and type = 'TR') begin -- then
			set @Command = 'Drop Trigger dbo.' + @TRIGGER_NAME;
			print @Command;
			exec(@Command);
		end -- if;

		set @TRIGGER_NAME = 'tr' + @TABLE_NAME + '_Upd_AUDIT';
		if exists (select * from sys.objects where name = @TRIGGER_NAME and type = 'TR') begin -- then
			set @Command = 'Drop Trigger dbo.' + @TRIGGER_NAME;
			print @Command;
			exec(@Command);
		end -- if;

		set @TRIGGER_NAME = 'tr' + @TABLE_NAME + '_Del_AUDIT';
		if exists (select * from sys.objects where name = @TRIGGER_NAME and type = 'TR') begin -- then
			set @Command = 'Drop Trigger dbo.' + @TRIGGER_NAME;
			print @Command;
			exec(@Command);
		end -- if;

		set @AUDIT_TABLE = @TABLE_NAME + '_AUDIT';
		set @TRIGGER_NAME = 'tr' + @AUDIT_TABLE + '_Ins_WORK';
		if exists (select * from sys.objects where name = @TRIGGER_NAME and type = 'TR') begin -- then
			set @Command = 'Drop Trigger dbo.' + @TRIGGER_NAME;
			print @Command;
			exec(@Command);
		end -- if;
		fetch next from TABLES_CURSOR into @TABLE_NAME;
	end -- while;
	close TABLES_CURSOR;
	deallocate TABLES_CURSOR;

	open CACHE_CURSOR;
	fetch next from CACHE_CURSOR into @TABLE_NAME;
	while @@FETCH_STATUS = 0 begin -- do
		set @TRIGGER_NAME = 'tr' + @TABLE_NAME + '_System';
		if exists (select * from sys.objects where name = @TRIGGER_NAME and type = 'TR') begin -- then
			set @Command = 'Drop Trigger dbo.' + @TRIGGER_NAME;
			print @Command;
			exec(@Command);
		end -- if;
		fetch next from CACHE_CURSOR into @TABLE_NAME;
	end -- while;
	close CACHE_CURSOR;
	deallocate CACHE_CURSOR;
	*/
  end
GO


Grant Execute on dbo.spSqlDropAllAuditTriggers to public;
GO

-- exec dbo.spSqlDropAllAuditTriggers;


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlDropAllAuditViews' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlDropAllAuditViews;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/25/2011 Paul.  We've stopped supporting SQL 2000, so we can use varchar(max). 
-- This also fixes a problem for a customer with 100 custom fields. 
Create Procedure dbo.spSqlDropAllAuditViews
as
  begin
	set nocount on

	-- 04/25/2011 Paul.  We've stopped supporting SQL 2000, so we can use varchar(max). 
	declare @Command           varchar(max);
	declare @TABLE_NAME   varchar(80);
	declare @VIEW_NAME    varchar(90);
	declare TABLES_CURSOR cursor for
	select vwSqlTablesAudited.TABLE_NAME
	  from      vwSqlTablesAudited
	 inner join vwSqlTables
	         on vwSqlTables.TABLE_NAME = vwSqlTablesAudited.TABLE_NAME + '_AUDIT'
	order by vwSqlTablesAudited.TABLE_NAME;

	open TABLES_CURSOR;
	fetch next from TABLES_CURSOR into @TABLE_NAME;
	while @@FETCH_STATUS = 0 begin -- do
		set @VIEW_NAME = 'vw' + @TABLE_NAME + '_AUDIT';
		if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = @VIEW_NAME) begin -- then
			set @Command = 'Drop View dbo.' + @VIEW_NAME;
			print @Command;
			exec(@Command);
		end -- if;

		fetch next from TABLES_CURSOR into @TABLE_NAME;
	end -- while;
	close TABLES_CURSOR;
	deallocate TABLES_CURSOR;
  end
GO


Grant Execute on dbo.spSqlDropAllAuditViews to public;
GO

-- exec dbo.spSqlDropAllAuditViews;


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlUpdateSyncdTables' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlUpdateSyncdTables;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/07/2022 Paul.  This is not needed any more. 
Create Procedure dbo.spSqlUpdateSyncdTables
as
  begin
	set nocount on

  end
GO


Grant Execute on dbo.spSqlUpdateSyncdTables to public;
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlBuildAllAuditTables' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlBuildAllAuditTables;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/17/2008 Paul.  Build audit views. 
Create Procedure dbo.spSqlBuildAllAuditTables
as
  begin
	set nocount on
	print N'spSqlBuildAllAuditTables';

	declare @TABLE_NAME varchar(80);
	declare TABLES_CURSOR cursor for
	select TABLE_NAME
	  from vwSqlTablesAudited
	order by TABLE_NAME;
	
	-- 07/25/2009 Paul.  We need to add a rowversion field to any sync'd table. 
	exec dbo.spSqlUpdateSyncdTables ;

	open TABLES_CURSOR;
	fetch next from TABLES_CURSOR into @TABLE_NAME;
	while @@FETCH_STATUS = 0 begin -- do
		exec dbo.spSqlBuildAuditTable @TABLE_NAME;
		fetch next from TABLES_CURSOR into @TABLE_NAME;
	end -- while;
	close TABLES_CURSOR;
	deallocate TABLES_CURSOR;

	-- 09/14/2008 Paul.  A single space after the procedure simplifies the migration to DB2. 
	exec dbo.spSqlBuildAllAuditTriggers ;
	exec dbo.spSqlBuildAllAuditViews ;
  end
GO


Grant Execute on dbo.spSqlBuildAllAuditTables to public;
GO

-- exec dbo.spSqlBuildAllAuditTables;
-- exec dbo.spSqlDropAllAuditTables;

-- exec dbo.spSqlBuildAllStreamTables;
-- exec dbo.spSqlDropAllStreamTables;


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlDropAllAuditTables' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSqlDropAllAuditTables;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/17/2008 Paul.  Drop audit views. 
-- 04/25/2011 Paul.  We've stopped supporting SQL 2000, so we can use varchar(max). 
-- This also fixes a problem for a customer with 100 custom fields. 
Create Procedure dbo.spSqlDropAllAuditTables
as
  begin
	set nocount on

	-- 04/25/2011 Paul.  We've stopped supporting SQL 2000, so we can use varchar(max). 
	declare @Command           varchar(max);
	declare @TABLE_NAME   varchar(80);
	declare @TRIGGER_NAME varchar(90);
	declare AUDIT_TABLES_CURSOR cursor for
	select TABLE_NAME
	  from vwSqlTables
	 where TABLE_NAME like '%_AUDIT'
	order by TABLE_NAME;

	-- 09/14/2008 Paul.  A single space after the procedure simplifies the migration to DB2. 
	exec dbo.spSqlDropAllAuditTriggers ;
	exec dbo.spSqlDropAllAuditViews ;
	
	open AUDIT_TABLES_CURSOR;
	fetch next from AUDIT_TABLES_CURSOR into @TABLE_NAME;
	while @@FETCH_STATUS = 0 begin -- do
		if exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = @TABLE_NAME and TABLE_TYPE = 'BASE TABLE') begin -- then
			set @Command = 'Drop Table dbo.' + @TABLE_NAME;
			print @Command;
			exec(@Command);
		end -- if;
		fetch next from AUDIT_TABLES_CURSOR into @TABLE_NAME;
	end -- while;
	close AUDIT_TABLES_CURSOR;
	deallocate AUDIT_TABLES_CURSOR;
  end
GO


Grant Execute on dbo.spSqlDropAllAuditTables to public;
GO

-- exec dbo.spSqlDropAllAuditTables;









/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/21/2006 Paul.  Added in SugarCRM 4.0.
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'ACL_ACTIONS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.ACL_ACTIONS';
	Create Table dbo.ACL_ACTIONS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_ACL_ACTIONS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, NAME                               nvarchar(150) null
		, CATEGORY                           nvarchar(100) null
		, ACLTYPE                            nvarchar(100) null
		, ACLACCESS                          int null
		)

	create index IDX_ACL_ACTIONS_ID_DEL on dbo.ACL_ACTIONS (ID, DELETED)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/21/2006 Paul.  Added in SugarCRM 4.0.
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'ACL_ROLES' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.ACL_ROLES';
	Create Table dbo.ACL_ROLES
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_ACL_ROLES primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, NAME                               nvarchar(150) null
		, DESCRIPTION                        nvarchar(max) null
		)

	create index IDX_ACL_ROLES_ID_DEL on dbo.ACL_ROLES (ID, DELETED)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'ACL_ROLES_CSTM' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.ACL_ROLES_CSTM';
	Create Table dbo.ACL_ROLES_CSTM
		( ID_C                               uniqueidentifier not null constraint PK_ACL_ROLES_CSTM primary key
		)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'ASSIGNED_SETS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.ASSIGNED_SETS';
	Create Table dbo.ASSIGNED_SETS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_ASSIGNED_SETS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, ASSIGNED_SET_LIST                  varchar(851) not null
		, ASSIGNED_SET_NAME                  nvarchar(200) not null
		)

	create index IDX_ASSIGNED_SETS_ID       on dbo.ASSIGNED_SETS (ID, DELETED, ASSIGNED_SET_NAME)
	create index IDX_ASSIGNED_SETS_SET_LIST on dbo.ASSIGNED_SETS (ASSIGNED_SET_LIST, DELETED, ID)
  end
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/20/2010 Paul.  We don't need any default values as this table will be populated by values from WORKFLOW_EVENTS. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'AUDIT_EVENTS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.AUDIT_EVENTS';
	Create Table dbo.AUDIT_EVENTS
		( ID                                 uniqueidentifier not null constraint PK_AUDIT_EVENTS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, AUDIT_ID                           uniqueidentifier not null
		, AUDIT_TABLE                        nvarchar(50) not null
		, AUDIT_TOKEN                        varchar(255) null
		, AUDIT_ACTION                       int null
		, AUDIT_PARENT_ID                    uniqueidentifier null
		)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/06/2005 Paul.  Allow nulls in CATEGORY.
-- 12/17/2005 Paul.  SugarCRM defaults exceed 32 chars. 
-- 09/09/2005 Paul.  Allow nulls in VALUE because we treat empty strings as null. 
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'CONFIG' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.CONFIG';
	Create Table dbo.CONFIG
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_CONFIG primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, CATEGORY                           nvarchar(32) null
		, NAME                               nvarchar(60) not null
		, VALUE                              nvarchar(max) null
		)

	create index IDX_CONFIG_CATEGORY on dbo.CONFIG (CATEGORY)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
-- 04/30/2016 Paul.  Add reference to log entry that modified the record. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'CURRENCIES' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.CURRENCIES';
	Create Table dbo.CURRENCIES
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_CURRENCIES primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, NAME                               nvarchar(36) not null
		, SYMBOL                             nvarchar(36) not null
		, ISO4217                            nvarchar(3) not null
		, CONVERSION_RATE                    float not null default(0.0)
		, STATUS                             nvarchar(25) null
		, SYSTEM_CURRENCY_LOG_ID             uniqueidentifier null
		)

	create index IDX_CURRENCIES_NAME on dbo.CURRENCIES (NAME, DELETED)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'CURRENCIES_CSTM' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.CURRENCIES_CSTM';
	Create Table dbo.CURRENCIES_CSTM
		( ID_C                               uniqueidentifier not null constraint PK_CURRENCIES_CSTM primary key
		)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/21/2006 Paul.  Added in SugarCRM 4.0.
-- 11/22/2006 Paul.  Add TEAM_ID for team management. 
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
-- 05/18/2017 Paul.  Add TEAM_SET_ID for team management. 
-- 06/14/2017 Paul.  Add CATEGORY for separate home/dashboard pages. 
-- 11/29/2017 Paul.  Add ASSIGNED_SET_ID for Dynamic User Assignment. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'DASHBOARDS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.DASHBOARDS';
	Create Table dbo.DASHBOARDS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_DASHBOARDS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, ASSIGNED_USER_ID                   uniqueidentifier null
		, ASSIGNED_SET_ID                    uniqueidentifier null
		, TEAM_ID                            uniqueidentifier null
		, TEAM_SET_ID                        uniqueidentifier null
		, NAME                               nvarchar(100) null
		, CATEGORY                           nvarchar( 50) null
		, DESCRIPTION                        nvarchar(max) null
		, CONTENT                            nvarchar(max) null
		)

	create index IDX_DASHBOARDS_NAME            on dbo.DASHBOARDS (NAME, DELETED, ID)
	create index IDX_DASHBOARDS_TEAM_ID         on dbo.DASHBOARDS (TEAM_ID, DELETED, ID)
	create index IDX_DASHBOARDS_TEAM_SET_ID     on dbo.DASHBOARDS (TEAM_SET_ID, ASSIGNED_USER_ID, DELETED, ID)
	-- 11/29/2017 Paul.  Add ASSIGNED_SET_ID for Dynamic User Assignment. 
	create index IDX_DASHBOARDS_ASSIGNED_SET_ID on dbo.DASHBOARDS (ASSIGNED_SET_ID, DELETED, ID)
	create index IDX_DASHBOARDS_ASSIGNED_USER   on dbo.DASHBOARDS (ASSIGNED_USER_ID, CATEGORY, DELETED, ID)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 06/16/2017 Paul.  Add DEFAULT_SETTINGS. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'DASHBOARD_APPS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.DASHBOARD_APPS';
	Create Table dbo.DASHBOARD_APPS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_DASHBOARD_APPS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, NAME                               nvarchar(150) null
		, CATEGORY                           nvarchar( 25) null
		, MODULE_NAME                        nvarchar( 50) null
		, TITLE                              nvarchar(100) null
		, SETTINGS_EDITVIEW                  nvarchar( 50) null
		, IS_ADMIN                           bit null default(0)
		, APP_ENABLED                        bit null default(1)
		, SCRIPT_URL                         nvarchar(2083) null
		, DEFAULT_SETTINGS                   nvarchar(max) null
		)

	create index IDX_DASHBOARD_APPS_MODULE on dbo.DASHBOARD_APPS (MODULE_NAME, DELETED, ID)
  end
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/24/2009 Paul.  The new Silverlight charts exceeded the control name length of 50. 
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
-- 01/24/2010 Paul.  Allow multiple. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'DASHLETS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.DASHLETS';
	Create Table dbo.DASHLETS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_DASHLETS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, CATEGORY                           nvarchar( 25) null
		, MODULE_NAME                        nvarchar( 50) null
		, CONTROL_NAME                       nvarchar(100) null
		, TITLE                              nvarchar(100) null
		, DASHLET_ENABLED                    bit null default(1)
		, ALLOW_MULTIPLE                     bit null default(0)
		)
  end
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/02/2007 Paul.  Add field for data columns. 
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
-- 10/30/2010 Paul.  Add support for Business Rules Framework. 
-- 11/11/2010 Paul.  Change to Pre Load and Post Load. 
-- 09/20/2012 Paul.  We need a SCRIPT field that is form specific. 
-- 02/11/2017 Paul.  New index based on missing indexes query. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'DETAILVIEWS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.DETAILVIEWS';
	Create Table dbo.DETAILVIEWS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_DETAILVIEWS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, NAME                               nvarchar( 50) not null
		, MODULE_NAME                        nvarchar( 25) not null
		, VIEW_NAME                          nvarchar( 50) not null
		, LABEL_WIDTH                        nvarchar( 10) null default('15%')
		, FIELD_WIDTH                        nvarchar( 10) null default('35%')
		, DATA_COLUMNS                       int null

		, PRE_LOAD_EVENT_ID                  uniqueidentifier null
		, POST_LOAD_EVENT_ID                 uniqueidentifier null
		, SCRIPT                             nvarchar(max) null
		)

	create index IDX_DETAILVIEWS_NAME on dbo.DETAILVIEWS (NAME, DELETED)
	-- 02/11/2017 Paul.  New index based on missing indexes query. 
	create index IDX_DETAILVIEWS_DELETED_VIEW on dbo.DETAILVIEWS (DELETED, VIEW_NAME)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/02/2007 Paul.  Add field for data columns. 
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
-- 10/30/2010 Paul.  Add support for Business Rules Framework. 
-- 11/11/2010 Paul.  Change to Pre Load and Post Load. 
-- 02/12/2011 Paul.  POST_VALIDATION_EVENT_ID was not used.  Instead, we use VALIDATION_EVENT_ID. 
-- 09/20/2012 Paul.  We need a SCRIPT field that is form specific. 
-- 02/11/2017 Paul.  New index based on missing indexes query. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'EDITVIEWS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.EDITVIEWS';
	Create Table dbo.EDITVIEWS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_EDITVIEWS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, NAME                               nvarchar( 50) not null
		, MODULE_NAME                        nvarchar( 25) not null
		, VIEW_NAME                          nvarchar( 50) not null
		, LABEL_WIDTH                        nvarchar( 10) null default('15%')
		, FIELD_WIDTH                        nvarchar( 10) null default('35%')
		, DATA_COLUMNS                       int null

		, NEW_EVENT_ID                       uniqueidentifier null
		, PRE_LOAD_EVENT_ID                  uniqueidentifier null
		, POST_LOAD_EVENT_ID                 uniqueidentifier null
		, VALIDATION_EVENT_ID                uniqueidentifier null
		, PRE_SAVE_EVENT_ID                  uniqueidentifier null
		, POST_SAVE_EVENT_ID                 uniqueidentifier null
		, SCRIPT                             nvarchar(max) null
		)

	create index IDX_EDITVIEWS_NAME on dbo.EDITVIEWS (NAME, DELETED)
	-- 02/11/2017 Paul.  New index based on missing indexes query. 
	create index IDX_EDITVIEWS_DELETED_VIEW on dbo.EDITVIEWS (DELETED, VIEW_NAME)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/21/2006 Paul.  MASS_UPDATE was added in SugarCRM 4.0.1.
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'FIELDS_META_DATA' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.FIELDS_META_DATA';
	Create Table dbo.FIELDS_META_DATA
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_FIELDS_META_DATA primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, NAME                               nvarchar(255) not null
		, LABEL                              nvarchar(255) not null
		, CUSTOM_MODULE                      nvarchar(255) null
		, DATA_TYPE                          nvarchar(255) not null
		, MAX_SIZE                           int null default(0)
		, REQUIRED_OPTION                    nvarchar(255) null
		, DEFAULT_VALUE                      nvarchar(255) null
		, EXT1                               nvarchar(255) null
		, EXT2                               nvarchar(255) null
		, EXT3                               nvarchar(255) null
		, AUDITED                            bit null default(0)
		, MASS_UPDATE                        bit null default(0)
		)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'FIELD_VALIDATORS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.FIELD_VALIDATORS';
	Create Table dbo.FIELD_VALIDATORS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_FIELD_VALIDATORS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, NAME                               nvarchar(  50) not null
		, VALIDATION_TYPE                    nvarchar(  50) not null
		, REGULAR_EXPRESSION                 nvarchar(2000) null
		, DATA_TYPE                          nvarchar(  25) null
		, MININUM_VALUE                      nvarchar( 255) null
		, MAXIMUM_VALUE                      nvarchar( 255) null
		, COMPARE_OPERATOR                   nvarchar(  25) null
		)

	create index IDX_FIELD_VALIDATORS_NAME on dbo.FIELD_VALIDATORS (NAME, DELETED)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
-- 11/22/2010 Paul.  Add support for Business Rules Framework. 
-- 09/20/2012 Paul.  We need a SCRIPT field that is form specific. 
-- 02/11/2017 Paul.  New index based on missing indexes query. 
-- 02/22/2021 Paul.  The React client needs a way to determine the default sort, besides NAME asc. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'GRIDVIEWS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.GRIDVIEWS';
	Create Table dbo.GRIDVIEWS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_GRIDVIEWS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, NAME                               nvarchar( 50) not null
		, MODULE_NAME                        nvarchar( 25) not null
		, VIEW_NAME                          nvarchar( 50) not null

		, PRE_LOAD_EVENT_ID                  uniqueidentifier null
		, POST_LOAD_EVENT_ID                 uniqueidentifier null
		, SCRIPT                             nvarchar(max) null

		, SORT_FIELD                         nvarchar(50) null
		, SORT_DIRECTION                     nvarchar(10) null
		)

	create index IDX_GRIDVIEWS_NAME on dbo.GRIDVIEWS (NAME, DELETED)
	-- 02/11/2017 Paul.  New index based on missing indexes query. 
	create index IDX_GRIDVIEWS_DELETED_VIEW on dbo.GRIDVIEWS (DELETED, VIEW_NAME)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/13/2006 Paul. The PARENT_ID is optional is the image may be updated before the parent is created. 
-- 09/15/2009 Paul.  Convert data type to varbinary(max) to support Azure. 
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'IMAGES' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.IMAGES';
	Create Table dbo.IMAGES
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_IMAGES primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, PARENT_ID                          uniqueidentifier null
		, FILENAME                           nvarchar(255) null
		, FILE_EXT                           nvarchar(25) null
		, FILE_MIME_TYPE                     nvarchar(100) null
		, CONTENT                            varbinary(max) null
		)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 10/08/2006 Paul.  Recreate IMPORT_MAPS with NAME, SOURCE and MODULE as nvarchar fields. 
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
-- 09/17/2013 Paul.  Add Business Rules to import. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'IMPORT_MAPS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.IMPORT_MAPS';
	Create Table dbo.IMPORT_MAPS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_IMPORT_MAPS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, ASSIGNED_USER_ID                   uniqueidentifier null
		, NAME                               nvarchar(150) null
		, SOURCE                             nvarchar(25) null
		, MODULE                             nvarchar(25) not null
		, HAS_HEADER                         bit not null default(1)
		, IS_PUBLISHED                       bit not null default(0)
		, CONTENT                            nvarchar(max) null
		, RULES_XML                          nvarchar(max) null
		)

	create index IDX_IMPORT_MAPS_ASSIGNED_USER_ID_MODULE_NAME on dbo.IMPORT_MAPS (ASSIGNED_USER_ID, MODULE, NAME, DELETED)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'LANGUAGES' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.LANGUAGES';
	Create Table dbo.LANGUAGES
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_LANGUAGES primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, NAME                               nvarchar(10) not null
		, LCID                               int not null
		, ACTIVE                             bit not null default(0)
		, NATIVE_NAME                        nvarchar(80) null
		, DISPLAY_NAME                       nvarchar(80) null
		)

	create index IX_LANGUAGES_NAME on dbo.LANGUAGES(NAME, ACTIVE, NATIVE_NAME, DISPLAY_NAME)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/04/2006 Paul.  Add CUSTOM_ENABLED if module has a _CSTM table and can be customized. 
-- 04/24/2006 Paul.  Add IS_ADMIN to simplify ACL management. 
-- 05/02/2006 Paul.  Add TABLE_NAME as direct table queries are required by SOAP and we need a mapping. 
-- 05/20/2006 Paul.  Add REPORT_ENABLED if the module can be the basis of a report. ACL rules will still apply. 
-- 10/06/2006 Paul.  Add IMPORT_ENABLED if the module can allow importing. 
-- 11/17/2007 Paul.  Add MOBILE_ENABLED flag to determine if module should be shown on mobile browser.
-- 07/20/2009 Paul.  Add SYNC_ENABLED flag to determine if module can be sync'd.
-- 09/08/2009 Paul.  Custom Paging can be enabled /disabled per module. 
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
-- 12/02/2009 Paul.  Add the ability to disable Mass Updates. 
-- 01/13/2010 Paul.  Allow default search to be disabled. 
-- 04/01/2010 Paul.  Add Exchange Sync flag. 
-- 04/04/2010 Paul.  Add Exchange Folders flag. 
-- 04/05/2010 Paul.  Add Exchange Create Parent flag. Need to be able to disable Account creation. 
-- 06/18/2011 Paul.  REST_ENABLED provides a way to enable/disable a module in the REST API. 
-- 03/14/2014 Paul.  DUPLICATE_CHECHING_ENABLED enables duplicate checking. 
-- 11/01/2017 Paul.  Use a module-based flag so that Record Level Security is only enabled when needed. 
-- 07/31/2019 Paul.  DEFAULT_SORT is a new field for the React Client. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'MODULES' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.MODULES';
	Create Table dbo.MODULES
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_MODULES primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, MODULE_NAME                        nvarchar(25) not null
		, DISPLAY_NAME                       nvarchar(50) not null
		, RELATIVE_PATH                      nvarchar(50) not null
		, MODULE_ENABLED                     bit null default(1)
		, TAB_ENABLED                        bit null default(1)
		, MOBILE_ENABLED                     bit null default(0)
		, TAB_ORDER                          int null
		, PORTAL_ENABLED                     bit null default(0)
		, CUSTOM_ENABLED                     bit null default(0)
		, REPORT_ENABLED                     bit null default(0)
		, IMPORT_ENABLED                     bit null default(0)
		, SYNC_ENABLED                       bit null default(0)
		, REST_ENABLED                       bit null default(0)
		, IS_ADMIN                           bit null default(0)
		, CUSTOM_PAGING                      bit null default(0)
		, MASS_UPDATE_ENABLED                bit null default(0)
		, DEFAULT_SEARCH_ENABLED             bit null default(1)
		, TABLE_NAME                         nvarchar(30) null
		, EXCHANGE_SYNC                      bit null default(0)
		, EXCHANGE_FOLDERS                   bit null default(0)
		, EXCHANGE_CREATE_PARENT             bit null default(0)
		, DUPLICATE_CHECHING_ENABLED         bit null default(0)
		, RECORD_LEVEL_SECURITY_ENABLED      bit null default(0)
		, DEFAULT_SORT                       nvarchar(50) null
		)
	-- 12/30/2010 Irantha.  Add index for caching. 
	create index IX_MODULES_MODULE_NAME on dbo.MODULES(MODULE_NAME, DELETED, MODULE_ENABLED, IS_ADMIN, TAB_ORDER)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/09/2012 Paul.  Twitter has a 40 character verifier. 
-- 04/13/2012 Paul.  Facebook has a 111 character access token. 
-- drop table dbo.OAUTHKEYS;
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'OAUTHKEYS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.OAUTHKEYS';
	Create Table dbo.OAUTHKEYS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_OAUTHKEYS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, ASSIGNED_USER_ID                   uniqueidentifier null
		, NAME                               nvarchar(25) null
		, TOKEN                              nvarchar(200) null
		, SECRET                             nvarchar(50) null
		, VERIFIER                           nvarchar(50) null
		)

	create index IDX_OAUTHKEYS on dbo.OAUTHKEYS (ASSIGNED_USER_ID, NAME, DELETED)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/13/2012 Paul.  Facebook has a 111 character access token. 
-- 09/05/2015 Paul.  Google now uses OAuth 2.0. 
-- 01/19/2017 Paul.  The Microsoft OAuth token can be large, but less than 2000 bytes. 
-- 12/02/2020 Paul.  The Microsoft OAuth token is now about 2400, so increase to 4000 characters.
-- drop table dbo.OAUTH_TOKENS;
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'OAUTH_TOKENS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.OAUTH_TOKENS';
	Create Table dbo.OAUTH_TOKENS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_OAUTH_TOKENS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, ASSIGNED_USER_ID                   uniqueidentifier null
		, NAME                               nvarchar(50) null
		, TOKEN                              nvarchar(4000) null
		, SECRET                             nvarchar(50) null
		, TOKEN_EXPIRES_AT                   datetime null
		, REFRESH_TOKEN                      nvarchar(4000) null
		)

	create index IDX_OAUTH_TOKENS on dbo.OAUTH_TOKENS (ASSIGNED_USER_ID, NAME, DELETED)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'REACT_CUSTOM_VIEWS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.REACT_CUSTOM_VIEWS';
	Create Table dbo.REACT_CUSTOM_VIEWS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_REACT_CUSTOM_VIEWS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, NAME                               nvarchar(100) null
		, MODULE_NAME                        nvarchar( 50) null
		, CATEGORY                           nvarchar( 25) null
		, CONTENT                            nvarchar(max) null
		)
  end
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/21/2006 Paul.  RELATIONSHIP_ROLE_COLUMN_VALUE was increased to nvarchar(50) in SugarCRM 4.0.
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'RELATIONSHIPS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.RELATIONSHIPS';
	Create Table dbo.RELATIONSHIPS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_RELATIONSHIPS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, RELATIONSHIP_NAME                  nvarchar(150) null
		, LHS_MODULE                         nvarchar(100) null
		, LHS_TABLE                          nvarchar( 64) null
		, LHS_KEY                            nvarchar( 64) null
		, RHS_MODULE                         nvarchar(100) null
		, RHS_TABLE                          nvarchar( 64) null
		, RHS_KEY                            nvarchar( 64) null
		, JOIN_TABLE                         nvarchar( 64) null
		, JOIN_KEY_LHS                       nvarchar( 64) null
		, JOIN_KEY_RHS                       nvarchar( 64) null
		, RELATIONSHIP_TYPE                  nvarchar( 64) null
		, RELATIONSHIP_ROLE_COLUMN           nvarchar( 64) null
		, RELATIONSHIP_ROLE_COLUMN_VALUE     nvarchar( 50) null
		, REVERSE                            bit null default(0)
		)

	create index IDX_RELATIONSHIPS_NAME on dbo.RELATIONSHIPS (RELATIONSHIP_NAME)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'RULES' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.RULES';
	Create Table dbo.RULES
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_RULES primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, ASSIGNED_USER_ID                   uniqueidentifier null
		, TEAM_ID                            uniqueidentifier null
		, TEAM_SET_ID                        uniqueidentifier null
		, NAME                               nvarchar(150) null
		, MODULE_NAME                        nvarchar(25) null
		, RULE_TYPE                          nvarchar(25) null
		, DESCRIPTION                        nvarchar(max) null
		, FILTER_SQL                         nvarchar(max) null
		, FILTER_XML                         nvarchar(max) null
		, RULES_XML                          nvarchar(max) null
		, XOML                               nvarchar(max) null
		)

	-- 10/30/2010 Paul.  Include the name in the index as the NAME is used in vwDETAILVIEWS and vwEDITVIEWS. 
	create index IDX_RULES_ID_NAME on dbo.RULES (ID, DELETED, NAME)
  end
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
-- 09/01/2010 Paul.  Store a copy of the DEFAULT_SEARCH_ID in the table so that we don't need to read the XML in order to get the value. 
-- 09/01/2010 Paul.  We also need a separate module-only field so that the query will get all records for the module. 
-- 09/02/1010 Paul.  Adding the default search caused lots of problems, so we are going to ignore the fields for now. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'SAVED_SEARCH' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.SAVED_SEARCH';
	Create Table dbo.SAVED_SEARCH
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_SAVED_SEARCH primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, ASSIGNED_USER_ID                   uniqueidentifier null
		, DEFAULT_SEARCH_ID                  uniqueidentifier null
		, NAME                               nvarchar(150) null
		, SEARCH_MODULE                      nvarchar(150) null
		, CONTENTS                           nvarchar(max) null
		, DESCRIPTION                        nvarchar(max) null
		)

	create index IDX_SAVED_SEARCH on dbo.SAVED_SEARCH (ASSIGNED_USER_ID, SEARCH_MODULE, NAME, DELETED, ID)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/21/2006 Paul.  Added in SugarCRM 4.0.
-- 12/30/2007 Paul.  Allow DATE_TIME_START to be null. 
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'SCHEDULERS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.SCHEDULERS';
	Create Table dbo.SCHEDULERS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_SCHEDULERS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, NAME                               nvarchar(255) not null
		, JOB                                nvarchar(255) not null
		, DATE_TIME_START                    datetime null
		, DATE_TIME_END                      datetime null
		, JOB_INTERVAL                       nvarchar(100) not null
		, TIME_FROM                          datetime null
		, TIME_TO                            datetime null
		, LAST_RUN                           datetime null
		, STATUS                             nvarchar(25) null
		, CATCH_UP                           bit null default(1)
		)

	create index IDX_SCHEDULERS_DATE_TIME_START on dbo.SCHEDULERS (DATE_TIME_START, DELETED)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/28/2006 Paul.  Added SHORTCUT_MODULE to help with ACL. 
-- 04/28/2006 Paul.  Added SHORTCUT_ACLTYPE to help with ACL. 
-- 07/24/2006 Paul.  Increase the DISPLAY_NAME to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'SHORTCUTS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.SHORTCUTS';
	Create Table dbo.SHORTCUTS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_SHORTCUTS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, MODULE_NAME                        nvarchar( 25) not null
		, DISPLAY_NAME                       nvarchar(150) not null
		, RELATIVE_PATH                      nvarchar(255) not null
		, IMAGE_NAME                         nvarchar( 50) null
		, SHORTCUT_ENABLED                   bit null default(1)
		, SHORTCUT_ORDER                     int null
		, SHORTCUT_MODULE                    nvarchar( 25) null
		, SHORTCUT_ACLTYPE                   nvarchar(100) null
		)
	-- 12/30/2010 Irantha.  Add index for caching. 
	create index IX_SHORTCUTS_SHORTCUT_ORDER on dbo.SHORTCUTS(DELETED, SHORTCUT_ORDER, SHORTCUT_MODULE)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'SYSTEM_CURRENCY_LOG' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.SYSTEM_CURRENCY_LOG';
	Create Table dbo.SYSTEM_CURRENCY_LOG
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_SYSTEM_CURRENCY_LOG primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, SERVICE_NAME                       nvarchar(50) null
		, SOURCE_ISO4217                     nvarchar(3) null
		, DESTINATION_ISO4217                nvarchar(3) null
		, CONVERSION_RATE                    float null
		, RAW_CONTENT                        nvarchar(max) null
		)

	create index IDX_SYSTEM_CURRENCY_LOG_DATE on dbo.SYSTEM_CURRENCY_LOG (DATE_ENTERED)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- drop table SYSTEM_EVENTS;
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'SYSTEM_EVENTS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.SYSTEM_EVENTS';
	Create Table dbo.SYSTEM_EVENTS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_SYSTEM_EVENTS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, TABLE_VERSION                      rowversion not null
		, TABLE_ID                           uniqueidentifier not null
		, TABLE_NAME                         nvarchar(50) not null
		, TABLE_ACTION                       int null
		, TABLE_COLUMNS                      varbinary(128) null
		, TABLE_TOKEN                        varchar(255) null
		)
	
	create index IDX_SYSTEM_EVENTS on dbo.SYSTEM_EVENTS(DATE_ENTERED, TABLE_ID, TABLE_NAME)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- REMOTE_HOST   = Request.UserHostName
-- SERVER_HOST   = Request.Url.Host
-- TARGET        = Request.Path
-- RELATIVE_PATH = Request.AppRelativeCurrentExecutionFilePath
-- PARAMETERS    = Request.QueryString.ToString()
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
-- drop table SYSTEM_LOG;
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'SYSTEM_LOG' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.SYSTEM_LOG';
	Create Table dbo.SYSTEM_LOG
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_SYSTEM_LOG primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, USER_ID                            uniqueidentifier null
		, USER_NAME                          nvarchar(255) null
		, MACHINE                            nvarchar(60) null
		, ASPNET_SESSIONID                   nvarchar(50) null
		, REMOTE_HOST                        nvarchar(100) null
		, SERVER_HOST                        nvarchar(100) null
		, TARGET                             nvarchar(255) null
		, RELATIVE_PATH                      nvarchar(255) null
		, PARAMETERS                         nvarchar(2000) null

		, ERROR_TYPE                         nvarchar(25) null
		, FILE_NAME                          nvarchar(255) null
		, METHOD                             nvarchar(450) null
		, LINE_NUMBER                        int null
		, MESSAGE                            nvarchar(max) null
		)

	create index IDX_SYSTEM_LOG        on dbo.SYSTEM_LOG (DATE_ENTERED, ID)
	create index IDX_SYSTEM_LOG_METHOD on dbo.SYSTEM_LOG (METHOD)
  end
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 06/18/2011 Paul.  SYSTEM_REST_TABLES are nearly identical to SYSTEM_SYNC_TABLES,
-- but the Module tables typically refer to the base view instead of the raw table. 
-- 08/02/2019 Paul.  The React Client will need access to views that require a filter, like CAMPAIGN_ID. 
-- drop table SYSTEM_REST_TABLES;
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'SYSTEM_REST_TABLES' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.SYSTEM_REST_TABLES';
	Create Table dbo.SYSTEM_REST_TABLES
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_SYSTEM_REST_TABLES primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, TABLE_NAME                         nvarchar(50) not null
		, VIEW_NAME                          nvarchar(60) not null
		, MODULE_NAME                        nvarchar(25) null
		, MODULE_NAME_RELATED                nvarchar(25) null
		, MODULE_SPECIFIC                    int null default(0)
		, MODULE_FIELD_NAME                  nvarchar(50) null
		, IS_SYSTEM                          bit null default(0)
		, IS_ASSIGNED                        bit null default(0)
		, ASSIGNED_FIELD_NAME                nvarchar(50) null
		, IS_RELATIONSHIP                    bit null default(0)
		, HAS_CUSTOM                         bit null default(0)
		, DEPENDENT_LEVEL                    int null default(0) -- fnSqlDependentLevel()
		, REQUIRED_FIELDS                    nvarchar(150) null
		)
	
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- drop table SYSTEM_TRANSACTIONS;
-- 10/07/2009 Paul.  This table will be slightly different than all the rest.  
-- We want it to have the same core fields, but in this case the ID field will be generated in the client app. 
-- The goal will be to use the SQL Server 2008 MERGE statement. 
-- http://weblogs.sqlteam.com/mladenp/archive/2007/08/03/60277.aspx
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'SYSTEM_TRANSACTIONS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.SYSTEM_TRANSACTIONS';
	Create Table dbo.SYSTEM_TRANSACTIONS
		( ID                                 uniqueidentifier not null
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier not null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, SESSION_SPID                       int not null constraint PK_SYSTEM_TRANSACTIONS primary key
		)
	
	create index IDX_SYSTEM_TRANSACTIONS on dbo.SYSTEM_TRANSACTIONS(SESSION_SPID) include (ID, MODIFIED_USER_ID);
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
-- 04/12/2016 Paul.  Add parent team and custom fields. 
-- 04/28/2016 Paul.  Rename parent to PARENT_ID. 
-- 10/12/2016 Paul.  Default PRIVATE to 0 for hierarchy management. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'TEAMS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.TEAMS';
	Create Table dbo.TEAMS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_TEAMS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, NAME                               nvarchar(128) not null
		, DESCRIPTION                        nvarchar(max) null
		, PRIVATE                            bit null default(0)
		, PARENT_ID                          uniqueidentifier null
		)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'TEAMS_CSTM' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.TEAMS_CSTM';
	Create Table dbo.TEAMS_CSTM
		( ID_C                               uniqueidentifier not null constraint PK_TEAMS_CSTM primary key
		)
  end
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/23/2009 Paul.  Decrease set list so that index plus ID will be less than 900 bytes. 
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'TEAM_SETS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.TEAM_SETS';
	Create Table dbo.TEAM_SETS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_TEAM_SETS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, TEAM_SET_LIST                      varchar(851) not null
		, TEAM_SET_NAME                      nvarchar(200) not null
		)

	create index IDX_TEAM_SETS_ID               on dbo.TEAM_SETS (ID, DELETED, TEAM_SET_NAME)
	create index IDX_TEAM_SETS_TEAM_SET_LIST    on dbo.TEAM_SETS (TEAM_SET_LIST, DELETED, ID)
  end
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the MODULE_NAME to 25 to match the size in the MODULES table.
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
-- 03/06/2012 Paul.  Increase size of the NAME field so that it can include a date formula. 
-- 02/11/2017 Paul.  New index based on missing indexes query. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'TERMINOLOGY' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.TERMINOLOGY';
	Create Table dbo.TERMINOLOGY
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_TERMINOLOGY primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, NAME                               nvarchar(150) null
		, LANG                               nvarchar(10) null
		, MODULE_NAME                        nvarchar(25) null
		, LIST_NAME                          nvarchar(50) null
		, LIST_ORDER                         int null
		, DISPLAY_NAME                       nvarchar(max) null
		)

	create index IX_TERMINOLOGY_DISPLAY_NAME on dbo.TERMINOLOGY(LANG, MODULE_NAME, NAME, LIST_NAME)
	-- 12/30/2010 Irantha.  Add index for list caching. 
	create index IX_TERMINOLOGY_LIST_NAME on dbo.TERMINOLOGY(DELETED, LANG, LIST_NAME)
	-- 02/11/2017 Paul.  New index based on missing indexes query. 
	create index IDX_TERMINOLOGY_DELETED_LIST on dbo.TERMINOLOGY (DELETED, LIST_NAME)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the MODULE_NAME to 25 to match the size in the MODULES table.
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'TERMINOLOGY_ALIASES' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.TERMINOLOGY_ALIASES';
	Create Table dbo.TERMINOLOGY_ALIASES
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_TERMINOLOGY_ALIASES primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, ALIAS_NAME                         nvarchar(50) null
		, ALIAS_MODULE_NAME                  nvarchar(25) null
		, ALIAS_LIST_NAME                    nvarchar(50) null
		, NAME                               nvarchar(50) null
		, MODULE_NAME                        nvarchar(25) null
		, LIST_NAME                          nvarchar(50) null
		)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'TERMINOLOGY_HELP' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.TERMINOLOGY_HELP';
	Create Table dbo.TERMINOLOGY_HELP
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_TERMINOLOGY_HELP primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, NAME                               nvarchar(50) null
		, LANG                               nvarchar(10) null
		, MODULE_NAME                        nvarchar(25) null
		, DISPLAY_TEXT                       nvarchar(max) null
		)

	create index IX_TERMINOLOGY_HELP on dbo.TERMINOLOGY_HELP(LANG, MODULE_NAME, NAME)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
-- 01/02/2012 Paul.  Add iCal TZID. 
-- 03/26/2013 Paul.  iCloud uses linked_timezone values from http://tzinfo.rubyforge.org/doc/. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'TIMEZONES' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.TIMEZONES';
	Create Table dbo.TIMEZONES
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_TIMEZONES primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, NAME                               nvarchar(100) not null
		, STANDARD_NAME                      nvarchar(100) null
		, STANDARD_ABBREVIATION              nvarchar( 10) null
		, DAYLIGHT_NAME                      nvarchar(100) null
		, DAYLIGHT_ABBREVIATION              nvarchar( 10) null
		, BIAS                               int null
		, STANDARD_BIAS                      int null
		, DAYLIGHT_BIAS                      int null

		, STANDARD_YEAR                      int null
		, STANDARD_MONTH                     int null
		, STANDARD_WEEK                      int null
		, STANDARD_DAYOFWEEK                 int null
		, STANDARD_HOUR                      int null
		, STANDARD_MINUTE                    int null

		, DAYLIGHT_YEAR                      int null
		, DAYLIGHT_MONTH                     int null
		, DAYLIGHT_WEEK                      int null
		, DAYLIGHT_DAYOFWEEK                 int null
		, DAYLIGHT_HOUR                      int null
		, DAYLIGHT_MINUTE                    int null
		, TZID                               nvarchar(50) null
		, LINKED_TIMEZONE                    nvarchar(50) null
		)

	create index IX_TIMEZONES_NAME on dbo.TIMEZONES(NAME)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/21/2006 Paul.  IS_GROUP was added in SugarCRM 4.0.
-- 02/26/2008 Paul.  Increase USER_NAME so that an email can be used to login. 
-- 07/16/2008 Paul.  Remove not null requirement on PORTAL_ONLY. 
-- 05/06/2009 Paul.  Add DEFAULT_TEAM to support SugarCRM migration. 
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
-- 03/16/2010 Paul.  Add IS_ADMIN_DELEGATE. 
-- 05/12/2010 Paul.  SYSTEM_GENERATED_PASSWORD and PWD_LAST_CHANGED are new to help manage forgotten password. 
-- 07/09/2010 Paul.  Move the SMTP values from USER_PREFERENCES to the main table to make it easier to access. 
-- 03/25/2011 Paul.  Add support for Google Apps. 
-- 03/25/2011 Paul.  Create a separate field for the Facebook ID. 
-- 12/13/2011 Paul.  Add support for Apple iCloud. 
-- 12/23/2011 Paul.  We need separate CTAGs for Contacts and Calendar. 
-- 12/15/2012 Paul.  Move USER_PREFERENCES to separate fields for easier access on Surface RT. 
-- 09/20/2013 Paul.  Move EXTENSION to the main table. 
-- 09/27/2013 Paul.  SMS messages need to be opt-in. 
-- 11/21/2014 Paul.  Add User Picture. 
-- 05/05/2016 Paul.  The User Primary Role is used with role-based views. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'USERS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.USERS';
	Create Table dbo.USERS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_USERS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, USER_NAME                          nvarchar(60) null
		, USER_PASSWORD                      nvarchar(30) null
		, USER_HASH                          nvarchar(32) null
		, FIRST_NAME                         nvarchar(30) null
		, LAST_NAME                          nvarchar(30) null
		, REPORTS_TO_ID                      uniqueidentifier null
		, IS_ADMIN                           bit null default(0)
		, IS_ADMIN_DELEGATE                  bit null default(0)
		, RECEIVE_NOTIFICATIONS              bit null default(1)
		, DESCRIPTION                        nvarchar(max) null
		, TITLE                              nvarchar(50) null
		, DEPARTMENT                         nvarchar(50) null
		, PHONE_HOME                         nvarchar(50) null
		, PHONE_MOBILE                       nvarchar(50) null
		, PHONE_WORK                         nvarchar(50) null
		, PHONE_OTHER                        nvarchar(50) null
		, PHONE_FAX                          nvarchar(50) null
		, EMAIL1                             nvarchar(100) null
		, EMAIL2                             nvarchar(100) null
		, STATUS                             nvarchar(25) null
		, ADDRESS_STREET                     nvarchar(150) null
		, ADDRESS_CITY                       nvarchar(100) null
		, ADDRESS_STATE                      nvarchar(100) null
		, ADDRESS_COUNTRY                    nvarchar(25) null
		, ADDRESS_POSTALCODE                 nvarchar(9) null
		, USER_PREFERENCES                   nvarchar(max) null
		, PORTAL_ONLY                        bit null default(0)
		, EMPLOYEE_STATUS                    nvarchar(25) null
		, MESSENGER_ID                       nvarchar(25) null
		, MESSENGER_TYPE                     nvarchar(25) null
		, IS_GROUP                           bit null default(0)
		, DEFAULT_TEAM                       uniqueidentifier null
		, SYSTEM_GENERATED_PASSWORD          bit null
		, PWD_LAST_CHANGED                   datetime null
		, MAIL_SMTPUSER                      nvarchar(60) null
		, MAIL_SMTPPASS                      nvarchar(30) null
		, GOOGLEAPPS_SYNC_CONTACTS           bit null
		, GOOGLEAPPS_SYNC_CALENDAR           bit null
		, GOOGLEAPPS_USERNAME                nvarchar(100) null
		, GOOGLEAPPS_PASSWORD                nvarchar(100) null
		, FACEBOOK_ID                        nvarchar(25) null
		, ICLOUD_SYNC_CONTACTS               bit null
		, ICLOUD_SYNC_CALENDAR               bit null
		, ICLOUD_USERNAME                    nvarchar(100) null
		, ICLOUD_PASSWORD                    nvarchar(100) null
		, ICLOUD_CTAG_CONTACTS               varchar(100) null
		, ICLOUD_CTAG_CALENDAR               varchar(100) null
		, THEME                              nvarchar(25) null
		, DATE_FORMAT                        nvarchar(25) null
		, TIME_FORMAT                        nvarchar(25) null
		, LANG                               nvarchar(10) null
		, CURRENCY_ID                        uniqueidentifier null
		, TIMEZONE_ID                        uniqueidentifier null
		, SAVE_QUERY                         bit null
		, GROUP_TABS                         bit null
		, SUBPANEL_TABS                      bit null
		, EXTENSION                          nvarchar(25) null
		, SMS_OPT_IN                         nvarchar(25) null
		, PICTURE                            nvarchar(max) null
		, PRIMARY_ROLE_ID                    uniqueidentifier null
		)

	-- 09/10/2009 Paul.  The indexes should be fully covered. 
	create index IDX_USERS_ID            on dbo.USERS (ID, DELETED, STATUS, PORTAL_ONLY, USER_NAME)
	create index IDX_USERS_USER_NAME     on dbo.USERS (USER_NAME, USER_HASH, DELETED, STATUS, PORTAL_ONLY, DEFAULT_TEAM)
	create index IDX_USERS_USER_PASSWORD on dbo.USERS (USER_PASSWORD)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'USERS_CSTM' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.USERS_CSTM';
	Create Table dbo.USERS_CSTM
		( ID_C                               uniqueidentifier not null constraint PK_USERS_CSTM primary key
		)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'USERS_LAST_IMPORT' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.USERS_LAST_IMPORT';
	Create Table dbo.USERS_LAST_IMPORT
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_USERS_LAST_IMPORT primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, ASSIGNED_USER_ID                   uniqueidentifier not null
		, BEAN_TYPE                          nvarchar(25) not null
		, BEAN_ID                            uniqueidentifier not null
		)

	create index IDX_USERS_LAST_IMPORT_ASSIGNED_USER_ID on dbo.USERS_LAST_IMPORT (ASSIGNED_USER_ID)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/25/2007 Paul.  CATEGORY is the same as the aspnetdb Personalization PATH. 
-- 09/15/2009 Paul.  Convert data type to varbinary(max) to support Azure. 
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'USER_PREFERENCES' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.USER_PREFERENCES';
	Create Table dbo.USER_PREFERENCES
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_USER_PREFERENCES primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, ASSIGNED_USER_ID                   uniqueidentifier null
		, CATEGORY                           nvarchar(255) null
		, CONTENT                            varbinary(max) null
		)

	create index IDX_USER_PREFERENCES_USER_ID on dbo.USER_PREFERENCES (ASSIGNED_USER_ID, CATEGORY, DELETED, ID)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'VERSIONS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.VERSIONS';
	Create Table dbo.VERSIONS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_VERSIONS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, NAME                               nvarchar(255) not null
		, FILE_VERSION                       nvarchar(255) not null
		, DB_VERSION                         nvarchar(255) not null
		)

	create index IDX_VERSIONS_NAME on dbo.VERSIONS (NAME, DELETED)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 03/06/2008 Paul.  All tables should have MODIFIED_USER_ID and DATE_MODIFIED.
-- 07/26/2008 Paul.  Add AUDIT_ACTION to speed workflow processing. 
-- drop table WORKFLOW_EVENTS;
-- 12/03/2008 Paul.  AUDIT_PARENT_ID is needed to roll-up events within a transaction. 
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'WORKFLOW_EVENTS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.WORKFLOW_EVENTS';
	Create Table dbo.WORKFLOW_EVENTS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_WORKFLOW_EVENTS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, AUDIT_VERSION                      rowversion not null
		, AUDIT_ID                           uniqueidentifier not null
		, AUDIT_TABLE                        nvarchar(50) not null
		, AUDIT_TOKEN                        varchar(255) null
		, AUDIT_ACTION                       int null
		, AUDIT_PARENT_ID                    uniqueidentifier null
		)
  end
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/21/2006 Paul.  Added in SugarCRM 4.0.
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'ACL_ROLES_ACTIONS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.ACL_ROLES_ACTIONS';
	Create Table dbo.ACL_ROLES_ACTIONS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_ACL_ROLES_ACTIONS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, ROLE_ID                            uniqueidentifier not null
		, ACTION_ID                          uniqueidentifier not null
		, ACCESS_OVERRIDE                    int null
		)

	create index IDX_ACL_ROLES_ACTIONS_ROLE_ID   on dbo.ACL_ROLES_ACTIONS (ROLE_ID  )
	create index IDX_ACL_ROLES_ACTIONS_ACTION_ID on dbo.ACL_ROLES_ACTIONS (ACTION_ID)

	alter table dbo.ACL_ROLES_ACTIONS add constraint FK_ACL_ROLES_ACTIONS_ROLE_ID   foreign key ( ROLE_ID   ) references dbo.ACL_ROLES   ( ID )
	alter table dbo.ACL_ROLES_ACTIONS add constraint FK_ACL_ROLES_ACTIONS_ACTION_ID foreign key ( ACTION_ID ) references dbo.ACL_ACTIONS ( ID )
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/21/2006 Paul.  Added in SugarCRM 4.0.
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'ACL_ROLES_USERS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.ACL_ROLES_USERS';
	Create Table dbo.ACL_ROLES_USERS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_ACL_ROLES_USERS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, ROLE_ID                            uniqueidentifier not null
		, USER_ID                            uniqueidentifier not null
		, ACCESS_OVERRIDE                    int null
		)

	create index IDX_ACL_ROLES_USERS_ROLE_ID on dbo.ACL_ROLES_USERS (ROLE_ID)
	create index IDX_ACL_ROLES_USERS_USER_ID on dbo.ACL_ROLES_USERS (USER_ID)

	alter table dbo.ACL_ROLES_USERS add constraint FK_ACL_ROLES_USERS_ROLE_ID foreign key ( ROLE_ID ) references dbo.ACL_ROLES ( ID )
	alter table dbo.ACL_ROLES_USERS add constraint FK_ACL_ROLES_USERS_USER_ID foreign key ( USER_ID ) references dbo.USERS     ( ID )
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 05/16/2017 Paul.  DASHBOARD_APP_ID is null for a blank panel. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'DASHBOARDS_PANELS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.DASHBOARDS_PANELS';
	Create Table dbo.DASHBOARDS_PANELS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_DASHBOARDS_PANELS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, DASHBOARD_ID                       uniqueidentifier not null
		, DASHBOARD_APP_ID                   uniqueidentifier null
		, PANEL_ORDER                        int null
		, ROW_INDEX                          int null
		, COLUMN_WIDTH                       int null
		)

	create index IDX_DASHBOARDS_PANELS_DETAIL_NAME on dbo.DASHBOARDS_PANELS (DASHBOARD_ID, DELETED, DASHBOARD_APP_ID, PANEL_ORDER)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/24/2009 Paul.  The new Silverlight charts exceeded the control name length of 50. 
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'DASHLETS_USERS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.DASHLETS_USERS';
	Create Table dbo.DASHLETS_USERS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_DASHLETS_USERS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, ASSIGNED_USER_ID                   uniqueidentifier not null
		, DETAIL_NAME                        nvarchar( 50) not null
		, MODULE_NAME                        nvarchar( 50) null
		, CONTROL_NAME                       nvarchar(100) null
		, DASHLET_ORDER                      int null
		, DASHLET_ENABLED                    bit null default(1)
		, TITLE                              nvarchar(100) null
		)

	create index IDX_DASHLETS_USERS_DETAIL_NAME on dbo.DASHLETS_USERS (ASSIGNED_USER_ID, DETAIL_NAME, DELETED, DASHLET_ENABLED)
  end
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the DATA_LABEL to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 06/12/2009 Paul.  Add TOOL_TIP for help hover.
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
-- 02/16/2010 Paul.  Add MODULE_TYPE so that we can lookup custom field IDs. 
-- 06/16/2010 Paul.  Increase the size of the URL_FIELD and URL_FORMAT so that we can create an IFrame to a Google map. 
-- 08/02/2010 Paul.  Increase the size of the URL_FIELD and URL_FORMAT so that we can add a javascript info column. 
-- 10/09/2010 Paul.  Add PARENT_FIELD so that we can establish dependent listboxes. 
-- 10/30/2013 Paul.  Increase size of URL_TARGET. 
-- 02/25/2015 Paul.  Increase size of DATA_FIELD and DATA_FORMAT for OfficeAddin. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'DETAILVIEWS_FIELDS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.DETAILVIEWS_FIELDS';
	Create Table dbo.DETAILVIEWS_FIELDS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_DETAILVIEWS_FIELDS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, DETAIL_NAME                        nvarchar( 50) not null
		, FIELD_INDEX                        int not null
		, FIELD_TYPE                         nvarchar( 25) not null
		, DEFAULT_VIEW                       bit null default(0)

		, DATA_LABEL                         nvarchar(150) null
		, DATA_FIELD                         nvarchar(1000) null
		, DATA_FORMAT                        nvarchar(max) null
		, URL_FIELD                          nvarchar(max) null
		, URL_FORMAT                         nvarchar(max) null
		, URL_TARGET                         nvarchar( 60) null
		, LIST_NAME                          nvarchar( 50) null
		, COLSPAN                            int null
		, MODULE_TYPE                        nvarchar(25) null
		, TOOL_TIP                           nvarchar(150) null
		, PARENT_FIELD                       nvarchar(30) null
		)

	create index IDX_DETAILVIEWS_FIELDS_DETAIL_NAME on dbo.DETAILVIEWS_FIELDS (DETAIL_NAME, DELETED)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/08/2007 Paul.  Allow relationships to be disabled. 
-- 09/08/2007 Paul.  Allow nulls in relationship order field. 
-- 09/08/2007 Paul.  We need a title when we migrate to WebParts. 
-- 09/24/2009 Paul.  The new Silverlight charts exceeded the control name length of 50. 
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
-- 10/13/2012 Paul.  Add table info for HTML5 Offline Client. 
-- 03/20/2016 Paul.  Increase PRIMARY_FIELD size to 255 to support OfficeAddin. 
-- 03/30/2022 Paul.  Add Insight fields. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'DETAILVIEWS_RELATIONSHIPS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.DETAILVIEWS_RELATIONSHIPS';
	Create Table dbo.DETAILVIEWS_RELATIONSHIPS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_DETAILVIEWS_RELATIONSHIPS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, DETAIL_NAME                        nvarchar( 50) not null
		, MODULE_NAME                        nvarchar( 50) null
		, CONTROL_NAME                       nvarchar(100) null
		, RELATIONSHIP_ORDER                 int null
		, RELATIONSHIP_ENABLED               bit null default(1)
		, TITLE                              nvarchar(100) null
		, TABLE_NAME                         nvarchar(50) null
		, PRIMARY_FIELD                      nvarchar(255) null
		, SORT_FIELD                         nvarchar(50) null
		, SORT_DIRECTION                     nvarchar(10) null
		, INSIGHT_LABEL                      nvarchar(100) null
		, INSIGHT_OPERATOR                   nvarchar(2000) null
		, INSIGHT_VIEW                       nvarchar(50) null
		)

	create index IDX_DETAILVIEWS_RELATIONSHIPS_DETAIL_NAME on dbo.DETAILVIEWS_RELATIONSHIPS (DETAIL_NAME, DELETED, RELATIONSHIP_ENABLED)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- drop table DYNAMIC_BUTTONS;
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
-- 07/28/2010 Paul.  We need a flag to exclude a button from a mobile device. 
-- 03/14/2014 Paul.  Allow hidden buttons to be created. 
-- 08/16/2017 Paul.  Increase the size of the ONCLICK_SCRIPT so that we can add a javascript info column. 
-- 08/16/2017 Paul.  Add ability to apply a business rule to a button. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'DYNAMIC_BUTTONS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.DYNAMIC_BUTTONS';
	Create Table dbo.DYNAMIC_BUTTONS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_DYNAMIC_BUTTONS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, VIEW_NAME                          nvarchar( 50) not null
		, CONTROL_INDEX                      int not null
		, CONTROL_TYPE                       nvarchar( 25) not null
		, DEFAULT_VIEW                       bit null default(0)

		, MODULE_NAME                        nvarchar( 25) null
		, MODULE_ACCESS_TYPE                 nvarchar(100) null
		, TARGET_NAME                        nvarchar( 25) null
		, TARGET_ACCESS_TYPE                 nvarchar(100) null
		, MOBILE_ONLY                        bit null default(0)
		, ADMIN_ONLY                         bit null default(0)
		, EXCLUDE_MOBILE                     bit null default(0)
		, HIDDEN                             bit null default(0)

		, CONTROL_TEXT                       nvarchar(150) null
		, CONTROL_TOOLTIP                    nvarchar(150) null
		, CONTROL_ACCESSKEY                  nvarchar(150) null
		, CONTROL_CSSCLASS                   nvarchar( 50) null

		, TEXT_FIELD                         nvarchar(200) null
		, ARGUMENT_FIELD                     nvarchar(200) null

		, COMMAND_NAME                       nvarchar( 50) null
		, URL_FORMAT                         nvarchar(255) null
		, URL_TARGET                         nvarchar( 20) null
		, ONCLICK_SCRIPT                     nvarchar(max) null

		, BUSINESS_RULE                      nvarchar(max) null
		, BUSINESS_SCRIPT                    nvarchar(max) null
		)

	create index IDX_DYNAMIC_BUTTONS_DETAIL_NAME on dbo.DYNAMIC_BUTTONS (VIEW_NAME, DELETED)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the DATA_LABEL to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 04/02/2008 Paul.  Add Validation fields. 
-- 05/17/2009 Paul.  Add support for a generic module popup. 
-- 06/12/2009 Paul.  Add TOOL_TIP for help hover.
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
-- 01/19/2010 Paul.  We need to be able to format a Float field to prevent too many decimal places. 
-- 09/13/2010 Paul.  Add relationship fields. 
-- 10/09/2010 Paul.  Add PARENT_FIELD so that we can establish dependent listboxes. 
-- 09/16/2012 Paul.  Increase ONCLICK_SCRIPT to nvarchar(max). 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'EDITVIEWS_FIELDS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.EDITVIEWS_FIELDS';
	Create Table dbo.EDITVIEWS_FIELDS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_EDITVIEWS_FIELDS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, EDIT_NAME                          nvarchar( 50) not null
		, FIELD_INDEX                        int not null
		, FIELD_TYPE                         nvarchar( 25) not null
		, DEFAULT_VIEW                       bit null default(0)

		, DATA_LABEL                         nvarchar(150) null
		, DATA_FIELD                         nvarchar(100) null
		, DATA_FORMAT                        nvarchar(100) null
		, DISPLAY_FIELD                      nvarchar(100) null
		, CACHE_NAME                         nvarchar( 50) null
		, DATA_REQUIRED                      bit null
		, UI_REQUIRED                        bit null
		, ONCLICK_SCRIPT                     nvarchar(max) null
		, FORMAT_SCRIPT                      nvarchar(255) null
		, FORMAT_TAB_INDEX                   int null
		, FORMAT_MAX_LENGTH                  int null
		, FORMAT_SIZE                        int null
		, FORMAT_ROWS                        int null
		, FORMAT_COLUMNS                     int null
		, COLSPAN                            int null
		, ROWSPAN                            int null
		, FIELD_VALIDATOR_ID                 uniqueidentifier null
		, FIELD_VALIDATOR_MESSAGE            nvarchar(150) null
		, MODULE_TYPE                        nvarchar(25) null
		, TOOL_TIP                           nvarchar(150) null

		, RELATED_SOURCE_MODULE_NAME         nvarchar(50) null
		, RELATED_SOURCE_VIEW_NAME           nvarchar(50) null
		, RELATED_SOURCE_ID_FIELD            nvarchar(30) null
		, RELATED_SOURCE_NAME_FIELD          nvarchar(100) null
		, RELATED_VIEW_NAME                  nvarchar(50) null
		, RELATED_ID_FIELD                   nvarchar(30) null
		, RELATED_NAME_FIELD                 nvarchar(100) null
		, RELATED_JOIN_FIELD                 nvarchar(30) null
		, PARENT_FIELD                       nvarchar(30) null
		)

	create index IDX_EDITVIEWS_FIELDS_EDIT_NAME on dbo.EDITVIEWS_FIELDS (EDIT_NAME, DELETED)
	-- 12/31/2010 Irantha.  Add index to improve caching. 
	create index IDX_EDITVIEWS_FIELDS_CACHE_NAME on dbo.EDITVIEWS_FIELDS (DATA_FIELD, DELETED, FIELD_TYPE, DEFAULT_VIEW, CACHE_NAME)
  end
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'EDITVIEWS_RELATIONSHIPS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.EDITVIEWS_RELATIONSHIPS';
	Create Table dbo.EDITVIEWS_RELATIONSHIPS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_EDITVIEWS_RELATIONSHIPS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, EDIT_NAME                          nvarchar( 50) not null
		, MODULE_NAME                        nvarchar( 50) null
		, CONTROL_NAME                       nvarchar(100) null
		, RELATIONSHIP_ORDER                 int null
		, RELATIONSHIP_ENABLED               bit null default(1)
		, NEW_RECORD_ENABLED                 bit null
		, EXISTING_RECORD_ENABLED            bit null
		, TITLE                              nvarchar(100) null
		, ALTERNATE_VIEW                     nvarchar( 50) null
		)

	create index IDX_EDITVIEWS_RELATIONSHIPS_EDIT_NAME on dbo.EDITVIEWS_RELATIONSHIPS (EDIT_NAME, DELETED, RELATIONSHIP_ENABLED)
  end
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/27/2006 Paul.  Add URL_MODULE to support ACL.
-- 05/02/2006 Paul.  Add URL_ASSIGNED_FIELD to support ACL. 
-- 07/24/2006 Paul.  Increase the HEADER_TEXT to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
-- 02/16/2010 Paul.  Add MODULE_TYPE so that we can lookup custom field IDs. 
-- 08/02/2010 Paul.  Increase the size of the URL_FIELD and URL_FORMAT so that we can add a javascript info column. 
-- 10/09/2010 Paul.  Add PARENT_FIELD so that we can establish dependent listboxes. 
-- 10/30/2013 Paul.  Increase size of URL_TARGET. 
-- 03/01/2014 Paul.  Increase size of DATA_FORMAT. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'GRIDVIEWS_COLUMNS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.GRIDVIEWS_COLUMNS';
	Create Table dbo.GRIDVIEWS_COLUMNS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_GRIDVIEWS_COLUMNS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, GRID_NAME                          nvarchar( 50) not null
		, COLUMN_INDEX                       int not null
		, COLUMN_TYPE                        nvarchar( 25) not null
		, DEFAULT_VIEW                       bit null default(0)

		, HEADER_TEXT                        nvarchar(150) null
		, SORT_EXPRESSION                    nvarchar( 50) null
		, ITEMSTYLE_WIDTH                    nvarchar( 10) null
		, ITEMSTYLE_CSSCLASS                 nvarchar( 50) null
		, ITEMSTYLE_HORIZONTAL_ALIGN         nvarchar( 10) null
		, ITEMSTYLE_VERTICAL_ALIGN           nvarchar( 10) null
		, ITEMSTYLE_WRAP                     bit null

		, DATA_FIELD                         nvarchar( 50) null
		, DATA_FORMAT                        nvarchar( 25) null
		, URL_FIELD                          nvarchar(max) null
		, URL_FORMAT                         nvarchar(max) null
		, URL_TARGET                         nvarchar( 60) null
		, LIST_NAME                          nvarchar( 50) null
		, URL_MODULE                         nvarchar( 25) null
		, URL_ASSIGNED_FIELD                 nvarchar( 30) null
		, MODULE_TYPE                        nvarchar( 25) null
		, PARENT_FIELD                       nvarchar( 30) null
		)

	create index IDX_GRIDVIEWS_COLUMNS_GRID_NAME on dbo.GRIDVIEWS_COLUMNS (GRID_NAME, DELETED)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/16/2013 Paul.  USER_ID should be nullable so that table can contain system email accounts. 
-- 04/20/2016 Paul.  Add team management to Outbound Emails. 
-- 01/17/2017 Paul.  Increase size of @MAIL_SENDTYPE to fit office365. 
-- drop table dbo.OUTBOUND_EMAILS;
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'OUTBOUND_EMAILS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.OUTBOUND_EMAILS';
	Create Table dbo.OUTBOUND_EMAILS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_OUTBOUND_EMAILS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, NAME                               nvarchar(50) null default('system')
		, TYPE                               nvarchar(15) null default('user')
		, USER_ID                            uniqueidentifier null
		, MAIL_SENDTYPE                      nvarchar(25) null default('smtp')
		, MAIL_SMTPTYPE                      nvarchar(20) null default('other')
		, MAIL_SMTPSERVER                    nvarchar(100) null
		, MAIL_SMTPPORT                      int null default(0)
		, MAIL_SMTPUSER                      nvarchar(100) null
		, MAIL_SMTPPASS                      nvarchar(100) null
		, MAIL_SMTPAUTH_REQ                  bit null default(0)
		, MAIL_SMTPSSL                       int null default(0)
		, FROM_NAME                          nvarchar(100) null
		, FROM_ADDR                          nvarchar(100) null
		, TEAM_ID                            uniqueidentifier null
		, TEAM_SET_ID                        uniqueidentifier null
		)

	create index IDX_OUTBOUND_EMAILS_USER_ID on dbo.OUTBOUND_EMAILS (USER_ID, TYPE, DELETED, ID)
  end
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/18/2006 Paul.  Create a covered index that will be heavily used when updating implicit team memberships. 
-- 11/18/2006 Paul.  Create a covered index that will be heavily used when modifying the organizational tree. 
-- 11/18/2006 Paul.  Add private flag.  We need to be able to isolate the user that started the private team. 
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'TEAM_MEMBERSHIPS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.TEAM_MEMBERSHIPS';
	Create Table dbo.TEAM_MEMBERSHIPS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_TEAM_MEMBERSHIPS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, TEAM_ID                            uniqueidentifier not null
		, USER_ID                            uniqueidentifier not null
		, EXPLICIT_ASSIGN                    bit null
		, IMPLICIT_ASSIGN                    bit null
		, PRIVATE                            bit null default(0)
		)

	alter table dbo.TEAM_MEMBERSHIPS add constraint FK_TEAM_MEMBERSHIPS_TEAM_ID foreign key ( TEAM_ID ) references dbo.TEAMS ( ID )
	alter table dbo.TEAM_MEMBERSHIPS add constraint FK_TEAM_MEMBERSHIPS_USER_ID foreign key ( USER_ID ) references dbo.USERS ( ID )

	create index IDX_TEAM_MEMBERSHIPS_EXPLICIT on dbo.TEAM_MEMBERSHIPS (TEAM_ID, EXPLICIT_ASSIGN, DELETED, USER_ID)
	-- 09/10/2009 Paul.  The indexes should be fully covered. 
	create index IDX_TEAM_MEMBERSHIPS_TEAM_ID  on dbo.TEAM_MEMBERSHIPS (TEAM_ID, DELETED, USER_ID, ID)
	-- 09/10/2009 Paul.  Include the PRIVATE field as it is used during login. 
	create index IDX_TEAM_MEMBERSHIPS_USER_ID  on dbo.TEAM_MEMBERSHIPS (USER_ID, DELETED, TEAM_ID, ID, PRIVATE)
  end
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
-- 03/08/2012 Paul.  Add ACTION to the tracker table so that we can create quick user activity reports. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'TRACKER' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.TRACKER';
	Create Table dbo.TRACKER
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_TRACKER primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, USER_ID                            uniqueidentifier not null
		, ACTION                             nvarchar(25) null default('detailview')
		, MODULE_NAME                        nvarchar(25) null
		, ITEM_ID                            uniqueidentifier not null
		, ITEM_SUMMARY                       nvarchar(255) null
		)

	-- 03/08/2012 Paul.  Add ACTION to the tracker table so that we can create quick user activity reports. 
	create index IDX_TRACKER_USER_ID     on dbo.TRACKER (USER_ID, ACTION, DELETED)
	create index IDX_TRACKER_ITEM_ID     on dbo.TRACKER (ITEM_ID, ACTION, DELETED)
	-- 08/26/2010 Paul.  Add IDX_TRACKER_USER_MODULE to speed spTRACKER_Update. 
	create index IDX_TRACKER_USER_MODULE on dbo.TRACKER (USER_ID, ACTION, DELETED, MODULE_NAME, ID)

	-- 11/03/2009 Paul.  This foreign key will give us trouble on the offline client. 
	-- alter table dbo.TRACKER add constraint FK_TRACKER_USER_ID foreign key ( USER_ID ) references dbo.USERS ( ID )
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 03/06/2008 Paul.  The USERS_LOGINS fields should match SYSTEM_LOG fields to simplify joins. 
-- drop table USERS_LOGINS;
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
-- 08/07/2010 Paul.  Create an index to speed the cleanup of the logins table. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'USERS_LOGINS' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.USERS_LOGINS';
	Create Table dbo.USERS_LOGINS
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_USERS_LOGINS primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, USER_ID                            uniqueidentifier null
		, USER_NAME                          nvarchar(60) null
		, LOGIN_TYPE                         nvarchar(25) null
		, LOGIN_DATE                         datetime null
		, LOGOUT_DATE                        datetime null
		, LOGIN_STATUS                       nvarchar(25) null
		, ASPNET_SESSIONID                   nvarchar(50) null
		, REMOTE_HOST                        nvarchar(100) null
		, SERVER_HOST                        nvarchar(100) null
		, TARGET                             nvarchar(255) null
		, RELATIVE_PATH                      nvarchar(255) null
		, USER_AGENT                         nvarchar(255) null
		)

	create index IDX_USERS_LOGINS_USER_ID    on dbo.USERS_LOGINS (USER_ID)
	create index IDX_USERS_LOGINS_LOGIN_DATE on dbo.USERS_LOGINS (LOGIN_DATE)
  end
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'USERS_PASSWORD_HISTORY' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.USERS_PASSWORD_HISTORY';
	Create Table dbo.USERS_PASSWORD_HISTORY
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_USERS_PASSWORD_HISTORY primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, USER_ID                            uniqueidentifier not null
		, USER_HASH                          nvarchar(32) null
		)

	create index IDX_USERS_PASSWORD_HISTORY_ID on dbo.USERS_PASSWORD_HISTORY (USER_ID, DELETED)
  end
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'USERS_PASSWORD_LINK' and TABLE_TYPE = 'BASE TABLE')
  begin
	print 'Create Table dbo.USERS_PASSWORD_LINK';
	Create Table dbo.USERS_PASSWORD_LINK
		( ID                                 uniqueidentifier not null default(newid()) constraint PK_USERS_PASSWORD_LINK primary key
		, DELETED                            bit not null default(0)
		, CREATED_BY                         uniqueidentifier null
		, DATE_ENTERED                       datetime not null default(getdate())
		, MODIFIED_USER_ID                   uniqueidentifier null
		, DATE_MODIFIED                      datetime not null default(getdate())
		, DATE_MODIFIED_UTC                  datetime null default(getutcdate())

		, USER_NAME                          nvarchar(60) null
		)

	create index IDX_USERS_PASSWORD_LINK_ID on dbo.USERS_PASSWORD_LINK (ID, DELETED)
  end
GO




















if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnSqlDependentLevel' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnSqlDependentLevel;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/22/2010 Paul.  We need to ignore foreign keys that reference self. 
-- 10/13/2016 Paul.  Add view and procedure dependencies based on SQL 2008 sql_expression_dependencies table. 
Create Function dbo.fnSqlDependentLevel(@Object varchar(255), @Type varchar(25))
returns int
as
  begin
	declare @DepCount int;
	set @DepCount = 0;
	if @Object = 'fnSqlDependentLevel' begin -- then
		return 0;
	end else if @Type = 'U' or @Type = 'Table' begin -- then
		--select 'alter table '      + upper(TABLE_CONSTRAINTS.TABLE_NAME       ) + space(32-len(TABLE_CONSTRAINTS.TABLE_NAME     )) 
		--     + ' add constraint  ' + upper(TABLE_CONSTRAINTS.CONSTRAINT_NAME  ) + space(60-len(TABLE_CONSTRAINTS.CONSTRAINT_NAME)) 
		--     + ' foreign key ('    + upper(CONSTRAINT_COLUMN_USAGE.COLUMN_NAME) + ') '
		--     + ' references '      + PRIMARY_COLUMN_USAGE.TABLE_NAME + ' (' + upper(PRIMARY_COLUMN_USAGE.COLUMN_NAME) + ')' as ADD_CONSTRAINT
		select @DepCount = max(dbo.fnSqlDependentLevel(PRIMARY_KEYS.TABLE_NAME, @Type))
		  from      INFORMATION_SCHEMA.TABLE_CONSTRAINTS         TABLE_CONSTRAINTS
		 inner join INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE   CONSTRAINT_COLUMN_USAGE
		         on CONSTRAINT_COLUMN_USAGE.CONSTRAINT_NAME    = TABLE_CONSTRAINTS.CONSTRAINT_NAME
		 inner join INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS   REFERENTIAL_CONSTRAINTS
		         on REFERENTIAL_CONSTRAINTS.CONSTRAINT_NAME    = TABLE_CONSTRAINTS.CONSTRAINT_NAME
		 inner join INFORMATION_SCHEMA.TABLE_CONSTRAINTS         PRIMARY_KEYS
		         on PRIMARY_KEYS.CONSTRAINT_NAME               = REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_NAME
		        and PRIMARY_KEYS.CONSTRAINT_TYPE               = 'PRIMARY KEY'
		-- inner join INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE   PRIMARY_COLUMN_USAGE
		--         on PRIMARY_COLUMN_USAGE.CONSTRAINT_NAME       = PRIMARY_KEYS.CONSTRAINT_NAME
		 where TABLE_CONSTRAINTS.CONSTRAINT_TYPE = 'FOREIGN KEY'
		-- 04/22/2010 Paul.  We need to ignore foreign keys that reference self. 
		   and TABLE_CONSTRAINTS.TABLE_NAME = @Object
		   and TABLE_CONSTRAINTS.TABLE_NAME <> PRIMARY_KEYS.TABLE_NAME;
	end else if @Type = 'P' or @Type = 'Procedure' begin -- then
		-- 10/13/2016 Paul.  sql_expression_dependencies does not exist on SQL 2005. 
		-- 06/11/2019 Paul.  Exclude self. 
		select @DepCount = max(dbo.fnSqlDependentLevel(referenced_entity_name, @Type))
		  from      sys.sql_expression_dependencies
		 inner join sys.objects
		         on sys.sql_expression_dependencies.referencing_id = sys.objects.object_id
		 where referencing_id = object_id(@Object)
		--   and referenced_entity_name like 'sp%'
		   and referenced_entity_name <> @Object;
	end else if @Type = 'F' or @Type = 'Function' begin -- then
		-- 10/13/2016 Paul.  sql_expression_dependencies does not exist on SQL 2005. 
		-- 06/11/2019 Paul.  Exclude self. 
		select @DepCount = max(dbo.fnSqlDependentLevel(referenced_entity_name, @Type))
		  from      sys.sql_expression_dependencies
		 inner join sys.objects
		         on sys.sql_expression_dependencies.referencing_id = sys.objects.object_id
		 where referencing_id = object_id(@Object)
		--   and referenced_entity_name like 'sp%'
		   and referenced_entity_name <> @Object;
	end else if @Type = 'V' or @Type = 'View' begin -- then
		select @DepCount = max(dbo.fnSqlDependentLevel(referenced_entity_name, @Type))
		  from      sys.sql_expression_dependencies
		 inner join sys.objects
		         on sys.sql_expression_dependencies.referencing_id = sys.objects.object_id
		 where referencing_id = object_id(@Object)
		--   and referenced_entity_name like 'vw%';
	end -- if;
	if @DepCount is null begin -- then
		return 1;
	end -- if;
	return 1 + @DepCount;
  end
GO

Grant Execute on dbo.fnSqlDependentLevel to public
GO


/*
select 'ren dbo.' + TABLE_NAME + '.Table.sql ' + TABLE_NAME + '.' + cast(dbo.fnSqlDependentLevel(TABLE_NAME, 'U') as varchar(1)) + '.sql'
  from INFORMATION_SCHEMA.TABLES
 where TABLE_TYPE = 'BASE TABLE'
--   and dbo.fnSqlDependentLevel(TABLE_NAME, 'U') > 1
 order by TABLE_NAME;

select 'ren dbo.' + TABLE_NAME + '.View.sql ' + TABLE_NAME + '.' + cast(dbo.fnSqlDependentLevel(TABLE_NAME, 'V')-1 as varchar(1)) + '.sql'
  from INFORMATION_SCHEMA.TABLES
 where TABLE_TYPE = 'VIEW'
--   and dbo.fnSqlDependentLevel(TABLE_NAME, 'V') > 1
 order by dbo.fnSqlDependentLevel(TABLE_NAME, 'V');

select 'ren dbo.' + ROUTINE_NAME + '.StoredProcedure.sql ' + ROUTINE_NAME + '.' + cast(dbo.fnSqlDependentLevel(ROUTINE_NAME, 'P') as varchar(1)) + '.sql'
  from INFORMATION_SCHEMA.ROUTINES
 where ROUTINE_TYPE = 'PROCEDURE'
--   and dbo.fnSqlDependentLevel(ROUTINE_NAME, 'P') > 1
 order by ROUTINE_NAME;

select 'ren dbo.' + ROUTINE_NAME + '.UserDefinedFunction.sql ' + ROUTINE_NAME + '.' + cast(dbo.fnSqlDependentLevel(ROUTINE_NAME, 'F') as varchar(1)) + '.sql'
  from INFORMATION_SCHEMA.ROUTINES
 where ROUTINE_TYPE = 'FUNCTION'
   and ROUTINE_NAME <> 'fnSqlDependentLevel'
 order by ROUTINE_NAME;

select 'ren dbo.' + name + '.UserDefinedTableType.sql ' + name + '.1.sql'
  from sys.types
 where is_user_defined = 1
 order by name;


declare @DEP_COUNT int;
declare @ROUTINE_NAME varchar(100);
declare ROUTINE_CURSOR cursor for
select  ROUTINE_NAME
  from INFORMATION_SCHEMA.ROUTINES
 where ROUTINE_TYPE = 'FUNCTION'
 order by ROUTINE_NAME;
open ROUTINE_CURSOR;
fetch next from ROUTINE_CURSOR into @ROUTINE_NAME;
while @@FETCH_STATUS = 0 begin -- do
	begin try
		set @DEP_COUNT = dbo.fnSqlDependentLevel(@ROUTINE_NAME, 'F');
		print 'ren dbo.' + @ROUTINE_NAME + '.UserDefinedFunction.sql ' + @ROUTINE_NAME + '.' + cast(@DEP_COUNT as varchar(1)) + '.sql';
	end try
	begin catch
		print '   ****  ' + @ROUTINE_NAME + ': ' + error_message();
	end catch
	fetch next from ROUTINE_CURSOR into @ROUTINE_NAME;
end -- while;
close ROUTINE_CURSOR;
deallocate ROUTINE_CURSOR;
*/


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnCamelCase' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnCamelCase;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnCamelCase(@NAME nvarchar(255))
returns nvarchar(255)
as
  begin
	declare @CAMEL_NAME  nvarchar(255);
	declare @CurrentPosR  int;
	declare @NextPosR     int;
	set @CAMEL_NAME = lower(@NAME);
	set @CAMEL_NAME = upper(left(@CAMEL_NAME, 1)) + substring(@CAMEL_NAME, 2, len(@NAME));

	set @CurrentPosR = 1;
	while charindex(' ', @CAMEL_NAME,  @CurrentPosR) > 0 begin -- do
		set @NextPosR = charindex(' ', @CAMEL_NAME,  @CurrentPosR);
		set @CAMEL_NAME = left(@CAMEL_NAME, @NextPosR-1) + ' ' + upper(substring(@CAMEL_NAME, @NextPosR+1, 1)) + substring(@CAMEL_NAME, @NextPosR+2, len(@NAME));
		set @CurrentPosR = @NextPosR+1;
	end -- while;
	return @CAMEL_NAME;
  end
GO

Grant Execute on dbo.fnCamelCase to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnCombineAddress' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnCombineAddress;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnCombineAddress
	( @ADDRESS_STREET1    nvarchar(150)
	, @ADDRESS_STREET2    nvarchar(150)
	, @ADDRESS_STREET3    nvarchar(150)
	, @ADDRESS_STREET4    nvarchar(150)
	)
returns nvarchar(600)
as
  begin
	declare @FULL_ADDRESS nvarchar(600);
	set @FULL_ADDRESS = @ADDRESS_STREET1;
	if @ADDRESS_STREET2 is not null and len(@ADDRESS_STREET2) > 0 begin -- then
		if @FULL_ADDRESS is not null begin -- then
			set @FULL_ADDRESS = isnull(@FULL_ADDRESS, N'') + nchar(13) + nchar(10);
		end -- if;
		set @FULL_ADDRESS = isnull(@FULL_ADDRESS, N'') + @ADDRESS_STREET2;
	end -- if;
	if @ADDRESS_STREET3 is not null and len(@ADDRESS_STREET3) > 0 begin -- then
		if @FULL_ADDRESS is not null begin -- then
			set @FULL_ADDRESS = isnull(@FULL_ADDRESS, N'') + nchar(13) + nchar(10);
		end -- if;
		set @FULL_ADDRESS = isnull(@FULL_ADDRESS, N'') + @ADDRESS_STREET3;
	end -- if;
	if @ADDRESS_STREET4 is not null and len(@ADDRESS_STREET4) > 0 begin -- then
		if @FULL_ADDRESS is not null begin -- then
			set @FULL_ADDRESS = isnull(@FULL_ADDRESS, N'') + nchar(13) + nchar(10);
		end -- if;
		set @FULL_ADDRESS = isnull(@FULL_ADDRESS, N'') + @ADDRESS_STREET4;
	end -- if;
	return @FULL_ADDRESS;
  end
GO

Grant Execute on dbo.fnCombineAddress to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnConcat' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnConcat;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnConcat(@P0 nvarchar(max), @P1 nvarchar(max))
returns nvarchar(max)
as
  begin
	return @P0 + @P1;
  end
GO

Grant Execute on dbo.fnConcat to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnCONFIG_Boolean' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnCONFIG_Boolean;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/23/2017 Paul.  Deleted flag was not being checked. 
Create Function dbo.fnCONFIG_Boolean(@NAME nvarchar(32))
returns bit
as
  begin
	declare @VALUE bit;
	select top 1 @VALUE = (case lower(convert(nvarchar(20), VALUE)) when '1' then 1 when 'true' then 1 else 0 end)
	  from CONFIG
	 where NAME = @NAME
	   and DELETED = 0;
	if @VALUE is null begin -- then
		set @VALUE = 0;
	end -- if;
	return @VALUE;
  end
GO

Grant Execute on dbo.fnCONFIG_Boolean to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnCONFIG_Float' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnCONFIG_Float;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/23/2017 Paul.  Deleted flag was not being checked. 
Create Function dbo.fnCONFIG_Float(@NAME nvarchar(32))
returns float
as
  begin
	declare @VALUE_varchar nvarchar(10);
	declare @VALUE_float     float;
	select top 1 @VALUE_varchar = convert(nvarchar(10), VALUE)
	  from CONFIG
	 where NAME = @NAME
	   and DELETED = 0;
	-- 11/18/2006 Paul.  We cannot convert ntext to int, but we can go from nvarchar to int. 
	set @VALUE_float = convert(float, @VALUE_varchar);
	return @VALUE_float;
  end
GO

Grant Execute on dbo.fnCONFIG_Float to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnCONFIG_Guid' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnCONFIG_Guid;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/23/2017 Paul.  Deleted flag was not being checked. 
Create Function dbo.fnCONFIG_Guid(@NAME nvarchar(60))
returns uniqueidentifier
as
  begin
	declare @VALUE_varchar nvarchar(255);
	declare @VALUE_guid    uniqueidentifier;
	select top 1 @VALUE_varchar = convert(nvarchar(255), VALUE)
	  from CONFIG
	 where NAME = @NAME
	   and DELETED = 0;
	set @VALUE_guid = convert(uniqueidentifier, @VALUE_varchar);
	return @VALUE_guid;
  end
GO

Grant Execute on dbo.fnCONFIG_Guid to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnCONFIG_Int' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnCONFIG_Int;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/18/2006 Paul.  convert was using @VALUE instead of the table value.  
-- 04/23/2017 Paul.  Deleted flag was not being checked. 
Create Function dbo.fnCONFIG_Int(@NAME nvarchar(32))
returns int
as
  begin
	declare @VALUE_varchar nvarchar(10);
	declare @VALUE_int     int;
	select top 1 @VALUE_varchar = convert(nvarchar(10), VALUE)
	  from CONFIG
	 where NAME = @NAME
	   and DELETED = 0;
	-- 11/18/2006 Paul.  We cannot convert ntext to int, but we can go from nvarchar to int. 
	set @VALUE_int = convert(int, @VALUE_varchar);
	return @VALUE_int;
  end
GO

Grant Execute on dbo.fnCONFIG_Int to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnCONFIG_String' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnCONFIG_String;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/23/2017 Paul.  Deleted flag was not being checked. 
-- 10/22/2017 Paul.  Increase sized of result. 
Create Function dbo.fnCONFIG_String(@NAME nvarchar(60))
returns nvarchar(4000)
as
  begin
	declare @VALUE_varchar nvarchar(4000);
	select top 1 @VALUE_varchar = convert(nvarchar(4000), VALUE)
	  from CONFIG
	 where NAME = @NAME
	   and DELETED = 0;
	return @VALUE_varchar;
  end
GO

Grant Execute on dbo.fnCONFIG_String to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnConvertXmlToList' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnConvertXmlToList;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnConvertXmlToList(@XML nvarchar(max))
returns nvarchar(max)
as
  begin
	declare @VALUE nvarchar(max);
	set @VALUE = replace(@XML  , '<?xml version="1.0" encoding="UTF-8"?>', '');
	set @VALUE = replace(@VALUE, '</Value><Value>'  , ', ');
	set @VALUE = replace(@VALUE, '<Values><Value>'  , '');
	set @VALUE = replace(@VALUE, '</Value></Values>', '');
	return @VALUE;
  end
GO

Grant Execute on dbo.fnConvertXmlToList to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnCustomFieldName' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnCustomFieldName;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnCustomFieldName(@COLUMN_NAME nvarchar(255))
returns nvarchar(255)
as
  begin
	declare @CUSTOM_NAME nvarchar(255);
	-- 01/06/2006 Paul.  Use lowercase as the column name will be made uppercase later. 
	set @CUSTOM_NAME = @COLUMN_NAME + N'_c';
	return @CUSTOM_NAME;
  end
GO

Grant Execute on dbo.fnCustomFieldName to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnCustomLabelName' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnCustomLabelName;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnCustomLabelName(@COLUMN_NAME nvarchar(255))
returns nvarchar(255)
as
  begin
	declare @CUSTOM_NAME nvarchar(255);
	set @CUSTOM_NAME = N'LBL_' + upper(@COLUMN_NAME);
	return @CUSTOM_NAME;
  end
GO

Grant Execute on dbo.fnCustomLabelName to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnCustomTableName' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnCustomTableName;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/16/2006 Paul.  Not all module names can be easily converted to a custom module name.  Use the MODULES table to convert. 
Create Function dbo.fnCustomTableName(@MODULE_NAME nvarchar(255))
returns nvarchar(255)
as
  begin
	declare @CUSTOM_NAME nvarchar(255);
	select top 1 @CUSTOM_NAME = TABLE_NAME + N'_CSTM'
	  from MODULES
	 where MODULE_NAME = @MODULE_NAME;

	if @CUSTOM_NAME is null begin -- then
		set @CUSTOM_NAME = @MODULE_NAME + N'_CSTM';
	end -- if;
	return @CUSTOM_NAME;
  end
GO

Grant Execute on dbo.fnCustomTableName to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnDateAdd_Hours' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnDateAdd_Hours;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnDateAdd_Hours(@INTERVAL int, @VALUE datetime)
returns datetime
as
  begin
	-- 11/16/2008 Paul.  No need to abbreviate. 
	return dateadd(Hour, @INTERVAL, @VALUE);
  end
GO

Grant Execute on dbo.fnDateAdd_Hours to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnDateAdd_Minutes' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnDateAdd_Minutes;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnDateAdd_Minutes(@INTERVAL int, @VALUE datetime)
returns datetime
as
  begin
	-- 11/16/2008 Paul.  No need to abbreviate. 
	return dateadd(minute, @INTERVAL, @VALUE);
  end
GO

Grant Execute on dbo.fnDateAdd_Minutes to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnDateAdd_Seconds' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnDateAdd_Seconds;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnDateAdd_Seconds(@INTERVAL int, @VALUE datetime)
returns datetime
as
  begin
	return dateadd(second, @INTERVAL, @VALUE);
  end
GO

Grant Execute on dbo.fnDateAdd_Seconds to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnDateOnly' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnDateOnly;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 06/01/2007 Paul.  Using convert to get the date is causing a problem on international installations. 
-- The date is internally stored as two 4-byte integers.  Convert to decimal and truncate to clear the time component. 
-- http://www.sql-server-helper.com/functions/get-date-only.aspx
-- Use decimal(15,8) for better accuracy. 
-- select cast(floor(cast(cast('06/01/2007 11:59:59.998 pm' as datetime) as decimal(15,8))) as datetime)
Create Function dbo.fnDateOnly(@VALUE datetime)
returns datetime
as
  begin
	return cast(floor(cast(@VALUE as decimal(15,8))) as datetime);
  end
GO

Grant Execute on dbo.fnDateOnly to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnDateUtcToLocal' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnDateUtcToLocal;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnDateUtcToLocal(@VALUE datetime)
returns datetime
as
  begin
	return dateadd(minute, -datediff(minute, getdate(), getutcdate()), @VALUE);
  end
GO

Grant Execute on dbo.fnDateUtcToLocal to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnEDITVIEWS_FIELDS_MultiSelect' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnEDITVIEWS_FIELDS_MultiSelect;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 10/13/2011 Paul.  Special list of EditViews for the search area with IS_MULTI_SELECT. 
-- 09/11/2013 Paul.  A CheckBoxList is also a multi-select. 
Create Function dbo.fnEDITVIEWS_FIELDS_MultiSelect(@MODULE_NAME nvarchar(25), @DATA_FIELD nvarchar(100), @FIELD_TYPE nvarchar(25))
returns bit
as
  begin
	declare @IS_MULTI_SELECT bit;
	set @IS_MULTI_SELECT = 0;
	if @FIELD_TYPE = N'ListBox' or @FIELD_TYPE = N'CheckBoxList' begin -- then
		set @IS_MULTI_SELECT = 0;
		if exists(select *
		            from EDITVIEWS_FIELDS
		           where DELETED      = 0
		             and DEFAULT_VIEW = 0
		             and EDIT_NAME    = @MODULE_NAME + N'.EditView'
		             and DATA_FIELD   = @DATA_FIELD
		             and FIELD_TYPE   in (N'ListBox', N'CheckBoxList')
		             and FORMAT_ROWS  > 0
		         ) begin -- then
			set @IS_MULTI_SELECT = 1;
		end -- if;
	end -- if;
	return @IS_MULTI_SELECT;
  end
GO

Grant Execute on dbo.fnEDITVIEWS_FIELDS_MultiSelect to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnEmailDisplayName' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnEmailDisplayName;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnEmailDisplayName(@FROM_NAME nvarchar(100), @FROM_ADDR nvarchar(100))
returns nvarchar(200)
as
  begin
	declare @DISPLAY_NAME nvarchar(200);
	if @FROM_NAME is null begin -- then
		set @DISPLAY_NAME = N' <' + @FROM_ADDR + N'>';
	end else if @FROM_ADDR is null begin -- then
		set @DISPLAY_NAME = @FROM_NAME;
	end else begin
		set @DISPLAY_NAME = @FROM_NAME + N' <' + @FROM_ADDR + N'>';
	end -- if;
	return @DISPLAY_NAME;
  end
GO

Grant Execute on dbo.fnEmailDisplayName to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnEndsWith' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnEndsWith;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnEndsWith(@SEARCH nvarchar(max), @FIND nvarchar(max))
returns bit
as
  begin
	if @SEARCH like N'%' + @FIND begin -- then
		return 1;
	end -- if;
	return 0;
  end
GO

Grant Execute on dbo.fnEndsWith to public
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnFullAddressHtml' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnFullAddressHtml;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 02/14/2014 Kevin.  Convert CRLF to <br /> so that street will display as multiple lines. 
-- 04/25/2016 Paul.  Convert 2-letter country code using contries_dom. 
Create Function dbo.fnFullAddressHtml
	( @ADDRESS_STREET     nvarchar(150)
	, @ADDRESS_CITY       nvarchar(100)
	, @ADDRESS_STATE      nvarchar(100)
	, @ADDRESS_POSTALCODE nvarchar(20)
	, @ADDRESS_COUNTRY    nvarchar(100)
	)
returns nvarchar(500)
as
  begin
	declare @FULL_ADDRESS nvarchar(500);
	if len(@ADDRESS_COUNTRY) = 2 begin -- then
		set @ADDRESS_COUNTRY = dbo.fnTERMINOLOGY_Lookup(@ADDRESS_COUNTRY, N'en-US', null, N'countries_dom');
	end -- if;
	set @FULL_ADDRESS = isnull(replace(@ADDRESS_STREET, char(13) + char(10), N'<br />'), N'') + N'<br>' 
	                  + isnull(@ADDRESS_CITY      , N'') + N' ' 
	                  + isnull(@ADDRESS_STATE     , N'') + N' &nbsp;&nbsp;' 
	                  + isnull(@ADDRESS_POSTALCODE, N'') + N'<br>' 
	                  + isnull(@ADDRESS_COUNTRY   , N'') + N' ';
	return @FULL_ADDRESS;
  end
GO

Grant Execute on dbo.fnFullAddressHtml to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnFullName' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnFullName;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/07/2010 Paul.  We want to trim the middle space. 
-- 08/01/2010 Paul.  Now that we are using this function in the list views, we need to be more efficient. 
Create Function dbo.fnFullName(@FIRST_NAME nvarchar(100), @LAST_NAME nvarchar(100))
returns nvarchar(200)
as
  begin
	declare @FULL_NAME nvarchar(200);
	if @FIRST_NAME is null begin -- then
		set @FULL_NAME = @LAST_NAME;
	end else if @LAST_NAME is null begin -- then
		set @FULL_NAME = @FIRST_NAME;
	end else begin
		set @FULL_NAME = @FIRST_NAME + N' ' + @LAST_NAME;
	end -- if;
	return @FULL_NAME;
  end
GO

Grant Execute on dbo.fnFullName to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnHtmlXssFilter' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnHtmlXssFilter;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/06/2022 Paul.  We need a way to filter EMAILS.DESCRIPTION_HTML in the database. 
-- Ideally we would use the CONFIG.email_xss set, but that would be too slow, so manually code. 
Create Function dbo.fnHtmlXssFilter(@HTML nvarchar(max))
returns nvarchar(max)
as
  begin
	declare @VALUE nvarchar(max);
	set @VALUE = @HTML;
	if @VALUE is not null begin -- then
		-- 01/06/2022 Paul.  To be efficient, we are going to just disable the start tag and ignore the end tag. 
		set @VALUE = replace(@VALUE, '<html', '<xhtml');
		set @VALUE = replace(@VALUE, '<body', '<xbody');
		set @VALUE = replace(@VALUE, '<base', '<xbase');
		set @VALUE = replace(@VALUE, '<form', '<xform');
		set @VALUE = replace(@VALUE, '<meta', '<xmeta');
		set @VALUE = replace(@VALUE, '<style', '<xstyle');
		set @VALUE = replace(@VALUE, '<embed', '<xembed');
		set @VALUE = replace(@VALUE, '<object', '<xobject');
		set @VALUE = replace(@VALUE, '<script', '<xscript');
		set @VALUE = replace(@VALUE, '<iframe', '<xiframe');
	end -- if;
	return @VALUE;
  end
GO

Grant Execute on dbo.fnHtmlXssFilter to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnIndexOf' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnIndexOf;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnIndexOf(@SEARCH nvarchar(max), @FIND nvarchar(max))
returns int
as
  begin
	return charindex(@FIND, @SEARCH) - 1;
  end
GO

Grant Execute on dbo.fnIndexOf to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnIsEmptyGuid' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnIsEmptyGuid;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnIsEmptyGuid(@ID uniqueidentifier)
returns bit
as
  begin
	if @ID is null or @ID = '00000000-0000-0000-0000-000000000000' begin -- then
		return 1;
	end -- if;
	return 0;
  end
GO

Grant Execute on dbo.fnIsEmptyGuid to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnL10nListTerm' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnL10nListTerm;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnL10nListTerm(@LANG nvarchar(10), @MODULE_NAME nvarchar(20), @NAME nvarchar(50),  @LIST_NAME nvarchar(30))
returns nvarchar(2000)
as
  begin
	declare @DISPLAY_NAME nvarchar(2000);
	if @MODULE_NAME is null begin -- then
		select @DISPLAY_NAME = DISPLAY_NAME
		  from dbo.TERMINOLOGY
		 where LANG        = @LANG
		   and NAME        = @NAME
		   and MODULE_NAME is null
		   and LIST_NAME   = @LIST_NAME;
	end else if @MODULE_NAME is not null begin -- then
		select @DISPLAY_NAME = DISPLAY_NAME
		  from dbo.TERMINOLOGY
		 where LANG        = @LANG
		   and NAME        = @NAME
		   and MODULE_NAME = @MODULE_NAME
		   and LIST_NAME   = @LIST_NAME;
	end -- if;
	
	return @DISPLAY_NAME;
  end
GO

Grant Execute on dbo.fnL10nListTerm to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnL10nTerm' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnL10nTerm;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/03/2009 Paul.  Convert terms to a base term. 
-- 11/22/2021 Paul.  Include Assigned Set. 
Create Function dbo.fnL10nTerm(@LANG nvarchar(10), @MODULE_NAME nvarchar(20), @NAME nvarchar(50))
returns nvarchar(2000)
as
  begin
	declare @DISPLAY_NAME nvarchar(2000);
	if    @NAME = 'LBL_ID'              
	   or @NAME = 'LBL_DELETED'         
	   or @NAME = 'LBL_CREATED_BY'      
	   or @NAME = 'LBL_CREATED_BY_ID'   
	   or @NAME = 'LBL_DATE_ENTERED'    
	   or @NAME = 'LBL_MODIFIED_USER_ID'
	   or @NAME = 'LBL_DATE_MODIFIED'   
	   or @NAME = 'LBL_MODIFIED_BY'     
	   or @NAME = 'LBL_ASSIGNED_USER_ID'
	   or @NAME = 'LBL_ASSIGNED_TO'     
	   or @NAME = 'LBL_ASSIGNED_SET_ID'  
	   or @NAME = 'LBL_ASSIGNED_SET_NAME'
	   or @NAME = 'LBL_TEAM_ID'         
	   or @NAME = 'LBL_TEAM_NAME'       
	   or @NAME = 'LBL_TEAM_SET_ID'     
	   or @NAME = 'LBL_TEAM_SET_NAME'   
	   or @NAME = 'LBL_ID_C'            
	   or @NAME = 'LBL_LIST_ID'              
	   or @NAME = 'LBL_LIST_DELETED'         
	   or @NAME = 'LBL_LIST_CREATED_BY'      
	   or @NAME = 'LBL_LIST_CREATED_BY_ID'   
	   or @NAME = 'LBL_LIST_DATE_ENTERED'    
	   or @NAME = 'LBL_LIST_MODIFIED_USER_ID'
	   or @NAME = 'LBL_LIST_DATE_MODIFIED'   
	   or @NAME = 'LBL_LIST_MODIFIED_BY'     
	   or @NAME = 'LBL_LIST_ASSIGNED_USER_ID'
	   or @NAME = 'LBL_LIST_ASSIGNED_TO'     
	   or @NAME = 'LBL_LIST_ASSIGNED_SET_ID' 
	   or @NAME = 'LBL_LIST_ASSIGNED_SET_NAME'
	   or @NAME = 'LBL_LIST_TEAM_ID'         
	   or @NAME = 'LBL_LIST_TEAM_NAME'       
	   or @NAME = 'LBL_LIST_TEAM_SET_ID'     
	   or @NAME = 'LBL_LIST_TEAM_SET_NAME'   
	   or @NAME = 'LBL_LIST_ID_C'            
	begin -- then
		set @MODULE_NAME = null;
	end -- if;

	if @MODULE_NAME is null  begin -- then
		select @DISPLAY_NAME = DISPLAY_NAME
		  from dbo.TERMINOLOGY
		 where LANG        = @LANG
		   and NAME        = @NAME
		   and MODULE_NAME is null;
	end else begin
		select @DISPLAY_NAME = DISPLAY_NAME
		  from dbo.TERMINOLOGY
		 where LANG        = @LANG
		   and NAME        = @NAME
		   and MODULE_NAME = @MODULE_NAME;
	end -- if;
	return @DISPLAY_NAME;
  end
GO

Grant Execute on dbo.fnL10nTerm to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnLocation' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnLocation;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/17/2010 Paul.  Now that we are using this function in the list views, we need to be more efficient. 
Create Function dbo.fnLocation(@CITY nvarchar(100), @STATE nvarchar(100))
returns nvarchar(200)
as
  begin
	declare @DISPLAY_NAME nvarchar(200);
	if @CITY is null begin -- then
		set @DISPLAY_NAME = @STATE;
	end else if @STATE is null begin -- then
		set @DISPLAY_NAME = @CITY;
	end else begin
		set @DISPLAY_NAME = rtrim(isnull(@CITY, N'') + N', ' + isnull(@STATE, N''));
	end -- if;
	return @DISPLAY_NAME;
  end
GO

Grant Execute on dbo.fnLocation to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnModuleSingularName' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnModuleSingularName;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnModuleSingularName(@COLUMN_NAME nvarchar(80))
returns nvarchar(80)
as
  begin
	declare @SINGULAR_NAME nvarchar(80);
	if @COLUMN_NAME is not null and len(@COLUMN_NAME) > 0 begin -- then
		if substring(@COLUMN_NAME, len(@COLUMN_NAME) - 2, 3) = 'IES' begin -- then
			set @SINGULAR_NAME = substring(@COLUMN_NAME, 1, len(@COLUMN_NAME) - 3) + 'Y';
		end else if substring(@COLUMN_NAME, len(@COLUMN_NAME), 1) = 'S' begin -- then
			set @SINGULAR_NAME = substring(@COLUMN_NAME, 1, len(@COLUMN_NAME) - 1);
		end else begin
			set @SINGULAR_NAME = @COLUMN_NAME;
		end -- if;
	end -- if;
	return @SINGULAR_NAME;
  end
GO

Grant Execute on dbo.fnModuleSingularName to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnNormalizePhone' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnNormalizePhone;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/24/2017 Paul.  Convert empty string to null. 
-- 08/15/2018 Paul.  Use like clause for more flexible phone number lookup. 
Create Function dbo.fnNormalizePhone(@PHONE nvarchar(25))
returns nvarchar(25)
as
  begin
	declare @NORMALIZED nvarchar(25);
	set @NORMALIZED = @PHONE;
	if @NORMALIZED is not null begin -- then
		set @NORMALIZED = replace(@NORMALIZED, N' ', N'');
		set @NORMALIZED = replace(@NORMALIZED, N'+', N'');
		set @NORMALIZED = replace(@NORMALIZED, N'(', N'');
		set @NORMALIZED = replace(@NORMALIZED, N')', N'');
		set @NORMALIZED = replace(@NORMALIZED, N'-', N'');
		set @NORMALIZED = replace(@NORMALIZED, N'.', N'');
		-- 08/15/2018 Paul.  Use like clause for more flexible phone number lookup. 
		set @NORMALIZED = replace(@NORMALIZED, N'[', N'');
		set @NORMALIZED = replace(@NORMALIZED, N']', N'');
		set @NORMALIZED = replace(@NORMALIZED, N'#', N'');
		set @NORMALIZED = replace(@NORMALIZED, N'*', N'');
		set @NORMALIZED = replace(@NORMALIZED, N'%', N'');
		if len(@NORMALIZED) = 0 begin -- then
			set @NORMALIZED = null;
		end -- if;
	end -- if;
	return @NORMALIZED;
  end
GO

Grant Execute on dbo.fnNormalizePhone to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnSqlColumns_IsEnum' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnSqlColumns_IsEnum;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 02/09/2007 Paul.  Use the EDITVIEWS_FIELDS to determine if a column is an enum. 
-- 09/16/2010 Paul.  CsType can be SqlDbType.DateTime. 
-- 12/12/2010 Paul.  EffiProz needs the ColumnName field to be greater than 35 due to an internal variable. 
-- 09/13/2011 Paul.  The Workflow EditView will append _AUDIT to the table name, so we need to remove that. 
-- Workflow EditView appends _AUDIT to prevent the inclusion of addtional fields in the base view, such as CITY in the vwACCOUNTS view. 
Create Function dbo.fnSqlColumns_IsEnum(@ModuleView nvarchar(50), @ColumnName nvarchar(50), @CsType nvarchar(20))
returns bit
as
  begin
	declare @IS_ENUM bit;
	declare @TableView nvarchar(50)
	set @IS_ENUM = 0;
	set @TableView = @ModuleView;
	if right(@TableView, 6) = '_AUDIT' begin -- then
		set @TableView = substring(@TableView, 1, len(@TableView) - 6);
	end -- if;
	if @CsType = N'string' or @CsType = N'ansistring' begin -- then
		if exists(select *
		            from      EDITVIEWS_FIELDS
		           inner join EDITVIEWS
		                   on EDITVIEWS.NAME      = EDITVIEWS_FIELDS.EDIT_NAME
		                  and EDITVIEWS.VIEW_NAME = @TableView + N'_Edit'
		                  and EDITVIEWS.DELETED   = 0
		           where EDITVIEWS_FIELDS.DELETED = 0
	                     and EDITVIEWS_FIELDS.FIELD_TYPE   = N'ListBox'
		             and EDITVIEWS_FIELDS.DEFAULT_VIEW = 0
		             and EDITVIEWS_FIELDS.DATA_FIELD   = @ColumnName
		             and EDITVIEWS_FIELDS.CACHE_NAME is not null) begin -- then
			set @IS_ENUM = 1;
		end -- if;
	end -- if;
	return @IS_ENUM;
  end
GO

Grant Execute on dbo.fnSqlColumns_IsEnum to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnSqlIndexColumns' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnSqlIndexColumns;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/06/2010 Paul.  Help with migration with EffiProz. 
Create Function dbo.fnSqlIndexColumns(@TABLE_NAME sysname, @object_id int, @index_id tinyint)
returns varchar(4000)
as 
  begin
	declare @colnames    varchar(4000);
	declare @thisColID   int;
	declare @thisColName sysname;
	
	set @colnames = index_col(@table_name, @index_id, 1) + (case indexkey_property(@object_id, @index_id, 1, 'IsDescending') when 1 then ' DESC' else '' end);
	set @thisColID   = 2;
	set @thisColName = index_col(@table_name, @index_id, @thisColID) + (case indexkey_property(@object_id, @index_id, @thisColID, 'IsDescending') when 1 then ' DESC' else '' end);

	while @thisColName is not null begin -- do
		set @thisColID   = @thisColID + 1;
		set @colnames    = @colnames + ', ' + @thisColName;
		set @thisColName = index_col(@table_name, @index_id, @thisColID) + (case indexkey_property(@object_id, @index_id, @thisColID, 'IsDescending') when 1 then ' DESC' else '' end);
	end -- while;
	return upper(@colNames);
  end
GO

Grant Execute on dbo.fnSqlIndexColumns to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnStartsWith' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnStartsWith;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnStartsWith(@SEARCH nvarchar(max), @FIND nvarchar(max))
returns bit
as
  begin
	if @SEARCH like @FIND + N'%' begin -- then
		return 1;
	end -- if;
	return 0;
  end
GO

Grant Execute on dbo.fnStartsWith to public
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnStoreDateOnly' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnStoreDateOnly;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnStoreDateOnly(@VALUE datetime)
returns datetime
as
  begin
	-- 10/19/2005 Paul.  On SQL Server, we store the full datetime.
	return @VALUE;
  end
GO

Grant Execute on dbo.fnStoreDateOnly to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnStoreTimeOnly' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnStoreTimeOnly;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 06/01/2007 Paul.  Using convert to get the time is causing a problem on international installations. 
-- The date is internally stored as two 4-byte integers.  Convert to decimal and subtract the date portion. 
-- http://www.sql-server-helper.com/functions/get-date-only.aspx
-- Use decimal(15,8) for better accuracy. 
-- select cast(floor(cast(cast('06/01/2007 11:59:59.998 pm' as datetime) as decimal(15,8))) as datetime)
-- 09/06/2010 Paul.  Help with migration with EffiProz. 
Create Function dbo.fnStoreTimeOnly(@VALUE datetime)
returns datetime
as
  begin
	set @VALUE = cast(cast(@VALUE as decimal(15,8)) - floor(cast(@VALUE as decimal(15,8))) as datetime);
	return @VALUE;
  end
GO

Grant Execute on dbo.fnStoreTimeOnly to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnSubstringOf' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnSubstringOf;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnSubstringOf(@FIND nvarchar(max), @SEARCH nvarchar(max))
returns bit
as
  begin
	if @SEARCH like N'%' + @FIND + N'%' begin -- then
		return 1;
	end -- if;
	return 0;
  end
GO

Grant Execute on dbo.fnSubstringOf to public
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnTEAMS_NamesByList' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnTEAMS_NamesByList;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/23/2009 Paul.  Decrease set list so that index plus ID will be less than 900 bytes. 
Create Function dbo.fnTEAMS_NamesByList(@TEAM_SET_LIST varchar(851))
returns nvarchar(200)
as
  begin
	declare @TEAM_SET_NAME nvarchar(200);
	declare @NAME          nvarchar(128);
	declare @ID            uniqueidentifier;
	declare @CurrentPosR   int;
	declare @NextPosR      int;
	set @CurrentPosR   = 1;
	set @TEAM_SET_NAME = null;
	while @CurrentPosR <= len(@TEAM_SET_LIST) begin -- do
		set @NextPosR = charindex(',', @TEAM_SET_LIST,  @CurrentPosR);
		if @NextPosR = 0 or @NextPosR is null begin -- then
			set @NextPosR = len(@TEAM_SET_LIST) + 1;
		end -- if;
		set @ID = cast(rtrim(ltrim(substring(@TEAM_SET_LIST, @CurrentPosR, @NextPosR - @CurrentPosR))) as uniqueidentifier);
		set @CurrentPosR = @NextPosR+1;

		-- BEGIN Oracle Exception
			select @NAME   = NAME
			  from TEAMS
			 where ID      = @ID
			   and DELETED = 0;
		-- END Oracle Exception
		if @NAME is not null begin -- then
			if @TEAM_SET_NAME is null begin -- then
				set @TEAM_SET_NAME = @NAME;
			end else begin
				set @TEAM_SET_NAME = substring(@TEAM_SET_NAME + N', ' + @NAME, 1, 200);
			end -- if;
		end -- if;
	end -- while;
	return @TEAM_SET_NAME;
  end
GO

Grant Execute on dbo.fnTEAMS_NamesByList to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnTERMINOLOGY_Changed' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnTERMINOLOGY_Changed;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the MODULE_NAME to 25 to match the size in the MODULES table.
-- 01/14/2010 Paul.  In order to detect a case-significant change in the DISPLAY_NAME, first convert to binary. 
-- http://vyaskn.tripod.com/case_sensitive_search_in_sql_server.htm
-- 03/06/2012 Paul.  Increase size of the NAME field so that it can include a date formula. 
Create Function dbo.fnTERMINOLOGY_Changed
	( @NAME              nvarchar(150)
	, @LANG              nvarchar(10)
	, @MODULE_NAME       nvarchar(25)
	, @LIST_NAME         nvarchar(50)
	, @LIST_ORDER        int
	, @DISPLAY_NAME      nvarchar(max)
	)
returns bit
as
  begin
	declare @Changed bit;
	set @Changed = 0;
	if not exists(select *
	                from TERMINOLOGY
	               where DELETED = 0
	                 and (NAME         = @NAME         or (NAME         is null and @NAME         is null))
	                 and (LANG         = @LANG         or (LANG         is null and @LANG         is null))
	                 and (MODULE_NAME  = @MODULE_NAME  or (MODULE_NAME  is null and @MODULE_NAME  is null))
	                 and (LIST_NAME    = @LIST_NAME    or (LIST_NAME    is null and @LIST_NAME    is null))
	                 and (cast(DISPLAY_NAME as varbinary(4000)) = cast(@DISPLAY_NAME as varbinary(4000)) or (DISPLAY_NAME is null and @DISPLAY_NAME is null))
	                 and isnull(LIST_ORDER, 0) = isnull(@LIST_ORDER, 0)) begin -- then
		set @Changed = 1;
	end -- if;
	return @Changed;
  end
GO

Grant Execute on dbo.fnTERMINOLOGY_Changed to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnTERMINOLOGY_ConvertToTerm' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnTERMINOLOGY_ConvertToTerm;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/29/2009 Paul.  Field name might be just Postalcode, so remove the leading space. 
Create Function dbo.fnTERMINOLOGY_ConvertToTerm(@COLUMN_NAME nvarchar(255))
returns nvarchar(255)
as
  begin
	declare @CUSTOM_NAME  nvarchar(255);
	declare @CurrentPosR  int;
	declare @NextPosR     int;
	set @CUSTOM_NAME = lower(@COLUMN_NAME);
	set @CUSTOM_NAME = upper(left(@CUSTOM_NAME, 1)) + substring(@CUSTOM_NAME, 2, len(@COLUMN_NAME));

	set @CurrentPosR = 1;
	while charindex('_', @CUSTOM_NAME,  @CurrentPosR) > 0 begin -- do
		set @NextPosR = charindex('_', @CUSTOM_NAME,  @CurrentPosR);
		set @CUSTOM_NAME = left(@CUSTOM_NAME, @NextPosR-1) + ' ' + upper(substring(@CUSTOM_NAME, @NextPosR+1, 1)) + substring(@CUSTOM_NAME, @NextPosR+2, len(@COLUMN_NAME));
		set @CurrentPosR = @NextPosR+1;
	end -- while;
	if @CUSTOM_NAME = 'Id' begin -- then
		set @CUSTOM_NAME = 'ID';
	end else if @CUSTOM_NAME = 'Id C' begin -- then
		set @CUSTOM_NAME = 'ID_C';
	end else if right(@CUSTOM_NAME, 3) = ' Id' begin -- then
		set @CUSTOM_NAME = left(@CUSTOM_NAME, len(@CUSTOM_NAME)-3) + ' ID';
	end else if right(@CUSTOM_NAME, 4) = ' Utc' begin -- then
		set @CUSTOM_NAME = left(@CUSTOM_NAME, len(@CUSTOM_NAME)-4) + ' UTC';
	end else if right(@CUSTOM_NAME, 4) = ' Url' begin -- then
		set @CUSTOM_NAME = left(@CUSTOM_NAME, len(@CUSTOM_NAME)-4) + ' URL';
	end else if right(@CUSTOM_NAME, 5) = ' Urls' begin -- then
		set @CUSTOM_NAME = left(@CUSTOM_NAME, len(@CUSTOM_NAME)-5) + ' URLs';
	end else if right(@CUSTOM_NAME, 5) = ' Html' begin -- then
		set @CUSTOM_NAME = left(@CUSTOM_NAME, len(@CUSTOM_NAME)-5);
	end else if right(@CUSTOM_NAME, 10) = 'Postalcode' begin -- then
		set @CUSTOM_NAME = left(@CUSTOM_NAME, len(@CUSTOM_NAME)-10) + 'Postal Code';
	end else if right(@CUSTOM_NAME, 8) = 'Usdollar' begin -- then
		set @CUSTOM_NAME = left(@CUSTOM_NAME, len(@CUSTOM_NAME)-8) + 'US Dollar';
	end else begin
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'CampaignLog'           , 'Campaign Log'            );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'CampaignTracker'       , 'Campaign Tracker'        );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'ContractType'          , 'Contract Type'           );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'CreditCard'            , 'Credit Card'             );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'EmailMan'              , 'Email Manager'           );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'EmailMarketing'        , 'Email Marketing'         );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'EmailTemplate'         , 'Email Template'          );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'iFrame'                , 'My Portal'               );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'InboundEmail'          , 'Inbound Email'           );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'KBDocument'            , 'Knowledgebase Document'  );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'KBTag'                 , 'Knowledgebase Tag'       );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'ProductCategories'     , 'Product Categories'      );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'ProductTemplates'      , 'Product Catalog'         );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'ProductType'           , 'Product Type'            );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'ProjectTask'           , 'Project Task'            );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'ProspectList'          , 'Prospect List'           );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'Prospect'              , 'Target'                  );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'SystemLog'             , 'System Log'              );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'TaxRate'               , 'Tax Rate'                );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'TeamNotice'            , 'Team Notice'             );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'UserLogin'             , 'User Login'              );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, ' List List'            , ' Lists'                  );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'ACLRoles'              , 'ACL Roles'               );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'ForumTopics'           , 'Forum Topics'            );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'SavedSearch'           , 'Saved Search'            );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'DynamicLayout'         , 'Dynamic Layout'          );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'QuotesLineItems'       , 'Quotes Line Items'       );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'SimpleStorage'         , 'Simple Storage'          );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'FlexiblePayments'      , 'Flexible Payments'       );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'SimpleStorage'         , 'Simple Storage'          );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'OrdersLineItems'       , 'Orders Line Items'       );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'InvoicesLineItems'     , 'Invoices Line Items'     );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'WorkflowTriggerShells' , 'Workflow Conditions'     );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'WorkflowActionShells'  , 'Workflow Actions'        );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'WorkflowAlertShells'   , 'Workflow Alerts'         );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'WorkflowAlertTemplates', 'Workflow Alert Templates');
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'DynamicButtons'        , 'Dynamic Buttons'         );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'EditCustomFields'      , 'Edit Custom Fields'      );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'PaymentGateway'        , 'Payment Gateway'         );
		set @CUSTOM_NAME = replace(@CUSTOM_NAME, 'FieldValidators'       , 'Field Validators'        );
	end -- if;
	return @CUSTOM_NAME;
  end
GO

Grant Execute on dbo.fnTERMINOLOGY_ConvertToTerm to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnTERMINOLOGY_Exists' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnTERMINOLOGY_Exists;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the MODULE_NAME to 25 to match the size in the MODULES table.
-- 01/19/2010 Paul.  Exclude LIST_ORDER from duplicate check as it is causing lots of duplicates. 
-- 03/06/2012 Paul.  Increase size of the NAME field so that it can include a date formula. 
Create Function dbo.fnTERMINOLOGY_Exists
	( @NAME              nvarchar(150)
	, @LANG              nvarchar(10)
	, @MODULE_NAME       nvarchar(25)
	, @LIST_NAME         nvarchar(50)
	, @LIST_ORDER        int
	)
returns bit
as
  begin
	declare @TermExist bit;
	set @TermExist = 0;
	if exists(select *
	            from TERMINOLOGY
	           where DELETED = 0
	             and (NAME        = @NAME        or (NAME        is null and @NAME        is null))
	             and (LANG        = @LANG        or (LANG        is null and @LANG        is null))
	             and (MODULE_NAME = @MODULE_NAME or (MODULE_NAME is null and @MODULE_NAME is null))
	             and (LIST_NAME   = @LIST_NAME   or (LIST_NAME   is null and @LIST_NAME   is null))
--	             and isnull(LIST_ORDER, 0) = isnull(@LIST_ORDER, 0)
	         ) begin -- then
		set @TermExist = 1;
	end -- if;
	return @TermExist;
  end
GO

Grant Execute on dbo.fnTERMINOLOGY_Exists to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnTERMINOLOGY_Lookup' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnTERMINOLOGY_Lookup;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 03/06/2012 Paul.  Increase size of the NAME field so that it can include a date formula. 
Create Function dbo.fnTERMINOLOGY_Lookup
	( @NAME              nvarchar(150)
	, @LANG              nvarchar(10)
	, @MODULE_NAME       nvarchar(25)
	, @LIST_NAME         nvarchar(50)
	)
returns nvarchar(2000)
as
  begin
	declare @DISPLAY_NAME nvarchar(max);
	if @LIST_NAME is not null begin -- then
		set @DISPLAY_NAME = (select top 1 DISPLAY_NAME
		                       from TERMINOLOGY
		                      where LANG        = @LANG
		                        and NAME        = @NAME
		                        and LIST_NAME   = @LIST_NAME
		                        and DELETED     = 0
		                    );
	end else if @MODULE_NAME is not null begin -- then
		set @DISPLAY_NAME = (select top 1 DISPLAY_NAME
		                       from TERMINOLOGY
		                      where LANG        = @LANG
		                        and NAME        = @NAME
		                        and MODULE_NAME = @MODULE_NAME
		                        and DELETED     = 0
		                    );
	end else begin
		set @DISPLAY_NAME = (select top 1 DISPLAY_NAME
		                       from TERMINOLOGY
		                      where LANG        = @LANG
		                        and NAME        = @NAME
		                        and MODULE_NAME is null
		                        and DELETED     = 0
		                    );
	end -- if;
	return @DISPLAY_NAME;
  end
GO

Grant Execute on dbo.fnTERMINOLOGY_Lookup to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnTermName' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnTermName;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/23/2017 Paul.  Module name can be 25 chars. 
Create Function dbo.fnTermName(@MODULE_NAME nvarchar(25), @LIST_NAME nvarchar(50), @NAME nvarchar(50))
returns nvarchar(150)
as
  begin
	declare @TERM_NAME nvarchar(200);
	if @LIST_NAME is null or @LIST_NAME = '' begin -- then
		set @TERM_NAME = isnull(@MODULE_NAME, N'') + N'.' + isnull(@NAME, N'');
	end else begin
		set @TERM_NAME = isnull(@MODULE_NAME, N'') + N'.' + isnull(@LIST_NAME, N'') + N'.' + isnull(@NAME, N'');
	end -- if;
	return @TERM_NAME;
  end
GO

Grant Execute on dbo.fnTermName to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnTimeHours' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnTimeHours;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnTimeHours(@VALUE datetime)
returns int
as
  begin
	return datepart(hh, @VALUE);
  end
GO

Grant Execute on dbo.fnTimeHours to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnTimeMinutes' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnTimeMinutes;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnTimeMinutes(@VALUE datetime)
returns int
as
  begin
	return datepart(mi, @VALUE);
  end
GO

Grant Execute on dbo.fnTimeMinutes to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnTimeRoundMinutes' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnTimeRoundMinutes;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnTimeRoundMinutes(@VALUE datetime, @MINUTE_DIVISOR int)
returns datetime
as
  begin
	declare @MINUTES      int;
	declare @SECONDS      int;
	declare @MILLISECONDS int;
	if @VALUE is null or @MINUTE_DIVISOR is null or @MINUTE_DIVISOR <= 0 begin -- then
		return null;
	end -- if;
	set @MINUTES      = datepart(minute     , @VALUE);
	set @SECONDS      = datepart(second     , @VALUE);
	set @MILLISECONDS = datepart(millisecond, @VALUE);
	return dateadd(minute, -(@MINUTES % @MINUTE_DIVISOR), dateadd(second, -@SECONDS, dateadd(millisecond, -@MILLISECONDS, @VALUE)));
  end
GO

Grant Execute on dbo.fnTimeRoundMinutes to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnTrim' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnTrim;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnTrim(@VALUE nvarchar(max))
returns nvarchar(max)
as
  begin
	return ltrim(rtrim(@VALUE));
  end
GO

Grant Execute on dbo.fnTrim to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnViewDateTime' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnViewDateTime;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnViewDateTime(@DATE_VALUE datetime, @TIME_VALUE datetime)
returns datetime
as
  begin
	-- 10/23/2005 Paul.  On SQL Server, we store the full datetime.
	return @DATE_VALUE;
  end
GO

Grant Execute on dbo.fnViewDateTime to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnXmlValue' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnXmlValue;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnXmlValue(@SEARCH nvarchar(max), @FIND nvarchar(60))
returns nvarchar(255)
as
  begin
	declare @BEGIN_TAG int;
	declare @END_TAG   int;
	declare @VALUE     nvarchar(255);
	set @BEGIN_TAG = charindex('<'  + @FIND + '>', @SEARCH);
	if @BEGIN_TAG > 0 begin -- then
		set @BEGIN_TAG = @BEGIN_TAG + len(@FIND) + 2;
		set @END_TAG   = charindex('</' + @FIND + '>', @SEARCH, @BEGIN_TAG);
		if @END_TAG > 0 and @END_TAG > @BEGIN_TAG begin -- then
			set @VALUE = substring(@SEARCH, @BEGIN_TAG, @END_TAG - @BEGIN_TAG);
		end -- if;
	end -- if;
	return @VALUE;
  end
GO

Grant Execute on dbo.fnXmlValue to public
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnDateAdd' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnDateAdd;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnDateAdd(@DATE_PART varchar(20), @INTERVAL int, @VALUE datetime)
returns datetime
as
  begin
	if @DATE_PART = 'year' begin -- then
		return dateadd(year, @INTERVAL, @VALUE);
	end else if @DATE_PART = 'quarter' begin -- then
		return dateadd(quarter, @INTERVAL, @VALUE);
	end else if @DATE_PART = 'month' begin -- then
		return dateadd(month, @INTERVAL, @VALUE);
	end else if @DATE_PART = 'week' begin -- then
		return dateadd(week, @INTERVAL, @VALUE);
	end else if @DATE_PART = 'day' begin -- then
		return dateadd(day, @INTERVAL, @VALUE);
	end else if @DATE_PART = 'hour' begin -- then
		return dateadd(hour, @INTERVAL, @VALUE);
	end else if @DATE_PART = 'minute' begin -- then
		return dateadd(minute, @INTERVAL, @VALUE);
	end else if @DATE_PART = 'second' begin -- then
		return dateadd(second, @INTERVAL, @VALUE);
	end -- if;
	return null;
  end
GO

Grant Execute on dbo.fnDateAdd to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnDateAdd_Time' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnDateAdd_Time;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnDateAdd_Time(@VALUE_TIME datetime, @VALUE_DATE datetime)
returns datetime
as
  begin
	return dbo.fnDateAdd_Minutes(dbo.fnTimeMinutes(@VALUE_TIME), dbo.fnDateAdd_Hours(dbo.fnTimeHours(@VALUE_TIME), @VALUE_DATE));
  end
GO

Grant Execute on dbo.fnDateAdd_Time to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnDatePart' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnDatePart;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnDatePart(@DATE_PART varchar(20), @VALUE datetime)
returns int
as
  begin
	if          @DATE_PART = 'year'        or @DATE_PART = 'yy' or @DATE_PART = 'yyyy' begin -- then
		return datepart(  year       ,    @VALUE);
	end else if @DATE_PART = 'quarter'     or @DATE_PART = 'qq' or @DATE_PART = 'q' begin -- then
		return datepart(  quarter    ,    @VALUE);
	end else if @DATE_PART = 'month'       or @DATE_PART = 'mm' or @DATE_PART = 'm' begin -- then
		return datepart(  month      ,    @VALUE);
	end else if @DATE_PART = 'dayofyear'   or @DATE_PART = 'dy' or @DATE_PART = 'y' begin -- then
		return datepart(  dayofyear  ,    @VALUE);
	end else if @DATE_PART = 'day'         or @DATE_PART = 'dd' or @DATE_PART = 'd' begin -- then
		return datepart(  day        ,    @VALUE);
	end else if @DATE_PART = 'week'        or @DATE_PART = 'ww' or @DATE_PART = 'wk' begin -- then
		return datepart(  week       ,    @VALUE);
	end else if @DATE_PART = 'weekday'     or @DATE_PART = 'dw' begin -- then
		return datepart(  weekday    ,    @VALUE);
	end else if @DATE_PART = 'hour'        or @DATE_PART = 'hh' begin -- then
		return datepart(  hour       ,    @VALUE);
	end else if @DATE_PART = 'minute'      or @DATE_PART = 'mi' or @DATE_PART = 'n' begin -- then
		return datepart(  minute     ,    @VALUE);
	end else if @DATE_PART = 'second'      or @DATE_PART = 'ss' or @DATE_PART = 's' begin -- then
		return datepart(  second     ,    @VALUE);
	end else if @DATE_PART = 'millisecond' or @DATE_PART = 'ms' begin -- then
		return datepart(  millisecond,    @VALUE);
	end -- if;
	return null;
  end
GO

Grant Execute on dbo.fnDatePart to public;
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnFormatPhone' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnFormatPhone;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnFormatPhone(@PHONE nvarchar(25))
returns nvarchar(25)
as
  begin
	declare @FORMATTED nvarchar(25);
	set @FORMATTED = dbo.fnNormalizePhone(@PHONE);
	if @FORMATTED is not null begin -- then
		if substring(@FORMATTED, 1, 1) = '1' and len(@FORMATTED) = 11 begin -- then
			if @FORMATTED like '1[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]' begin -- then
				set @FORMATTED = substring(@FORMATTED, 2, 10);
			end -- if;
		end -- if;
	
		-- 11/24/2017 Paul.  Any phone numbers without 10 characters are returned unmodified, except for trim. 
		if len(@FORMATTED) <> 10 begin -- then
			return ltrim(rtrim(@PHONE));
		end -- if;
	
		-- 11/24/2017 Paul.  Build US standard phone number. 
		set @FORMATTED = '(' + substring(@FORMATTED,1,3) + ') ' + substring(@FORMATTED, 4, 3) + '-' + substring(@FORMATTED, 7 ,4);
	end -- if;
	return @FORMATTED;
  end
GO

Grant Execute on dbo.fnFormatPhone to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnMonthOnly' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnMonthOnly;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnMonthOnly(@VALUE datetime)
returns datetime
as
  begin
	return dbo.fnDateAdd('day', 1 - dbo.fnDatePart('day', @VALUE), dbo.fnDateOnly(@VALUE));
  end
GO

Grant Execute on dbo.fnMonthOnly to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnQuarterOnly' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnQuarterOnly;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnQuarterOnly(@VALUE datetime)
returns nvarchar(10)
as
  begin
	return cast(year(@VALUE) as char(4)) + ' Q' + cast(datepart(quarter, @VALUE) as char(1));
  end
GO

Grant Execute on dbo.fnQuarterOnly to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnTEAMS_IsValidName' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnTEAMS_IsValidName;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnTEAMS_IsValidName(@ID uniqueidentifier, @NAME nvarchar(128))
returns bit
as
  begin
	declare @IsValid bit;
	set @IsValid = 1;
	if exists(select NAME
	            from dbo.TEAMS
	           where NAME = @NAME 
	             and DELETED   = 0
	             and (ID <> @ID or @ID is null)
	         ) begin -- then
		set @IsValid = 0;
	end -- if;
	return @IsValid;
  end
GO

Grant Execute on dbo.fnTEAMS_IsValidName to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnTimeOnly' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnTimeOnly;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- http://weblogs.sqlteam.com/jeffs/archive/2007/01/02/56079.aspx
Create Function dbo.fnTimeOnly(@VALUE datetime)
returns datetime
as
  begin
	return @VALUE - dbo.fnDateOnly(@VALUE);
  end
GO

Grant Execute on dbo.fnTimeOnly to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnUSERS_IsValidName' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnUSERS_IsValidName;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnUSERS_IsValidName(@ID uniqueidentifier, @USER_NAME nvarchar(20))
returns bit
as
  begin
	declare @IsValid bit;
	set @IsValid = 1;
	if exists(select USER_NAME
	            from dbo.USERS
	           where USER_NAME = @USER_NAME 
	             and USER_NAME is not null  -- 12/06/2005. Don't let an employee be treated as a duplicate. 
	             and DELETED   = 0
	             and (ID <> @ID or @ID is null)
	         ) begin -- then
		set @IsValid = 0;
	end -- if;
	return @IsValid;
  end
GO

Grant Execute on dbo.fnUSERS_IsValidName to public
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnWeekOnly' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnWeekOnly;
GO



/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Function dbo.fnWeekOnly(@VALUE datetime)
returns nvarchar(10)
as
  begin
	if datepart(week, @VALUE) >= 10 begin -- then
		return cast(year(@VALUE) as char(4)) + ' W'  + cast(datepart(week, @VALUE) as char(2));
	end -- if;
	return cast(year(@VALUE) as char(4)) + ' W0' + cast(datepart(week, @VALUE) as char(1));
  end
GO

Grant Execute on dbo.fnWeekOnly to public;
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnCronRun' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnCronRun;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- http://www.adminschoice.com/docs/crontab.htm
-- http://www.hccfl.edu/pollock/Unix/Crontab.htm
/*
Field Descriptions: 
	minute  hour  dayOfMonth  month  dayOfWeek
where:
	minute      values range from 0 to 59
	hour        values range from 0 to 23
	dayOfMonth  values range from 1 to 31
	month       values range from 1 to 12
	dayOfWeek   values range from 0 to 6, with 0 meaning Sunday 

Field Values: 
	NUM             A single value 
	NUM-NUM         A range of values 
	NUM,NUM-NUM,... A comma separated list of values or ranges (remember no spaces after commas!) 
	*               wildcard, meaning match all possible values 
*/
-- 12/31/2007 Paul.  Round the minutes down to the nearest divisor. 
-- We must round down the minutes because the current time will be round down. 
-- 01/01/2008 Paul.  Added lots of extra protection against entering an endless loop. 
-- 01/01/2008 Paul.  Incorporate failsafe counter.  
-- 08/26/2008 Paul.  Parameters are read-only in PostgreSQL, so @CRON and @MINUTE_DIVISOR need to be a local variable. 
Create Function dbo.fnCronRun(@CRON_INPUT nvarchar(100), @CURRENT_TIME datetime, @MINUTE_DIVISOR_INPUT int)
returns bit
as
  begin
	declare @CRON                     nvarchar(100);
	declare @MINUTE_DIVISOR           int;
	declare @CurrentPosR              int;
	declare @NextPosR                 int;
	declare @CRON_TEMP                nvarchar(100);
	declare @CRON_MONTH               nvarchar(100);
	declare @CRON_DAYOFMONTH          nvarchar(100);
	declare @CRON_DAYOFWEEK           nvarchar(100);
	declare @CRON_HOUR                nvarchar(100);
	declare @CRON_MINUTE              nvarchar(100);
	declare @CRON_VALUE               nvarchar(100);
	declare @CRON_VALUE_START         nvarchar(100);
	declare @CRON_VALUE_END           nvarchar(100);
	declare @CRON_VALUE_INT           int;
	declare @CRON_VALUE_START_INT     int;
	declare @CRON_VALUE_END_INT       int;
	-- 01/01/2008 Paul.  We need a failsafe int that will help ensure that a loop never exceed its limit.
	-- For example, the months loop should not exceed 12 iterations, a day loop should not exceed 31,
	-- an hour loop should not exceed 24 and a minute loop should not exceed 60. 
	declare @FAIL_SAFE_INT            int;

	declare @CURRENT_MONTH            int;
	declare @CURRENT_DAYOFMONTH       int;
	declare @CURRENT_LASTDAYOFMONTH   int;
	declare @CURRENT_WEEK             int;
	declare @CURRENT_DAYOFWEEK        int;
	declare @CURRENT_HOUR             int;
	declare @CURRENT_MINUTE           int;

	declare @MATCH_CURRENT_MONTH      bit;
	declare @MATCH_CURRENT_DAYOFMONTH bit;
	declare @MATCH_CURRENT_DAYOFWEEK  bit;
	declare @MATCH_CURRENT_HOUR       bit;
	declare @MATCH_CURRENT_MINUTE     bit;

	-- 08/26/2008 Paul.  Parameters are read-only in PostgreSQL, so @CRON and @MINUTE_DIVISOR need to be a local variable. 
	set @CRON           = @CRON_INPUT;
	set @MINUTE_DIVISOR = @MINUTE_DIVISOR_INPUT;
	-- 12/30/2007 Paul.  Exit early if everything is possible. 
	if charindex(' ', @CRON) > 0 begin -- then
		set @CRON = replace(@CRON, ' ', '');
		----print 'Remove spaces';
	end -- if;
	if @CURRENT_TIME is null begin -- then
		----print 'Current date/time not specified';
		return 0;
	end else if @CRON is null or @CRON = '' or @CRON = '*::*::*::*::*' begin -- then
		----print 'Current pattern matches everything';
		return 1;
	end -- if;
	if @MINUTE_DIVISOR is null or @MINUTE_DIVISOR < 1 begin -- then
		set @MINUTE_DIVISOR = 5;
	end -- if;
	--print 'CRON ' + @CRON;
	--print 'Current Time ' + convert(varchar(30), @CURRENT_TIME, 101) + ' ' + convert(varchar(30), @CURRENT_TIME, 114);

	-- 12/31/2007 Paul.  If the values are not specified, then assume everything. 
	set @CRON_MONTH      = '*';
	set @CRON_DAYOFMONTH = '*';
	set @CRON_DAYOFWEEK  = '*';
	set @CRON_HOUR       = '*';
	set @CRON_MINUTE     = '*';

	set @CurrentPosR = 1;
	-- Minute
	if @CurrentPosR <= len(@CRON) begin -- then
		set @NextPosR = charindex('::', @CRON,  @CurrentPosR);
		if @NextPosR = 0 or @NextPosR is null begin -- then
			set @NextPosR = len(@CRON) + 1;
		end -- if;
		set @CRON_MINUTE = substring(@CRON, @CurrentPosR, @NextPosR - @CurrentPosR);
		set @CurrentPosR = @NextPosR + 2;
	end -- if;
	-- Hour
	if @CurrentPosR <= len(@CRON) begin -- then
		set @NextPosR = charindex('::', @CRON,  @CurrentPosR);
		if @NextPosR = 0 or @NextPosR is null begin -- then
			set @NextPosR = len(@CRON) + 1;
		end -- if;
		set @CRON_HOUR = substring(@CRON, @CurrentPosR, @NextPosR - @CurrentPosR);
		set @CurrentPosR = @NextPosR + 2;
	end -- if;
	-- Day of Month
	if @CurrentPosR <= len(@CRON) begin -- then
		set @NextPosR = charindex('::', @CRON,  @CurrentPosR);
		if @NextPosR = 0 or @NextPosR is null begin -- then
			set @NextPosR = len(@CRON) + 1;
		end -- if;
		set @CRON_DAYOFMONTH = substring(@CRON, @CurrentPosR, @NextPosR - @CurrentPosR);
		set @CurrentPosR = @NextPosR + 2;
	end -- if;
	-- Month
	if @CurrentPosR <= len(@CRON) begin -- then
		set @NextPosR = charindex('::', @CRON,  @CurrentPosR);
		if @NextPosR = 0 or @NextPosR is null begin -- then
			set @NextPosR = len(@CRON) + 1;
		end -- if;
		set @CRON_MONTH = substring(@CRON, @CurrentPosR, @NextPosR - @CurrentPosR);
		set @CurrentPosR = @NextPosR + 2;
	end -- if;
	-- Day of Week
	if @CurrentPosR <= len(@CRON) begin -- then
		set @NextPosR = charindex('::', @CRON,  @CurrentPosR);
		if @NextPosR = 0 or @NextPosR is null begin -- then
			set @NextPosR = len(@CRON) + 1;
		end -- if;
		set @CRON_DAYOFWEEK = substring(@CRON, @CurrentPosR, @NextPosR - @CurrentPosR);
		set @CurrentPosR = @NextPosR + 2;
	end -- if;


	set @MATCH_CURRENT_MONTH = 1;
	set @CURRENT_MONTH = datepart(month, @CURRENT_TIME);
	--print 'Current Month      ' + cast(@CURRENT_MONTH as varchar(10));
	if @CRON_MONTH is not null and @CRON_MONTH <> '*' begin -- then
		set @CurrentPosR = 1;
		set @CRON_TEMP = @CRON_MONTH;
		set @MATCH_CURRENT_MONTH = 0;
		while @CurrentPosR <= len(@CRON_TEMP) and @MATCH_CURRENT_MONTH = 0 begin -- do
			set @NextPosR = charindex(',', @CRON_TEMP,  @CurrentPosR);
			if @NextPosR = 0 or @NextPosR is null begin -- then
				set @NextPosR = len(@CRON_TEMP) + 1;
			end -- if;
			set @CRON_VALUE = substring(@CRON_TEMP, @CurrentPosR, @NextPosR - @CurrentPosR);
			set @CurrentPosR = @NextPosR + 1;

			set @NextPosR = charindex('-', @CRON_VALUE);
			if @NextPosR is not null and @NextPosR > 0 begin -- then
				set @CRON_VALUE_START = substring(@CRON_VALUE, 1, @NextPosR - 1);
				set @CRON_VALUE_END   = substring(@CRON_VALUE, @NextPosR + 1, len(@CRON_VALUE) - @NextPosR);
				if @CRON_VALUE_START is not null and isnumeric(@CRON_VALUE_START) = 1 and @CRON_VALUE_END is not null and isnumeric(@CRON_VALUE_END) = 1 begin -- then
					set @CRON_VALUE_START_INT = cast(@CRON_VALUE_START as int);
					set @CRON_VALUE_END_INT   = cast(@CRON_VALUE_END   as int);
					----print '@CRON_VALUE_START = ' + cast(@CRON_VALUE_START_INT as varchar(10));
					----print '@CRON_VALUE_END   = ' + cast(@CRON_VALUE_END_INT   as varchar(10));
					if @CRON_VALUE_START_INT is not null and @CRON_VALUE_END_INT is not null begin -- then
						set @FAIL_SAFE_INT  = 0;
						set @CRON_VALUE_INT = @CRON_VALUE_START_INT;
						while @FAIL_SAFE_INT < 12 and @CRON_VALUE_INT <= @CRON_VALUE_END_INT and @MATCH_CURRENT_MONTH = 0 begin -- do
							if @CRON_VALUE_INT is not null and @CRON_VALUE_INT = @CURRENT_MONTH begin -- then
								--print '@CURRENT_MONTH between @CRON_VALUE_START_INT and @CRON_VALUE_END_INT';
								set @MATCH_CURRENT_MONTH = 1;
							end -- if;
							set @FAIL_SAFE_INT  = @FAIL_SAFE_INT  + 1;
							set @CRON_VALUE_INT = @CRON_VALUE_INT + 1;
						end -- while;
					end -- if;
				end -- if;
			end else begin
				if @CRON_VALUE is not null and isnumeric(@CRON_VALUE) = 1 begin -- then
					set @CRON_VALUE_INT = cast(@CRON_VALUE as int);
					----print '@CRON_VALUE_INT = ' + cast(@CRON_VALUE_INT as varchar(10));
					if @CRON_VALUE_INT is not null and @CRON_VALUE_INT = @CURRENT_MONTH begin -- then
						--print '@CRON_VALUE_INT = @CURRENT_MONTH';
						set @MATCH_CURRENT_MONTH = 1;
					end -- if;
				end -- if;
			end -- if;
		end -- while;
		-- 12/31/2007 Paul.  Exit early if we can confirm that there is no match.  This will save CPU cycles. 
		if @MATCH_CURRENT_MONTH = 0 begin -- then
			--print '@MATCH_CURRENT_MONTH failed';
			return 0;
		end -- if;
	end -- if;

	set @MATCH_CURRENT_DAYOFMONTH = 1;
	set @CURRENT_DAYOFMONTH = datepart(day, @CURRENT_TIME);
	--print 'Current DayOfMonth ' + cast(@CURRENT_DAYOFMONTH as varchar(10));
	-- 12/31/2007 Paul.  Last Day of Month seems expensive, so only compute if necessary, when value specified = 31. 
	--set @CURRENT_LASTDAYOFMONTH = datepart(day, dateadd(day, -1, dateadd(month, 1, dateadd(day, 1 - @CURRENT_DAYOFMONTH, @CURRENT_TIME))));
	----print 'Current LastDayOfMonth ' + cast(@CURRENT_LASTDAYOFMONTH as varchar(10));
	if @CRON_DAYOFMONTH is not null and @CRON_DAYOFMONTH <> '*' begin -- then
		set @CurrentPosR = 1;
		set @CRON_TEMP = @CRON_DAYOFMONTH;
		set @MATCH_CURRENT_DAYOFMONTH = 0;
		while @CurrentPosR <= len(@CRON_TEMP) and @MATCH_CURRENT_DAYOFMONTH = 0 begin -- do
			set @NextPosR = charindex(',', @CRON_TEMP,  @CurrentPosR);
			if @NextPosR = 0 or @NextPosR is null begin -- then
				set @NextPosR = len(@CRON_TEMP) + 1;
			end -- if;
			set @CRON_VALUE = substring(@CRON_TEMP, @CurrentPosR, @NextPosR - @CurrentPosR);
			set @CurrentPosR = @NextPosR + 1;

			set @NextPosR = charindex('-', @CRON_VALUE);
			if @NextPosR is not null and @NextPosR > 0 begin -- then
				set @CRON_VALUE_START = substring(@CRON_VALUE, 1, @NextPosR - 1);
				set @CRON_VALUE_END   = substring(@CRON_VALUE, @NextPosR + 1, len(@CRON_VALUE) - @NextPosR);
				if @CRON_VALUE_START is not null and isnumeric(@CRON_VALUE_START) = 1 and @CRON_VALUE_END is not null and isnumeric(@CRON_VALUE_END) = 1 begin -- then
					set @CRON_VALUE_START_INT = cast(@CRON_VALUE_START as int);
					set @CRON_VALUE_END_INT   = cast(@CRON_VALUE_END   as int);
					----print '@CRON_VALUE_START = ' + cast(@CRON_VALUE_START_INT as varchar(10));
					----print '@CRON_VALUE_END   = ' + cast(@CRON_VALUE_END_INT   as varchar(10));
					if @CRON_VALUE_START_INT is not null and @CRON_VALUE_END_INT is not null begin -- then
						set @FAIL_SAFE_INT  = 0;
						set @CRON_VALUE_INT = @CRON_VALUE_START_INT;
						while @FAIL_SAFE_INT < 31 and @CRON_VALUE_INT <= @CRON_VALUE_END_INT and @MATCH_CURRENT_DAYOFMONTH = 0 begin -- do
							-- 12/31/2007 Paul.  The value 31 has a special meaning, it means the last day of the month
							if @CRON_VALUE_INT is not null and @CRON_VALUE_INT = 31 begin -- then
								if @CURRENT_LASTDAYOFMONTH is null begin -- then
									set @CURRENT_LASTDAYOFMONTH = datepart(day, dateadd(day, -1, dateadd(month, 1, dateadd(day, 1 - @CURRENT_DAYOFMONTH, @CURRENT_TIME))));
									--print 'Current LastDayOfMonth ' + cast(@CURRENT_LASTDAYOFMONTH as varchar(10));
								end -- if;
								if @CRON_VALUE_INT > @CURRENT_LASTDAYOFMONTH begin -- then
									set @CRON_VALUE_INT = @CURRENT_LASTDAYOFMONTH;
								end -- if;
							end -- if;
							if @CRON_VALUE_INT is not null and @CRON_VALUE_INT = @CURRENT_DAYOFMONTH begin -- then
								--print '@CURRENT_DAYOFMONTH between @CRON_VALUE_START_INT and @CRON_VALUE_END_INT';
								set @MATCH_CURRENT_DAYOFMONTH = 1;
							end -- if;
							set @FAIL_SAFE_INT  = @FAIL_SAFE_INT  + 1;
							set @CRON_VALUE_INT = @CRON_VALUE_INT + 1;
						end -- while;
					end -- if;
				end -- if;
			end else begin
				if @CRON_VALUE is not null and isnumeric(@CRON_VALUE) = 1 begin -- then
					set @CRON_VALUE_INT = cast(@CRON_VALUE as int);
					----print '@CRON_VALUE_INT = ' + cast(@CRON_VALUE_INT as varchar(10));
					-- 12/31/2007 Paul.  The value 31 has a special meaning, it means the last day of the month
					if @CRON_VALUE_INT is not null and @CRON_VALUE_INT = 31 begin -- then
						if @CURRENT_LASTDAYOFMONTH is null begin -- then
							set @CURRENT_LASTDAYOFMONTH = datepart(day, dateadd(day, -1, dateadd(month, 1, dateadd(day, 1 - @CURRENT_DAYOFMONTH, @CURRENT_TIME))));
							--print 'Current LastDayOfMonth ' + cast(@CURRENT_LASTDAYOFMONTH as varchar(10));
						end -- if;
						if @CRON_VALUE_INT > @CURRENT_LASTDAYOFMONTH begin -- then
							set @CRON_VALUE_INT = @CURRENT_LASTDAYOFMONTH;
						end -- if;
					end -- if;
					if @CRON_VALUE_INT is not null and @CRON_VALUE_INT = @CURRENT_DAYOFMONTH begin -- then
						--print '@CRON_VALUE_INT = @CURRENT_DAYOFMONTH';
						set @MATCH_CURRENT_DAYOFMONTH = 1;
					end -- if;
				end -- if;
			end -- if;
		end -- while;
		-- 12/31/2007 Paul.  Exit early if we can confirm that there is no match.  This will save CPU cycles. 
		if @MATCH_CURRENT_DAYOFMONTH = 0 begin -- then
			--print '@MATCH_CURRENT_DAYOFMONTH failed';
			return 0;
		end -- if;
	end -- if;

	set @MATCH_CURRENT_DAYOFWEEK = 1;
	set @CURRENT_WEEK = datepart(week, @CURRENT_TIME);
	--print 'Current Week       ' + cast(@CURRENT_WEEK as varchar(10));
	set @CURRENT_DAYOFWEEK = datepart(weekday, @CURRENT_TIME) - 1;
	--print 'Current DayOfWeek  ' + cast(@CURRENT_DAYOFWEEK as varchar(10));
	if @CRON_DAYOFWEEK is not null and @CRON_DAYOFWEEK <> '*' begin -- then
		set @CurrentPosR = 1;
		set @CRON_TEMP = @CRON_DAYOFWEEK;
		set @MATCH_CURRENT_DAYOFWEEK = 0;
		while @CurrentPosR <= len(@CRON_TEMP) and @MATCH_CURRENT_DAYOFWEEK = 0 begin -- do
			set @NextPosR = charindex(',', @CRON_TEMP,  @CurrentPosR);
			if @NextPosR = 0 or @NextPosR is null begin -- then
				set @NextPosR = len(@CRON_TEMP) + 1;
			end -- if;
			set @CRON_VALUE = substring(@CRON_TEMP, @CurrentPosR, @NextPosR - @CurrentPosR);
			set @CurrentPosR = @NextPosR + 1;

			set @NextPosR = charindex('-', @CRON_VALUE);
			if @NextPosR is not null and @NextPosR > 0 begin -- then
				set @CRON_VALUE_START = substring(@CRON_VALUE, 1, @NextPosR - 1);
				set @CRON_VALUE_END   = substring(@CRON_VALUE, @NextPosR + 1, len(@CRON_VALUE) - @NextPosR);
				if @CRON_VALUE_START is not null and isnumeric(@CRON_VALUE_START) = 1 and @CRON_VALUE_END is not null and isnumeric(@CRON_VALUE_END) = 1 begin -- then
					set @CRON_VALUE_START_INT = cast(@CRON_VALUE_START as int);
					set @CRON_VALUE_END_INT   = cast(@CRON_VALUE_END   as int);
					----print '@CRON_VALUE_START = ' + cast(@CRON_VALUE_START_INT as varchar(10));
					----print '@CRON_VALUE_END   = ' + cast(@CRON_VALUE_END_INT   as varchar(10));
					if @CRON_VALUE_START_INT is not null and @CRON_VALUE_END_INT is not null begin -- then
						set @FAIL_SAFE_INT  = 0;
						set @CRON_VALUE_INT = @CRON_VALUE_START_INT;
						while @FAIL_SAFE_INT < 7 and @CRON_VALUE_INT <= @CRON_VALUE_END_INT and @MATCH_CURRENT_DAYOFWEEK = 0 begin -- do
							if @CRON_VALUE_INT is not null and @CRON_VALUE_INT = @CURRENT_DAYOFWEEK begin -- then
								--print '@CURRENT_DAYOFWEEK between @CRON_VALUE_START_INT and @CRON_VALUE_END_INT';
								set @MATCH_CURRENT_DAYOFWEEK = 1;
							end -- if;
							set @FAIL_SAFE_INT  = @FAIL_SAFE_INT  + 1;
							set @CRON_VALUE_INT = @CRON_VALUE_INT + 1;
						end -- while;
					end -- if;
				end -- if;
			end else begin
				if @CRON_VALUE is not null and isnumeric(@CRON_VALUE) = 1 begin -- then
					set @CRON_VALUE_INT = cast(@CRON_VALUE as int);
					----print '@CRON_VALUE_INT = ' + cast(@CRON_VALUE_INT as varchar(10));
					if @CRON_VALUE_INT is not null and @CRON_VALUE_INT = @CURRENT_DAYOFWEEK begin -- then
						--print '@CRON_VALUE_INT = @CURRENT_DAYOFWEEK';
						set @MATCH_CURRENT_DAYOFWEEK = 1;
					end -- if;
				end -- if;
			end -- if;
		end -- while;
		-- 12/31/2007 Paul.  Exit early if we can confirm that there is no match.  This will save CPU cycles. 
		if @MATCH_CURRENT_DAYOFWEEK = 0 begin -- then
			--print '@MATCH_CURRENT_DAYOFWEEK failed';
			return 0;
		end -- if;
	end -- if;

	set @MATCH_CURRENT_HOUR = 1;
	set @CURRENT_HOUR = datepart(hour, @CURRENT_TIME);
	--print 'Current Hour       ' + cast(@CURRENT_HOUR as varchar(10));
	if @CRON_HOUR is not null and @CRON_HOUR <> '*' begin -- then
		set @CurrentPosR = 1;
		set @CRON_TEMP = @CRON_HOUR;
		set @MATCH_CURRENT_HOUR = 0;
		while @CurrentPosR <= len(@CRON_TEMP) and @MATCH_CURRENT_HOUR = 0 begin -- do
			set @NextPosR = charindex(',', @CRON_TEMP,  @CurrentPosR);
			if @NextPosR = 0 or @NextPosR is null begin -- then
				set @NextPosR = len(@CRON_TEMP) + 1;
			end -- if;
			set @CRON_VALUE = substring(@CRON_TEMP, @CurrentPosR, @NextPosR - @CurrentPosR);
			set @CurrentPosR = @NextPosR + 1;

			set @NextPosR = charindex('-', @CRON_VALUE);
			if @NextPosR is not null and @NextPosR > 0 begin -- then
				set @CRON_VALUE_START = substring(@CRON_VALUE, 1, @NextPosR - 1);
				set @CRON_VALUE_END   = substring(@CRON_VALUE, @NextPosR + 1, len(@CRON_VALUE) - @NextPosR);
				if @CRON_VALUE_START is not null and isnumeric(@CRON_VALUE_START) = 1 and @CRON_VALUE_END is not null and isnumeric(@CRON_VALUE_END) = 1 begin -- then
					set @CRON_VALUE_START_INT = cast(@CRON_VALUE_START as int);
					set @CRON_VALUE_END_INT   = cast(@CRON_VALUE_END   as int);
					----print '@CRON_VALUE_START = ' + cast(@CRON_VALUE_START_INT as varchar(10));
					----print '@CRON_VALUE_END   = ' + cast(@CRON_VALUE_END_INT   as varchar(10));
					if @CRON_VALUE_START_INT is not null and @CRON_VALUE_END_INT is not null begin -- then
						set @FAIL_SAFE_INT  = 0;
						set @CRON_VALUE_INT = @CRON_VALUE_START_INT;
						while @FAIL_SAFE_INT < 24 and @CRON_VALUE_INT <= @CRON_VALUE_END_INT and @MATCH_CURRENT_HOUR = 0 begin -- do
							if @CRON_VALUE_INT is not null and @CRON_VALUE_INT = @CURRENT_HOUR begin -- then
								--print '@CURRENT_HOUR between @CRON_VALUE_START_INT and @CRON_VALUE_END_INT';
								set @MATCH_CURRENT_HOUR = 1;
							end -- if;
							set @FAIL_SAFE_INT  = @FAIL_SAFE_INT  + 1;
							set @CRON_VALUE_INT = @CRON_VALUE_INT + 1;
						end -- while;
					end -- if;
				end -- if;
			end else begin
				if @CRON_VALUE is not null and isnumeric(@CRON_VALUE) = 1 begin -- then
					set @CRON_VALUE_INT = cast(@CRON_VALUE as int);
					----print '@CRON_VALUE_INT = ' + cast(@CRON_VALUE_INT as varchar(10));
					if @CRON_VALUE_INT is not null and @CRON_VALUE_INT = @CURRENT_HOUR begin -- then
						--print '@CRON_VALUE_INT = @CURRENT_HOUR';
						set @MATCH_CURRENT_HOUR = 1;
					end -- if;
				end -- if;
			end -- if;
		end -- while;
		-- 12/31/2007 Paul.  Exit early if we can confirm that there is no match.  This will save CPU cycles. 
		if @MATCH_CURRENT_HOUR = 0 begin -- then
			--print '@MATCH_CURRENT_HOUR failed';
			return 0;
		end -- if;
	end -- if;

	set @MATCH_CURRENT_MINUTE = 1;
	set @CURRENT_MINUTE = datepart(minute, @CURRENT_TIME);
	--print 'Current Minute     ' + cast(@CURRENT_MINUTE as varchar(10));
	if @CRON_MINUTE is not null and @CRON_MINUTE <> '*' begin -- then
		set @CurrentPosR = 1;
		set @CRON_TEMP = @CRON_MINUTE;
		set @MATCH_CURRENT_MINUTE = 0;
		while @CurrentPosR <= len(@CRON_TEMP) and @MATCH_CURRENT_MINUTE = 0 begin -- do
			set @NextPosR = charindex(',', @CRON_TEMP,  @CurrentPosR);
			if @NextPosR = 0 or @NextPosR is null begin -- then
				set @NextPosR = len(@CRON_TEMP) + 1;
			end -- if;
			set @CRON_VALUE = substring(@CRON_TEMP, @CurrentPosR, @NextPosR - @CurrentPosR);
			set @CurrentPosR = @NextPosR + 1;

			set @NextPosR = charindex('-', @CRON_VALUE);
			if @NextPosR is not null and @NextPosR > 0 begin -- then
				set @CRON_VALUE_START = substring(@CRON_VALUE, 1, @NextPosR - 1);
				set @CRON_VALUE_END   = substring(@CRON_VALUE, @NextPosR + 1, len(@CRON_VALUE) - @NextPosR);
				if @CRON_VALUE_START is not null and isnumeric(@CRON_VALUE_START) = 1 and @CRON_VALUE_END is not null and isnumeric(@CRON_VALUE_END) = 1 begin -- then
					set @CRON_VALUE_START_INT = cast(@CRON_VALUE_START as int);
					set @CRON_VALUE_END_INT   = cast(@CRON_VALUE_END   as int);
					----print '@CRON_VALUE_START = ' + cast(@CRON_VALUE_START_INT as varchar(10));
					----print '@CRON_VALUE_END   = ' + cast(@CRON_VALUE_END_INT   as varchar(10));
					if @CRON_VALUE_START_INT is not null and @CRON_VALUE_END_INT is not null begin -- then
						set @FAIL_SAFE_INT  = 0;
						set @CRON_VALUE_INT = @CRON_VALUE_START_INT;
						while @FAIL_SAFE_INT < 60 and @CRON_VALUE_INT <= @CRON_VALUE_END_INT and @MATCH_CURRENT_MINUTE = 0 begin -- do
							-- 12/31/2007 Paul.  Round the minutes down to the nearest divisor. 
							set @CRON_VALUE_INT = @CRON_VALUE_INT - (@CRON_VALUE_INT % @MINUTE_DIVISOR);
							if @CRON_VALUE_INT is not null and @CRON_VALUE_INT = @CURRENT_MINUTE begin -- then
								--print '@CURRENT_MINUTE between @CRON_VALUE_START_INT and @CRON_VALUE_END_INT';
								set @MATCH_CURRENT_MINUTE = 1;
							end -- if;
							-- 01/01/2008 Paul.  It is extremely important that we increment by the amount of the minute divisor. 
							-- Otherwise we would enter an endless loop where we increment, but then round down. 
							set @FAIL_SAFE_INT  = @FAIL_SAFE_INT  + 1;
							set @CRON_VALUE_INT = @CRON_VALUE_INT + @MINUTE_DIVISOR;
						end -- while;
					end -- if;
				end -- if;
			end else begin
				if @CRON_VALUE is not null and isnumeric(@CRON_VALUE) = 1 begin -- then
					set @CRON_VALUE_INT = cast(@CRON_VALUE as int);
					-- 12/31/2007 Paul.  Round the minutes down to the nearest divisor. 
					set @CRON_VALUE_INT = @CRON_VALUE_INT - (@CRON_VALUE_INT % @MINUTE_DIVISOR);
					----print '@CRON_VALUE_INT = ' + cast(@CRON_VALUE_INT as varchar(10));
					if @CRON_VALUE_INT is not null and @CRON_VALUE_INT = @CURRENT_MINUTE begin -- then
						--print '@CRON_VALUE_INT = @CURRENT_MINUTE';
						set @MATCH_CURRENT_MINUTE = 1;
					end -- if;
				end -- if;
			end -- if;
		end -- while;
		-- 12/31/2007 Paul.  Exit early if we can confirm that there is no match.  This will save CPU cycles. 
		if @MATCH_CURRENT_MINUTE = 0 begin -- then
			--print '@MATCH_CURRENT_MINUTE failed';
			return 0;
		end -- if;
	end -- if;

	-- 12/31/2007 Paul.  We should have already exited if we do not match the current day/time.  The goal is to save CPU cycles. 
	----print 'Match Current Month      ' + cast(@MATCH_CURRENT_MONTH      as varchar(10));
	----print 'Match Current DayOfMonth ' + cast(@MATCH_CURRENT_DAYOFMONTH as varchar(10));
	----print 'Match Current DayOfWeek  ' + cast(@MATCH_CURRENT_DAYOFWEEK  as varchar(10));
	----print 'Match Current Hour       ' + cast(@MATCH_CURRENT_HOUR       as varchar(10));
	----print 'Match Current Minute     ' + cast(@MATCH_CURRENT_MINUTE     as varchar(10));
	--if @MATCH_CURRENT_MONTH = 0 or @MATCH_CURRENT_DAYOFMONTH = 0 or @MATCH_CURRENT_DAYOFWEEK = 0 or @MATCH_CURRENT_HOUR = 0 or @MATCH_CURRENT_MINUTE = 0 begin -- then
	--	----print 'At least one item did not match';
	--	return 0;
	--end -- if;

	--print 'CRON matched!';
	return 1;
  end
GO

-- minute  hour  dayOfMonth  month  dayOfWeek
--declare @NOW datetime;
--set @NOW = '12/31/2007 13:45';
--select dbo.fnTimeRoundMinutes(@NOW, 5)
--     , dbo.fnCronRun('40::*::*::11-12::*', dbo.fnTimeRoundMinutes(@NOW, 5), 5);

Grant Execute on dbo.fnCronRun to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fnDateSpecial' and ROUTINE_TYPE = 'FUNCTION')
	Drop Function dbo.fnDateSpecial;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 02/21/2011 Paul.  Add Tomorrow, Next Week, Next Month, Next Quarter, Next Year. 
Create Function dbo.fnDateSpecial(@NAME varchar(20))
returns datetime
as
  begin
	if @NAME = 'today' begin -- then
		return dbo.fnDateOnly(getdate());
	end else if @NAME = 'yesterday' begin -- then
		return dbo.fnDateAdd('day', -1, dbo.fnDateOnly(getdate()));
	end else if @NAME = 'tomorrow' begin -- then
		return dbo.fnDateAdd('day',  1, dbo.fnDateOnly(getdate()));
	end else if @NAME = 'this week' begin -- then
		return dbo.fnDateAdd('day', -(dbo.fnDatePart('weekday', getdate())-1), dbo.fnDateOnly(getdate()));
	end else if @NAME = 'last week' begin -- then
		return dbo.fnDateAdd('day', -(dbo.fnDatePart('weekday', getdate())-1)-7, dbo.fnDateOnly(getdate()));
	end else if @NAME = 'next week' begin -- then
		return dbo.fnDateAdd('day', -(dbo.fnDatePart('weekday', getdate())-1)+7, dbo.fnDateOnly(getdate()));
	end else if @NAME = 'this month' begin -- then
		return dbo.fnDateAdd('day', -(dbo.fnDatePart('day', getdate())-1), dbo.fnDateOnly(getdate()));
	end else if @NAME = 'last month' begin -- then
		return dbo.fnDateAdd('month', -1, dbo.fnDateAdd('day', -(dbo.fnDatePart('day', getdate())-1), dbo.fnDateOnly(getdate())));
	end else if @NAME = 'next month' begin -- then
		return dbo.fnDateAdd('month',  1, dbo.fnDateAdd('day', -(dbo.fnDatePart('day', getdate())-1), dbo.fnDateOnly(getdate())));
	end else if @NAME = 'this quarter' begin -- then
		return dateadd(qq, datediff(qq, 0, getdate()),  0);
	end else if @NAME = 'last quarter' begin -- then
		return dbo.fnDateAdd('month', -3, dateadd(qq, datediff(qq, 0, getdate()),  0));
	end else if @NAME = 'next quarter' begin -- then
		return dbo.fnDateAdd('month',  3, dateadd(qq, datediff(qq, 0, getdate()),  0));
	end else if @NAME = 'this year' begin -- then
		return dbo.fnDateAdd('month', -(dbo.fnDatePart('month', getdate())-1), dbo.fnDateAdd('day', -(dbo.fnDatePart('day', getdate())-1), dbo.fnDateOnly(getdate())));
	end else if @NAME = 'last year' begin -- then
		return dbo.fnDateAdd('year', -1, dbo.fnDateAdd('month', -(dbo.fnDatePart('month', getdate())-1), dbo.fnDateAdd('day', -(dbo.fnDatePart('day', getdate())-1), dbo.fnDateOnly(getdate()))));
	end else if @NAME = 'next year' begin -- then
		return dbo.fnDateAdd('year',  1, dbo.fnDateAdd('month', -(dbo.fnDatePart('month', getdate())-1), dbo.fnDateAdd('day', -(dbo.fnDatePart('day', getdate())-1), dbo.fnDateOnly(getdate()))));
	end -- if;
	return null;
  end
GO

/*
select dbo.fnDateSpecial('today'       ) as Today
     , dbo.fnDateSpecial('yesterday'   ) as Yesterday
     , dbo.fnDateSpecial('this week'   ) as ThisWeek
     , dbo.fnDateSpecial('last week'   ) as LastWeek
     , dbo.fnDateSpecial('this month'  ) as ThisMonth
     , dbo.fnDateSpecial('last month'  ) as LastMonth
     , dbo.fnDateSpecial('this quarter') as ThisQuarter
     , dbo.fnDateSpecial('last quarter') as LastQuarter
     , dbo.fnDateSpecial('this year'   ) as ThisYear
     , dbo.fnDateSpecial('last year'   ) as LastYear
*/

Grant Execute on dbo.fnDateSpecial to public;
GO








if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSqlColumns')
	Drop View dbo.vwSqlColumns;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/29/2007 Paul.  We should make sure to exclude the timestamp field as it would be used for replication. 
-- 09/07/2008 Paul.  Skip S for system and IT for information. 
-- 02/18/2009 Paul.  We need to know if the column is an identity so the workflow engine can avoid updating it.
-- 09/03/2009 Paul.  Add IsNullable for the ModuleBuilder. 
-- 09/14/2009 Paul.  Convert to use catalog views supported by Azure. 
-- http://msdn.microsoft.com/en-us/library/ee336238.aspx
-- 09/15/2009 Paul.  Use actual max of nvarchar(max) field. 
-- 09/15/2009 Paul.  Azure does not like the multi-part names in the output columns. 
-- Deprecated feature 'More than two-part column name' is not supported in this version of SQL Server.
-- 12/13/2009 Paul.  The numeric type (108) is functionally equivalent to the decimal. 
-- 10/26/2010 Peter.  Add support for smallint.
-- 01/10/2014 Paul.  Add smalldatetime to support a customer customization. 
-- 09/22/2016 Paul.  Manually specify default collation to ease migration to Azure
-- 01/22/2020 Paul.  A customer is using the "date" type. 
-- 02/11/2023 Paul.  Add support for DataTable using INFORMATION_SCHEMA. 
Create View dbo.vwSqlColumns
as
select objects.name  collate database_default          as ObjectName
     , objects.type  collate database_default          as ObjectType
     , columns.name  collate database_default          as ColumnName
     , columns.column_id      as colid
     , columns.system_type_id as xtype
     , columns.system_type_id as type
     , (case when columns.max_length     =  -1 then 1073741823
             when columns.system_type_id = 231 then columns.max_length/2
             when columns.system_type_id =  99 then 1073741823
             else columns.max_length
        end
       ) as length
     , columns.max_length
     , columns.precision      as prec
     , cast(0 as bit)             as cdefault
     , cast(0 as bit)             as isoutparam
     , (case when columns.system_type_id =  36 then N'uniqueidentifier'
             when columns.system_type_id =  48 then N'tinyint'
             when columns.system_type_id =  56 then N'int'
             when columns.system_type_id =  52 then N'smallint'
             when columns.system_type_id = 127 then N'bigint'
             when columns.system_type_id =  59 then N'real'
             when columns.system_type_id =  62 then N'float('    + cast(columns.precision    as varchar) + N')'
             when columns.system_type_id =  60 then N'money'
             when columns.system_type_id = 104 then N'bit'
             when columns.system_type_id = 175 then N'char('     + cast(columns.max_length   as varchar) + N')'
             when columns.system_type_id = 167 then N'varchar('  + (case max_length when -1 then 'max' else cast(columns.max_length   as varchar) end) + N')'
             when columns.system_type_id = 231 then N'nvarchar(' + (case max_length when -1 then 'max' else cast(columns.max_length/2 as varchar) end) + N')'
             when columns.system_type_id = 239 then N'nchar('    + cast(columns.max_length/2 as varchar) + N')'
             when columns.system_type_id =  35 then N'text'
             when columns.system_type_id =  99 then N'ntext'
             when columns.system_type_id =  40 then N'date'
             when columns.system_type_id =  61 then N'datetime'
             when columns.system_type_id =  58 then N'smalldatetime'
             when columns.system_type_id =  34 then N'image'
             when columns.system_type_id = 106 then N'decimal('  + cast(columns.precision  as varchar) + N', ' + cast(columns.scale as varchar) + N')'
             when columns.system_type_id = 108 then N'decimal('  + cast(columns.precision  as varchar) + N', ' + cast(columns.scale as varchar) + N')'
             when columns.system_type_id = 165 then N'varbinary('+ (case max_length when -1 then 'max' else cast(columns.max_length as varchar) end) + N')'
             when columns.system_type_id = 173 then N'binary('   + cast(columns.max_length as varchar) + N')'
        end
       ) as ColumnType
     , (case when columns.system_type_id =  36 then N'SqlDbType.UniqueIdentifier'
             when columns.system_type_id =  48 then N'SqlDbType.TinyInt'
             when columns.system_type_id =  56 then N'SqlDbType.Int'
             when columns.system_type_id =  52 then N'SqlDbType.SmallInt'
             when columns.system_type_id = 127 then N'SqlDbType.BigInt'
             when columns.system_type_id =  59 then N'SqlDbType.Real'
             when columns.system_type_id =  62 then N'SqlDbType.Real'
             when columns.system_type_id =  60 then N'SqlDbType.Money'
             when columns.system_type_id = 104 then N'SqlDbType.Bit'
             when columns.system_type_id = 175 then N'SqlDbType.Char'
             when columns.system_type_id = 167 then N'SqlDbType.VarChar'
             when columns.system_type_id = 231 then N'SqlDbType.NVarChar'
             when columns.system_type_id = 239 then N'SqlDbType.NChar'
             when columns.system_type_id =  35 then N'SqlDbType.Text'
             when columns.system_type_id =  99 then N'SqlDbType.NText'
             when columns.system_type_id =  40 then N'SqlDbType.DateTime'
             when columns.system_type_id =  61 then N'SqlDbType.DateTime'
             when columns.system_type_id =  58 then N'SqlDbType.DateTime'
             when columns.system_type_id =  34 then N'SqlDbType.VarBinary'
             when columns.system_type_id = 106 then N'SqlDbType.Real'
             when columns.system_type_id = 108 then N'SqlDbType.Real'
             when columns.system_type_id = 165 then N'SqlDbType.VarBinary'
             when columns.system_type_id = 173 then N'SqlDbType.Binary'
        end
       ) as SqlDbType
     -- 01/24/2006 Paul.  A severe error occurred on the current command. The results, if any, should be discarded. 
     -- MS03-031 security patch causes this error because of stricter datatype processing.  
     -- http://www.microsoft.com/technet/security/bulletin/MS03-031.mspx.
     -- http://support.microsoft.com/kb/827366/
     , (case when columns.system_type_id =  36 then N'Guid'
             when columns.system_type_id =  48 then N'short'
             when columns.system_type_id =  56 then N'Int32'
             when columns.system_type_id =  52 then N'Int16'
             when columns.system_type_id = 127 then N'Int64'
             when columns.system_type_id =  59 then N'float'
             when columns.system_type_id =  62 then N'float'
             when columns.system_type_id =  60 then N'decimal'
             when columns.system_type_id = 104 then N'bool'
             when columns.system_type_id = 175 then N'ansistring'
             when columns.system_type_id = 167 then N'ansistring'
             when columns.system_type_id = 231 then N'string'
             when columns.system_type_id = 239 then N'string'
             when columns.system_type_id =  35 then N'string'
             when columns.system_type_id =  99 then N'string'
             when columns.system_type_id =  40 then N'DateTime'
             when columns.system_type_id =  61 then N'DateTime'
             when columns.system_type_id =  58 then N'DateTime'
             when columns.system_type_id =  34 then N'byte[]'
             when columns.system_type_id = 106 then N'float'
             when columns.system_type_id = 108 then N'float'
             when columns.system_type_id = 165 then N'byte[]'
             when columns.system_type_id = 173 then N'byte[]'
        end
       ) as CsType
     , (case when columns.system_type_id =  36 then N'g'
             when columns.system_type_id =  48 then N'n'
             when columns.system_type_id =  56 then N'n'
             when columns.system_type_id =  52 then N'n'
             when columns.system_type_id = 127 then N'l'
             when columns.system_type_id =  59 then N'fl'
             when columns.system_type_id =  62 then N'fl'
             when columns.system_type_id =  60 then N'd'
             when columns.system_type_id = 104 then N'b'
             when columns.system_type_id = 175 then N's'
             when columns.system_type_id = 167 then N's'
             when columns.system_type_id = 231 then N's'
             when columns.system_type_id = 239 then N's'
             when columns.system_type_id =  35 then N's'
             when columns.system_type_id =  99 then N's'
             when columns.system_type_id =  40 then N'dt'
             when columns.system_type_id =  61 then N'dt'
             when columns.system_type_id =  58 then N'dt'
             when columns.system_type_id =  34 then N'by'
             when columns.system_type_id = 106 then N'fl'
             when columns.system_type_id = 108 then N'fl'
             when columns.system_type_id = 165 then N'bin'
             when columns.system_type_id = 173 then N'bin'
        end
       ) as CsPrefix
     , columns.is_identity as IsIdentity
     , columns.is_nullable as IsNullable
  from      sys.objects         objects
 inner join sys.columns         columns
         on columns.object_id = objects.object_id
 where objects.name <> 'dtproperties'
   and objects.type in ('U', 'V')
   and columns.system_type_id <> 189 -- timestamp
union all
select procedures.name           as ObjectName
     , procedures.type           as ObjectType
     , parameters.name           as ColumnName
     , parameters.parameter_id   as colid
     , parameters.system_type_id as xtype
     , parameters.system_type_id as type
     , (case when parameters.max_length     =  -1 then 100*1024*1024
             when parameters.system_type_id = 231 then parameters.max_length/2
             when parameters.system_type_id =  99 then 100*1024*1024  -- Set maximum file upload size to 100M
             else parameters.max_length
        end
       ) as length
     , parameters.max_length
     , parameters.precision      as prec
     , has_default_value             as cdefault
     , is_output                     as isoutparam
     , (case when parameters.system_type_id =  36 then N'uniqueidentifier'
             when parameters.system_type_id =  48 then N'tinyint'
             when parameters.system_type_id =  56 then N'int'
             when parameters.system_type_id =  52 then N'smallint'
             when parameters.system_type_id = 127 then N'bigint'
             when parameters.system_type_id =  59 then N'real'
             when parameters.system_type_id =  62 then N'float('    + cast(parameters.precision    as varchar) + N')'
             when parameters.system_type_id =  60 then N'money'
             when parameters.system_type_id = 104 then N'bit'
             when parameters.system_type_id = 175 then N'char('     + cast(parameters.max_length   as varchar) + N')'
             when parameters.system_type_id = 167 then N'varchar('  + (case max_length when -1 then 'max' else cast(parameters.max_length   as varchar) end) + N')'
             when parameters.system_type_id = 231 then N'nvarchar(' + (case max_length when -1 then 'max' else cast(parameters.max_length/2 as varchar) end) + N')'
             when parameters.system_type_id = 239 then N'nchar('    + cast(parameters.max_length/2 as varchar) + N')'
             when parameters.system_type_id =  35 then N'text'
             when parameters.system_type_id =  99 then N'ntext'
             when parameters.system_type_id =  40 then N'date'
             when parameters.system_type_id =  61 then N'datetime'
             when parameters.system_type_id =  58 then N'datetime'
             when parameters.system_type_id =  34 then N'image'
             when parameters.system_type_id = 106 then N'decimal('  + cast(parameters.precision  as varchar) + N', ' + cast(parameters.scale as varchar) + N')'
             when parameters.system_type_id = 108 then N'decimal('  + cast(parameters.precision  as varchar) + N', ' + cast(parameters.scale as varchar) + N')'
             when parameters.system_type_id = 165 then N'varbinary('+ (case max_length when -1 then 'max' else cast(parameters.max_length as varchar) end) + N')'
             when parameters.system_type_id = 173 then N'binary('   + cast(parameters.max_length as varchar) + N')'
        end
       ) as ColumnType
     , (case when parameters.system_type_id =  36 then N'SqlDbType.UniqueIdentifier'
             when parameters.system_type_id =  48 then N'SqlDbType.TinyInt'
             when parameters.system_type_id =  56 then N'SqlDbType.Int'
             when parameters.system_type_id =  52 then N'SqlDbType.SmallInt'
             when parameters.system_type_id = 127 then N'SqlDbType.BigInt'
             when parameters.system_type_id =  59 then N'SqlDbType.Real'
             when parameters.system_type_id =  62 then N'SqlDbType.Real'
             when parameters.system_type_id =  60 then N'SqlDbType.Money'
             when parameters.system_type_id = 104 then N'SqlDbType.Bit'
             when parameters.system_type_id = 175 then N'SqlDbType.Char'
             when parameters.system_type_id = 167 then N'SqlDbType.VarChar'
             when parameters.system_type_id = 231 then N'SqlDbType.NVarChar'
             when parameters.system_type_id = 239 then N'SqlDbType.NChar'
             when parameters.system_type_id =  35 then N'SqlDbType.Text'
             when parameters.system_type_id =  99 then N'SqlDbType.NText'
             when parameters.system_type_id =  40 then N'SqlDbType.DateTime'
             when parameters.system_type_id =  61 then N'SqlDbType.DateTime'
             when parameters.system_type_id =  58 then N'SqlDbType.DateTime'
             when parameters.system_type_id =  34 then N'SqlDbType.VarBinary'
             when parameters.system_type_id = 106 then N'SqlDbType.Real'
             when parameters.system_type_id = 108 then N'SqlDbType.Real'
             when parameters.system_type_id = 165 then N'SqlDbType.VarBinary'
             when parameters.system_type_id = 173 then N'SqlDbType.Binary'
        end
       ) as SqlDbType
     -- 01/24/2006 Paul.  A severe error occurred on the current command. The results, if any, should be discarded. 
     -- MS03-031 security patch causes this error because of stricter datatype processing.  
     -- http://www.microsoft.com/technet/security/bulletin/MS03-031.mspx.
     -- http://support.microsoft.com/kb/827366/
     , (case when parameters.system_type_id =  36 then N'Guid'
             when parameters.system_type_id =  48 then N'short'
             when parameters.system_type_id =  56 then N'Int32'
             when parameters.system_type_id =  52 then N'Int16'
             when parameters.system_type_id = 127 then N'Int64'
             when parameters.system_type_id =  59 then N'float'
             when parameters.system_type_id =  62 then N'float'
             when parameters.system_type_id =  60 then N'decimal'
             when parameters.system_type_id = 104 then N'bool'
             when parameters.system_type_id = 175 then N'ansistring'
             when parameters.system_type_id = 167 then N'ansistring'
             when parameters.system_type_id = 231 then N'string'
             when parameters.system_type_id = 239 then N'string'
             when parameters.system_type_id =  35 then N'string'
             when parameters.system_type_id =  99 then N'string'
             when parameters.system_type_id =  40 then N'DateTime'
             when parameters.system_type_id =  61 then N'DateTime'
             when parameters.system_type_id =  58 then N'DateTime'
             when parameters.system_type_id =  34 then N'byte[]'
             when parameters.system_type_id = 106 then N'float'
             when parameters.system_type_id = 108 then N'float'
             when parameters.system_type_id = 165 then N'byte[]'
             when parameters.system_type_id = 173 then N'byte[]'
             when SCHEMA_PARAMETERS.DATA_TYPE = 'table type' then 'DataTable'
        end
       ) as CsType
     , (case when parameters.system_type_id =  36 then N'g'
             when parameters.system_type_id =  48 then N'n'
             when parameters.system_type_id =  56 then N'n'
             when parameters.system_type_id =  52 then N'n'
             when parameters.system_type_id = 127 then N'l'
             when parameters.system_type_id =  59 then N'fl'
             when parameters.system_type_id =  62 then N'fl'
             when parameters.system_type_id =  60 then N'd'
             when parameters.system_type_id = 104 then N'b'
             when parameters.system_type_id = 175 then N's'
             when parameters.system_type_id = 167 then N's'
             when parameters.system_type_id = 231 then N's'
             when parameters.system_type_id = 239 then N's'
             when parameters.system_type_id =  35 then N's'
             when parameters.system_type_id =  99 then N's'
             when parameters.system_type_id =  40 then N'dt'
             when parameters.system_type_id =  61 then N'dt'
             when parameters.system_type_id =  58 then N'dt'
             when parameters.system_type_id =  34 then N'by'
             when parameters.system_type_id = 106 then N'fl'
             when parameters.system_type_id = 108 then N'fl'
             when parameters.system_type_id = 165 then N'bin'
             when parameters.system_type_id = 173 then N'bin'
             when SCHEMA_PARAMETERS.DATA_TYPE = 'table type' then 'tbl'
        end
       ) as CsPrefix
     , cast(null as bit) as IsIdentity
     , cast(1    as bit) as IsNullable
  from      sys.procedures         procedures
 inner join sys.parameters         parameters
         on parameters.object_id = procedures.object_id
 inner join INFORMATION_SCHEMA.PARAMETERS SCHEMA_PARAMETERS
         on SCHEMA_PARAMETERS.SPECIFIC_NAME = procedures.name
        and SCHEMA_PARAMETERS.PARAMETER_NAME = parameters.name
 where procedures.type = 'P'
   and parameters.system_type_id <> 189 -- timestamp

GO

Grant Select on dbo.vwSqlColumns to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSqlForeignKeys')
	Drop View dbo.vwSqlForeignKeys;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwSqlForeignKeys
as
select TABLE_CONSTRAINTS.CONSTRAINT_NAME    as CONSTRAINT_NAME
     , TABLE_CONSTRAINTS.TABLE_SCHEMA       as TABLE_SCHEMA
     , TABLE_CONSTRAINTS.TABLE_NAME         as TABLE_NAME 
     , CONSTRAINT_COLUMN_USAGE.COLUMN_NAME  as COLUMN_NAME
     , PRIMARY_KEYS.TABLE_SCHEMA            as REFERENCED_TABLE_SCHEMA
     , PRIMARY_KEYS.TABLE_NAME              as REFERENCED_TABLE_NAME
     , PRIMARY_COLUMN_USAGE.COLUMN_NAME     as REFERENCED_COLUMN_NAME
  from      INFORMATION_SCHEMA.TABLE_CONSTRAINTS         TABLE_CONSTRAINTS
 inner join INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE   CONSTRAINT_COLUMN_USAGE
         on CONSTRAINT_COLUMN_USAGE.CONSTRAINT_NAME    = TABLE_CONSTRAINTS.CONSTRAINT_NAME
 inner join INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS   REFERENTIAL_CONSTRAINTS
         on REFERENTIAL_CONSTRAINTS.CONSTRAINT_NAME    = TABLE_CONSTRAINTS.CONSTRAINT_NAME
 inner join INFORMATION_SCHEMA.TABLE_CONSTRAINTS         PRIMARY_KEYS
         on PRIMARY_KEYS.CONSTRAINT_NAME               = REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_NAME
        and PRIMARY_KEYS.CONSTRAINT_TYPE               = 'PRIMARY KEY'
 inner join INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE   PRIMARY_COLUMN_USAGE
         on PRIMARY_COLUMN_USAGE.CONSTRAINT_NAME       = PRIMARY_KEYS.CONSTRAINT_NAME
 where TABLE_CONSTRAINTS.CONSTRAINT_TYPE = 'FOREIGN KEY'



GO


Grant Select on dbo.vwSqlForeignKeys to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSqlProcedures')
	Drop View dbo.vwSqlProcedures;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/08/2009 Paul.  Simplify migration to Azura by using INFORMATION_SCHEMA. 
Create View dbo.vwSqlProcedures
as
select ROUTINE_NAME as name 
  from INFORMATION_SCHEMA.ROUTINES
 where ROUTINE_TYPE = 'PROCEDURE'
   and ROUTINE_NAME like N'sp%'


GO

Grant Select on dbo.vwSqlProcedures to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSqlTableDependencies')
	Drop View dbo.vwSqlTableDependencies;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwSqlTableDependencies
as
select TABLE_NAME                               as NAME
     , dbo.fnSqlDependentLevel(TABLE_NAME, 'U') as DEPENDENCIES
  from INFORMATION_SCHEMA.TABLES
 where TABLE_TYPE = 'BASE TABLE'
GO


Grant Select on dbo.vwSqlTableDependencies to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSqlTables')
	Drop View dbo.vwSqlTables;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/16/2008 Paul.  Simplify conversion to Oracle. 
-- 09/12/2008 Paul.  We need to exclude system tables, such as sysdiagrams. 
-- 09/22/2016 Paul.  Manually specify default collation to ease migration to Azure
Create View dbo.vwSqlTables
as
select TABLE_NAME  collate database_default  as TABLE_NAME
  from INFORMATION_SCHEMA.TABLES
 where TABLE_TYPE = N'BASE TABLE'
   and TABLE_NAME not in (N'dtproperties', N'sysdiagrams')
GO


Grant Select on dbo.vwSqlTables to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSqlViews')
	Drop View dbo.vwSqlViews;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/26/2016 Paul.  Manually specify default collation to ease migration to Azure
Create View dbo.vwSqlViews
as
select TABLE_NAME  collate database_default  as VIEW_NAME
  from INFORMATION_SCHEMA.VIEWS
GO


Grant Select on dbo.vwSqlViews to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSqlTablesBase')
	Drop View dbo.vwSqlTablesBase;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 05/01/2009 Paul.  We need to isolate tables that are non CRM tables. 
-- 09/08/2009 Paul.  Azura requires the use of aliases when dealing with INFORMATION_SCHEMA. 
-- 09/22/2016 Paul.  Manually specify default collation to ease migration to Azure
Create View dbo.vwSqlTablesBase
as
select TABLES.TABLE_NAME  collate database_default  as TABLE_NAME
  from      INFORMATION_SCHEMA.TABLES   TABLES
 inner join INFORMATION_SCHEMA.COLUMNS  COLUMNS
         on COLUMNS.TABLE_NAME        = TABLES.TABLE_NAME
 where TABLES.TABLE_TYPE = N'BASE TABLE'
   and TABLES.TABLE_NAME   not in (N'dtproperties', N'sysdiagrams')
   and COLUMNS.COLUMN_NAME in (N'ID', N'ID_C')
   and COLUMNS.DATA_TYPE   = N'uniqueidentifier'
GO


Grant Select on dbo.vwSqlTablesBase to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSqlTablesCachedData')
	Drop View dbo.vwSqlTablesCachedData;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 03/09/2016 Paul.  Change from terminology payment_types_dom to PaymentTypes list for QuickBooks Online. 
Create View dbo.vwSqlTablesCachedData
as
select TABLE_NAME
  from vwSqlTables
 where TABLE_NAME in
( N'CONTRACT_TYPES'
, N'CURRENCIES'
, N'FORUM_TOPICS'
, N'FORUMS'
, N'INBOUND_EMAILS'
, N'MANUFACTURERS'
, N'PRODUCT_CATEGORIES'
, N'PRODUCT_TYPES'
, N'RELEASES'
, N'SHIPPERS'
, N'TAX_RATES'
, N'TEAMS'
, N'USERS'
, N'PAYMENT_TYPES'
, N'PAYMENT_TERMS'
)
GO


Grant Select on dbo.vwSqlTablesCachedData to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSqlTablesCachedSystem')
	Drop View dbo.vwSqlTablesCachedSystem;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/24/2009 Paul.  Add the DASHLETS tables so that they are not audited. 
-- 01/17/2010 Paul.  Add ACL Fields. 
-- 12/04/2010 Paul.  Add PAYMENT_GATEWAYS, DISCOUNTS and RULES. 
-- 05/30/2014 Paul.  Add EDITVIEWS_RELATIONSHIPS. 
-- 12/17/2017 Paul.  Add MODULES_ARCHIVE_RELATED. 
-- 07/25/2019 Paul.  Add REACT_CUSTOM_VIEWS. 
Create View dbo.vwSqlTablesCachedSystem
as
select TABLE_NAME
  from vwSqlTables
 where TABLE_NAME in
( N'ACL_ACTIONS'
, N'ACL_FIELDS'
, N'ACL_FIELDS_ALIASES'
, N'ACL_ROLES'
, N'ACL_ROLES_ACTIONS'
, N'ACL_ROLES_USERS'
, N'CONFIG'
, N'CUSTOM_FIELDS'
, N'DASHLETS'
, N'DASHLETS_USERS'
, N'DETAILVIEWS'
, N'DETAILVIEWS_FIELDS'
, N'DETAILVIEWS_RELATIONSHIPS'
, N'DISCOUNTS'
, N'DYNAMIC_BUTTONS'
, N'EDITVIEWS'
, N'EDITVIEWS_FIELDS'
, N'EDITVIEWS_RELATIONSHIPS'
, N'FIELDS_META_DATA'
, N'GRIDVIEWS'
, N'GRIDVIEWS_COLUMNS'
, N'LANGUAGES'
, N'MODULES'
, N'MODULES_ARCHIVE_RELATED'
, N'PAYMENT_GATEWAYS'
, N'REACT_CUSTOM_VIEWS'
, N'RELATIONSHIPS'
, N'RULES'
, N'SHORTCUTS'
, N'TERMINOLOGY'
, N'TERMINOLOGY_ALIASES'
, N'TIMEZONES'
)
GO


Grant Select on dbo.vwSqlTablesCachedSystem to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSqlVersion')
	Drop View dbo.vwSqlVersion;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwSqlVersion
as
select rtrim(substring(@@version, 1, charindex(char(10), @@version)-1)) as Version

GO

Grant Select on dbo.vwSqlVersion to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSqlColumns_Import')
	Drop View dbo.vwSqlColumns_Import;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/16/2008 Paul.  Simplify conversion to Oracle. 
Create View dbo.vwSqlColumns_Import
as
select ObjectName
     , ColumnName
     , ColumnType
     , replace(ColumnName, N'@', N'') as NAME
     , replace(ColumnName, N'@', N'') as DISPLAY_NAME
     , SqlDbType
     , CsType
     , length
     , colid
  from vwSqlColumns
 where ObjectType = N'P'

GO

Grant Select on dbo.vwSqlColumns_Import to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSqlColumns_ListName')
	Drop View dbo.vwSqlColumns_ListName;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 02/09/2007 Paul.  Use the EDITVIEWS_FIELDS to determine if a column is an enum. 
Create View dbo.vwSqlColumns_ListName
as
select ObjectName
     , ColumnName                  as DATA_FIELD
     , EDITVIEWS_FIELDS.CACHE_NAME as LIST_NAME
  from      vwSqlColumns
 inner join EDITVIEWS_FIELDS
         on EDITVIEWS_FIELDS.DATA_FIELD   = vwSqlColumns.ColumnName
        and EDITVIEWS_FIELDS.DELETED      = 0
        and EDITVIEWS_FIELDS.FIELD_TYPE   = N'ListBox'
        and EDITVIEWS_FIELDS.DEFAULT_VIEW = 0
        and EDITVIEWS_FIELDS.CACHE_NAME is not null
 inner join EDITVIEWS
         on EDITVIEWS.NAME                = EDITVIEWS_FIELDS.EDIT_NAME
        and EDITVIEWS.VIEW_NAME           = vwSqlColumns.ObjectName + N'_Edit'
        and EDITVIEWS.DELETED             = 0
 where CsType in(N'string', N'ansistring')

GO

Grant Select on dbo.vwSqlColumns_ListName to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSqlColumns_Reporting')
	Drop View dbo.vwSqlColumns_Reporting;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 02/09/2007 Paul.  Use the EDITVIEWS_FIELDS to determine if a column is an enum. 
-- 01/16/2008 Paul.  Simplify conversion to Oracle. 
-- 05/20/2009 Paul.  We need to allow the multiple selection of users. 
-- 05/13/2021 Paul.  Include PARENT_ID. 
Create View dbo.vwSqlColumns_Reporting
as
select ObjectName
     , ColumnName
     , ColumnType
     , ColumnName as NAME
     , ColumnName as DISPLAY_NAME
     , SqlDbType
     , (case 
        when dbo.fnSqlColumns_IsEnum(ObjectName, ColumnName, CsType) = 1 then N'enum'
        else CsType
        end) as CsType
     , colid
  from vwSqlColumns
 where ColumnName not in (N'ID', N'ID_C')
   and (ColumnName not like N'%_ID' or ColumnName in ('PARENT_ID', 'CREATED_BY_ID', 'MODIFIED_USER_ID', 'ASSIGNED_USER_ID', 'TEAM_ID'))

GO

Grant Select on dbo.vwSqlColumns_Reporting to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSqlColumns_Searching')
	Drop View dbo.vwSqlColumns_Searching;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/08/2007 Paul.  At least one field ends in _ID but is not a unique identifier. 
-- 01/16/2008 Paul.  Simplify conversion to Oracle. 
Create View dbo.vwSqlColumns_Searching
as
select ObjectName
     , ColumnName
     , ColumnType
     , ColumnName as NAME
     , ColumnName as DISPLAY_NAME
     , SqlDbType
     , (case 
        when dbo.fnSqlColumns_IsEnum(ObjectName, ColumnName, CsType) = 1 then N'enum'
        else CsType
        end) as CsType
     , colid
  from vwSqlColumns
 where ColumnName not in (N'ID', N'ID_C')
--   and ColumnName not like '%_ID'      
   and ColumnType <> N'uniqueidentifier'

GO

Grant Select on dbo.vwSqlColumns_Searching to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSqlTablesAudited')
	Drop View dbo.vwSqlTablesAudited;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/16/2008 Paul.  Simplify conversion to Oracle. 
-- 02/11/2008 Paul.  PAYMENTS_TRANSACTIONS is not audited. 
-- 03/02/2008 Paul.  USERS_LOGINS is not audited. 
-- 03/06/2008 Paul.  SYSTEM_LOG is not audited.
-- 04/02/2008 Paul.  VALIDATION_EXPRESSIONS is not audited.
-- 04/08/2008 Paul.  FIELD_VALIDATORS is not audited.
-- 04/08/2008 Paul.  DYNAMIC_BUTTONS is not audited.
-- 04/22/2008 Paul.  EMAIL_CACHE is new to SugarCRM 5.0 and is not audited. 
-- 07/16/2008 Paul.  Workflow tables are not audited. 
-- 07/19/2008 Paul.  Exclude all workflow tables. 
-- 08/16/2008 Paul.  Allow triggers on CAMPAIGN_LOG so that we can run a workflow on the event. 
-- 08/20/2008 Paul.  Move system tables to a separate view. 
-- 08/20/2008 Paul.  Use separate views for the cached data. 
-- 09/07/2008 Paul.  Exclude temp tables (usedi n Oracle). 
-- 10/07/2008 Paul.  PROSPECT_LISTS should be audited so that assignment notifications can be generated. 
-- 10/08/2008 Paul.  INETLOG should not be audited.  This table is used on our demo site. 
-- 10/08/2008 Paul.  Workflow tables start with WWF_.
-- 04/03/2009 Paul.  Exclude QuickBooks tables from audit. 
-- 04/06/2009 Paul.  Exclude QuickBooks Sync tables from audit. 
-- 05/01/2009 Paul.  Exclude temp tables during SugarCRM migration. 
-- 05/01/2009 Paul.  We need to isolate tables that are non CRM tables. 
-- 07/21/2009 Paul.  Sync tables will not be audited. 
-- 07/25/2009 Paul.  NUMBER_SEQUENCES is not audited. 
-- 10/07/2009 Paul.  All tables beginning with SYSTEM_ should be treated as a system table. 
-- 01/25/2010 Paul.  AUDIT_EVENTS should not be audited, as it is already an audit table. 
-- 02/18/2010 Paul.  SEMANTIC_MODEL tables should not be audited. 
-- 02/18/2010 Paul.  TAB_GROUPS and MODULES_GROUPS should not be audited. 
-- 05/12/2010 Paul.  USERS_PASSWORD_LINK should not be audited.
-- 07/12/2010 Paul.  REPORTS should be audited so that the Workflow editor will work with Report workflows. 
-- 07/12/2010 Paul.  EMAIL_TEMPLATES should be audited as this is user-edited data. 
-- 07/12/2010 Paul.  PRODUCT_TEMPLATES should be audited as this is user-edited data. 
-- 12/05/2010 Paul.  Add OUTBOUND_EMAILS, REGIONS and TEAM_SETS.
-- 09/14/2011 Paul.  EXCHANGE_USERS does not need to be audited. It is getting very large with all the watermarks. 
-- 04/03/2012 Paul.  SUGARFAVORITES is not audited. 
-- 04/08/2012 Paul.  OAUTHKEYS and OAUTH_TOKENS are not audited. 
-- 07/05/2012 Paul.  PHONE_NUMBERS is not audited for now since it only contains the normalized number. 
-- 11/19/2012 Paul.  USERS_SIGNATURES should be audited as it is user data. 
-- 11/22/2012 Paul.  LAST_ACTIVITY is not audited. 
-- 01/23/2013 Paul.  CALL_MARKETING does not need to be audited. 
-- 04/17/2013 Paul.  SUGARFEED does not need to be audited. 
-- 06/15/2013 Paul.  Allow triggers on SURVEY_RESULTS and SURVEY_QUESTIONS_RESULTS so that we can run a workflow on the event. 
-- 08/08/2013 Paul.  Allow triggers on PROSPECT_LIST_CAMPAIGNS and PROSPECT_LISTS_PROSPECTS for undelete. 
-- 08/08/2013 Paul.  Exclude CALL_MARKETING_PROSPECT_LISTS. 
-- 08/08/2013 Paul.  Allow auditing of NOTE_ATTACHMENTS to allow undelete. 
-- 10/30/2013 Paul.  Allow auditing of CONTRACT_TYPES_DOCUMENTS.
-- 09/14/2015 Paul.  Do not audit OAUTH_SYNC_TOKENS. 
-- 09/24/2015 Paul.  Exclude Activity Stream tables. 
-- 10/01/2015 Paul.  Exclude Azure System Log table. 
-- 10/01/2015 Paul.  Correct wildcard with []. 
-- 10/09/2015 Paul.  Exclude SUGARFAVORITES and SUBSCRIPTIONS
-- 04/12/2016 Paul.  Exclude ZIPCODES. 
-- 05/12/2016 Paul.  Add TAG_SETS
-- 06/23/2016 Paul.  Business Process tables (WF4) are not audited. 
-- 09/22/2016 Paul.  Manually specify default collation to ease migration to Azure
-- 05/18/2017 Paul.  DASHBOARDS is not audited. 
-- 06/07/2017 Paul.  NAICS_CODES is not audited. 
-- 09/25/2017 Paul.  Archive tables are not audited. 
-- 10/22/2017 Paul.  MODULES_ARCHIVE_LOG is not audited. 
-- 12/02/2017 Paul.  We want to start audting TEAMS. 
-- 11/30/2017 Paul.  ASSIGNED_SETS_USERS and ASSIGNED_SETS will not be audit. 
-- 01/22/2020 Paul.  A customer is using custom tables that start with "USR_". 
-- 09/08/2020 Paul.  USERS_CSTM should be audited. 
-- 08/08/2021 Paul.  Machine Learning tables/ prection tables are not audited. 
Create View dbo.vwSqlTablesAudited
as
select TABLE_NAME  collate database_default  as TABLE_NAME
  from vwSqlTables
 where TABLE_NAME not like N'%[_]AUDIT'
   and TABLE_NAME not like N'%[_]ARCHIVE'
   and TABLE_NAME not like N'%[_]STREAM'
   and TABLE_NAME not like N'%[_]PREDICTIONS'
   and TABLE_NAME not like N'%[_]AUDIT[_]SUGARCRM'
   and TABLE_NAME not like N'%[_]REMOTE'
   and TABLE_NAME not like N'%[_]CSTM[_]REMOTE'
   and TABLE_NAME not like N'%[_]SYNC'
   and TABLE_NAME not like N'SYSTEM[_]%'
   and TABLE_NAME not like N'%[_]SYSTEM[_]LOG'
   and TABLE_NAME not like N'SEMANTIC[_]MODEL[_]%'
   and TABLE_NAME not like N'WWF[_]%'
   and TABLE_NAME not like N'WF4[_]%'
   and TABLE_NAME not like N'TEMP[_]%'
   and TABLE_NAME not like N'WORKFLOW%'
   and TABLE_NAME not like N'BUSINESS_PROCESS%'
   and TABLE_NAME not like N'PROCESS%'
   and TABLE_NAME not like N'QUICKBOOKS[_]%'
   and TABLE_NAME not like N'QBSYNC[_]%'
   and TABLE_NAME not like N'USR[_]%'
   and TABLE_NAME not in (select TABLE_NAME from vwSqlTablesCachedSystem)
   and TABLE_NAME not in (select TABLE_NAME from vwSqlTablesCachedData where TABLE_NAME not in (N'TEAMS', N'USERS'))
   and TABLE_NAME in     (select TABLE_NAME from vwSqlTablesBase)
   and TABLE_NAME not in
( N'ACL_ROLES_CSTM'
, N'ASSIGNED_SETS'
, N'ASSIGNED_SETS_USERS'
, N'AUDIT_EVENTS'
, N'CAMPAIGN_TRKRS'
, N'CAMPAIGN_TRKRS_CSTM'
, N'CURRENCIES_CSTM'
, N'DASHBOARDS'
, N'DASHBOARD_APPS'
, N'DOCUMENT_REVISIONS'
, N'DOCUMENT_REVISIONS_CSTM'
, N'CALL_MARKETING'
, N'CALL_MARKETING_CSTM'
, N'CALL_MARKETING_PROSPECT_LISTS'
, N'EMAIL_MARKETING'
, N'EMAIL_MARKETING_CSTM'
, N'EMAIL_MARKETING_PROSPECT_LISTS'
, N'EMAILMAN'
, N'EMAILMAN_CSTM'
, N'EMAILMAN_SENT'
, N'EXCHANGE_USERS'
, N'FEEDS'
, N'FEEDS_CSTM'
, N'FIELD_VALIDATORS'
, N'FILES'
, N'FORECASTS'
, N'FORECASTS_OPPORTUNITIES'
, N'IFRAMES'
, N'IMAGES'
, N'IMPORT_MAPS'
, N'INBOUND_EMAIL_AUTOREPLY'
, N'INBOUND_EMAILS_CSTM'
, N'INETLOG'
, N'LAST_ACTIVITY'
, N'LINKED_DOCUMENTS'
, N'MACHINE_LEARNING_MODELS'
, N'MODULES_ARCHIVE_LOG'
, N'MODULES_GROUPS'
, N'NAICS_CODE_SETS'
, N'NAICS_CODES_RELATED'
, N'NAICS_CODES'
, N'NUMBER_SEQUENCES'
, N'OAUTHKEYS'
, N'OAUTH_TOKENS'
, N'OAUTH_SYNC_TOKENS'
, N'OUTBOUND_EMAILS'
, N'PAYMENTS_TRANSACTIONS'
, N'PHONE_NUMBERS'
, N'PRODUCT_BUNDLE_NOTES'
, N'PRODUCT_BUNDLE_QUOTE'
, N'PRODUCT_BUNDLES'
, N'PRODUCT_CATEGORIES_CSTM'
, N'PRODUCT_PRODUCT'
, N'PRODUCT_TYPES_CSTM'
, N'PRODUCTS'
, N'PRODUCTS_CSTM'
, N'REGIONS'
, N'REGIONS_COUNTRIES'
, N'REGIONS_CSTM'
, N'RELEASES_CSTM'
, N'ROLES'
, N'ROLES_CSTM'
, N'ROLES_MODULES'
, N'ROLES_USERS'
, N'SAVED_SEARCH'
, N'SCHEDULERS'
, N'SCHEDULERS_TIMES'
, N'SUGARFAVORITES'
, N'SUBSCRIPTIONS'
, N'SUGARFEED'
, N'TAB_GROUPS'
, N'TAG_SETS'
, N'TEAM_MEMBERSHIPS'
, N'TEAM_NOTICES'
, N'TEAM_SETS'
, N'TEAM_SETS_TEAMS'
, N'TERMINOLOGY_HELP'
, N'TIME_PERIODS'
, N'TRACKER'
, N'UPGRADE_HISTORY'
, N'USER_PREFERENCES'
, N'USERS_FEEDS'
, N'USERS_LAST_IMPORT'
, N'USERS_LOGINS'
, N'USERS_PASSWORD_LINK'
, N'VALIDATION_EXPRESSIONS'
, N'VCALS'
, N'VERSIONS'
, N'WORKFLOW_EVENTS'
, N'ZIPCODES'
)
GO


-- select ', N''' + TABLE_NAME + '''' from vwSqlTables
-- select * from vwSqlTablesAudited

Grant Select on dbo.vwSqlTablesAudited to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSqlTablesStreamed')
	Drop View dbo.vwSqlTablesStreamed;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/22/2017 Paul.  Manually specify default collation to ease migration to Azure
-- 06/25/2018 Paul.  Data Privacy is not streamed. 
-- 05/24/2020 Paul.  Exclude Azure tables. 
Create View dbo.vwSqlTablesStreamed
as
select TABLE_NAME
  from vwSqlTables
 where exists(select * from vwSqlTables AUDIT_TABLES where AUDIT_TABLES.TABLE_NAME = vwSqlTables.TABLE_NAME + N'_AUDIT')
   and exists(select * from vwSqlTables CSTM_TABLES  where CSTM_TABLES.TABLE_NAME  = vwSqlTables.TABLE_NAME + N'_CSTM')
   and exists(select * from INFORMATION_SCHEMA.COLUMNS vwSqlColumns  where vwSqlColumns.TABLE_NAME = vwSqlTables.TABLE_NAME collate database_default and vwSqlColumns.COLUMN_NAME = 'ASSIGNED_USER_ID')
   and TABLE_NAME not like 'AZURE[_]%'
   and TABLE_NAME not in
( N'CALLS'
, N'DATA_PRIVACY'
, N'MEETINGS'
, N'EMAILS'
, N'TASKS'
, N'NOTES'
, N'SMS_MESSAGES'
, N'TWITTER_MESSAGES'
, N'CALL_MARKETING'
, N'PROJECT'
, N'PROJECT_TASK'
, N'PRODUCT_TEMPLATES'
, N'INVOICES_LINE_ITEMS'
, N'ORDERS_LINE_ITEMS'
, N'QUOTES_LINE_ITEMS'
, N'REVENUE_LINE_ITEMS'
, N'PAYMENTS'
, N'CREDIT_CARDS'
, N'REGIONS'
, N'SURVEY_QUESTIONS'
, N'TEST_CASES'
, N'TEST_PLANS'
, N'THREADS'
, N'USERS'
)
GO


Grant Select on dbo.vwSqlTablesStreamed to public;
GO

-- select * from vwSqlTablesStreamed order by 1;










if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwACL_ACTIONS')
	Drop View dbo.vwACL_ACTIONS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwACL_ACTIONS
as
select ID
     , NAME
     , CATEGORY
     , ACLACCESS
  from ACL_ACTIONS
 where DELETED = 0

GO

Grant Select on dbo.vwACL_ACTIONS to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwACL_ROLES')
	Drop View dbo.vwACL_ROLES;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/01/2010 Paul.  Add CREATED_BY_NAME and MODIFIED_BY_NAME so that we can display the full name in lists like Sugar. 
-- 07/07/2020 Paul.  DATE_MODIFIED_UTC is required by the React Client. 
Create View dbo.vwACL_ROLES
as
select ACL_ROLES.ID
     , ACL_ROLES.NAME
     , ACL_ROLES.DESCRIPTION
     , ACL_ROLES.DATE_ENTERED
     , ACL_ROLES.DATE_MODIFIED
     , ACL_ROLES.DATE_MODIFIED_UTC
     , USERS_CREATED_BY.USER_NAME  as CREATED_BY
     , USERS_MODIFIED_BY.USER_NAME as MODIFIED_BY
     , dbo.fnFullName(USERS_CREATED_BY.FIRST_NAME , USERS_CREATED_BY.LAST_NAME ) as CREATED_BY_NAME
     , dbo.fnFullName(USERS_MODIFIED_BY.FIRST_NAME, USERS_MODIFIED_BY.LAST_NAME) as MODIFIED_BY_NAME
     , ACL_ROLES_CSTM.*
  from            ACL_ROLES
  left outer join USERS USERS_CREATED_BY
               on USERS_CREATED_BY.ID  = ACL_ROLES.CREATED_BY
  left outer join USERS USERS_MODIFIED_BY
               on USERS_MODIFIED_BY.ID = ACL_ROLES.MODIFIED_USER_ID
  left outer join ACL_ROLES_CSTM
               on ACL_ROLES_CSTM.ID_C      = ACL_ROLES.ID
 where ACL_ROLES.DELETED = 0

GO

Grant Select on dbo.vwACL_ROLES to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwACL_ROLES_ACTIONS')
	Drop View dbo.vwACL_ROLES_ACTIONS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/15/2010 Paul.  Deleted ACL_ROLES was not being filtered. 
Create View dbo.vwACL_ROLES_ACTIONS
as
select ACL_ROLES.ID          as ROLE_ID
     , ACL_ACTIONS.NAME
     , ACL_ACTIONS.CATEGORY
     , (case when ACL_ROLES_ACTIONS.ACCESS_OVERRIDE is not null then ACL_ROLES_ACTIONS.ACCESS_OVERRIDE
             else ACL_ACTIONS.ACLACCESS
        end)                 as ACLACCESS
  from           ACL_ROLES
 left outer join ACL_ROLES_ACTIONS
              on ACL_ROLES_ACTIONS.ROLE_ID = ACL_ROLES.ID
             and ACL_ROLES_ACTIONS.DELETED = 0
 left outer join ACL_ACTIONS
              on ACL_ACTIONS.ID            = ACL_ROLES_ACTIONS.ACTION_ID
             and ACL_ACTIONS.DELETED       = 0
 where ACL_ROLES.DELETED = 0
GO

Grant Select on dbo.vwACL_ROLES_ACTIONS to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwACL_ROLES_ACTIONS_Category')
	Drop View dbo.vwACL_ROLES_ACTIONS_Category;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwACL_ROLES_ACTIONS_Category
as
select ACL_ROLES_ACTIONS.ID
     , ACL_ROLES_ACTIONS.DELETED
     , ACL_ROLES_ACTIONS.CREATED_BY
     , ACL_ROLES_ACTIONS.DATE_ENTERED
     , ACL_ROLES_ACTIONS.MODIFIED_USER_ID
     , ACL_ROLES_ACTIONS.DATE_MODIFIED
     , ACL_ROLES_ACTIONS.DATE_MODIFIED_UTC
     , ACL_ROLES_ACTIONS.ROLE_ID
     , ACL_ROLES_ACTIONS.ACTION_ID
     , ACL_ROLES_ACTIONS.ACCESS_OVERRIDE
     , ACL_ACTIONS.CATEGORY
  from      ACL_ROLES_ACTIONS
 inner join ACL_ACTIONS
         on ACL_ACTIONS.ID = ACL_ROLES_ACTIONS.ACTION_ID

GO

Grant Select on dbo.vwACL_ROLES_ACTIONS_Category to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwACL_ROLES_USERS')
	Drop View dbo.vwACL_ROLES_USERS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/07/2006 Paul.  Only show active users. 
Create View dbo.vwACL_ROLES_USERS
as
select ACL_ROLES.ID   as ROLE_ID
     , ACL_ROLES.NAME as ROLE_NAME
     , USERS.ID   as USER_ID
     , dbo.fnFullName(USERS.FIRST_NAME, USERS.LAST_NAME) as FULL_NAME
     , USERS.USER_NAME
     , USERS.EMAIL1
     , USERS.PHONE_WORK
     , ACL_ROLES_USERS.DATE_ENTERED
  from           ACL_ROLES
      inner join ACL_ROLES_USERS
              on ACL_ROLES_USERS.ROLE_ID = ACL_ROLES.ID
             and ACL_ROLES_USERS.DELETED = 0
      inner join USERS
              on USERS.ID                = ACL_ROLES_USERS.USER_ID
             and USERS.DELETED           = 0
 where ACL_ROLES.DELETED = 0
  and (USERS.STATUS is null or USERS.STATUS = N'Active')

GO

Grant Select on dbo.vwACL_ROLES_USERS to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwAUDIT_EVENTS')
	Drop View dbo.vwAUDIT_EVENTS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/20/2010 Paul.  Correct for the singular module names. 
-- 03/27/2019 Paul.  Every searchable view should have a NAME field. 
-- 11/13/2020 Paul.  Add DATE_ENTERED to support default view of React Client. 
Create View dbo.vwAUDIT_EVENTS
as
select dbo.fnFullName(USERS.FIRST_NAME, USERS.LAST_NAME) as FULL_NAME
     , USERS.USER_NAME
     , USERS.USER_NAME            as NAME
     , USERS.ID                   as USER_ID
     , AUDIT_EVENTS.DATE_ENTERED
     , AUDIT_EVENTS.DATE_MODIFIED
     , AUDIT_EVENTS.AUDIT_ID
     , AUDIT_EVENTS.AUDIT_TABLE
     , AUDIT_EVENTS.AUDIT_ACTION
     , AUDIT_EVENTS.AUDIT_PARENT_ID
     , MODULES.MODULE_NAME
     , (case MODULES.MODULE_NAME
        when N'Project'     then N'Projects'
        when N'ProjectTask' then N'ProjectTasks'
        else MODULES.MODULE_NAME
        end) as MODULE_FOLDER
  from      AUDIT_EVENTS
 inner join USERS
         on USERS.ID           = AUDIT_EVENTS.MODIFIED_USER_ID
 inner join MODULES
         on MODULES.TABLE_NAME + N'_AUDIT' = AUDIT_EVENTS.AUDIT_TABLE

GO

Grant Select on dbo.vwAUDIT_EVENTS to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwCONFIG')
	Drop View dbo.vwCONFIG;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/05/2012 Paul.  We need the ID for Surface RT. 
-- 01/19/2013 Paul.  We need the CATEGORY for Surface RT, as vwCONFIG_List is not used. 
Create View dbo.vwCONFIG
as
select ID
     , NAME
     , VALUE
     , CATEGORY
     , DATE_MODIFIED
     , isnull(CATEGORY, N'') + N'_' + NAME as CATEGORY_NAME
  from CONFIG
 where DELETED = 0

GO

Grant Select on dbo.vwCONFIG to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwCONFIG_List')
	Drop View dbo.vwCONFIG_List;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/28/2008 Paul.  max_users is a protected config value that cannot be edited by an admin. 
-- 01/19/2013 Paul.  This view is not using on Surface RT. 
Create View dbo.vwCONFIG_List
as
select ID
     , NAME
     , VALUE
     , CATEGORY
     , DATE_MODIFIED
     , isnull(CATEGORY, N'') + N'_' + NAME as CATEGORY_NAME
  from CONFIG
 where DELETED = 0
   and NAME not in (N'max_users')

GO

Grant Select on dbo.vwCONFIG_List to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwCURRENCIES')
	Drop View dbo.vwCURRENCIES;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/30/2016 Paul.  Add reference to log entry that modified the record. 
Create View dbo.vwCURRENCIES
as
select ID
     , NAME
     , SYMBOL
     , ISO4217
     , CONVERSION_RATE
     , STATUS
     , SYSTEM_CURRENCY_LOG_ID
     , DATE_MODIFIED
     , MODIFIED_USER_ID
     , CURRENCIES_CSTM.*
  from CURRENCIES
  left outer join CURRENCIES_CSTM
               on CURRENCIES_CSTM.ID_C = CURRENCIES.ID
 where DELETED = 0

GO

Grant Select on dbo.vwCURRENCIES to public;
GO

 
if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwCURRENCIES_LISTBOX')
	Drop View dbo.vwCURRENCIES_LISTBOX;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 05/29/2008 Paul.  ISO4217 is needed to process PayPal transactions. 
-- 05/01/2016 Paul.  We are going to prepopulate the list and the ISO4217 is required and unique. 
Create View dbo.vwCURRENCIES_LISTBOX
as
select ID
     , NAME
     , SYMBOL
     , NAME + N': ' + SYMBOL as NAME_SYMBOL
     , CONVERSION_RATE
     , ISO4217
  from CURRENCIES
 where DELETED = 0
   and (STATUS is null or STATUS = N'Active')

GO

Grant Select on dbo.vwCURRENCIES_LISTBOX to public;
GO

 
if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwCUSTOM_EDIT_MODULES')
	Drop View dbo.vwCUSTOM_EDIT_MODULES;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/09/2007 Paul.  Excluded deleted records.  This should have been done from the very beginning.
Create View dbo.vwCUSTOM_EDIT_MODULES
as
select MODULE_NAME as NAME
  from MODULES
 where MODULE_ENABLED = 1
   and CUSTOM_ENABLED = 1
   and DELETED        = 0
GO

Grant Select on dbo.vwCUSTOM_EDIT_MODULES to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwDASHBOARDS')
	Drop View dbo.vwDASHBOARDS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 06/14/2017 Paul.  Add CATEGORY for separate home/dashboard pages. 
-- 11/30/2017 Paul.  Add ASSIGNED_SET_ID for Dynamic User Assignment. 
Create View dbo.vwDASHBOARDS
as
select DASHBOARDS.ID
     , DASHBOARDS.NAME
     , DASHBOARDS.CATEGORY
     , DASHBOARDS.ASSIGNED_USER_ID
     , DASHBOARDS.DATE_ENTERED
     , DASHBOARDS.DATE_MODIFIED
     , DASHBOARDS.DATE_MODIFIED_UTC
     , TEAMS.ID                    as TEAM_ID
     , TEAMS.NAME                  as TEAM_NAME
     , USERS_ASSIGNED.USER_NAME    as ASSIGNED_TO
     , USERS_CREATED_BY.USER_NAME  as CREATED_BY
     , USERS_MODIFIED_BY.USER_NAME as MODIFIED_BY
     , DASHBOARDS.CREATED_BY       as CREATED_BY_ID
     , DASHBOARDS.MODIFIED_USER_ID
     , TEAM_SETS.ID                as TEAM_SET_ID
     , TEAM_SETS.TEAM_SET_NAME     as TEAM_SET_NAME
     , TEAM_SETS.TEAM_SET_LIST     as TEAM_SET_LIST
     , dbo.fnFullName(USERS_ASSIGNED.FIRST_NAME   , USERS_ASSIGNED.LAST_NAME   ) as ASSIGNED_TO_NAME
     , dbo.fnFullName(USERS_CREATED_BY.FIRST_NAME , USERS_CREATED_BY.LAST_NAME ) as CREATED_BY_NAME
     , dbo.fnFullName(USERS_MODIFIED_BY.FIRST_NAME, USERS_MODIFIED_BY.LAST_NAME) as MODIFIED_BY_NAME
     , ASSIGNED_SETS.ID                as ASSIGNED_SET_ID
     , ASSIGNED_SETS.ASSIGNED_SET_NAME as ASSIGNED_SET_NAME
     , ASSIGNED_SETS.ASSIGNED_SET_LIST as ASSIGNED_SET_LIST
  from            DASHBOARDS
  left outer join TEAMS
               on TEAMS.ID                 = DASHBOARDS.TEAM_ID
              and TEAMS.DELETED            = 0
  left outer join TEAM_SETS
               on TEAM_SETS.ID             = DASHBOARDS.TEAM_SET_ID
              and TEAM_SETS.DELETED        = 0
  left outer join USERS                      USERS_ASSIGNED
               on USERS_ASSIGNED.ID        = DASHBOARDS.ASSIGNED_USER_ID
  left outer join USERS                      USERS_CREATED_BY
               on USERS_CREATED_BY.ID      = DASHBOARDS.CREATED_BY
  left outer join USERS                      USERS_MODIFIED_BY
               on USERS_MODIFIED_BY.ID     = DASHBOARDS.MODIFIED_USER_ID
  left outer join ASSIGNED_SETS
               on ASSIGNED_SETS.ID         = DASHBOARDS.ASSIGNED_SET_ID
              and ASSIGNED_SETS.DELETED    = 0
 where DASHBOARDS.DELETED = 0

GO

Grant Select on dbo.vwDASHBOARDS to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwDASHBOARD_APPS')
	Drop View dbo.vwDASHBOARD_APPS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 06/16/2017 Paul.  Add DEFAULT_SETTINGS. 
Create View dbo.vwDASHBOARD_APPS
as
select DASHBOARD_APPS.ID
     , DASHBOARD_APPS.NAME
     , DASHBOARD_APPS.CATEGORY
     , DASHBOARD_APPS.MODULE_NAME
     , DASHBOARD_APPS.TITLE
     , DASHBOARD_APPS.SETTINGS_EDITVIEW
     , DASHBOARD_APPS.IS_ADMIN
     , DASHBOARD_APPS.APP_ENABLED
     , DASHBOARD_APPS.SCRIPT_URL
     , DASHBOARD_APPS.DEFAULT_SETTINGS
  from      DASHBOARD_APPS
 inner join MODULES
         on MODULES.MODULE_NAME    = DASHBOARD_APPS.MODULE_NAME
        and MODULES.DELETED        = 0
        and MODULES.MODULE_ENABLED = 1
 where DASHBOARD_APPS.DELETED = 0

GO

Grant Select on dbo.vwDASHBOARD_APPS to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwDASHLETS')
	Drop View dbo.vwDASHLETS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/24/2010 Paul.  Allow multiple. 
Create View dbo.vwDASHLETS
as
select DASHLETS.ID
     , DASHLETS.CATEGORY
     , DASHLETS.MODULE_NAME
     , DASHLETS.TITLE
     , DASHLETS.CONTROL_NAME
     , DASHLETS.DASHLET_ENABLED
     , DASHLETS.ALLOW_MULTIPLE
  from      DASHLETS
 inner join MODULES
         on MODULES.MODULE_NAME    = DASHLETS.MODULE_NAME
        and MODULES.DELETED        = 0
        and MODULES.MODULE_ENABLED = 1
 where DASHLETS.DELETED = 0

GO

Grant Select on dbo.vwDASHLETS to public;
GO

-- 09/07/2010 Paul.  Not sure why we are dropping this view after creating it, but it does not appear to be used anywhere. 
-- 09/10/2010 Paul.  This was just an old version of the view.  Move to the top. 
if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwDETAILVIEWS_USERS')
	Drop View dbo.vwDETAILVIEWS_USERS;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwDASHLETS_USERS')
	Drop View dbo.vwDASHLETS_USERS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/10/2009 Paul.  Defer the enabled check to the code so that we can see if data exists at all. 
-- 07/12/2009 Paul.  Include RELATIONSHIP_ORDER column to be compatible with DETAILVIEWS_RELATIONSHIPS view. 
-- 03/09/2014 Paul.  User dashlets do notrequire a DetailView record.  The filter was causing problems with Module dashlets. 
Create View dbo.vwDASHLETS_USERS
as
select DASHLETS_USERS.ID
     , DASHLETS_USERS.ASSIGNED_USER_ID
     , DASHLETS_USERS.DETAIL_NAME
     , DASHLETS_USERS.MODULE_NAME
     , DASHLETS_USERS.TITLE
     , DASHLETS_USERS.CONTROL_NAME
     , DASHLETS_USERS.DASHLET_ORDER
     , DASHLETS_USERS.DASHLET_ENABLED
     , DASHLETS_USERS.DASHLET_ORDER     as RELATIONSHIP_ORDER
  from      DASHLETS_USERS
-- inner join DETAILVIEWS
--         on DETAILVIEWS.NAME       = DASHLETS_USERS.DETAIL_NAME
--        and DETAILVIEWS.DELETED    = 0
 inner join MODULES
         on MODULES.MODULE_NAME    = DASHLETS_USERS.MODULE_NAME
        and MODULES.DELETED        = 0
        and MODULES.MODULE_ENABLED = 1
 where DASHLETS_USERS.DELETED = 0

GO

Grant Select on dbo.vwDASHLETS_USERS to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwDASHLETS_USERS_Assigned')
	Drop View dbo.vwDASHLETS_USERS_Assigned;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/20/2009 Paul.  This view is used to determine if any dashlets have been assigned. 
-- The primary goal is to allow a user to delete all dashlets and not have them automatically re-assigned. 
-- 03/09/2014 Paul.  User dashlets do notrequire a DetailView record.  The filter was causing problems with Module dashlets. 
Create View dbo.vwDASHLETS_USERS_Assigned
as
select DASHLETS_USERS.ID
     , DASHLETS_USERS.ASSIGNED_USER_ID
     , DASHLETS_USERS.DETAIL_NAME
     , DASHLETS_USERS.DELETED
  from      DASHLETS_USERS
-- inner join DETAILVIEWS
--         on DETAILVIEWS.NAME       = DASHLETS_USERS.DETAIL_NAME
--        and DETAILVIEWS.DELETED    = 0
 inner join MODULES
         on MODULES.MODULE_NAME    = DASHLETS_USERS.MODULE_NAME
        and MODULES.DELETED        = 0
        and MODULES.MODULE_ENABLED = 1

GO

Grant Select on dbo.vwDASHLETS_USERS_Assigned to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwDETAILVIEWS')
	Drop View dbo.vwDETAILVIEWS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 10/30/2010 Paul.  Add support for Business Rules Framework. 
-- 11/11/2010 Paul.  Change to Pre Load and Post Load. 
-- 09/20/2012 Paul.  We need a SCRIPT field that is form specific. 
-- 02/14/2013 Paul.  Add DATA_COLUMNS. 
Create View dbo.vwDETAILVIEWS
as
select DETAILVIEWS.ID
     , DETAILVIEWS.NAME
     , DETAILVIEWS.MODULE_NAME
     , DETAILVIEWS.VIEW_NAME
     , DETAILVIEWS.LABEL_WIDTH
     , DETAILVIEWS.FIELD_WIDTH
     , DETAILVIEWS.SCRIPT
     , DETAILVIEWS.DATA_COLUMNS
     , PRE_LOAD_EVENT_RULES.ID      as PRE_LOAD_EVENT_ID
     , PRE_LOAD_EVENT_RULES.NAME    as PRE_LOAD_EVENT_NAME
     , POST_LOAD_EVENT_RULES.ID     as POST_LOAD_EVENT_ID
     , POST_LOAD_EVENT_RULES.NAME   as POST_LOAD_EVENT_NAME
  from            DETAILVIEWS
  left outer join RULES                            PRE_LOAD_EVENT_RULES
               on PRE_LOAD_EVENT_RULES.ID        = DETAILVIEWS.PRE_LOAD_EVENT_ID
              and PRE_LOAD_EVENT_RULES.DELETED   = 0
  left outer join RULES                            POST_LOAD_EVENT_RULES
               on POST_LOAD_EVENT_RULES.ID       = DETAILVIEWS.POST_LOAD_EVENT_ID
              and POST_LOAD_EVENT_RULES.DELETED  = 0
 where DETAILVIEWS.DELETED = 0

GO

Grant Select on dbo.vwDETAILVIEWS to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwDETAILVIEWS_FIELDS')
	Drop View dbo.vwDETAILVIEWS_FIELDS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/02/2007 Paul.  Add data columns. 
-- 05/22/2009 Paul.  Add MODULE_NAME to allow export. 
-- 06/12/2009 Paul.  Add TOOL_TIP for help hover.
-- 02/16/2010 Paul.  Add MODULE_TYPE so that we can lookup custom field IDs. 
-- 10/09/2010 Paul.  Add PARENT_FIELD so that we can establish dependent listboxes. 
-- 09/20/2012 Paul.  We need a SCRIPT field that is form specific. 
Create View dbo.vwDETAILVIEWS_FIELDS
as
select DETAILVIEWS_FIELDS.ID
     , DETAILVIEWS_FIELDS.DELETED
     , DETAILVIEWS_FIELDS.DETAIL_NAME
     , DETAILVIEWS_FIELDS.FIELD_INDEX
     , DETAILVIEWS_FIELDS.FIELD_TYPE
     , DETAILVIEWS_FIELDS.DEFAULT_VIEW
     , DETAILVIEWS_FIELDS.DATA_LABEL
     , DETAILVIEWS_FIELDS.DATA_FIELD
     , DETAILVIEWS_FIELDS.DATA_FORMAT
     , DETAILVIEWS_FIELDS.URL_FIELD
     , DETAILVIEWS_FIELDS.URL_FORMAT
     , DETAILVIEWS_FIELDS.URL_TARGET
     , DETAILVIEWS_FIELDS.LIST_NAME
     , DETAILVIEWS_FIELDS.COLSPAN
     , DETAILVIEWS.LABEL_WIDTH
     , DETAILVIEWS.FIELD_WIDTH
     , DETAILVIEWS.DATA_COLUMNS
     , DETAILVIEWS.VIEW_NAME
     , DETAILVIEWS.MODULE_NAME
     , DETAILVIEWS_FIELDS.TOOL_TIP
     , DETAILVIEWS_FIELDS.MODULE_TYPE
     , DETAILVIEWS_FIELDS.PARENT_FIELD
     , DETAILVIEWS.SCRIPT
  from      DETAILVIEWS_FIELDS
 inner join DETAILVIEWS
         on DETAILVIEWS.NAME    = DETAILVIEWS_FIELDS.DETAIL_NAME
        and DETAILVIEWS.DELETED = 0
 where DETAILVIEWS_FIELDS.DELETED = 0

GO

Grant Select on dbo.vwDETAILVIEWS_FIELDS to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwDETAILVIEWS_RELATIONSHIPS')
	Drop View dbo.vwDETAILVIEWS_RELATIONSHIPS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/27/2006 Paul.  ACL will use the MODULE_NAME.
-- 07/11/2006 Paul.  Disable the relationship if the module is disabled. 
-- 09/08/2007 Paul.  Relationships can now be disabled.
-- 09/08/2007 Paul.  We need a title when we migrate to WebParts. 
-- 01/24/2010 Paul.  We need the ID for report dashlet management. 
-- 01/27/2010 Paul.  Remove the join to DETAILVIEWS so that we can use this table for EditView Relationships. 
-- 10/13/2012 Paul.  Add table info for HTML5 Offline Client. 
-- 03/30/2022 Paul.  Add Insight fields. 
Create View dbo.vwDETAILVIEWS_RELATIONSHIPS
as
select DETAILVIEWS_RELATIONSHIPS.ID
     , DETAILVIEWS_RELATIONSHIPS.DETAIL_NAME
     , DETAILVIEWS_RELATIONSHIPS.MODULE_NAME
     , DETAILVIEWS_RELATIONSHIPS.TITLE
     , DETAILVIEWS_RELATIONSHIPS.CONTROL_NAME
     , DETAILVIEWS_RELATIONSHIPS.RELATIONSHIP_ORDER
     , DETAILVIEWS_RELATIONSHIPS.TABLE_NAME
     , DETAILVIEWS_RELATIONSHIPS.PRIMARY_FIELD
     , DETAILVIEWS_RELATIONSHIPS.SORT_FIELD
     , DETAILVIEWS_RELATIONSHIPS.SORT_DIRECTION
     , DETAILVIEWS_RELATIONSHIPS.INSIGHT_LABEL
     , DETAILVIEWS_RELATIONSHIPS.INSIGHT_VIEW
     , DETAILVIEWS_RELATIONSHIPS.INSIGHT_OPERATOR
  from      DETAILVIEWS_RELATIONSHIPS
 inner join MODULES
         on MODULES.MODULE_NAME    = DETAILVIEWS_RELATIONSHIPS.MODULE_NAME
        and MODULES.DELETED        = 0
        and MODULES.MODULE_ENABLED = 1
 where DETAILVIEWS_RELATIONSHIPS.DELETED = 0
   and DETAILVIEWS_RELATIONSHIPS.RELATIONSHIP_ENABLED = 1

GO

Grant Select on dbo.vwDETAILVIEWS_RELATIONSHIPS to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwDETAILVIEWS_RELATIONSHIPS_La')
	Drop View dbo.vwDETAILVIEWS_RELATIONSHIPS_La;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/08/2007 Paul.  vwDETAILVIEWS_RELATIONSHIPS_Layout is too long for Oracle, so reduce to 30 characters. 
-- 09/08/2007 Paul.  We need a title when we migrate to WebParts. 
-- 01/27/2010 Paul.  Remove the join to DETAILVIEWS so that we can use this table for EditView Relationships. 
-- 10/13/2012 Paul.  Add table info for HTML5 Offline Client. 
-- 02/14/2013 Paul.  Add CONTROL_NAME to make it easy to copy. 
-- 03/30/2022 Paul.  Add Insight fields. 
Create View dbo.vwDETAILVIEWS_RELATIONSHIPS_La
as
select DETAILVIEWS_RELATIONSHIPS.ID
     , DETAILVIEWS_RELATIONSHIPS.DETAIL_NAME
     , DETAILVIEWS_RELATIONSHIPS.MODULE_NAME
     , DETAILVIEWS_RELATIONSHIPS.TITLE
     , DETAILVIEWS_RELATIONSHIPS.CONTROL_NAME
     , DETAILVIEWS_RELATIONSHIPS.RELATIONSHIP_ORDER
     , DETAILVIEWS_RELATIONSHIPS.RELATIONSHIP_ENABLED
     , DETAILVIEWS_RELATIONSHIPS.TABLE_NAME
     , DETAILVIEWS_RELATIONSHIPS.PRIMARY_FIELD
     , DETAILVIEWS_RELATIONSHIPS.SORT_FIELD
     , DETAILVIEWS_RELATIONSHIPS.SORT_DIRECTION
     , DETAILVIEWS_RELATIONSHIPS.INSIGHT_LABEL
     , DETAILVIEWS_RELATIONSHIPS.INSIGHT_VIEW
     , DETAILVIEWS_RELATIONSHIPS.INSIGHT_OPERATOR
  from      DETAILVIEWS_RELATIONSHIPS
 inner join MODULES
         on MODULES.MODULE_NAME    = DETAILVIEWS_RELATIONSHIPS.MODULE_NAME
        and MODULES.DELETED        = 0
        and MODULES.MODULE_ENABLED = 1
 where DETAILVIEWS_RELATIONSHIPS.DELETED = 0

GO

Grant Select on dbo.vwDETAILVIEWS_RELATIONSHIPS_La to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwDYNAMIC_BUTTONS')
	Drop View dbo.vwDYNAMIC_BUTTONS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/28/2010 Paul.  We need a flag to exclude a button from a mobile device. 
-- 03/14/2014 Paul.  Allow hidden buttons to be created. 
-- 08/16/2017 Paul.  Add ability to apply a business rule to a button. 
-- 04/02/2019 Paul.  All modules must have a name field. 
-- 04/02/2019 Paul.  DATE_MODIFIED and DATE_ENTERED for detail view. 
Create View dbo.vwDYNAMIC_BUTTONS
as
select ID
     , VIEW_NAME + isnull(' ' + CONTROL_TEXT, '')     as NAME
     , VIEW_NAME
     , CONTROL_INDEX
     , CONTROL_TYPE
     , DEFAULT_VIEW
     , MODULE_NAME
     , MODULE_ACCESS_TYPE
     , TARGET_NAME
     , TARGET_ACCESS_TYPE
     , MOBILE_ONLY
     , ADMIN_ONLY
     , EXCLUDE_MOBILE
     , CONTROL_TEXT
     , CONTROL_TOOLTIP
     , CONTROL_ACCESSKEY
     , CONTROL_CSSCLASS
     , TEXT_FIELD
     , ARGUMENT_FIELD
     , COMMAND_NAME
     , URL_FORMAT
     , URL_TARGET
     , ONCLICK_SCRIPT
     , HIDDEN
     , BUSINESS_RULE
     , BUSINESS_SCRIPT
     , DATE_ENTERED
     , DATE_MODIFIED
     , DATE_MODIFIED_UTC
  from DYNAMIC_BUTTONS
 where DELETED = 0

GO

Grant Select on dbo.vwDYNAMIC_BUTTONS to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwDYNAMIC_BUTTONS_Edit')
	Drop View dbo.vwDYNAMIC_BUTTONS_Edit;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwDYNAMIC_BUTTONS_Edit
as
select *
  from vwDYNAMIC_BUTTONS

GO

Grant Select on dbo.vwDYNAMIC_BUTTONS_Edit to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwEDITVIEWS')
	Drop View dbo.vwEDITVIEWS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 10/30/2010 Paul.  Add support for Business Rules Framework. 
-- 11/11/2010 Paul.  Change to Pre Load and Post Load. 
-- 09/20/2012 Paul.  We need a SCRIPT field that is form specific. 
-- 02/14/2013 Paul.  Add DATA_COLUMNS. 
Create View dbo.vwEDITVIEWS
as
select EDITVIEWS.ID
     , EDITVIEWS.NAME
     , EDITVIEWS.MODULE_NAME
     , EDITVIEWS.VIEW_NAME
     , EDITVIEWS.LABEL_WIDTH
     , EDITVIEWS.FIELD_WIDTH
     , EDITVIEWS.SCRIPT
     , EDITVIEWS.DATA_COLUMNS
     , NEW_EVENT_RULES.ID           as NEW_EVENT_ID
     , NEW_EVENT_RULES.NAME         as NEW_EVENT_NAME
     , PRE_LOAD_EVENT_RULES.ID      as PRE_LOAD_EVENT_ID
     , PRE_LOAD_EVENT_RULES.NAME    as PRE_LOAD_EVENT_NAME
     , POST_LOAD_EVENT_RULES.ID     as POST_LOAD_EVENT_ID
     , POST_LOAD_EVENT_RULES.NAME   as POST_LOAD_EVENT_NAME
     , VALIDATION_EVENT_RULES.ID    as VALIDATION_EVENT_ID
     , VALIDATION_EVENT_RULES.NAME  as VALIDATION_EVENT_NAME
     , PRE_SAVE_EVENT_RULES.ID      as PRE_SAVE_EVENT_ID
     , PRE_SAVE_EVENT_RULES.NAME    as PRE_SAVE_EVENT_NAME
     , POST_SAVE_EVENT_RULES.ID     as POST_SAVE_EVENT_ID
     , POST_SAVE_EVENT_RULES.NAME   as POST_SAVE_EVENT_NAME
  from            EDITVIEWS
  left outer join RULES                            NEW_EVENT_RULES
               on NEW_EVENT_RULES.ID             = EDITVIEWS.NEW_EVENT_ID
              and NEW_EVENT_RULES.DELETED        = 0
  left outer join RULES                            PRE_LOAD_EVENT_RULES
               on PRE_LOAD_EVENT_RULES.ID        = EDITVIEWS.PRE_LOAD_EVENT_ID
              and PRE_LOAD_EVENT_RULES.DELETED   = 0
  left outer join RULES                            POST_LOAD_EVENT_RULES
               on POST_LOAD_EVENT_RULES.ID       = EDITVIEWS.POST_LOAD_EVENT_ID
              and POST_LOAD_EVENT_RULES.DELETED  = 0
  left outer join RULES                            VALIDATION_EVENT_RULES
               on VALIDATION_EVENT_RULES.ID      = EDITVIEWS.VALIDATION_EVENT_ID
              and VALIDATION_EVENT_RULES.DELETED = 0
  left outer join RULES                            PRE_SAVE_EVENT_RULES
               on PRE_SAVE_EVENT_RULES.ID        = EDITVIEWS.PRE_SAVE_EVENT_ID
              and PRE_SAVE_EVENT_RULES.DELETED   = 0
  left outer join RULES                            POST_SAVE_EVENT_RULES
               on POST_SAVE_EVENT_RULES.ID       = EDITVIEWS.POST_SAVE_EVENT_ID
              and POST_SAVE_EVENT_RULES.DELETED  = 0
 where EDITVIEWS.DELETED = 0

GO

Grant Select on dbo.vwEDITVIEWS to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwEDITVIEWS_FIELDS')
	Drop View dbo.vwEDITVIEWS_FIELDS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/08/2006 Paul.  LIST_NAME is used in Layout manager. 
-- 02/01/2006 Paul.  DB2 does not like comments in the middle of the Create View statement. 
-- 12/02/2007 Paul.  Add data columns. 
-- 12/08/2007 Paul.  Add the view name so that the SearchView can populate the Order By listbox. 
-- 04/02/2008 Paul.  Join to the field validators table. 
-- 05/17/2009 Paul.  Add support for a generic module popup. 
-- 05/22/2009 Paul.  Add MODULE_NAME to allow export. 
-- 06/12/2009 Paul.  Add TOOL_TIP for help hover.
-- 09/12/2009 Paul.  Add FIELD_VALIDATOR_ID it can be edited with the DynamicLayout editor. 
-- 01/19/2010 Paul.  We need to be able to format a Float field to prevent too many decimal places. 
-- 09/13/2010 Paul.  Add relationship fields. 
-- 10/09/2010 Paul.  Add PARENT_FIELD so that we can establish dependent listboxes. 
-- 09/20/2012 Paul.  We need a SCRIPT field that is form specific. 
Create View dbo.vwEDITVIEWS_FIELDS
as
select EDITVIEWS_FIELDS.ID
     , EDITVIEWS_FIELDS.DELETED
     , EDITVIEWS_FIELDS.EDIT_NAME
     , EDITVIEWS_FIELDS.FIELD_INDEX
     , EDITVIEWS_FIELDS.FIELD_TYPE
     , EDITVIEWS_FIELDS.DEFAULT_VIEW
     , EDITVIEWS_FIELDS.DATA_LABEL
     , EDITVIEWS_FIELDS.DATA_FIELD
     , EDITVIEWS_FIELDS.DATA_FORMAT
     , EDITVIEWS_FIELDS.DISPLAY_FIELD
     , EDITVIEWS_FIELDS.CACHE_NAME
     , EDITVIEWS_FIELDS.CACHE_NAME  as LIST_NAME
     , EDITVIEWS_FIELDS.DATA_REQUIRED
     , EDITVIEWS_FIELDS.UI_REQUIRED
     , EDITVIEWS_FIELDS.ONCLICK_SCRIPT
     , EDITVIEWS_FIELDS.FORMAT_SCRIPT
     , EDITVIEWS_FIELDS.FORMAT_TAB_INDEX
     , EDITVIEWS_FIELDS.FORMAT_MAX_LENGTH
     , EDITVIEWS_FIELDS.FORMAT_SIZE
     , EDITVIEWS_FIELDS.FORMAT_ROWS
     , EDITVIEWS_FIELDS.FORMAT_COLUMNS
     , EDITVIEWS_FIELDS.COLSPAN
     , EDITVIEWS_FIELDS.ROWSPAN
     , EDITVIEWS.LABEL_WIDTH
     , EDITVIEWS.FIELD_WIDTH
     , EDITVIEWS.DATA_COLUMNS
     , EDITVIEWS.VIEW_NAME
     , EDITVIEWS_FIELDS.FIELD_VALIDATOR_ID
     , EDITVIEWS_FIELDS.FIELD_VALIDATOR_MESSAGE
     , (case when FIELD_VALIDATORS.ID is not null then 1 else 0 end) as UI_VALIDATOR
     , FIELD_VALIDATORS.VALIDATION_TYPE
     , FIELD_VALIDATORS.REGULAR_EXPRESSION
     , FIELD_VALIDATORS.DATA_TYPE
     , FIELD_VALIDATORS.MININUM_VALUE
     , FIELD_VALIDATORS.MAXIMUM_VALUE
     , FIELD_VALIDATORS.COMPARE_OPERATOR
     , EDITVIEWS_FIELDS.MODULE_TYPE
     , EDITVIEWS.MODULE_NAME
     , FIELD_VALIDATORS.NAME                as FIELD_VALIDATOR_NAME
     , EDITVIEWS_FIELDS.TOOL_TIP
     , EDITVIEWS_FIELDS.RELATED_SOURCE_MODULE_NAME
     , EDITVIEWS_FIELDS.RELATED_SOURCE_VIEW_NAME
     , EDITVIEWS_FIELDS.RELATED_SOURCE_ID_FIELD
     , EDITVIEWS_FIELDS.RELATED_SOURCE_NAME_FIELD
     , EDITVIEWS_FIELDS.RELATED_VIEW_NAME
     , EDITVIEWS_FIELDS.RELATED_ID_FIELD
     , EDITVIEWS_FIELDS.RELATED_NAME_FIELD
     , EDITVIEWS_FIELDS.RELATED_JOIN_FIELD
     , EDITVIEWS_FIELDS.PARENT_FIELD
     , EDITVIEWS.SCRIPT
  from            EDITVIEWS_FIELDS
       inner join EDITVIEWS
               on EDITVIEWS.NAME           = EDITVIEWS_FIELDS.EDIT_NAME
              and EDITVIEWS.DELETED        = 0
  left outer join FIELD_VALIDATORS
               on FIELD_VALIDATORS.ID      = EDITVIEWS_FIELDS.FIELD_VALIDATOR_ID
              and FIELD_VALIDATORS.DELETED = 0
 where EDITVIEWS_FIELDS.DELETED = 0

GO

Grant Select on dbo.vwEDITVIEWS_FIELDS to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwEDITVIEWS_FIELDS_Searching')
	Drop View dbo.vwEDITVIEWS_FIELDS_Searching;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/17/2009 Paul.  Key off of the view name so that we don't have to change other areas of the code. 
Create View dbo.vwEDITVIEWS_FIELDS_Searching
as
select EDITVIEWS_FIELDS_Search.EDIT_NAME
     , EDITVIEWS_Search.VIEW_NAME
     , EDITVIEWS_Search.MODULE_NAME
     , EDITVIEWS_FIELDS_Module.DATA_FIELD
  from      EDITVIEWS_FIELDS                    EDITVIEWS_FIELDS_Search
 inner join EDITVIEWS                           EDITVIEWS_Search
         on EDITVIEWS_Search.NAME             = EDITVIEWS_FIELDS_Search.EDIT_NAME
        and EDITVIEWS_Search.DELETED          = 0
 inner join EDITVIEWS                           EDITVIEWS_Module
         on EDITVIEWS_Module.MODULE_NAME      = EDITVIEWS_Search.MODULE_NAME
        and EDITVIEWS_Module.DELETED          = 0
 inner join EDITVIEWS_FIELDS                    EDITVIEWS_FIELDS_Module
         on EDITVIEWS_FIELDS_Module.EDIT_NAME = EDITVIEWS_Module.NAME
        and EDITVIEWS_FIELDS_Module.DELETED   = 0
 where EDITVIEWS_FIELDS_Search.DELETED   = 0
   and (EDITVIEWS_FIELDS_Module.DEFAULT_VIEW = 0 or EDITVIEWS_FIELDS_Module.DEFAULT_VIEW is null)
   and EDITVIEWS_FIELDS_Module.DATA_FIELD is not null
union
select EDITVIEWS_FIELDS_Search.EDIT_NAME
     , EDITVIEWS_Search.VIEW_NAME
     , EDITVIEWS_Search.MODULE_NAME
     , EDITVIEWS_FIELDS_Module.DISPLAY_FIELD
  from      EDITVIEWS_FIELDS                    EDITVIEWS_FIELDS_Search
 inner join EDITVIEWS                           EDITVIEWS_Search
         on EDITVIEWS_Search.NAME             = EDITVIEWS_FIELDS_Search.EDIT_NAME
        and EDITVIEWS_Search.DELETED          = 0
 inner join EDITVIEWS                           EDITVIEWS_Module
         on EDITVIEWS_Module.MODULE_NAME      = EDITVIEWS_Search.MODULE_NAME
        and EDITVIEWS_Module.DELETED          = 0
 inner join EDITVIEWS_FIELDS                    EDITVIEWS_FIELDS_Module
         on EDITVIEWS_FIELDS_Module.EDIT_NAME = EDITVIEWS_Module.NAME
        and EDITVIEWS_FIELDS_Module.DELETED   = 0
 where EDITVIEWS_FIELDS_Search.DELETED   = 0
   and (EDITVIEWS_FIELDS_Module.DEFAULT_VIEW = 0 or EDITVIEWS_FIELDS_Module.DEFAULT_VIEW is null)
   and EDITVIEWS_FIELDS_Module.DISPLAY_FIELD is not null

GO

Grant Select on dbo.vwEDITVIEWS_FIELDS_Searching to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwEDITVIEWS_RELATIONSHIPS')
	Drop View dbo.vwEDITVIEWS_RELATIONSHIPS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwEDITVIEWS_RELATIONSHIPS
as
select EDITVIEWS_RELATIONSHIPS.ID
     , EDITVIEWS_RELATIONSHIPS.EDIT_NAME
     , EDITVIEWS_RELATIONSHIPS.MODULE_NAME
     , EDITVIEWS_RELATIONSHIPS.TITLE
     , EDITVIEWS_RELATIONSHIPS.CONTROL_NAME
     , EDITVIEWS_RELATIONSHIPS.RELATIONSHIP_ORDER
     , EDITVIEWS_RELATIONSHIPS.NEW_RECORD_ENABLED
     , EDITVIEWS_RELATIONSHIPS.EXISTING_RECORD_ENABLED
     , EDITVIEWS_RELATIONSHIPS.ALTERNATE_VIEW
  from      EDITVIEWS_RELATIONSHIPS
 inner join MODULES
         on MODULES.MODULE_NAME    = EDITVIEWS_RELATIONSHIPS.MODULE_NAME
        and MODULES.DELETED        = 0
        and MODULES.MODULE_ENABLED = 1
 where EDITVIEWS_RELATIONSHIPS.DELETED = 0
   and EDITVIEWS_RELATIONSHIPS.RELATIONSHIP_ENABLED = 1

GO

Grant Select on dbo.vwEDITVIEWS_RELATIONSHIPS to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwEDITVIEWS_RELATIONSHIPS_Layout')
	Drop View dbo.vwEDITVIEWS_RELATIONSHIPS_Layout;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 10/29/2015 Paul.  CONTROL_NAME is need to allow copying of the layout. 
Create View dbo.vwEDITVIEWS_RELATIONSHIPS_Layout
as
select EDITVIEWS_RELATIONSHIPS.ID
     , EDITVIEWS_RELATIONSHIPS.EDIT_NAME
     , EDITVIEWS_RELATIONSHIPS.MODULE_NAME
     , EDITVIEWS_RELATIONSHIPS.TITLE
     , EDITVIEWS_RELATIONSHIPS.CONTROL_NAME
     , EDITVIEWS_RELATIONSHIPS.RELATIONSHIP_ORDER
     , EDITVIEWS_RELATIONSHIPS.RELATIONSHIP_ENABLED
     , EDITVIEWS_RELATIONSHIPS.NEW_RECORD_ENABLED
     , EDITVIEWS_RELATIONSHIPS.EXISTING_RECORD_ENABLED
     , EDITVIEWS_RELATIONSHIPS.ALTERNATE_VIEW
  from      EDITVIEWS_RELATIONSHIPS
 inner join MODULES
         on MODULES.MODULE_NAME    = EDITVIEWS_RELATIONSHIPS.MODULE_NAME
        and MODULES.DELETED        = 0
        and MODULES.MODULE_ENABLED = 1
 where EDITVIEWS_RELATIONSHIPS.DELETED = 0

GO

Grant Select on dbo.vwEDITVIEWS_RELATIONSHIPS_Layout to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwFIELDS_META_DATA')
	Drop View dbo.vwFIELDS_META_DATA;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/21/2006 Paul.  MASS_UPDATE was added in SugarCRM 4.0.
Create View dbo.vwFIELDS_META_DATA
as
select ID
     , NAME
     , LABEL
     , CUSTOM_MODULE
     , DATA_TYPE
     , MAX_SIZE
     , REQUIRED_OPTION
     , AUDITED
     , DEFAULT_VALUE
     , EXT1
     , EXT2
     , EXT3
     , MASS_UPDATE
     , DATE_ENTERED
     , DATE_MODIFIED
     , DATE_MODIFIED_UTC
  from FIELDS_META_DATA
 where DELETED = 0

GO

Grant Select on dbo.vwFIELDS_META_DATA to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwFIELD_VALIDATORS')
	Drop View dbo.vwFIELD_VALIDATORS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/12/2009 Paul.  DATE_MODIFIED is used when editing. 
Create View dbo.vwFIELD_VALIDATORS
as
select ID
     , NAME
     , VALIDATION_TYPE
     , REGULAR_EXPRESSION
     , DATA_TYPE
     , MININUM_VALUE
     , MAXIMUM_VALUE
     , COMPARE_OPERATOR
     , DATE_MODIFIED
     , DATE_MODIFIED_UTC
  from FIELD_VALIDATORS
 where DELETED = 0

GO

Grant Select on dbo.vwFIELD_VALIDATORS to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwFULLTEXT_CATALOGS')
	Drop View dbo.vwFULLTEXT_CATALOGS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- https://msdn.microsoft.com/en-us/library/ms190370(v=sql.90).aspx
Create View dbo.vwFULLTEXT_CATALOGS
as
select FullTextCatalogProperty(name,'ItemCount'            ) as ITEM_COUNT
     , FullTextCatalogProperty(name,'MergeStatus'          ) as MERGE_STATUS
     , FullTextCatalogProperty(name,'PopulateCompletionAge') as POPULATE_COMPLETION_AGE
     , (case FullTextCatalogProperty(name,'PopulateStatus')
        when 0 then 'Idle'
        when 1 then 'Full population in progress'
        when 2 then 'Paused'
        when 3 then 'Throttled'
        when 4 then 'Recovering'
        when 5 then 'Shutdown'
        when 6 then 'Incremental population in progress'
        when 7 then 'Building index'
        when 8 then 'Disk is full. Paused.'
        when 9 then 'Change tracking'
        else cast(FullTextCatalogProperty(name,'PopulateStatus') as varchar(4))
        end) as POPULATE_STATUS
     , FullTextCatalogProperty(name,'ImportStatus'         ) as IMPORT_STATUS
     , FullTextCatalogProperty(name,'IndexSize'            ) as INDEX_SIZE
     , FullTextCatalogProperty(name,'UniqueKeyCount'       ) as UNIQUE_KEY_COUNT
     , dateadd(ss, FullTextCatalogProperty(name, 'PopulateCompletionAge'), '1/1/1990') as LAST_POPULATION_DATE
  from sys.fulltext_catalogs
 where name = db_name() + 'Catalog'
GO

Grant Select on dbo.vwFULLTEXT_CATALOGS to public;
GO

-- select * from vwFULLTEXT_CATALOGS

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwFULLTEXT_DOCUMENT_TYPES')
	Drop View dbo.vwFULLTEXT_DOCUMENT_TYPES;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- https://msdn.microsoft.com/en-us/library/ms190370(v=sql.90).aspx
Create View dbo.vwFULLTEXT_DOCUMENT_TYPES
as
select DOCUMENT_TYPE
  from sys.fulltext_document_types

GO

Grant Select on dbo.vwFULLTEXT_DOCUMENT_TYPES to public;
GO

-- select * from vwFULLTEXT_DOCUMENT_TYPES

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwFULLTEXT_INDEXES')
	Drop View dbo.vwFULLTEXT_INDEXES;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- https://msdn.microsoft.com/en-us/library/ms190370(v=sql.90).aspx
Create View dbo.vwFULLTEXT_INDEXES
as
select object_name(fulltext_indexes.object_id) as TABLE_NAME
  from      sys.fulltext_indexes                    fulltext_indexes
 inner join sys.fulltext_catalogs                   fulltext_catalogs
         on fulltext_catalogs.fulltext_catalog_id = fulltext_indexes.fulltext_catalog_id
 where fulltext_catalogs.name = db_name() + 'Catalog'
GO

Grant Select on dbo.vwFULLTEXT_INDEXES to public;
GO

-- select * from vwFULLTEXT_INDEXES

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwFULLTEXT_Properties')
	Drop View dbo.vwFULLTEXT_Properties;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwFULLTEXT_Properties
as
select substring(@@version, 1, charindex(char(10), @@version)) as SQL_SERVER_VERSION
     , ServerProperty('Edition')             as SQL_SERVER_EDITION
     , db_name()                             as DATABASE_NAME
     , ServerProperty('IsFullTextInstalled') as FULLTEXT_INSTALLED
     , (select fulltext_catalog_id from sys.fulltext_catalogs where name = db_name() + 'Catalog') as FULLTEXT_CATALOG_ID
     , (select 1 from sys.fulltext_document_types where document_type = '.pptx') as OFFICE_DOCUMENT_TYPE
     , (select 1 from sys.fulltext_document_types where document_type = '.pdf' ) as PDF_DOCUMENT_TYPE
GO

Grant Select on dbo.vwFULLTEXT_Properties to public;
GO

-- select * from vwFULLTEXT_Properties

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwGRIDVIEWS')
	Drop View dbo.vwGRIDVIEWS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/22/2010 Paul.  Add support for Business Rules Framework. 
-- 09/20/2012 Paul.  We need a SCRIPT field that is form specific. 
-- 02/22/2021 Paul.  The React client needs a way to determine the default sort, besides NAME asc. 
Create View dbo.vwGRIDVIEWS
as
select GRIDVIEWS.ID
     , GRIDVIEWS.NAME
     , GRIDVIEWS.MODULE_NAME
     , GRIDVIEWS.VIEW_NAME
     , GRIDVIEWS.SCRIPT
     , GRIDVIEWS.SORT_FIELD       
     , GRIDVIEWS.SORT_DIRECTION   
     , PRE_LOAD_EVENT_RULES.ID      as PRE_LOAD_EVENT_ID
     , PRE_LOAD_EVENT_RULES.NAME    as PRE_LOAD_EVENT_NAME
     , POST_LOAD_EVENT_RULES.ID     as POST_LOAD_EVENT_ID
     , POST_LOAD_EVENT_RULES.NAME   as POST_LOAD_EVENT_NAME
  from            GRIDVIEWS
  left outer join RULES                            PRE_LOAD_EVENT_RULES
               on PRE_LOAD_EVENT_RULES.ID        = GRIDVIEWS.PRE_LOAD_EVENT_ID
              and PRE_LOAD_EVENT_RULES.DELETED   = 0
  left outer join RULES                            POST_LOAD_EVENT_RULES
               on POST_LOAD_EVENT_RULES.ID       = GRIDVIEWS.POST_LOAD_EVENT_ID
              and POST_LOAD_EVENT_RULES.DELETED  = 0
 where GRIDVIEWS.DELETED = 0

GO

Grant Select on dbo.vwGRIDVIEWS to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwGRIDVIEWS_COLUMNS')
	Drop View dbo.vwGRIDVIEWS_COLUMNS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 05/02/2006 Paul.  Add URL_ASSIGNED_FIELD to support ACL. 
-- 05/22/2009 Paul.  Add MODULE_NAME to allow export. 
-- 02/16/2010 Paul.  Add MODULE_TYPE so that we can lookup custom field IDs. 
-- 10/09/2010 Paul.  Add PARENT_FIELD so that we can establish dependent listboxes. 
-- 09/20/2012 Paul.  We need a SCRIPT field that is form specific. 
Create View dbo.vwGRIDVIEWS_COLUMNS
as
select GRIDVIEWS_COLUMNS.ID
     , GRIDVIEWS_COLUMNS.DELETED
     , GRIDVIEWS_COLUMNS.GRID_NAME
     , GRIDVIEWS_COLUMNS.COLUMN_INDEX
     , GRIDVIEWS_COLUMNS.COLUMN_TYPE
     , GRIDVIEWS_COLUMNS.DEFAULT_VIEW
     , GRIDVIEWS_COLUMNS.HEADER_TEXT
     , GRIDVIEWS_COLUMNS.SORT_EXPRESSION
     , GRIDVIEWS_COLUMNS.ITEMSTYLE_WIDTH
     , GRIDVIEWS_COLUMNS.ITEMSTYLE_CSSCLASS
     , GRIDVIEWS_COLUMNS.ITEMSTYLE_HORIZONTAL_ALIGN
     , GRIDVIEWS_COLUMNS.ITEMSTYLE_VERTICAL_ALIGN
     , GRIDVIEWS_COLUMNS.ITEMSTYLE_WRAP
     , GRIDVIEWS_COLUMNS.DATA_FIELD
     , GRIDVIEWS_COLUMNS.DATA_FORMAT
     , GRIDVIEWS_COLUMNS.URL_FIELD
     , GRIDVIEWS_COLUMNS.URL_FORMAT
     , GRIDVIEWS_COLUMNS.URL_TARGET
     , GRIDVIEWS_COLUMNS.LIST_NAME
     , GRIDVIEWS_COLUMNS.URL_MODULE
     , GRIDVIEWS_COLUMNS.URL_ASSIGNED_FIELD
     , GRIDVIEWS.VIEW_NAME
     , GRIDVIEWS.MODULE_NAME
     , GRIDVIEWS_COLUMNS.MODULE_TYPE
     , GRIDVIEWS_COLUMNS.PARENT_FIELD
     , GRIDVIEWS.SCRIPT
  from      GRIDVIEWS_COLUMNS
 inner join GRIDVIEWS
         on GRIDVIEWS.NAME    = GRIDVIEWS_COLUMNS.GRID_NAME
        and GRIDVIEWS.DELETED = 0
 where GRIDVIEWS_COLUMNS.DELETED = 0

GO

Grant Select on dbo.vwGRIDVIEWS_COLUMNS to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwGRIDVIEWS_RULES')
	Drop View dbo.vwGRIDVIEWS_RULES;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwGRIDVIEWS_RULES
as
select GRIDVIEWS.ID
     , GRIDVIEWS.NAME
     , GRIDVIEWS.MODULE_NAME
     , GRIDVIEWS.VIEW_NAME
     , PRE_LOAD_EVENT_RULES.ID      as PRE_LOAD_EVENT_ID
     , PRE_LOAD_EVENT_RULES.NAME    as PRE_LOAD_EVENT_NAME
     , PRE_LOAD_EVENT_RULES.XOML    as PRE_LOAD_EVENT_XOML
     , POST_LOAD_EVENT_RULES.ID     as POST_LOAD_EVENT_ID
     , POST_LOAD_EVENT_RULES.NAME   as POST_LOAD_EVENT_NAME
     , POST_LOAD_EVENT_RULES.XOML   as POST_LOAD_EVENT_XOML
  from            GRIDVIEWS
  left outer join RULES                            PRE_LOAD_EVENT_RULES
               on PRE_LOAD_EVENT_RULES.ID        = GRIDVIEWS.PRE_LOAD_EVENT_ID
              and PRE_LOAD_EVENT_RULES.DELETED   = 0
  left outer join RULES                            POST_LOAD_EVENT_RULES
               on POST_LOAD_EVENT_RULES.ID       = GRIDVIEWS.POST_LOAD_EVENT_ID
              and POST_LOAD_EVENT_RULES.DELETED  = 0
 where GRIDVIEWS.DELETED = 0

GO

Grant Select on dbo.vwGRIDVIEWS_RULES to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwIMAGES')
	Drop View dbo.vwIMAGES;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/23/2010 Paul.  Every module should have a NAME field. 
-- 05/27/2016 Paul.  REST API requires DATE_MODIFIED_UTC. 
Create View dbo.vwIMAGES
as
select IMAGES.ID
     , IMAGES.PARENT_ID
     , IMAGES.FILENAME
     , IMAGES.FILENAME                  as NAME
     , IMAGES.FILE_MIME_TYPE
     , IMAGES.DATE_ENTERED 
     , IMAGES.DATE_MODIFIED_UTC
     , USERS_CREATED_BY.USER_NAME       as CREATED_BY
     , dbo.fnFullName(USERS_CREATED_BY.FIRST_NAME , USERS_CREATED_BY.LAST_NAME ) as CREATED_BY_NAME
  from            IMAGES
  left outer join USERS USERS_CREATED_BY
               on USERS_CREATED_BY.ID = IMAGES.CREATED_BY
 where IMAGES.DELETED = 0

GO

Grant Select on dbo.vwIMAGES to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwIMAGES_CONTENT')
	Drop View dbo.vwIMAGES_CONTENT;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwIMAGES_CONTENT
as
select ID
     , CONTENT
  from IMAGES
 where DELETED = 0

GO

Grant Select on dbo.vwIMAGES_CONTENT to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwIMPORT_MAPS')
	Drop View dbo.vwIMPORT_MAPS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/01/2010 Paul.  Add ASSIGNED_TO_NAME so that we can display the full name in lists like Sugar. 
-- 08/01/2010 Paul.  Add CREATED_BY_NAME and MODIFIED_BY_NAME so that we can display the full name in lists like Sugar. 
-- 09/17/2013 Paul.  Add Business Rules to import. 
Create View dbo.vwIMPORT_MAPS
as
select IMPORT_MAPS.ID
     , IMPORT_MAPS.NAME
     , IMPORT_MAPS.SOURCE
     , IMPORT_MAPS.MODULE
     , IMPORT_MAPS.HAS_HEADER
     , IMPORT_MAPS.IS_PUBLISHED
     , IMPORT_MAPS.ASSIGNED_USER_ID
     , IMPORT_MAPS.DATE_ENTERED
     , IMPORT_MAPS.DATE_MODIFIED
     , USERS_ASSIGNED.USER_NAME    as ASSIGNED_TO
     , USERS_CREATED_BY.USER_NAME  as CREATED_BY
     , USERS_MODIFIED_BY.USER_NAME as MODIFIED_BY
     , dbo.fnFullName(USERS_ASSIGNED.FIRST_NAME   , USERS_ASSIGNED.LAST_NAME   ) as ASSIGNED_TO_NAME
     , dbo.fnFullName(USERS_CREATED_BY.FIRST_NAME , USERS_CREATED_BY.LAST_NAME ) as CREATED_BY_NAME
     , dbo.fnFullName(USERS_MODIFIED_BY.FIRST_NAME, USERS_MODIFIED_BY.LAST_NAME) as MODIFIED_BY_NAME
     , IMPORT_MAPS.RULES_XML
  from            IMPORT_MAPS
  left outer join USERS USERS_ASSIGNED
               on USERS_ASSIGNED.ID    = IMPORT_MAPS.ASSIGNED_USER_ID
  left outer join USERS USERS_CREATED_BY
               on USERS_CREATED_BY.ID  = IMPORT_MAPS.CREATED_BY
  left outer join USERS USERS_MODIFIED_BY
               on USERS_MODIFIED_BY.ID = IMPORT_MAPS.MODIFIED_USER_ID
 where IMPORT_MAPS.DELETED = 0

GO

Grant Select on dbo.vwIMPORT_MAPS to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwLANGUAGES')
	Drop View dbo.vwLANGUAGES;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 05/20/2008 Paul.  NAME should no longer be made lower case. 
-- 05/20/2008 Paul.  Include ACTIVE flag to reduce memory foot print. 
-- 04/02/2019 Paul.  DATE_MODIFIED and DATE_ENTERED for detail view. 
Create View dbo.vwLANGUAGES
as
select ID
     , NAME
     , LCID
     , ACTIVE
     , NATIVE_NAME
     , DISPLAY_NAME
     , DATE_ENTERED
     , DATE_MODIFIED
     , DATE_MODIFIED_UTC
  from LANGUAGES
 where DELETED = 0

GO

Grant Select on dbo.vwLANGUAGES to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwMODULES')
	Drop View dbo.vwMODULES;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/28/2006 Paul.  ACL needs access to new IS_ADMIN field. 
-- 05/02/2006 Paul.  Add TABLE_NAME as direct table queries are required by SOAP and we need a mapping. 
-- 07/20/2009 Paul.  Add SYNC_ENABLED flag to determine if module can be sync'd.
-- 09/03/2009 Paul.  Add IMPORT_ENABLED for module builder. 
-- 09/08/2009 Paul.  Custom Paging can be enabled /disabled per module. 
-- 12/02/2009 Paul.  Add the ability to disable Mass Updates. 
-- 01/13/2010 Paul.  Allow default search to be disabled. 
-- 04/01/2010 Paul.  Add Exchange Sync flag. 
-- 04/04/2010 Paul.  Add Exchange Folders flag. 
-- 04/05/2010 Paul.  Add Exchange Create Parent flag. Need to be able to disable Account creation. 
-- 06/18/2011 Paul.  REST_ENABLED provides a way to enable/disable a module in the REST API. 
-- 12/05/2012 Paul.  Surface RT requires a NAME field. 
-- 03/14/2014 Paul.  DUPLICATE_CHECHING_ENABLED enables duplicate checking. 
-- 11/01/2017 Paul.  Use a module-based flag so that Record Level Security is only enabled when needed. 
-- 05/01/2019 Paul.  We need a flag so that the React client can determine if the module is Process enabled. 
-- 07/31/2019 Paul.  DEFAULT_SORT is a new field for the React Client. 
Create View dbo.vwMODULES
as
select ID
     , MODULE_NAME as NAME
     , MODULE_NAME
     , DISPLAY_NAME
     , RELATIVE_PATH
     , MODULE_ENABLED
     , TAB_ENABLED
     , TAB_ORDER
     , PORTAL_ENABLED
     , CUSTOM_ENABLED
     , IS_ADMIN
     , TABLE_NAME
     , REPORT_ENABLED
     , IMPORT_ENABLED
     , SYNC_ENABLED
     , MOBILE_ENABLED
     , CUSTOM_PAGING
     , DATE_MODIFIED
     , DATE_MODIFIED_UTC
     , MASS_UPDATE_ENABLED
     , DEFAULT_SEARCH_ENABLED
     , EXCHANGE_SYNC
     , EXCHANGE_FOLDERS
     , EXCHANGE_CREATE_PARENT
     , REST_ENABLED
     , DUPLICATE_CHECHING_ENABLED
     , RECORD_LEVEL_SECURITY_ENABLED
     , DEFAULT_SORT
     , (case when exists(select * from vwSqlColumns where vwSqlColumns.ObjectName = 'vw' + MODULES.TABLE_NAME and vwSqlColumns.ColumnName = 'PENDING_PROCESS_ID') then 1 else 0 end) as PROCESS_ENABLED
  from MODULES
 where MODULE_ENABLED = 1
   and DELETED        = 0

GO

Grant Select on dbo.vwMODULES to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwMODULES_ACL_ROLES_Cross')
	Drop View dbo.vwMODULES_ACL_ROLES_Cross;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/29/2006 Paul.  DB2 has a problem with cross joins, so place in a view so that it can easily be converted. 
-- 01/16/2010 Paul.  We need the table name so that we can get the ACL Fields for a module. 
Create View dbo.vwMODULES_ACL_ROLES_Cross
as
select MODULES.MODULE_NAME
     , MODULES.TABLE_NAME
     , MODULES.DISPLAY_NAME
     , MODULES.MODULE_ENABLED
     , MODULES.TAB_ENABLED
     , MODULES.TAB_ORDER
     , MODULES.IS_ADMIN
     , ACL_ROLES.ID           as ROLE_ID
  from      MODULES
 cross join ACL_ROLES
 where MODULES.DELETED = 0
   and ACL_ROLES.DELETED = 0

GO

Grant Select on dbo.vwMODULES_ACL_ROLES_Cross to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwMODULES_CONFIGURE_TABS')
	Drop View dbo.vwMODULES_CONFIGURE_TABS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/27/2007 Paul.  We need to have access to disabled modules. 
-- 11/17/2007 Paul.  Add MOBILE_ENABLED flag to determine if module should be shown on mobile browser.
Create View dbo.vwMODULES_CONFIGURE_TABS
as
select ID
     , MODULE_NAME
     , DISPLAY_NAME
     , RELATIVE_PATH
     , MODULE_ENABLED
     , TAB_ENABLED
     , TAB_ORDER
     , PORTAL_ENABLED
     , CUSTOM_ENABLED
     , IS_ADMIN
     , TABLE_NAME
     , REPORT_ENABLED
     , MOBILE_ENABLED
  from MODULES
 where DELETED  = 0
   and IS_ADMIN = 0

GO

Grant Select on dbo.vwMODULES_CONFIGURE_TABS to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwMODULES_Edit')
	Drop View dbo.vwMODULES_Edit;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/08/2010 Paul.  We need a separate view for the list as the default view filters by MODULE_ENABLED 
-- and we don't want to filter by that flag in the ListView, DetailView or EditView. 
-- 06/18/2011 Paul.  REST_ENABLED provides a way to enable/disable a module in the REST API. 
-- 03/14/2014 Paul.  DUPLICATE_CHECHING_ENABLED enables duplicate checking. 
-- 11/01/2017 Paul.  Use a module-based flag so that Record Level Security is only enabled when needed. 
-- 07/31/2019 Paul.  DEFAULT_SORT is a new field for the React Client. 
Create View dbo.vwMODULES_Edit
as
select ID
     , MODULE_NAME
     , DISPLAY_NAME
     , RELATIVE_PATH
     , MODULE_ENABLED
     , TAB_ENABLED
     , TAB_ORDER
     , PORTAL_ENABLED
     , CUSTOM_ENABLED
     , IS_ADMIN
     , TABLE_NAME
     , REPORT_ENABLED
     , IMPORT_ENABLED
     , SYNC_ENABLED
     , MOBILE_ENABLED
     , CUSTOM_PAGING
     , DATE_MODIFIED
     , DATE_MODIFIED_UTC
     , MASS_UPDATE_ENABLED
     , DEFAULT_SEARCH_ENABLED
     , EXCHANGE_SYNC
     , EXCHANGE_FOLDERS
     , EXCHANGE_CREATE_PARENT
     , REST_ENABLED
     , DUPLICATE_CHECHING_ENABLED
     , RECORD_LEVEL_SECURITY_ENABLED
     , DEFAULT_SORT
  from MODULES
 where DELETED        = 0

GO

Grant Select on dbo.vwMODULES_Edit to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwMODULES_List')
	Drop View dbo.vwMODULES_List;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/08/2010 Paul.  We need a separate view for the list as the default view filters by MODULE_ENABLED 
-- and we don't want to filter by that flag in the ListView, DetailView or EditView. 
-- 06/18/2011 Paul.  REST_ENABLED provides a way to enable/disable a module in the REST API. 
-- 01/19/2013 Paul.  This view is not using on Surface RT. 
-- 03/14/2014 Paul.  DUPLICATE_CHECHING_ENABLED enables duplicate checking. 
-- 07/31/2019 Paul.  DEFAULT_SORT is a new field for the React Client. 
Create View dbo.vwMODULES_List
as
select ID
     , MODULE_NAME as NAME
     , MODULE_NAME
     , DISPLAY_NAME
     , RELATIVE_PATH
     , MODULE_ENABLED
     , TAB_ENABLED
     , TAB_ORDER
     , PORTAL_ENABLED
     , CUSTOM_ENABLED
     , IS_ADMIN
     , TABLE_NAME
     , REPORT_ENABLED
     , IMPORT_ENABLED
     , SYNC_ENABLED
     , MOBILE_ENABLED
     , CUSTOM_PAGING
     , DATE_MODIFIED
     , DATE_MODIFIED_UTC
     , MASS_UPDATE_ENABLED
     , DEFAULT_SEARCH_ENABLED
     , EXCHANGE_SYNC
     , EXCHANGE_FOLDERS
     , EXCHANGE_CREATE_PARENT
     , REST_ENABLED
     , DUPLICATE_CHECHING_ENABLED
     , RECORD_LEVEL_SECURITY_ENABLED
     , DEFAULT_SORT
  from MODULES
 where DELETED        = 0

GO

Grant Select on dbo.vwMODULES_List to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwMODULES_USERS_Cross')
	Drop View dbo.vwMODULES_USERS_Cross;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/29/2006 Paul.  DB2 has a problem with cross joins, so place in a view so that it can easily be converted. 
-- 05/20/2006 Paul.  Add REPORT_ENABLED flag as we need to restrict the list to enabled and accessible modules. 
-- 10/06/2006 Paul.  Add IMPORT_ENABLED if the module can allow importing. 
-- 11/17/2007 Paul.  Add MOBILE_ENABLED. 
-- 10/26/2009 Paul.  Add PORTAL_ENABLED. 
-- 12/06/2009 Paul.  We need the ID and TABLE_NAME when generating the SemanticModel for the ReportBuilder. 
Create View dbo.vwMODULES_USERS_Cross
as
select MODULES.MODULE_NAME
     , MODULES.DISPLAY_NAME
     , MODULES.RELATIVE_PATH
     , MODULES.MODULE_ENABLED
     , MODULES.TAB_ENABLED
     , MODULES.TAB_ORDER
     , MODULES.REPORT_ENABLED
     , MODULES.IMPORT_ENABLED
     , MODULES.IS_ADMIN
     , USERS.ID           as USER_ID
     , MODULES.MOBILE_ENABLED
     , MODULES.PORTAL_ENABLED
     , MODULES.ID
     , MODULES.TABLE_NAME
  from      MODULES
 cross join USERS
 where MODULES.DELETED = 0
   and USERS.DELETED   = 0

GO

Grant Select on dbo.vwMODULES_USERS_Cross to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwOAUTHKEYS')
	Drop View dbo.vwOAUTHKEYS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwOAUTHKEYS
as
select NAME
     , ASSIGNED_USER_ID
     , TOKEN
     , SECRET
     , VERIFIER
  from OAUTHKEYS
 where DELETED = 0

GO

Grant Select on dbo.vwOAUTHKEYS to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwOAUTH_TOKENS')
	Drop View dbo.vwOAUTH_TOKENS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/05/2015 Paul.  Google now uses OAuth 2.0. 
Create View dbo.vwOAUTH_TOKENS
as
select NAME
     , ASSIGNED_USER_ID
     , TOKEN           
     , SECRET          
     , TOKEN_EXPIRES_AT
     , REFRESH_TOKEN   
  from OAUTH_TOKENS
 where DELETED = 0

GO

Grant Select on dbo.vwOAUTH_TOKENS to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwREACT_CUSTOM_VIEWS')
	Drop View dbo.vwREACT_CUSTOM_VIEWS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwREACT_CUSTOM_VIEWS
as
select REACT_CUSTOM_VIEWS.ID
     , REACT_CUSTOM_VIEWS.NAME
     , REACT_CUSTOM_VIEWS.MODULE_NAME
     , REACT_CUSTOM_VIEWS.CATEGORY
     , MODULES.IS_ADMIN
     , REACT_CUSTOM_VIEWS.CONTENT
  from      REACT_CUSTOM_VIEWS
 inner join MODULES
         on MODULES.MODULE_NAME    = REACT_CUSTOM_VIEWS.MODULE_NAME
        and MODULES.DELETED        = 0
        and MODULES.MODULE_ENABLED = 1
 where REACT_CUSTOM_VIEWS.DELETED = 0

GO

Grant Select on dbo.vwREACT_CUSTOM_VIEWS to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwRELATIONSHIPS')
	Drop View dbo.vwRELATIONSHIPS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwRELATIONSHIPS
as
select ID
     , RELATIONSHIP_NAME             
     , LHS_MODULE                    
     , LHS_TABLE                     
     , LHS_KEY                       
     , RHS_MODULE                    
     , RHS_TABLE                     
     , RHS_KEY                       
     , JOIN_TABLE                    
     , JOIN_KEY_LHS                  
     , JOIN_KEY_RHS                  
     , RELATIONSHIP_TYPE             
     , RELATIONSHIP_ROLE_COLUMN      
     , RELATIONSHIP_ROLE_COLUMN_VALUE
     , REVERSE                       
  from RELATIONSHIPS
 where DELETED = 0

GO

Grant Select on dbo.vwRELATIONSHIPS to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSAVED_SEARCH')
	Drop View dbo.vwSAVED_SEARCH;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/01/2010 Paul.  Store a copy of the DEFAULT_SEARCH_ID in the table so that we don't need to read the XML in order to get the value. 
Create View dbo.vwSAVED_SEARCH
as
select ID
     , NAME
     , ASSIGNED_USER_ID
     , SEARCH_MODULE
     , DEFAULT_SEARCH_ID
     , DATE_MODIFIED
     , CONTENTS
  from SAVED_SEARCH
 where DELETED = 0

GO

Grant Select on dbo.vwSAVED_SEARCH to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSCHEDULERS')
	Drop View dbo.vwSCHEDULERS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/01/2010 Paul.  Add CREATED_BY_NAME and MODIFIED_BY_NAME so that we can display the full name in lists like Sugar. 
Create View dbo.vwSCHEDULERS
as
select SCHEDULERS.ID
     , SCHEDULERS.NAME
     , SCHEDULERS.JOB
     , SCHEDULERS.DATE_TIME_START
     , SCHEDULERS.DATE_TIME_END
     , SCHEDULERS.JOB_INTERVAL
     , SCHEDULERS.TIME_FROM
     , SCHEDULERS.TIME_TO
     , SCHEDULERS.LAST_RUN
     , SCHEDULERS.STATUS
     , SCHEDULERS.CATCH_UP
     , SCHEDULERS.DATE_ENTERED
     , SCHEDULERS.DATE_MODIFIED
     , USERS_CREATED_BY.USER_NAME  as CREATED_BY
     , USERS_MODIFIED_BY.USER_NAME as MODIFIED_BY
     , SCHEDULERS.CREATED_BY       as CREATED_BY_ID
     , dbo.fnFullName(USERS_CREATED_BY.FIRST_NAME , USERS_CREATED_BY.LAST_NAME ) as CREATED_BY_NAME
     , dbo.fnFullName(USERS_MODIFIED_BY.FIRST_NAME, USERS_MODIFIED_BY.LAST_NAME) as MODIFIED_BY_NAME
  from            SCHEDULERS
  left outer join USERS                      USERS_CREATED_BY
               on USERS_CREATED_BY.ID      = SCHEDULERS.CREATED_BY
  left outer join USERS                      USERS_MODIFIED_BY
               on USERS_MODIFIED_BY.ID     = SCHEDULERS.MODIFIED_USER_ID
 where SCHEDULERS.DELETED = 0

GO

Grant Select on dbo.vwSCHEDULERS to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSHORTCUTS')
	Drop View dbo.vwSHORTCUTS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/28/2006 Paul.  Added SHORTCUT_MODULE to help with ACL. 
-- 04/28/2006 Paul.  Added SHORTCUT_ACLTYPE to help with ACL. 
-- 03/29/2019 Paul.  All modules must have a name field. 
-- 04/01/2019 Paul.  DATE_MODIFIED and DATE_ENTERED for detail view. 
Create View dbo.vwSHORTCUTS
as
select ID
     , DISPLAY_NAME  as NAME
     , MODULE_NAME
     , DISPLAY_NAME
     , RELATIVE_PATH
     , IMAGE_NAME
     , SHORTCUT_ENABLED
     , SHORTCUT_ORDER
     , SHORTCUT_MODULE
     , SHORTCUT_ACLTYPE
     , DATE_ENTERED
     , DATE_MODIFIED
     , DATE_MODIFIED_UTC
  from SHORTCUTS
 where DELETED = 0

GO

Grant Select on dbo.vwSHORTCUTS to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSHORTCUTS_Edit')
	Drop View dbo.vwSHORTCUTS_Edit;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwSHORTCUTS_Edit
as
select *
  from vwSHORTCUTS

GO

Grant Select on dbo.vwSHORTCUTS_Edit to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSHORTCUTS_USERS_Cross')
	Drop View dbo.vwSHORTCUTS_USERS_Cross;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/29/2006 Paul.  DB2 has a problem with cross joins, so place in a view so that it can easily be converted. 
-- 11/22/2007 Paul.  Only show the shortcut if the module of the shortcut is enabled. 
-- 03/04/2008 Paul.  Admin modules are not ment to be disabled, so show the short cuts even if they are disabled. 
-- 03/11/2008 Paul.  Must always check the deleted flag. 
Create View dbo.vwSHORTCUTS_USERS_Cross
as
select SHORTCUTS.MODULE_NAME
     , SHORTCUTS.DISPLAY_NAME
     , SHORTCUTS.RELATIVE_PATH
     , SHORTCUTS.IMAGE_NAME
     , SHORTCUTS.SHORTCUT_ENABLED
     , SHORTCUTS.SHORTCUT_ORDER
     , SHORTCUTS.SHORTCUT_MODULE
     , SHORTCUTS.SHORTCUT_ACLTYPE
     , USERS.ID                   as USER_ID
  from      SHORTCUTS
 inner join MODULES
         on MODULES.MODULE_NAME    = SHORTCUTS.SHORTCUT_MODULE
        and MODULES.DELETED        = 0
        and (MODULES.MODULE_ENABLED = 1 or MODULES.IS_ADMIN = 1)
 cross join USERS
 where SHORTCUTS.DELETED = 0

GO

Grant Select on dbo.vwSHORTCUTS_USERS_Cross to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSYSTEM_EVENTS')
	Drop View dbo.vwSYSTEM_EVENTS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwSYSTEM_EVENTS
as
select DATE_ENTERED
     , TABLE_ID
     , TABLE_NAME
     , TABLE_ACTION
  from SYSTEM_EVENTS

GO

Grant Select on dbo.vwSYSTEM_EVENTS to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSYSTEM_LOG')
	Drop View dbo.vwSYSTEM_LOG;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 03/18/2019 Paul.  All views should have a NAME field. 
Create View dbo.vwSYSTEM_LOG
as
select ID
     , DATE_ENTERED
     , USER_ID
     , USER_NAME
     , MACHINE
     , ASPNET_SESSIONID
     , REMOTE_HOST
     , SERVER_HOST
     , TARGET
     , RELATIVE_PATH
     , PARAMETERS
     , ERROR_TYPE
     , FILE_NAME
     , METHOD
     , LINE_NUMBER
     , MESSAGE
     , MESSAGE as NAME
  from SYSTEM_LOG

GO

Grant Select on dbo.vwSYSTEM_LOG to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSYSTEM_REST_PROCEDURES')
	Drop View dbo.vwSYSTEM_REST_PROCEDURES;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/25/2020 Paul.  We need a way to call a generic procedure.  Security is still managed through SYSTEM_REST_TABLES. 
Create View dbo.vwSYSTEM_REST_PROCEDURES
as
select SYSTEM_REST_TABLES.TABLE_NAME
     , SYSTEM_REST_TABLES.IS_SYSTEM
     , SYSTEM_REST_TABLES.IS_RELATIONSHIP
     , SYSTEM_REST_TABLES.DEPENDENT_LEVEL
     , SYSTEM_REST_TABLES.VIEW_NAME
     , SYSTEM_REST_TABLES.MODULE_NAME
     , SYSTEM_REST_TABLES.MODULE_NAME_RELATED
     , SYSTEM_REST_TABLES.MODULE_SPECIFIC
     , SYSTEM_REST_TABLES.MODULE_FIELD_NAME
     , SYSTEM_REST_TABLES.IS_ASSIGNED
     , SYSTEM_REST_TABLES.ASSIGNED_FIELD_NAME
     , SYSTEM_REST_TABLES.HAS_CUSTOM
     , SYSTEM_REST_TABLES.REQUIRED_FIELDS
     , null as LIST_VIEW
     , null as EDIT_VIEW
  from            SYSTEM_REST_TABLES
       inner join vwSqlProcedures
               on vwSqlProcedures.NAME        = SYSTEM_REST_TABLES.VIEW_NAME
  left outer join MODULES
               on MODULES.MODULE_NAME         = SYSTEM_REST_TABLES.MODULE_NAME
              and MODULES.DELETED             = 0
 where  SYSTEM_REST_TABLES.DELETED = 0
   and (SYSTEM_REST_TABLES.MODULE_NAME         is null or (MODULES.MODULE_ENABLED         = 1))

GO

Grant Select on dbo.vwSYSTEM_REST_PROCEDURES to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSYSTEM_REST_TABLES')
	Drop View dbo.vwSYSTEM_REST_TABLES;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 05/25/2011 Paul.  Tables available to the REST API are not bound by the SYNC_ENABLED flag. 
-- 06/18/2011 Paul.  SYSTEM_REST_TABLES are nearly identical to SYSTEM_REST_TABLES,
-- but the Module tables typically refer to the base view instead of the raw table. 
-- 09/26/2016 Paul.  Use vwSqlViews so that collation can be handled in one area. 
-- 08/01/2019 Paul.  We need a ListView and EditView flags for the Rest Client. 
-- 08/02/2019 Paul.  The React Client will need access to views that require a filter, like CAMPAIGN_ID. 
Create View dbo.vwSYSTEM_REST_TABLES
as
select SYSTEM_REST_TABLES.TABLE_NAME
     , SYSTEM_REST_TABLES.IS_SYSTEM
     , SYSTEM_REST_TABLES.IS_RELATIONSHIP
     , SYSTEM_REST_TABLES.DEPENDENT_LEVEL
     , SYSTEM_REST_TABLES.VIEW_NAME
     , SYSTEM_REST_TABLES.MODULE_NAME
     , SYSTEM_REST_TABLES.MODULE_NAME_RELATED
     , SYSTEM_REST_TABLES.MODULE_SPECIFIC
     , SYSTEM_REST_TABLES.MODULE_FIELD_NAME
     , SYSTEM_REST_TABLES.IS_ASSIGNED
     , SYSTEM_REST_TABLES.ASSIGNED_FIELD_NAME
     , SYSTEM_REST_TABLES.HAS_CUSTOM
     , SYSTEM_REST_TABLES.REQUIRED_FIELDS
     , isnull(LIST_VIEWS.VIEW_NAME, SYSTEM_REST_TABLES.VIEW_NAME) as LIST_VIEW
     , isnull(EDIT_VIEWS.VIEW_NAME, SYSTEM_REST_TABLES.VIEW_NAME) as EDIT_VIEW
  from            SYSTEM_REST_TABLES
       inner join vwSqlViews                    TABLES
               on TABLES.VIEW_NAME            = SYSTEM_REST_TABLES.VIEW_NAME
  left outer join vwSqlViews                    LIST_VIEWS
               on LIST_VIEWS.VIEW_NAME        = SYSTEM_REST_TABLES.VIEW_NAME + '_List'
  left outer join vwSqlViews                    EDIT_VIEWS
               on EDIT_VIEWS.VIEW_NAME        = SYSTEM_REST_TABLES.VIEW_NAME + '_Edit'
  left outer join MODULES
               on MODULES.MODULE_NAME         = SYSTEM_REST_TABLES.MODULE_NAME
              and MODULES.DELETED             = 0
  left outer join MODULES                       RELATED_MODULES
               on RELATED_MODULES.MODULE_NAME = SYSTEM_REST_TABLES.MODULE_NAME_RELATED
              and RELATED_MODULES.DELETED     = 0
 where  SYSTEM_REST_TABLES.DELETED = 0
   and (SYSTEM_REST_TABLES.MODULE_NAME         is null or (MODULES.MODULE_ENABLED         = 1) or SYSTEM_REST_TABLES.MODULE_NAME = 'Images')
   and (SYSTEM_REST_TABLES.MODULE_NAME_RELATED is null or (RELATED_MODULES.MODULE_ENABLED = 1))

GO

/*
select *
  from vwSYSTEM_REST_TABLES
 order by IS_SYSTEM desc, IS_RELATIONSHIP, DEPENDENT_LEVEL, TABLE_NAME
*/


Grant Select on dbo.vwSYSTEM_REST_TABLES to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwTEAMS')
	Drop View dbo.vwTEAMS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
-- 08/01/2010 Paul.  Add CREATED_BY_NAME and MODIFIED_BY_NAME so that we can display the full name in lists like Sugar. 
-- 04/12/2016 Paul.  Add parent team and custom fields. 
Create View dbo.vwTEAMS
as
select TEAMS.ID
     , TEAMS.NAME
     , TEAMS.DESCRIPTION
     , TEAMS.PRIVATE
     , TEAMS.DATE_ENTERED
     , TEAMS.DATE_MODIFIED
     , TEAMS.DATE_MODIFIED_UTC
     , USERS_CREATED_BY.USER_NAME  as CREATED_BY
     , USERS_MODIFIED_BY.USER_NAME as MODIFIED_BY
     , dbo.fnFullName(USERS_CREATED_BY.FIRST_NAME , USERS_CREATED_BY.LAST_NAME ) as CREATED_BY_NAME
     , dbo.fnFullName(USERS_MODIFIED_BY.FIRST_NAME, USERS_MODIFIED_BY.LAST_NAME) as MODIFIED_BY_NAME
     , TEAMS.PARENT_ID
     , PARENT_TEAMS.NAME           as PARENT_NAME
     , TEAMS_CSTM.*
  from            TEAMS
  left outer join TEAMS                  PARENT_TEAMS
               on PARENT_TEAMS.ID      = TEAMS.PARENT_ID
              and PARENT_TEAMS.DELETED = 0
  left outer join TEAMS_CSTM
               on TEAMS_CSTM.ID_C      = TEAMS.ID
  left outer join USERS USERS_CREATED_BY
               on USERS_CREATED_BY.ID  = TEAMS.CREATED_BY
  left outer join USERS USERS_MODIFIED_BY
               on USERS_MODIFIED_BY.ID = TEAMS.MODIFIED_USER_ID
 where TEAMS.DELETED = 0

GO

Grant Select on dbo.vwTEAMS to public;
GO

 
if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwTEAM_MEMBERSHIPS')
	Drop View dbo.vwTEAM_MEMBERSHIPS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/24/2006 Paul.  We need to make sure that the columns do not match that of any view that will be joined to this one. 
Create View dbo.vwTEAM_MEMBERSHIPS
as
select ID      as MEMBERSHIP_ID
     , TEAM_ID as MEMBERSHIP_TEAM_ID
     , USER_ID as MEMBERSHIP_USER_ID
  from TEAM_MEMBERSHIPS
 where DELETED = 0

GO

Grant Select on dbo.vwTEAM_MEMBERSHIPS to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwTERMINOLOGY')
	Drop View dbo.vwTERMINOLOGY;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 03/28/2019 Paul.  All module views should have DATE_MODIFIED.  
Create View dbo.vwTERMINOLOGY
as
select ID
     , NAME
     , LANG
     , MODULE_NAME
     , LIST_NAME
     , LIST_ORDER
     , DISPLAY_NAME
     , DATE_MODIFIED
  from TERMINOLOGY
 where DELETED = 0

GO

Grant Select on dbo.vwTERMINOLOGY to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwTERMINOLOGY_ALIASES')
	Drop View dbo.vwTERMINOLOGY_ALIASES;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwTERMINOLOGY_ALIASES
as
select ID
     , ALIAS_NAME
     , ALIAS_MODULE_NAME
     , ALIAS_LIST_NAME
     , NAME
     , MODULE_NAME
     , LIST_NAME
  from TERMINOLOGY_ALIASES
 where DELETED = 0

GO

Grant Select on dbo.vwTERMINOLOGY_ALIASES to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwTERMINOLOGY_HELP')
	Drop View dbo.vwTERMINOLOGY_HELP;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwTERMINOLOGY_HELP
as
select ID
     , NAME
     , LANG
     , MODULE_NAME
     , DISPLAY_TEXT
  from TERMINOLOGY_HELP
 where DELETED = 0

GO

Grant Select on dbo.vwTERMINOLOGY_HELP to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwTERMINOLOGY_LIST_DUPLICATES')
	Drop View dbo.vwTERMINOLOGY_LIST_DUPLICATES;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwTERMINOLOGY_LIST_DUPLICATES
as
select LANG
     , NAME
     , LIST_NAME
     , min(LIST_ORDER) as LIST_ORDER
  from TERMINOLOGY
 where LIST_NAME is not null
   and MODULE_NAME is null
   and DELETED = 0
 group by LANG, NAME, LIST_NAME
 having count(*) > 1

GO

Grant Select on dbo.vwTERMINOLOGY_LIST_DUPLICATES to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwTIMEZONES')
	Drop View dbo.vwTIMEZONES;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/02/2012 Paul.  Add iCal TZID. 
-- 03/26/2013 Paul.  iCloud uses linked_timezone values from http://tzinfo.rubyforge.org/doc/. 
Create View dbo.vwTIMEZONES
as
select ID                   
     , NAME                 
     , STANDARD_NAME        
     , STANDARD_ABBREVIATION
     , DAYLIGHT_NAME        
     , DAYLIGHT_ABBREVIATION
     , BIAS                 
     , STANDARD_BIAS        
     , DAYLIGHT_BIAS        
     , STANDARD_YEAR        
     , STANDARD_MONTH       
     , STANDARD_WEEK        
     , STANDARD_DAYOFWEEK   
     , STANDARD_HOUR        
     , STANDARD_MINUTE      
     , DAYLIGHT_YEAR        
     , DAYLIGHT_MONTH       
     , DAYLIGHT_WEEK        
     , DAYLIGHT_DAYOFWEEK   
     , DAYLIGHT_HOUR        
     , DAYLIGHT_MINUTE      
     , TZID
     , LINKED_TIMEZONE
  from TIMEZONES
 where DELETED = 0

GO

Grant Select on dbo.vwTIMEZONES to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwTIMEZONES_LISTBOX')
	Drop View dbo.vwTIMEZONES_LISTBOX;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwTIMEZONES_LISTBOX
as
select ID
     , NAME                
     , BIAS                
  from TIMEZONES
 where DELETED = 0

GO

Grant Select on dbo.vwTIMEZONES_LISTBOX to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwTRACKER')
	Drop View dbo.vwTRACKER;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/17/2005 Paul.  Oracle is having a problem returning 0 as an integer. 
-- Just add the column in code. 
-- 02/01/2006 Paul.  DB2 does not like comments in the middle of the Create View statement. 
-- 03/08/2012 Paul.  Add ACTION to the tracker table so that we can create quick user activity reports. 
Create View dbo.vwTRACKER
as
select USER_ID
     , MODULE_NAME
     , ITEM_ID
     , ITEM_SUMMARY
     , DATE_ENTERED
     , DATE_MODIFIED
     , ACTION
  from TRACKER

GO

Grant Select on dbo.vwTRACKER to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwUSERS')
	Drop View dbo.vwUSERS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/21/2006 Paul.  IS_GROUP was added in SugarCRM 4.0.
-- 05/23/2006 Paul.  Remove USER_PASSWORD and USER_HASH so that this view can be used in reports. 
-- 09/21/2007 Paul.  Email Templates need the full name to be returned in the NAME field. 
-- 11/08/2008 Paul.  Move description to base view. 
-- 05/06/2009 Paul.  Add DEFAULT_TEAM to support SugarCRM migration. 
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
-- 03/16/2010 Paul.  Add IS_ADMIN_DELEGATE. 
-- 07/09/2010 Paul.  Move the SMTP values from USER_PREFERENCES to the main table to make it easier to access. 
-- 07/09/2010 Paul.  SMTP values belong in the OUTBOUND_EMAILS table. 
-- 08/01/2010 Paul.  Add CREATED_BY_NAME and MODIFIED_BY_NAME so that we can display the full name in lists like Sugar. 
-- 03/04/2011 Paul.  We need to allow the admin to set the flag to force a password change. 
-- 03/25/2011 Paul.  Add support for Google Apps. 
-- 03/25/2011 Paul.  Create a separate field for the Facebook ID. 
-- 12/13/2011 Paul.  Add support for Apple iCloud. 
-- 12/23/2011 Paul.  We need separate CTAGs for Contacts and Calendar. 
-- 12/15/2012 Paul.  Move USER_PREFERENCES to separate fields for easier access on Surface RT. 
-- 09/20/2013 Paul.  Move EXTENSION to the main table. 
-- 09/27/2013 Paul.  SMS messages need to be opt-in. 
-- 11/21/2014 Paul.  Add User Picture. 
-- 05/05/2016 Paul.  The User Primary Role is used with role-based views. 
-- 05/05/2016 Paul.  Remove the space characters and quotes to make SQL parsing easier. 
Create View dbo.vwUSERS
as
select USERS.ID
     , dbo.fnFullName(USERS.FIRST_NAME, USERS.LAST_NAME) as FULL_NAME
     , dbo.fnFullName(USERS.FIRST_NAME, USERS.LAST_NAME) as NAME
     , USERS.USER_NAME
     , USERS.FIRST_NAME
     , USERS.LAST_NAME
     , USERS.REPORTS_TO_ID
     , dbo.fnFullName(REPORTS_TO_USERS.FIRST_NAME, REPORTS_TO_USERS.LAST_NAME) as REPORTS_TO_NAME
     , USERS.IS_ADMIN
     , USERS.PORTAL_ONLY
     , USERS.RECEIVE_NOTIFICATIONS
     , USERS.TITLE
     , USERS.DEPARTMENT
     , USERS.PHONE_HOME
     , USERS.PHONE_MOBILE
     , USERS.PHONE_WORK
     , USERS.PHONE_OTHER
     , USERS.PHONE_FAX
     , USERS.EMAIL1
     , USERS.EMAIL2
     , USERS.STATUS
     , USERS.EMPLOYEE_STATUS
     , USERS.MESSENGER_ID
     , USERS.MESSENGER_TYPE
     , USERS.ADDRESS_STREET
     , USERS.ADDRESS_CITY
     , USERS.ADDRESS_STATE
     , USERS.ADDRESS_COUNTRY
     , USERS.ADDRESS_POSTALCODE
     , USERS.IS_GROUP
     , USERS.DATE_ENTERED
     , USERS.DATE_MODIFIED
     , USERS.DATE_MODIFIED_UTC
     , USERS.DESCRIPTION
     , USERS.USER_PREFERENCES
     , USERS_CREATED_BY.USER_NAME  as CREATED_BY
     , USERS_MODIFIED_BY.USER_NAME as MODIFIED_BY
     , USERS.CREATED_BY            as CREATED_BY_ID
     , USERS.MODIFIED_USER_ID
     , USERS.DEFAULT_TEAM
     , TEAMS.NAME                  as DEFAULT_TEAM_NAME
     , USERS.IS_ADMIN_DELEGATE
     , dbo.fnFullName(USERS_CREATED_BY.FIRST_NAME , USERS_CREATED_BY.LAST_NAME ) as CREATED_BY_NAME
     , dbo.fnFullName(USERS_MODIFIED_BY.FIRST_NAME, USERS_MODIFIED_BY.LAST_NAME) as MODIFIED_BY_NAME
     , USERS.SYSTEM_GENERATED_PASSWORD
     , USERS.GOOGLEAPPS_SYNC_CONTACTS
     , USERS.GOOGLEAPPS_SYNC_CALENDAR
     , USERS.GOOGLEAPPS_USERNAME
     , USERS.GOOGLEAPPS_PASSWORD
     , USERS.FACEBOOK_ID
     , USERS.ICLOUD_SYNC_CONTACTS
     , USERS.ICLOUD_SYNC_CALENDAR
     , USERS.ICLOUD_USERNAME
     , USERS.ICLOUD_PASSWORD
     , USERS.ICLOUD_CTAG_CONTACTS
     , USERS.ICLOUD_CTAG_CALENDAR
     , USERS.THEME
     , USERS.DATE_FORMAT
     , USERS.TIME_FORMAT
     , USERS.LANG
     , USERS.CURRENCY_ID
     , USERS.TIMEZONE_ID
     , USERS.SAVE_QUERY
     , USERS.GROUP_TABS
     , USERS.SUBPANEL_TABS
     , USERS.EXTENSION
     , USERS.SMS_OPT_IN
     , USERS.PICTURE
     , USERS.PRIMARY_ROLE_ID    as PRIMARY_ROLE_ID
     , replace(replace(ACL_ROLES.NAME, ' ', ''), '''', '') as PRIMARY_ROLE_NAME
     , USERS_CSTM.*
  from            USERS
  left outer join USERS REPORTS_TO_USERS
               on REPORTS_TO_USERS.ID       = USERS.REPORTS_TO_ID
              and REPORTS_TO_USERS.DELETED  = 0
  left outer join USERS USERS_CREATED_BY
               on USERS_CREATED_BY.ID       = USERS.CREATED_BY
  left outer join USERS USERS_MODIFIED_BY
               on USERS_MODIFIED_BY.ID      = USERS.MODIFIED_USER_ID
  left outer join USERS_CSTM
               on USERS_CSTM.ID_C           = USERS.ID
  left outer join TEAMS
               on TEAMS.ID                  = USERS.DEFAULT_TEAM
  left outer join ACL_ROLES_USERS
               on ACL_ROLES_USERS.USER_ID   = USERS.ID
              and ACL_ROLES_USERS.ROLE_ID   = USERS.PRIMARY_ROLE_ID
              and ACL_ROLES_USERS.DELETED   = 0
  left outer join ACL_ROLES
               on ACL_ROLES.ID              = ACL_ROLES_USERS.ROLE_ID
              and ACL_ROLES.DELETED         = 0
 where USERS.DELETED = 0

GO

Grant Select on dbo.vwUSERS to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwUSERS_ACL_ROLES')
	Drop View dbo.vwUSERS_ACL_ROLES;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 05/05/2016 Paul.  The User Primary Role is used with role-based views. 
Create View dbo.vwUSERS_ACL_ROLES
as
select USERS.ID              as USER_ID
     , ACL_ROLES.ID          as ROLE_ID
     , ACL_ROLES.NAME        as ROLE_NAME
     , ACL_ROLES.DESCRIPTION
     , ACL_ROLES_USERS.DATE_ENTERED
     , (case when USERS.PRIMARY_ROLE_ID = ACL_ROLES.ID then 1 else 0 end) as IS_PRIMARY_ROLE
  from           USERS
      inner join ACL_ROLES_USERS
              on ACL_ROLES_USERS.USER_ID = USERS.ID
             and ACL_ROLES_USERS.DELETED = 0
      inner join ACL_ROLES
              on ACL_ROLES.ID            = ACL_ROLES_USERS.ROLE_ID
             and ACL_ROLES.DELETED       = 0
 where USERS.DELETED = 0

GO

Grant Select on dbo.vwUSERS_ACL_ROLES to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwUSERS_ASSIGNED_TO')
	Drop View dbo.vwUSERS_ASSIGNED_TO;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 03/06/2006 Paul.  Oracle does not like <> ''.  Use len() > 0 instead. 
-- 12/04/2006 Paul.  Only include active users. 
-- 12/05/2006 Paul.  New users created via NTLM will have a status of NULL. 
-- 03/05/2009 Paul.  A Portal user should not be assignable. 
-- 08/02/2016 Paul.  This view will be used to get round-robin users to assign to a process. 
Create View dbo.vwUSERS_ASSIGNED_TO
as
select ID
     , USER_NAME
     , DATE_ENTERED
  from USERS
 where USER_NAME is not null
   and len(USER_NAME) > 0
   and (STATUS is null or STATUS = N'Active')
   and (PORTAL_ONLY is null or PORTAL_ONLY = 0)
   and DELETED = 0

GO

Grant Select on dbo.vwUSERS_ASSIGNED_TO to public;
GO




if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwUSERS_Groups')
	Drop View dbo.vwUSERS_Groups;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwUSERS_Groups
as
select ID
     , LAST_NAME  as NAME
  from USERS
 where DELETED  = 0
   and IS_GROUP = 1

GO

Grant Select on dbo.vwUSERS_Groups to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwUSERS_Login')
	Drop View dbo.vwUSERS_Login;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/14/2006 Paul.  Inactive users should not be able to login. 
-- 07/14/2006 Paul.  New users created via NTLM will have a status of NULL. 
-- 11/25/2006 Paul.  We need to keep TEAM_ID in the session for quick access. 
-- 08/23/2008 Paul.  The Community Edition does not support Teams. 
-- 10/14/2009 Paul.  Exclude Employees and Inbound emails. 
-- 04/08/2010 Paul.  Add IS_ADMIN_DELEGATE, EXCHANGE_ALIAS, EXCHANGE_EMAIL. 
-- 07/09/2010 Paul.  Move the SMTP values from USER_PREFERENCES to the main table to make it easier to access. 
-- 07/09/2010 Paul.  SMTP values belong in the OUTBOUND_EMAILS table. 
-- 11/05/2010 Paul.  Each user can have their own email account, so we need to store EMAIL1 in the session. 
-- 03/19/2011 Paul.  Facebook login uses the MESSENGER_ID field. 
-- 03/25/2011 Paul.  Create a separate field for the Facebook ID. 
-- 09/17/2011 Paul.  Add PWD_LAST_CHANGED and SYSTEM_GENERATED_PASSWORD for password management. 
-- 08/28/2012 Paul.  PRIVATE_TEAM_ID is used in the Campaign GenerateCalls. 
-- 12/15/2012 Paul.  Move USER_PREFERENCES to separate fields for easier access on Surface RT. 
-- 09/20/2013 Paul.  Move EXTENSION to the main table. 
-- 05/05/2016 Paul.  The User Primary Role is used with role-based views. 
-- 05/05/2016 Paul.  Remove the space characters and quotes to make SQL parsing easier. 
-- 08/21/2017 Paul.  Add support for Office 365 OAuth credentials. 
Create View dbo.vwUSERS_Login
as
select USERS.ID
     , dbo.fnFullName(USERS.FIRST_NAME, USERS.LAST_NAME) as FULL_NAME
     , USERS.USER_NAME
     , USERS.USER_PASSWORD
     , USERS.USER_HASH
     , USERS.FIRST_NAME
     , USERS.LAST_NAME
     , USERS.IS_ADMIN
     , USERS.IS_ADMIN_DELEGATE
     , USERS.PORTAL_ONLY
     , USERS.STATUS
     , cast(null as uniqueidentifier) as TEAM_ID
     , cast(null as nvarchar(128))    as TEAM_NAME
     , cast(null as nvarchar(60))     as EXCHANGE_ALIAS
     , cast(null as nvarchar(100))    as EXCHANGE_EMAIL
     , OUTBOUND_EMAILS.MAIL_SMTPUSER
     , OUTBOUND_EMAILS.MAIL_SMTPPASS
     , USERS.EMAIL1
     , USERS.PWD_LAST_CHANGED
     , USERS.SYSTEM_GENERATED_PASSWORD
     , USERS.FACEBOOK_ID
     , cast(null as uniqueidentifier) as PRIVATE_TEAM_ID
     , USERS.THEME
     , USERS.DATE_FORMAT
     , USERS.TIME_FORMAT
     , USERS.LANG
     , USERS.CURRENCY_ID
     , USERS.TIMEZONE_ID
     , USERS.SAVE_QUERY
     , USERS.GROUP_TABS
     , USERS.SUBPANEL_TABS
     , USERS.EXTENSION
     , USERS.PRIMARY_ROLE_ID    as PRIMARY_ROLE_ID
     , replace(replace(ACL_ROLES.NAME, ' ', ''), '''', '') as PRIMARY_ROLE_NAME
     , (select count(*) from OAUTH_TOKENS where OAUTH_TOKENS.ASSIGNED_USER_ID = USERS.ID and OAUTH_TOKENS.NAME = N'Office365'  and OAUTH_TOKENS.DELETED = 0) as OFFICE365_OAUTH_ENABLED
     , (select count(*) from OAUTH_TOKENS where OAUTH_TOKENS.ASSIGNED_USER_ID = USERS.ID and OAUTH_TOKENS.NAME = N'GoogleApps' and OAUTH_TOKENS.DELETED = 0) as GOOGLEAPPS_OAUTH_ENABLED
from            USERS
  left outer join OUTBOUND_EMAILS
               on OUTBOUND_EMAILS.USER_ID         = USERS.ID
              and OUTBOUND_EMAILS.TYPE            = N'system-override'
              and OUTBOUND_EMAILS.DELETED         = 0
   left outer join ACL_ROLES_USERS
               on ACL_ROLES_USERS.USER_ID   = USERS.ID
              and ACL_ROLES_USERS.ROLE_ID   = USERS.PRIMARY_ROLE_ID
              and ACL_ROLES_USERS.DELETED   = 0
  left outer join ACL_ROLES
               on ACL_ROLES.ID              = ACL_ROLES_USERS.ROLE_ID
              and ACL_ROLES.DELETED         = 0
where USERS.DELETED = 0
   and USERS.USER_NAME is not null
  and (USERS.STATUS is null or USERS.STATUS = N'Active')

GO

Grant Select on dbo.vwUSERS_Login to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwUSERS_PASSWORD_HISTORY')
	Drop View dbo.vwUSERS_PASSWORD_HISTORY;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwUSERS_PASSWORD_HISTORY
as
select USER_ID
     , USER_HASH
     , DATE_ENTERED
  from USERS_PASSWORD_HISTORY

GO

Grant Select on dbo.vwUSERS_PASSWORD_HISTORY to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwUSERS_TEAM_MEMBERSHIPS')
	Drop View dbo.vwUSERS_TEAM_MEMBERSHIPS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwUSERS_TEAM_MEMBERSHIPS
as
select TEAM_MEMBERSHIPS.TEAM_ID
     , TEAM_MEMBERSHIPS.USER_ID
     , TEAM_MEMBERSHIPS.EXPLICIT_ASSIGN
     , TEAM_MEMBERSHIPS.IMPLICIT_ASSIGN
     , TEAMS.NAME         as TEAM_NAME
     , TEAMS.DESCRIPTION
  from           TEAM_MEMBERSHIPS
      inner join TEAMS
              on TEAMS.ID      = TEAM_MEMBERSHIPS.TEAM_ID
             and TEAMS.DELETED = 0
 where TEAM_MEMBERSHIPS.DELETED = 0

GO

Grant Select on dbo.vwUSERS_TEAM_MEMBERSHIPS to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwUSER_PREFERENCES')
	Drop View dbo.vwUSER_PREFERENCES;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 10/28/2009 Paul.  Add UTC date to allow this table to sync. 
Create View dbo.vwUSER_PREFERENCES
as
select USER_PREFERENCES.ID
     , USER_PREFERENCES.CATEGORY
     , USER_PREFERENCES.ASSIGNED_USER_ID
     , USER_PREFERENCES.DATE_MODIFIED
     , USER_PREFERENCES.DATE_MODIFIED_UTC
     , lower(USERS.USER_NAME)             as ASSIGNED_USER_NAME
  from            USER_PREFERENCES
  left outer join USERS
               on USERS.ID = USER_PREFERENCES.ASSIGNED_USER_ID
 where USER_PREFERENCES.DELETED = 0

GO

Grant Select on dbo.vwUSER_PREFERENCES to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwUSER_PREFERENCES_CONTENT')
	Drop View dbo.vwUSER_PREFERENCES_CONTENT;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwUSER_PREFERENCES_CONTENT
as
select ID
     , CONTENT
  from USER_PREFERENCES
 where DELETED = 0

GO

Grant Select on dbo.vwUSER_PREFERENCES_CONTENT to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwACL_ACCESS_ByModule')
	Drop View dbo.vwACL_ACCESS_ByModule;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/26/2006 Paul.  Get the minimum ACLACCESS just in case vwACL_ACTIONS contains multiple records. 
-- Normally, we would use a unique index on the ACL_ACTIONS table, but we cannot because 
-- near identical rows are allowed because of the use of the DELETED flag. 
-- 12/05/2006 Paul.  iFrames should not be excluded because the My Portal tab can be disabled and edited. 
-- 02/03/2009 Paul.  Exclude Teams from role management. 
-- 03/09/2010 Paul.  Allow IS_ADMIN and Team Management so that they can be managed separately. 
-- 04/17/2016 Paul.  Allow Calendar to be disabled. 
-- 09/26/2017 Paul.  Add Archive access right. 
-- 01/11/2019 Paul.  Activities should not be excluded as started treating Activities separately on 06/02/2016. 
Create View dbo.vwACL_ACCESS_ByModule
as
select vwMODULES.MODULE_NAME
     , vwMODULES.DISPLAY_NAME
     , isnull((select min(ACLACCESS) from vwACL_ACTIONS where CATEGORY = vwMODULES.MODULE_NAME and NAME = N'admin' ),  1) as ACLACCESS_ADMIN 
     , isnull((select min(ACLACCESS) from vwACL_ACTIONS where CATEGORY = vwMODULES.MODULE_NAME and NAME = N'access'), 89) as ACLACCESS_ACCESS
     , isnull((select min(ACLACCESS) from vwACL_ACTIONS where CATEGORY = vwMODULES.MODULE_NAME and NAME = N'view'  ), 90) as ACLACCESS_VIEW  
     , isnull((select min(ACLACCESS) from vwACL_ACTIONS where CATEGORY = vwMODULES.MODULE_NAME and NAME = N'list'  ), 90) as ACLACCESS_LIST  
     , isnull((select min(ACLACCESS) from vwACL_ACTIONS where CATEGORY = vwMODULES.MODULE_NAME and NAME = N'edit'  ), 90) as ACLACCESS_EDIT  
     , isnull((select min(ACLACCESS) from vwACL_ACTIONS where CATEGORY = vwMODULES.MODULE_NAME and NAME = N'delete'), 90) as ACLACCESS_DELETE
     , isnull((select min(ACLACCESS) from vwACL_ACTIONS where CATEGORY = vwMODULES.MODULE_NAME and NAME = N'import'), 90) as ACLACCESS_IMPORT
     , isnull((select min(ACLACCESS) from vwACL_ACTIONS where CATEGORY = vwMODULES.MODULE_NAME and NAME = N'export'), 90) as ACLACCESS_EXPORT
     , isnull((select min(ACLACCESS) from vwACL_ACTIONS where CATEGORY = vwMODULES.MODULE_NAME and NAME = N'archive'), 90) as ACLACCESS_ARCHIVE
     , vwMODULES.IS_ADMIN
  from vwMODULES
 where vwMODULES.MODULE_NAME not in (N'Home')
GO

Grant Select on dbo.vwACL_ACCESS_ByModule to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwACL_ACCESS_ByRole')
	Drop View dbo.vwACL_ACCESS_ByRole;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/05/2006 Paul.  Literals should be in unicode to reduce conversions at runtime. 
-- 12/05/2006 Paul.  iFrames should not be excluded because the My Portal tab can be disabled and edited. 
-- 02/03/2009 Paul.  Exclude Teams from role management. 
-- 03/09/2010 Paul.  Allow IS_ADMIN and Team Management so that they can be managed separately. 
-- 04/17/2016 Paul.  Allow Calendar to be disabled. 
-- 09/26/2017 Paul.  Add Archive access right. 
Create View dbo.vwACL_ACCESS_ByRole
as
select vwMODULES_ACL_ROLES_Cross.MODULE_NAME
     , vwMODULES_ACL_ROLES_Cross.DISPLAY_NAME
     , vwMODULES_ACL_ROLES_Cross.ROLE_ID
     , isnull((select min(ACLACCESS) from vwACL_ROLES_ACTIONS where ROLE_ID = vwMODULES_ACL_ROLES_Cross.ROLE_ID and CATEGORY = vwMODULES_ACL_ROLES_Cross.MODULE_NAME and NAME = N'admin' ),  1) as ACLACCESS_ADMIN 
     , isnull((select min(ACLACCESS) from vwACL_ROLES_ACTIONS where ROLE_ID = vwMODULES_ACL_ROLES_Cross.ROLE_ID and CATEGORY = vwMODULES_ACL_ROLES_Cross.MODULE_NAME and NAME = N'access'), 89) as ACLACCESS_ACCESS
     , isnull((select min(ACLACCESS) from vwACL_ROLES_ACTIONS where ROLE_ID = vwMODULES_ACL_ROLES_Cross.ROLE_ID and CATEGORY = vwMODULES_ACL_ROLES_Cross.MODULE_NAME and NAME = N'view'  ), 90) as ACLACCESS_VIEW  
     , isnull((select min(ACLACCESS) from vwACL_ROLES_ACTIONS where ROLE_ID = vwMODULES_ACL_ROLES_Cross.ROLE_ID and CATEGORY = vwMODULES_ACL_ROLES_Cross.MODULE_NAME and NAME = N'list'  ), 90) as ACLACCESS_LIST  
     , isnull((select min(ACLACCESS) from vwACL_ROLES_ACTIONS where ROLE_ID = vwMODULES_ACL_ROLES_Cross.ROLE_ID and CATEGORY = vwMODULES_ACL_ROLES_Cross.MODULE_NAME and NAME = N'edit'  ), 90) as ACLACCESS_EDIT  
     , isnull((select min(ACLACCESS) from vwACL_ROLES_ACTIONS where ROLE_ID = vwMODULES_ACL_ROLES_Cross.ROLE_ID and CATEGORY = vwMODULES_ACL_ROLES_Cross.MODULE_NAME and NAME = N'delete'), 90) as ACLACCESS_DELETE
     , isnull((select min(ACLACCESS) from vwACL_ROLES_ACTIONS where ROLE_ID = vwMODULES_ACL_ROLES_Cross.ROLE_ID and CATEGORY = vwMODULES_ACL_ROLES_Cross.MODULE_NAME and NAME = N'import'), 90) as ACLACCESS_IMPORT
     , isnull((select min(ACLACCESS) from vwACL_ROLES_ACTIONS where ROLE_ID = vwMODULES_ACL_ROLES_Cross.ROLE_ID and CATEGORY = vwMODULES_ACL_ROLES_Cross.MODULE_NAME and NAME = N'export'), 90) as ACLACCESS_EXPORT
     , isnull((select min(ACLACCESS) from vwACL_ROLES_ACTIONS where ROLE_ID = vwMODULES_ACL_ROLES_Cross.ROLE_ID and CATEGORY = vwMODULES_ACL_ROLES_Cross.MODULE_NAME and NAME = N'archive'), 90) as ACLACCESS_ARCHIVE
     , vwMODULES_ACL_ROLES_Cross.IS_ADMIN
  from vwMODULES_ACL_ROLES_Cross
 where vwMODULES_ACL_ROLES_Cross.MODULE_ENABLED = 1
   and vwMODULES_ACL_ROLES_Cross.MODULE_NAME not in (N'Activities', N'Home')
GO

Grant Select on dbo.vwACL_ACCESS_ByRole to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwACL_ROLES_Edit')
	Drop View dbo.vwACL_ROLES_Edit;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwACL_ROLES_Edit
as
select *
  from vwACL_ROLES

GO

Grant Select on dbo.vwACL_ROLES_Edit to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwACL_ROLES_List')
	Drop View dbo.vwACL_ROLES_List;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwACL_ROLES_List
as
select *
  from vwACL_ROLES

GO

Grant Select on dbo.vwACL_ROLES_List to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwCONFIG_Company')
	Drop View dbo.vwCONFIG_Company;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwCONFIG_Company
as
select VALUE as COMPANY_NAME
     , dbo.fnCONFIG_String(N'company_address') as COMPANY_ADDRESS
     , dbo.fnCONFIG_String(N'company_logo'   ) as COMPANY_LOGO
  from vwCONFIG
 where NAME = N'company_name'
GO

Grant Select on dbo.vwCONFIG_Company to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwCONFIG_Edit')
	Drop View dbo.vwCONFIG_Edit;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwCONFIG_Edit
as
select *
  from vwCONFIG_List

GO

Grant Select on dbo.vwCONFIG_Edit to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwCONFIG_Sync')
	Drop View dbo.vwCONFIG_Sync;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/21/2009 Paul.  We need to exclude sensitive data from the offline client. 
-- 03/23/2010 Paul.  Exchange settings will not be synchronized. 
-- 03/19/2011 Paul.  facebook settings will not be synchronized. 
-- 06/05/2011 Paul.  Google settings will not be synchronized. 
-- 10/24/2011 Paul.  Exclude more. 
-- 04/15/2012 Paul.  Excluded Twitter and LinkedIn. 
-- 04/22/2012 Paul.  Excluded Salesforce. 
-- 05/28/2012 Paul.  Excluded QuickBooks. 
-- 12/25/2012 Paul.  Exclude reminder flags. 
-- 09/20/2013 Paul.  Exclude PayTrace, Asterisk and Twilio. 
-- 08/24/2014 Paul.  Exclude Avaya, MicrosoftTranslator, Password, ZipTaxAPI. 
-- 09/05/2015 Paul.  Exclude HubSpot, ConstantContact, iContact, Marketo, GetResource, GoogleApps
-- 05/01/2016 Paul.  Exclude MailChimp, CurrencyLayer, AuthorizeNet. 
-- 01/14/2017 Paul.  Exclude Azure and ADFS. 
-- 08/05/2017 Paul.  Exclude Pardot. 
-- 05/17/2019 Paul.  Exclude GetResponse, SalesFusion, Watson. 
-- 05/26/2020 Paul.  Exclude specific keys so that we can see the Enable flags. 
-- 07/13/2020 Paul.  Exchange.ClientID and GoogleApps.ClientID are needed by the user profile editor. 
-- 09/05/2020 Paul.  Exclude PhoneBurner. 
-- 09/12/2020 Paul.  PhoneBurner.ClientID is needed in the React Client to authorize. 
-- 09/20/2020 Paul.  Allow Avaya.Host so that we can check if enabled in React Client. 
-- 09/25/2020 Paul.  Allow Twitter.ConsumerKey so that we can check if enabled in React Client. 
-- 03/14/2021 Paul.  smtpserver and smtpport are needed by the React Client. 
-- 03/17/2021 Paul.  PaymentGateway_ID is not confidencial as it is our own ID and it is needed by React Client. 
-- 12/26/2022 Paul.  Instead of returning secret values, return empty password **********. 
Create View dbo.vwCONFIG_Sync
as
select ID
     , DELETED
     , CREATED_BY
     , DATE_ENTERED
     , MODIFIED_USER_ID
     , DATE_MODIFIED
     , DATE_MODIFIED_UTC
     , CATEGORY
     , NAME
     , (case
        when VALUE is null then null
	else (case
              when NAME in   ('AmazonAWS.AccessKeyID', 'AmazonAWS.SecretAccessKey', 'AmazonAWS.X509Certificate', 'AmazonAWS.X509Password', 'AmazonAWS.X509PrivateKey') then '**********'
              when NAME in   ('AmazonS3.AccessKeyID', 'AmazonS3.SecretAccessKey') then '**********'
              when NAME in   ('CreditCardIV', 'CreditCardKey') then '**********'
              when NAME in   ('InboundEmailIV', 'InboundEmailKey') then '**********'
              when NAME in   ('PaymentGateway_Login', 'PaymentGateway_Password') then '**********'
              when NAME in   ('PayPal.APIPassword', 'PayPal.APIUsername', 'PayPal.ClientID', 'PayPal.ClientSecret', 'PayPal.X509Certificate', 'PayPal.X509PrivateKey') then '**********'
              when NAME in   ('smtpuser', 'smtppass', 'smtpcertificate') then '**********'
              when NAME in   ('Exchange.ClientSecret', 'Exchange.Password', 'Exchange.UserName') then '**********'
              when NAME in   ('facebook.AppID', 'facebook.AppSecret') then '**********'
              when NAME in   ('GoogleApps.ApiKey', 'GoogleApps.ClientSecret', 'GoogleMaps.Key') then '**********'
              when NAME in   ('Twitter.AccessToken', 'Twitter.AccessTokenSecret', 'Twitter.ConsumerKey', 'Twitter.ConsumerSecret') then '**********'
              when NAME in   ('LinkedIn.APIKey', 'LinkedIn.SecretKey') then '**********'
              when NAME in   ('Salesforce.ConsumerKey', 'Salesforce.ConsumerSecret') then '**********'
              when NAME in   ('QuickBooks.ConnectionString', 'QuickBooks.OAuthAccessToken', 'QuickBooks.OAuthAccessTokenSecret', 'QuickBooks.OAuthClientID', 'QuickBooks.OAuthClientSecret', 'QuickBooks.OAuthCompanyID', 'QuickBooks.OAuthCountryCode', 'QuickBooks.OAuthExpiresAt', 'QuickBooks.OAuthVerifier', 'QuickBooks.RemotePassword', 'QuickBooks.RemoteURL', 'QuickBooks.RemoteUser') then '**********'
              when NAME in   ('PayTrace.UserName', 'PayTrace.Password') then '**********'
              when NAME in   ('Asterisk.UserName', 'Asterisk.Password') then '**********'
              when NAME in   ('Twilio.AccountSID', 'Twilio.AuthToken') then '**********'
              when NAME in   ('Avaya.Certificate', 'Avaya.UserName', 'Avaya.Password') then '**********'
              when NAME in   ('MicrosoftTranslator.ClientID', 'MicrosoftTranslator.ClientSecret', 'MicrosoftTranslator.Key') then '**********'
              when NAME in   ('ZipTaxAPI.Key') then '**********'
              when NAME in   ('HubSpot.ClientID', 'HubSpot.ClientSecret', 'HubSpot.OAuthAccessToken', 'HubSpot.OAuthClientSecret', 'HubSpot.OAuthExpiresAt', 'HubSpot.OAuthRefreshToken', 'HubSpot.PortalID') then '**********'
              when NAME in   ('ConstantContact.ClientID', 'ConstantContact.ClientSecret', 'ConstantContact.OAuthAccessToken', 'ConstantContact.OAuthClientSecret', 'ConstantContact.OAuthExpiresAt', 'ConstantContact.OAuthRefreshToken') then '**********'
              when NAME in   ('iContact.ApiAppId', 'iContact.ApiPassword', 'iContact.ApiUsername') then '**********'
              when NAME in   ('Marketo.ClientID', 'Marketo.ClientSecret', 'Marketo.OAuthAccessToken', 'Marketo.OAuthClientSecret', 'Marketo.OAuthExpiresAt', 'Marketo.OAuthRefreshToken') then '**********'
              when NAME in   ('MailChimp.ClientID', 'MailChimp.ClientSecret', 'MailChimp.OAuthAccessToken', 'MailChimp.OAuthClientSecret') then '**********'
              when NAME in   ('CurrencyLayer.AccessKey') then '**********'
              when NAME in   ('AuthorizeNet.UserName', 'AuthorizeNet.Password', 'AuthorizeNet.TransactionKey') then '**********'
              when NAME in   ('Azure.AadClientId', 'Azure.AadTenantDomain', 'Azure.ServiceAccountPassword', 'Azure.ServiceAccountUserName', 'Azure.SqlAdminPassword', 'Azure.SqlAdminUserName', 'Azure.SubscriptionId', 'Azure.VmAdminPassword', 'Azure.VmAdminUserName') then '**********'
              when NAME in   ('Pardot.ApiUsername', 'Pardot.ApiUserKey', 'Pardot.ApiPassword', 'Pardot.ApiAppId', 'Pardot.PardotAccountId', 'Pardot.PardotClientFolderId') then '**********'
              when NAME in   ('GetResponse.SecretApiKey') then '**********'
              when NAME in   ('SalesFusion.UserName', 'SalesFusion.Password', 'SalesFusion.Domain') then '**********'
              when NAME in   ('Watson.ClientID', 'Watson.ClientSecret', 'Watson.OAuthAccessToken', 'Watson.OAuthRefreshToken', 'Watson.OAuthExpiresAt') then '**********'
              when NAME in   ('FreshBooks.ApiToken') then '**********'
              when NAME in   ('PhoneBurner.ClientSecret', 'PhoneBurner.OAuthAccessToken', 'PhoneBurner.OAuthClientSecret', 'PhoneBurner.OAuthExpiresAt', 'PhoneBurner.OAuthRefreshToken') then '**********'
              when NAME in   ('enable_reminder_popdowns', 'enable_email_reminders', 'default_password') then '**********'
              when NAME like '%Password'      then '**********'
              when NAME like '%.UserName'     then '**********'
              when NAME like '%.ClientSecret' then '**********'
              when NAME like '%.ApiKey'       then '**********'
              when NAME like '%.OAuth%'       then '**********'
              when NAME like 'ADFS%'          then '**********'
              else VALUE
              end)
        end) as VALUE
  from CONFIG
GO

Grant Select on dbo.vwCONFIG_Sync to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwCURRENCIES_Edit')
	Drop View dbo.vwCURRENCIES_Edit;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwCURRENCIES_Edit
as
select vwCURRENCIES.*
     , (case when cast(vwCURRENCIES.ID as char(36)) = dbo.fnCONFIG_String('base_currency'   ) or (vwCURRENCIES.ID = 'e340202e-6291-4071-b327-a34cb4df239b' and dbo.fnCONFIG_String('base_currency'   ) is null) then 1 else 0 end) as IS_BASE
     , (case when cast(vwCURRENCIES.ID as char(36)) = dbo.fnCONFIG_String('default_currency') or (vwCURRENCIES.ID = 'e340202e-6291-4071-b327-a34cb4df239b' and dbo.fnCONFIG_String('default_currency') is null) then 1 else 0 end) as IS_DEFAULT
     , USERS_MODIFIED_BY.USER_NAME as MODIFIED_BY
     , dbo.fnFullName(USERS_MODIFIED_BY.FIRST_NAME, USERS_MODIFIED_BY.LAST_NAME) as MODIFIED_BY_NAME
  from            vwCURRENCIES
  left outer join USERS                      USERS_MODIFIED_BY
               on USERS_MODIFIED_BY.ID     = vwCURRENCIES.MODIFIED_USER_ID

GO

Grant Select on dbo.vwCURRENCIES_Edit to public;
GO

 
if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwCURRENCIES_List')
	Drop View dbo.vwCURRENCIES_List;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwCURRENCIES_List
as
select vwCURRENCIES.*
     , (case when cast(ID as char(36)) = dbo.fnCONFIG_String('base_currency'   ) or (ID = 'e340202e-6291-4071-b327-a34cb4df239b' and dbo.fnCONFIG_String('base_currency'   ) is null) then 1 else 0 end) as IS_BASE
     , (case when cast(ID as char(36)) = dbo.fnCONFIG_String('default_currency') or (ID = 'e340202e-6291-4071-b327-a34cb4df239b' and dbo.fnCONFIG_String('default_currency') is null) then 1 else 0 end) as IS_DEFAULT
  from vwCURRENCIES

GO

Grant Select on dbo.vwCURRENCIES_List to public;
GO

 
if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwDASHBOARDS_PANELS')
	Drop View dbo.vwDASHBOARDS_PANELS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 06/16/2017 Paul.  Add DEFAULT_SETTINGS. 
-- 11/30/2017 Paul.  Add ASSIGNED_SET_ID for Dynamic User Assignment. 
-- 05/26/2019 Paul.  Dashboard Name is needed by the React client. 
Create View dbo.vwDASHBOARDS_PANELS
as
select DASHBOARDS_PANELS.ID
     , DASHBOARDS_PANELS.DATE_ENTERED
     , DASHBOARDS_PANELS.DATE_MODIFIED
     , DASHBOARDS_PANELS.DATE_MODIFIED_UTC
     , DASHBOARDS_PANELS.PANEL_ORDER
     , DASHBOARDS_PANELS.ROW_INDEX
     , DASHBOARDS_PANELS.COLUMN_WIDTH
     , DASHBOARDS.ID                     as DASHBOARD_ID
     , DASHBOARDS.NAME                   as DASHBOARD_NAME
     , DASHBOARDS.ASSIGNED_USER_ID       as PARENT_ASSIGNED_USER_ID
     , DASHBOARDS.ASSIGNED_SET_ID        as PARENT_ASSIGNED_SET_ID
     , DASHBOARDS.TEAM_ID
     , DASHBOARDS.TEAM_SET_ID
     , DASHBOARD_APPS.ID                 as DASHBOARD_APP_ID
     , DASHBOARD_APPS.NAME
     , DASHBOARD_APPS.CATEGORY
     , DASHBOARD_APPS.MODULE_NAME
     , DASHBOARD_APPS.TITLE
     , DASHBOARD_APPS.SETTINGS_EDITVIEW
     , DASHBOARD_APPS.IS_ADMIN
     , DASHBOARD_APPS.APP_ENABLED
     , DASHBOARD_APPS.SCRIPT_URL
     , DASHBOARD_APPS.DEFAULT_SETTINGS
  from            DASHBOARDS_PANELS
       inner join DASHBOARDS
               on DASHBOARDS.ID            = DASHBOARDS_PANELS.DASHBOARD_ID
              and DASHBOARDS.DELETED       = 0
       inner join DASHBOARD_APPS
               on DASHBOARD_APPS.ID        = DASHBOARDS_PANELS.DASHBOARD_APP_ID
              and DASHBOARD_APPS.DELETED   = 0
 where DASHBOARDS_PANELS.DELETED = 0

GO

Grant Select on dbo.vwDASHBOARDS_PANELS to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwDASHLETS_CATALOG')
	Drop View dbo.vwDASHLETS_CATALOG;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwDASHLETS_CATALOG
as
select *
  from vwDASHLETS
 where DASHLET_ENABLED = 1

GO

Grant Select on dbo.vwDASHLETS_CATALOG to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwDETAILVIEWS_Layout')
	Drop View dbo.vwDETAILVIEWS_Layout;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwDETAILVIEWS_Layout
as
select NAME
     , NAME as DISPLAY_NAME
  from vwDETAILVIEWS

GO

Grant Select on dbo.vwDETAILVIEWS_Layout to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwEDITVIEWS_FIELDS_SearchView')
	Drop View dbo.vwEDITVIEWS_FIELDS_SearchView;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwEDITVIEWS_FIELDS_SearchView
as
select vwEDITVIEWS_FIELDS.*
     , dbo.fnEDITVIEWS_FIELDS_MultiSelect(MODULE_NAME, DATA_FIELD, FIELD_TYPE) as IS_MULTI_SELECT
  from vwEDITVIEWS_FIELDS

GO


Grant Select on dbo.vwEDITVIEWS_FIELDS_SearchView to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwEDITVIEWS_Layout')
	Drop View dbo.vwEDITVIEWS_Layout;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwEDITVIEWS_Layout
as
select NAME
     , NAME as DISPLAY_NAME
  from vwEDITVIEWS

GO

Grant Select on dbo.vwEDITVIEWS_Layout to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwFIELDS_META_DATA_Edit')
	Drop View dbo.vwFIELDS_META_DATA_Edit;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwFIELDS_META_DATA_Edit
as
select *
  from vwFIELDS_META_DATA

GO

Grant Select on dbo.vwFIELDS_META_DATA_Edit to public;
GO

 
if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwFIELDS_META_DATA_List')
	Drop View dbo.vwFIELDS_META_DATA_List;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/10/2007 Paul.  Add EXT1 for dropdown lists. 
Create View dbo.vwFIELDS_META_DATA_List
as
select ID
     , NAME
     , LABEL
     , CUSTOM_MODULE
     , DATA_TYPE
     , MAX_SIZE
     , REQUIRED_OPTION
     , DEFAULT_VALUE
     , DATE_ENTERED
     , DATE_MODIFIED
     , DATE_MODIFIED_UTC
     , EXT1
  from vwFIELDS_META_DATA

GO

Grant Select on dbo.vwFIELDS_META_DATA_List to public;
GO

 
if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwFIELDS_META_DATA_Validated')
	Drop View dbo.vwFIELDS_META_DATA_Validated;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/07/2007 Paul.  Join to the Modules table to get the table name. 
-- Custom Fields was failing fror PRODUCT_TEMPLATES and PROJECT_TASK.
-- 07/07/2007 Paul.  The code searches for the custom module by table name, not by module name. 
-- 07/07/2207 Paul.  Use vwMODULES so that deleted flag and module flag are applied. 
-- 02/18/2009 Paul.  Include the module name to simplify code to generate valid workflow update columns. 
-- 02/18/2009 Paul.  We need to know if the column is an identity so the workflow engine can avoid updating it.
Create View dbo.vwFIELDS_META_DATA_Validated
as
select vwFIELDS_META_DATA.ID
     , vwFIELDS_META_DATA.NAME
     , vwFIELDS_META_DATA.LABEL
     , vwMODULES.MODULE_NAME
     , vwMODULES.TABLE_NAME
     , vwMODULES.TABLE_NAME               as CUSTOM_MODULE
     , vwFIELDS_META_DATA.DATA_TYPE
     , vwFIELDS_META_DATA.MAX_SIZE
     , vwFIELDS_META_DATA.REQUIRED_OPTION
     , vwFIELDS_META_DATA.DEFAULT_VALUE
     , vwSqlColumns.CsType
     , vwSqlColumns.colid
     , vwSqlColumns.IsIdentity
  from      vwFIELDS_META_DATA
 inner join vwMODULES
         on vwMODULES.MODULE_NAME   = vwFIELDS_META_DATA.CUSTOM_MODULE
 inner join vwSqlColumns
         on vwSqlColumns.ObjectName = vwMODULES.TABLE_NAME + '_CSTM'
        and vwSqlColumns.ColumnName = vwFIELDS_META_DATA.NAME

GO

Grant Select on dbo.vwFIELDS_META_DATA_Validated to public;
GO

 
if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwGRIDVIEWS_Layout')
	Drop View dbo.vwGRIDVIEWS_Layout;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwGRIDVIEWS_Layout
as
select NAME
     , NAME as DISPLAY_NAME
  from vwGRIDVIEWS

GO

Grant Select on dbo.vwGRIDVIEWS_Layout to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwIMPORT_MAPS_Edit')
	Drop View dbo.vwIMPORT_MAPS_Edit;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwIMPORT_MAPS_Edit
as
select vwIMPORT_MAPS.*
     , IMPORT_MAPS.CONTENT
  from            vwIMPORT_MAPS
  left outer join IMPORT_MAPS
               on IMPORT_MAPS.ID = vwIMPORT_MAPS.ID

GO

Grant Select on dbo.vwIMPORT_MAPS_Edit to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwIMPORT_MAPS_List')
	Drop View dbo.vwIMPORT_MAPS_List;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwIMPORT_MAPS_List
as
select *
  from vwIMPORT_MAPS

GO

Grant Select on dbo.vwIMPORT_MAPS_List to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwLANGUAGES_Active')
	Drop View dbo.vwLANGUAGES_Active;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwLANGUAGES_Active
as
select ID
     , NAME
     , NATIVE_NAME
     , DISPLAY_NAME
  from vwLANGUAGES
 where ACTIVE = 1

GO

Grant Select on dbo.vwLANGUAGES_Active to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwMODULES_AppVars')
	Drop View dbo.vwMODULES_AppVars;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/30/2007 Paul.  We need a dynamic way to determine if the module record can be assigned or placed in a team. 
-- 01/01/2008 Paul.  Notes is a special module that assumes the identity of its parent. Allow it to use ASSIGNED_USER_ID. 
-- 01/01/2008 Paul.  Products is a special module that assumes the identity of its Order. Allow it to use ASSIGNED_USER_ID. 
-- 01/01/2008 Paul.  Activites are also special in that they assume the identity of thier base. 
-- 01/18/2008 Paul.  Oracle requires unicode strings. 
-- 09/08/2009 Paul.  Custom Paging can be enabled /disabled per module. 
-- 12/02/2009 Paul.  Add the ability to disable Mass Updates. 
-- 01/13/2010 Paul.  Allow default search to be disabled. 
-- 04/01/2010 Paul.  Add Exchange Sync flag. 
-- 04/04/2010 Paul.  Add Exchange Folders flag. 
-- 04/05/2010 Paul.  Add Exchange Create Parent flag. Need to be able to disable Account creation. 
-- 05/06/2010 Paul.  Add DISPLAY_NAME for the Six theme. 
-- 05/06/2010 Paul.  Add IS_ADMIN for the Six theme. 
-- 09/09/2010 Paul.  Change the case statements to make the code EffiProz friendly. 
-- 08/22/2011 Paul.  REST_ENABLED provides a way to enable/disable a module in the REST API. 
-- 03/13/2013 Paul.  Fix IS_ASSIGNED to ensure that it returns 1 or 0. NOTES should return 1. 
-- 03/14/2014 Paul.  DUPLICATE_CHECHING_ENABLED enables duplicate checking. 
-- 09/28/2015 Paul.  Add STREAM_ENBLED flag. 
-- 09/26/2017 Paul.  Add Archive access right. 
-- 11/01/2017 Paul.  Use a module-based flag so that Record Level Security is only enabled when needed. 
-- 12/12/2017 Paul.  Allow archiving to a separate database. 
-- 12/13/2017 Paul.  Move archive flag to app so as to prevent catastrophic failure. 
-- 03/20/2019 Paul.  Flag if custom field table exists. 
-- 07/31/2019 Paul.  DEFAULT_SORT is a new field for the React Client. 
-- 08/15/2019 Paul.  All remaining MODULES fields were added to vwMODULES_AppVars. 
-- 04/15/2021 Paul.  WorkflowAlertShells is not assigned or teamed.  Correct for React client. 
-- 05/19/2021 Paul.  ReportRules is not assigned or teamed.  Correct for React client. 
Create View dbo.vwMODULES_AppVars
as
select ID
     , MODULE_NAME as NAME
     , MODULE_NAME
     , TABLE_NAME
     , RELATIVE_PATH
     , MODULE_ENABLED
     , (select count(*)
         from vwSqlTablesAudited
        where vwSqlTablesAudited.TABLE_NAME = vwMODULES.TABLE_NAME
       ) as IS_AUDITED
     , (case MODULE_NAME 
        when N'Activities' then 1
        when N'WorkflowAlertShells' then 0
        when N'ReportRules' then 0
        else (select count(*)
                from vwSqlColumns
               where vwSqlColumns.ObjectName = vwMODULES.TABLE_NAME
                 and ColumnName = N'TEAM_ID'
             )
        end) as IS_TEAMED
     , (case MODULE_NAME 
        when N'Activities' then 1
        when N'Products'   then 1
        when N'WorkflowAlertShells' then 0
        when N'ReportRules' then 0
        else (select count(*)
                from vwSqlColumns
               where vwSqlColumns.ObjectName = vwMODULES.TABLE_NAME
                 and ColumnName = N'ASSIGNED_USER_ID'
             )
        end) as IS_ASSIGNED
     , CUSTOM_PAGING
     , MASS_UPDATE_ENABLED
     , DEFAULT_SEARCH_ENABLED
     , EXCHANGE_SYNC
     , EXCHANGE_FOLDERS
     , EXCHANGE_CREATE_PARENT
     , DISPLAY_NAME
     , IS_ADMIN
     , REST_ENABLED
     , DUPLICATE_CHECHING_ENABLED
     , RECORD_LEVEL_SECURITY_ENABLED
     , DEFAULT_SORT
     , TAB_ENABLED
     , TAB_ORDER
     , PORTAL_ENABLED
     , CUSTOM_ENABLED
     , REPORT_ENABLED
     , IMPORT_ENABLED
     , SYNC_ENABLED
     , MOBILE_ENABLED
     , DATE_MODIFIED
     , DATE_MODIFIED_UTC
     , PROCESS_ENABLED
     , (case when exists(select * from vwSqlTablesStreamed where vwSqlTablesStreamed.TABLE_NAME = vwMODULES.TABLE_NAME) then 1 else 0 end) as STREAM_ENBLED
     , (case when exists(select * from vwSqlTables where vwSqlTables.TABLE_NAME = vwMODULES.TABLE_NAME + '_CSTM') then 1 else 0 end) as HAS_CUSTOM
  from vwMODULES
GO

Grant Select on dbo.vwMODULES_AppVars to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwMODULES_Audited')
	Drop View dbo.vwMODULES_Audited;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/10/2013 Paul.  Contacts, Leads, Prospects and Documents don't have a NAME column. 
Create View dbo.vwMODULES_Audited
as
select MODULE_NAME   
     , DISPLAY_NAME  
  from vwMODULES     
 where TABLE_NAME in (select TABLE_NAME from vwSqlTablesAudited)
   and TABLE_NAME in (select ObjectName from vwSqlColumns
                       where ColumnName = 'NAME'
                          or ObjectName in('Contacts', 'Leads', 'Prospects', 'Documents')
                     )

GO

Grant Select on dbo.vwMODULES_Audited to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwMODULES_LayoutViews')
	Drop View dbo.vwMODULES_LayoutViews;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 02/17/2011 Paul.  Need to allow ProductCategories and Discounts. 
Create View dbo.vwMODULES_LayoutViews
as
select MODULE_NAME
     , TABLE_NAME
     , RELATIVE_PATH
  from vwMODULES
 where (REPORT_ENABLED = 1 or MODULE_NAME in (N'Teams', N'ProductCategories', N'Discounts', N'Releases'))
   and MODULE_NAME not in (N'Payments')
GO

Grant Select on dbo.vwMODULES_LayoutViews to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwMODULES_RenameTabs')
	Drop View dbo.vwMODULES_RenameTabs;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/05/2006 Paul.  Literals should be in unicode to reduce conversions at runtime. 
Create View dbo.vwMODULES_RenameTabs
as
select TERMINOLOGY.ID
     , TERMINOLOGY.NAME
     , TERMINOLOGY.LANG
     , TERMINOLOGY.LIST_NAME
     , TERMINOLOGY.LIST_ORDER
     , TERMINOLOGY.DISPLAY_NAME
     , vwMODULES.TAB_ORDER
  from      TERMINOLOGY
 inner join vwMODULES
         on vwMODULES.MODULE_NAME = TERMINOLOGY.NAME
 where TERMINOLOGY.DELETED = 0
   and TERMINOLOGY.LIST_NAME = N'moduleList'
   and vwMODULES.TAB_ENABLED = 1
GO

Grant Select on dbo.vwMODULES_RenameTabs to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwMODULES_TablesSyncd')
	Drop View dbo.vwMODULES_TablesSyncd;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 10/27/2009 Paul.  We also need the module name. 
Create View dbo.vwMODULES_TablesSyncd
as
select vwMODULES.MODULE_NAME
     , vwSqlTables.TABLE_NAME
     , cast(0 as bit)         as RELATIONSHIP
  from            vwMODULES
       inner join vwSqlTables
               on vwSqlTables.TABLE_NAME = vwMODULES.TABLE_NAME
 where vwMODULES.SYNC_ENABLED = 1
union
select vwMODULES.MODULE_NAME
     , vwSqlTables.TABLE_NAME
     , cast(1 as bit)         as RELATIONSHIP
  from            vwMODULES
       inner join vwSqlTables
               on vwSqlTables.TABLE_NAME           like vwMODULES.TABLE_NAME + N'_%'
  left outer join vwMODULES                             vwMODULES_NotSyncd
               on vwSqlTables.TABLE_NAME           like N'%_' + vwMODULES_NotSyncd.TABLE_NAME
              and (vwMODULES_NotSyncd.SYNC_ENABLED is null or vwMODULES_NotSyncd.SYNC_ENABLED = 0)
 where vwMODULES.SYNC_ENABLED = 1
   and vwMODULES_NotSyncd.ID is null
   and vwSqlTables.TABLE_NAME not in ('USERS_LAST_IMPORT', 'USERS_LOGINS', 'USERS_SIGNATURES')
   and vwSqlTables.TABLE_NAME not like N'%_AUDIT'
   and vwSqlTables.TABLE_NAME not like N'%_REMOTE'
   and vwSqlTables.TABLE_NAME not like N'%_CSTM'
   and vwSqlTables.TABLE_NAME not like N'%_SYNC'

GO

-- select * from vwMODULES_TablesSyncd order by TABLE_NAME

Grant Select on dbo.vwMODULES_TablesSyncd to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwMODULES_TabMenu')
	Drop View dbo.vwMODULES_TabMenu;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwMODULES_TabMenu
as
select MODULE_NAME
     , DISPLAY_NAME
     , RELATIVE_PATH
     , TAB_ORDER
  from vwMODULES
 where TAB_ENABLED = 1

GO

Grant Select on dbo.vwMODULES_TabMenu to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwRELATIONSHIPS_Reporting')
	Drop View dbo.vwRELATIONSHIPS_Reporting;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwRELATIONSHIPS_Reporting
as
select *
  from vwRELATIONSHIPS

GO

Grant Select on dbo.vwRELATIONSHIPS_Reporting to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSCHEDULERS_Run')
	Drop View dbo.vwSCHEDULERS_Run;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/31/2007 Paul.  When comparing against the CRON pattern, round the time down to the nearest 5 minute interval. 
-- 01/18/2008 Paul.  Lets make sure that the CheckVersion occurs shortly after application install. 
-- The trick is to skip the CRON filter if the CheckVersion job has never run. 
-- 01/18/2008 Paul.  Simplify code to handle LAST_RUN to match the Oracle implementation. 
Create View dbo.vwSCHEDULERS_Run
as
select vwSCHEDULERS.*
     , dbo.fnTimeRoundMinutes(getdate(), 5) as NEXT_RUN
  from vwSCHEDULERS
 where STATUS = N'Active'
   and (DATE_TIME_START is null or getdate() > DATE_TIME_START)
   and (DATE_TIME_END   is null or getdate() < DATE_TIME_END  )
   and (TIME_FROM       is null or getdate() > (dbo.fnDateAdd_Time(TIME_FROM, dbo.fnDateOnly(getdate()))))
   and (TIME_TO         is null or getdate() < (dbo.fnDateAdd_Time(TIME_TO  , dbo.fnDateOnly(getdate()))))
   and (   (JOB = N'function::CheckVersion' and LAST_RUN is null)
        or dbo.fnCronRun(JOB_INTERVAL, dbo.fnTimeRoundMinutes(getdate(), 5), 5) = 1
       )
   and (LAST_RUN is null or dbo.fnTimeRoundMinutes(getdate(), 5) > dbo.fnTimeRoundMinutes(LAST_RUN, 5))
GO

Grant Select on dbo.vwSCHEDULERS_Run to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSHORTCUTS_Menu')
	Drop View dbo.vwSHORTCUTS_Menu;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwSHORTCUTS_Menu
as
select vwSHORTCUTS.MODULE_NAME
     , vwSHORTCUTS.DISPLAY_NAME
     , vwSHORTCUTS.RELATIVE_PATH
     , vwSHORTCUTS.IMAGE_NAME
     , vwSHORTCUTS.SHORTCUT_ORDER
  from      vwSHORTCUTS
 inner join vwMODULES
         on vwMODULES.MODULE_NAME = vwSHORTCUTS.MODULE_NAME
 where vwSHORTCUTS.SHORTCUT_ENABLED = 1

GO

Grant Select on dbo.vwSHORTCUTS_Menu to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwTEAMS_Edit')
	Drop View dbo.vwTEAMS_Edit;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwTEAMS_Edit
as
select *
  from vwTEAMS

GO

Grant Select on dbo.vwTEAMS_Edit to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwTEAMS_List')
	Drop View dbo.vwTEAMS_List;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwTEAMS_List
as
select *
  from vwTEAMS

GO

Grant Select on dbo.vwTEAMS_List to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwTEAMS_MyList')
	Drop View dbo.vwTEAMS_MyList;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwTEAMS_MyList
as
select vwTEAMS.*
     , vwTEAM_MEMBERSHIPS.MEMBERSHIP_USER_ID
  from      vwTEAMS
 inner join vwTEAM_MEMBERSHIPS
         on vwTEAM_MEMBERSHIPS.MEMBERSHIP_TEAM_ID = vwTEAMS.ID

GO

Grant Select on dbo.vwTEAMS_MyList to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwTEAM_MEMBERSHIPS_List')
	Drop View dbo.vwTEAM_MEMBERSHIPS_List;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwTEAM_MEMBERSHIPS_List
as
select TEAMS.ID   as TEAM_ID
     , TEAMS.NAME as TEAM_NAME
     , USERS.ID   as USER_ID
     , dbo.fnFullName(USERS.FIRST_NAME, USERS.LAST_NAME) as FULL_NAME
     , USERS.USER_NAME
     , USERS.EMAIL1
     , USERS.PHONE_WORK
     , TEAM_MEMBERSHIPS.DATE_ENTERED
     , TEAM_MEMBERSHIPS.EXPLICIT_ASSIGN
     , TEAM_MEMBERSHIPS.IMPLICIT_ASSIGN
  from           TEAMS
      inner join TEAM_MEMBERSHIPS
              on TEAM_MEMBERSHIPS.TEAM_ID = TEAMS.ID
             and TEAM_MEMBERSHIPS.DELETED = 0
      inner join USERS
              on USERS.ID                 = TEAM_MEMBERSHIPS.USER_ID
             and USERS.DELETED            = 0
 where TEAMS.DELETED = 0

GO

Grant Select on dbo.vwTEAM_MEMBERSHIPS_List to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwTERMINOLOGY_Edit')
	Drop View dbo.vwTERMINOLOGY_Edit;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwTERMINOLOGY_Edit
as
select *
  from vwTERMINOLOGY

GO

Grant Select on dbo.vwTERMINOLOGY_Edit to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwTERMINOLOGY_HELP_Layout')
	Drop View dbo.vwTERMINOLOGY_HELP_Layout;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwTERMINOLOGY_HELP_Layout
as
select MODULE_NAME
     , NAME
     , LANG
  from vwTERMINOLOGY_HELP

GO

Grant Select on dbo.vwTERMINOLOGY_HELP_Layout to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwTERMINOLOGY_LayoutLabel')
	Drop View dbo.vwTERMINOLOGY_LayoutLabel;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/05/2006 Paul.  Literals should be in unicode to reduce conversions at runtime. 
Create View dbo.vwTERMINOLOGY_LayoutLabel
as
select distinct
       MODULE_NAME
     , dbo.fnTermName(MODULE_NAME, LIST_NAME, NAME) as NAME
     , dbo.fnTermName(MODULE_NAME, LIST_NAME, NAME) as DISPLAY_NAME
  from vwTERMINOLOGY
 where LANG = N'en-US'
   and LIST_NAME is null

GO

Grant Select on dbo.vwTERMINOLOGY_LayoutLabel to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwTERMINOLOGY_List')
	Drop View dbo.vwTERMINOLOGY_List;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwTERMINOLOGY_List
as
select *
  from vwTERMINOLOGY

GO

Grant Select on dbo.vwTERMINOLOGY_List to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwTERMINOLOGY_PickList')
	Drop View dbo.vwTERMINOLOGY_PickList;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwTERMINOLOGY_PickList
as
select distinct
       LIST_NAME
  from vwTERMINOLOGY
 where LIST_NAME is not null

GO

Grant Select on dbo.vwTERMINOLOGY_PickList to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwTRACKER_LastViewed')
	Drop View dbo.vwTRACKER_LastViewed;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/06/2006 Paul.  The module name needs to be corrected as it will be used in the URL and the folder names are plural. 
-- 04/06/2006 Paul.  Add the IMAGE_NAME column as the filenames will not be changed. 
-- 07/26/2006 Paul.  Join to the modules table and return the relative path.  This will allow for nested modules. 
-- 07/26/2006 Paul.  Using the RELATIVE_PATH will also mean that the module name need not be corrected. 
-- 03/08/2012 Paul.  Add ACTION to the tracker table so that we can create quick user activity reports. 
-- 03/31/2012 Paul.  Increase name length to 25. 
Create View dbo.vwTRACKER_LastViewed
as
select vwTRACKER.USER_ID
     , vwTRACKER.MODULE_NAME
     , vwMODULES.RELATIVE_PATH
     , vwTRACKER.ITEM_ID
     , (case when len(vwTRACKER.ITEM_SUMMARY) > 25 then left(vwTRACKER.ITEM_SUMMARY, 25) + N'...'
        else ITEM_SUMMARY
        end) as ITEM_SUMMARY
     , vwTRACKER.DATE_ENTERED
     , vwTRACKER.MODULE_NAME as IMAGE_NAME
  from      vwTRACKER
 inner join vwMODULES
         on vwMODULES.MODULE_NAME = vwTRACKER.MODULE_NAME
 where vwTRACKER.ACTION = N'detailview'

GO

Grant Select on dbo.vwTRACKER_LastViewed to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwUSERS_Edit')
	Drop View dbo.vwUSERS_Edit;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/08/2008 Paul.  Move description to base view. 
-- 07/09/2010 Paul.  SMTP values belong in the OUTBOUND_EMAILS table. 
-- 06/02/2016 Paul.  We need SMTP server values. 
-- 01/17/2017 Paul.  Add support for Office 365 OAuth credentials. 
-- 02/01/2017 Paul.  Add support for Exchange using Username/Password. 
-- 01/30/2019 Paul.  Ease conversion to Oracle. 
-- 07/14/2020 Paul.  Create dummy ICLOUD_SECURITY_CODE field just in case it is required. 
-- 02/12/2022 Paul.  Apple now uses OAuth. 
Create View dbo.vwUSERS_Edit
as
select vwUSERS.*
     , dbo.fnFullAddressHtml(vwUSERS.ADDRESS_STREET, vwUSERS.ADDRESS_CITY, vwUSERS.ADDRESS_STATE, vwUSERS.ADDRESS_POSTALCODE, vwUSERS.ADDRESS_COUNTRY) as ADDRESS_HTML
     , OUTBOUND_EMAILS.MAIL_SMTPUSER
     , OUTBOUND_EMAILS.MAIL_SMTPPASS
     , OUTBOUND_EMAILS.MAIL_SMTPSERVER
     , OUTBOUND_EMAILS.MAIL_SMTPPORT
     , OUTBOUND_EMAILS.MAIL_SMTPAUTH_REQ
     , OUTBOUND_EMAILS.MAIL_SMTPSSL
     , (case when OUTBOUND_EMAILS.MAIL_SENDTYPE is null and OUTBOUND_EMAILS.MAIL_SMTPPORT in (25, 465, 587) then N'smtp' else OUTBOUND_EMAILS.MAIL_SENDTYPE end) as MAIL_SENDTYPE
     , (select count(*) from OAUTH_TOKENS where OAUTH_TOKENS.ASSIGNED_USER_ID = vwUSERS.ID and OAUTH_TOKENS.NAME = N'Office365'  and OAUTH_TOKENS.DELETED = 0) as OFFICE365_OAUTH_ENABLED
     , (select count(*) from OAUTH_TOKENS where OAUTH_TOKENS.ASSIGNED_USER_ID = vwUSERS.ID and OAUTH_TOKENS.NAME = N'GoogleApps' and OAUTH_TOKENS.DELETED = 0) as GOOGLEAPPS_OAUTH_ENABLED
     , (select count(*) from OAUTH_TOKENS where OAUTH_TOKENS.ASSIGNED_USER_ID = vwUSERS.ID and OAUTH_TOKENS.NAME = N'iCloud'     and OAUTH_TOKENS.DELETED = 0) as ICLOUD_OAUTH_ENABLED
     , cast(null as nvarchar(25)) as ICLOUD_SECURITY_CODE
  from            vwUSERS
  left outer join USERS
               on USERS.ID = vwUSERS.ID
  left outer join OUTBOUND_EMAILS
               on OUTBOUND_EMAILS.USER_ID         = USERS.ID
              and OUTBOUND_EMAILS.TYPE            = N'system-override'
              and (OUTBOUND_EMAILS.MAIL_SMTPUSER   is not null or OUTBOUND_EMAILS.MAIL_SENDTYPE is not null)
              and OUTBOUND_EMAILS.DELETED         = 0

GO

Grant Select on dbo.vwUSERS_Edit to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwUSERS_Invitees')
	Drop View dbo.vwUSERS_Invitees;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/07/2005 Paul.  SQL Server needs the cast in order to compile vwACTIVITIES_Invitees.
-- 02/01/2006 Paul.  DB2 does not like comments in the middle of the Create View statement. 
-- 12/11/2009 Paul.  Only show active users and also exclude portal users. 
-- 12/12/2009 Paul.  We do not need to return the STATUS. 
-- If we include the status, then we would need a dummy STATUS field in the vwCONTACTS_Invitees view. 
Create View dbo.vwUSERS_Invitees
as
select ID          as ID
     , N'Users'    as INVITEE_TYPE
     , FULL_NAME   as NAME
     , FIRST_NAME  as FIRST_NAME
     , LAST_NAME   as LAST_NAME
     , EMAIL1      as EMAIL
     , PHONE_WORK  as PHONE
     , cast(null as uniqueidentifier) as ASSIGNED_USER_ID
  from vwUSERS
 where (STATUS      is null or STATUS      = N'Active')
   and (PORTAL_ONLY is null or PORTAL_ONLY = 0        )

GO

Grant Select on dbo.vwUSERS_Invitees to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwUSERS_List')
	Drop View dbo.vwUSERS_List;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 03/06/2006 Paul.  Oracle does not like <> ''.  Use len() > 0 instead. 
-- 02/22/2008 Paul.  Advanced search neesd access to all the fields. 
Create View dbo.vwUSERS_List
as
select *
  from vwUSERS
 where USER_NAME is not null
   and len(USER_NAME) > 0

GO

Grant Select on dbo.vwUSERS_List to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwUSERS_LOGINS')
	Drop View dbo.vwUSERS_LOGINS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/08/2018 Paul.  The ID is needed for export. 
-- 03/27/2019 Paul.  Every searchable view should have a NAME field. 
-- 10/30/2020 Paul.  DATE_ENTERED for the React Client. 
Create View dbo.vwUSERS_LOGINS
as
select USERS_LOGINS.ID
     , USERS_LOGINS.USER_ID
     , USERS_LOGINS.USER_NAME
     , USERS_LOGINS.LOGIN_TYPE
     , USERS_LOGINS.LOGIN_DATE
     , USERS_LOGINS.LOGOUT_DATE
     , USERS_LOGINS.LOGIN_STATUS
     , USERS_LOGINS.ASPNET_SESSIONID
     , USERS_LOGINS.REMOTE_HOST
     , USERS_LOGINS.TARGET
     , USERS_LOGINS.USER_AGENT
     , USERS_LOGINS.DATE_MODIFIED
     , USERS_LOGINS.DATE_ENTERED
     , vwUSERS.FULL_NAME
     , vwUSERS.IS_ADMIN
     , vwUSERS.STATUS
     , USERS_LOGINS.USER_NAME        as NAME
  from            USERS_LOGINS
  left outer join vwUSERS
               on vwUSERS.ID = USERS_LOGINS.USER_ID

GO

Grant Select on dbo.vwUSERS_LOGINS to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwUSERS_PASSWORD_LINK')
	Drop View dbo.vwUSERS_PASSWORD_LINK;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwUSERS_PASSWORD_LINK
as
select USERS_PASSWORD_LINK.ID  as ID
     , vwUSERS_Login.ID        as USER_ID
     , vwUSERS_Login.USER_NAME as USER_NAME
  from      USERS_PASSWORD_LINK
 inner join vwUSERS_Login
         on vwUSERS_Login.USER_NAME = USERS_PASSWORD_LINK.USER_NAME
 where USERS_PASSWORD_LINK.DELETED = 0

GO

Grant Select on dbo.vwUSERS_PASSWORD_LINK to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwUSERS_Sync')
	Drop View dbo.vwUSERS_Sync;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/31/2017 Paul.  We should not sync the USERS view directly as it can contain encrypted passwords. 
-- 04/13/2018 Paul.  Add STATUS even though it is always Active as some old code is including it in the query. 
-- 05/18/2020 Paul.  The Reac Client needs access to the portal users. 
-- 05/27/2020 Paul.  Fields needed by React Client: IS_ADMIN, IS_ADMIN_DELEGATE, PORTAL_ONLY, RECEIVE_NOTIFICATIONS
-- 11/10/2020 Paul.  Typical fields used by React Client export: EMPLOYEE_STATUS, MESSENGER_TYPE, IS_GROUP, CREATED_BY_NAME, MODIFIED_BY_NAME, GOOGLEAPPS_SYNC_CONTACTS, GOOGLEAPPS_SYNC_CALENDAR, GOOGLEAPPS_USERNAME
Create View dbo.vwUSERS_Sync
as
select USERS.ID
     , dbo.fnFullName(USERS.FIRST_NAME, USERS.LAST_NAME) as FULL_NAME
     , dbo.fnFullName(USERS.FIRST_NAME, USERS.LAST_NAME) as NAME
     , USERS.USER_NAME
     , USERS.FIRST_NAME
     , USERS.LAST_NAME
     , USERS.REPORTS_TO_ID
     , dbo.fnFullName(REPORTS_TO_USERS.FIRST_NAME, REPORTS_TO_USERS.LAST_NAME) as REPORTS_TO_NAME
     , USERS.TITLE
     , USERS.DEPARTMENT
     , USERS.PHONE_HOME
     , USERS.PHONE_MOBILE
     , USERS.PHONE_WORK
     , USERS.PHONE_OTHER
     , USERS.PHONE_FAX
     , USERS.EMAIL1
     , USERS.EMAIL2
     , USERS.STATUS
     , USERS.ADDRESS_STREET
     , USERS.ADDRESS_CITY
     , USERS.ADDRESS_STATE
     , USERS.ADDRESS_COUNTRY
     , USERS.ADDRESS_POSTALCODE
     , USERS.DATE_ENTERED
     , USERS.DATE_MODIFIED
     , USERS.DATE_MODIFIED_UTC
     , USERS.DESCRIPTION
     , USERS.USER_PREFERENCES
     , USERS.CREATED_BY            as CREATED_BY_ID
     , USERS.MODIFIED_USER_ID
     , USERS.DEFAULT_TEAM
     , TEAMS.NAME                  as DEFAULT_TEAM_NAME
     , USERS.THEME
     , USERS.DATE_FORMAT
     , USERS.TIME_FORMAT
     , USERS.LANG
     , USERS.CURRENCY_ID
     , USERS.TIMEZONE_ID
     , USERS.SAVE_QUERY
     , USERS.GROUP_TABS
     , USERS.SUBPANEL_TABS
     , USERS.EXTENSION
     , USERS.SMS_OPT_IN
     , USERS.PICTURE
     , USERS.PRIMARY_ROLE_ID    as PRIMARY_ROLE_ID
     , replace(replace(ACL_ROLES.NAME, ' ', ''), '''', '') as PRIMARY_ROLE_NAME
     , USERS.IS_ADMIN
     , USERS.IS_ADMIN_DELEGATE
     , USERS.PORTAL_ONLY
     , USERS.RECEIVE_NOTIFICATIONS
     , USERS.EMPLOYEE_STATUS
     , USERS.MESSENGER_TYPE
     , USERS.IS_GROUP
     , dbo.fnFullName(USERS_CREATED_BY.FIRST_NAME , USERS_CREATED_BY.LAST_NAME ) as CREATED_BY_NAME
     , dbo.fnFullName(USERS_MODIFIED_BY.FIRST_NAME, USERS_MODIFIED_BY.LAST_NAME) as MODIFIED_BY_NAME
     , USERS.GOOGLEAPPS_SYNC_CONTACTS
     , USERS.GOOGLEAPPS_SYNC_CALENDAR
     , USERS.GOOGLEAPPS_USERNAME
     , USERS_CSTM.*
  from            USERS
  left outer join USERS REPORTS_TO_USERS
               on REPORTS_TO_USERS.ID       = USERS.REPORTS_TO_ID
              and REPORTS_TO_USERS.DELETED  = 0
  left outer join USERS USERS_CREATED_BY
               on USERS_CREATED_BY.ID       = USERS.CREATED_BY
  left outer join USERS USERS_MODIFIED_BY
               on USERS_MODIFIED_BY.ID      = USERS.MODIFIED_USER_ID
  left outer join USERS_CSTM
               on USERS_CSTM.ID_C           = USERS.ID
  left outer join TEAMS
               on TEAMS.ID                  = USERS.DEFAULT_TEAM
  left outer join ACL_ROLES_USERS
               on ACL_ROLES_USERS.USER_ID   = USERS.ID
              and ACL_ROLES_USERS.ROLE_ID   = USERS.PRIMARY_ROLE_ID
              and ACL_ROLES_USERS.DELETED   = 0
  left outer join ACL_ROLES
               on ACL_ROLES.ID              = ACL_ROLES_USERS.ROLE_ID
              and ACL_ROLES.DELETED         = 0
 where USERS.DELETED = 0
   and USERS.USER_NAME is not null
   and USERS.STATUS = N'Active'
--   and isnull(USERS.PORTAL_ONLY, 0) = 0

GO

Grant Select on dbo.vwUSERS_Sync to public;
GO



if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwACL_ACCESS_ByAccess')
	Drop View dbo.vwACL_ACCESS_ByAccess;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 03/09/2010 Paul.  Allow IS_ADMIN and Team Management so that they can be managed separately. 
-- 09/26/2017 Paul.  Add Archive access right. 
Create View dbo.vwACL_ACCESS_ByAccess
as
select USERS.ID as USER_ID
     , vwACL_ACCESS_ByRole.MODULE_NAME
     , vwACL_ACCESS_ByRole.DISPLAY_NAME
     , min(ACLACCESS_ADMIN ) as ACLACCESS_ADMIN 
     , min(ACLACCESS_ACCESS) as ACLACCESS_ACCESS
     , min(ACLACCESS_VIEW  ) as ACLACCESS_VIEW  
     , min(ACLACCESS_LIST  ) as ACLACCESS_LIST  
     , min(ACLACCESS_EDIT  ) as ACLACCESS_EDIT  
     , min(ACLACCESS_DELETE) as ACLACCESS_DELETE
     , min(ACLACCESS_IMPORT) as ACLACCESS_IMPORT
     , min(ACLACCESS_EXPORT) as ACLACCESS_EXPORT
     , min(ACLACCESS_ARCHIVE) as ACLACCESS_ARCHIVE
     , vwACL_ACCESS_ByRole.IS_ADMIN
  from       vwACL_ACCESS_ByRole
  inner join ACL_ROLES_USERS
          on ACL_ROLES_USERS.ROLE_ID = vwACL_ACCESS_ByRole.ROLE_ID
         and ACL_ROLES_USERS.DELETED = 0
  inner join USERS
          on USERS.ID                = ACL_ROLES_USERS.USER_ID
         and USERS.DELETED           = 0
 group by USERS.ID, vwACL_ACCESS_ByRole.MODULE_NAME, vwACL_ACCESS_ByRole.DISPLAY_NAME, vwACL_ACCESS_ByRole.IS_ADMIN
GO

Grant Select on dbo.vwACL_ACCESS_ByAccess to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwACL_ACCESS_ByModule_USERS')
	Drop View dbo.vwACL_ACCESS_ByModule_USERS;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/29/2006 Paul.  DB2 has a problem with cross joins, so place in a view so that it can easily be converted. 
-- 03/09/2010 Paul.  Allow IS_ADMIN and Team Management so that they can be managed separately. 
-- 09/26/2017 Paul.  Add Archive access right. 
Create View dbo.vwACL_ACCESS_ByModule_USERS
as
select vwACL_ACCESS_ByModule.MODULE_NAME
     , vwACL_ACCESS_ByModule.DISPLAY_NAME
     , vwACL_ACCESS_ByModule.ACLACCESS_ADMIN 
     , vwACL_ACCESS_ByModule.ACLACCESS_ACCESS
     , vwACL_ACCESS_ByModule.ACLACCESS_VIEW  
     , vwACL_ACCESS_ByModule.ACLACCESS_LIST  
     , vwACL_ACCESS_ByModule.ACLACCESS_EDIT  
     , vwACL_ACCESS_ByModule.ACLACCESS_DELETE
     , vwACL_ACCESS_ByModule.ACLACCESS_IMPORT
     , vwACL_ACCESS_ByModule.ACLACCESS_EXPORT
     , vwACL_ACCESS_ByModule.ACLACCESS_ARCHIVE
     , USERS.ID           as USER_ID
     , vwACL_ACCESS_ByModule.IS_ADMIN
  from      vwACL_ACCESS_ByModule
 cross join USERS
 where USERS.DELETED   = 0

GO

Grant Select on dbo.vwACL_ACCESS_ByModule_USERS to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwTEAMS_ASSIGNED_TO')
	Drop View dbo.vwTEAMS_ASSIGNED_TO;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwTEAMS_ASSIGNED_TO
as
select distinct
       vwUSERS_ASSIGNED_TO.ID
     , vwUSERS_ASSIGNED_TO.USER_NAME
     , vwTEAMS_MyList.MEMBERSHIP_USER_ID
  from      vwTEAMS_MyList
 inner join vwTEAM_MEMBERSHIPS
         on vwTEAM_MEMBERSHIPS.MEMBERSHIP_TEAM_ID = vwTEAMS_MyList.ID
 inner join vwUSERS_ASSIGNED_TO
         on vwUSERS_ASSIGNED_TO.ID                = vwTEAM_MEMBERSHIPS.MEMBERSHIP_USER_ID

GO

Grant Select on dbo.vwTEAMS_ASSIGNED_TO to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwTERMINOLOGY_Active')
	Drop View dbo.vwTERMINOLOGY_Active;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwTERMINOLOGY_Active
as
select vwTERMINOLOGY.ID
     , vwTERMINOLOGY.NAME
     , vwTERMINOLOGY.LANG
     , vwTERMINOLOGY.MODULE_NAME
     , vwTERMINOLOGY.LIST_NAME
     , vwTERMINOLOGY.LIST_ORDER
     , vwTERMINOLOGY.DISPLAY_NAME
  from      vwLANGUAGES_Active
 inner join vwTERMINOLOGY
         on vwTERMINOLOGY.LANG = vwLANGUAGES_Active.NAME

GO

Grant Select on dbo.vwTERMINOLOGY_Active to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwUSERS_ASSIGNED_TO_List')
	Drop View dbo.vwUSERS_ASSIGNED_TO_List;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/04/2006 Paul.  Only include active users. 
-- 12/05/2006 Paul.  New users created via NTLM will have a status of NULL. 
-- 04/15/2008 Paul.  Use vwUSERS_ASSIGNED_TO as the base to be similar to vwTEAMS_ASSIGNED_TO_List. 
Create View dbo.vwUSERS_ASSIGNED_TO_List
as
select vwUSERS_List.*
  from      vwUSERS_ASSIGNED_TO
 inner join vwUSERS_List
         on vwUSERS_List.ID = vwUSERS_ASSIGNED_TO.ID

GO

Grant Select on dbo.vwUSERS_ASSIGNED_TO_List to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwUSERS_SmsNumbers')
	Drop View dbo.vwUSERS_SmsNumbers;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/30/2017 Paul.  Add ASSIGNED_SET_ID for Dynamic User Assignment. 
Create View dbo.vwUSERS_SmsNumbers
as
select ID
     , NAME
     , FIRST_NAME
     , LAST_NAME
     , TITLE
     , cast(null as nvarchar(150)) as ACCOUNT_NAME
     , cast(null as uniqueidentifier) as ACCOUNT_ID
     , PHONE_HOME
     , PHONE_MOBILE
     , PHONE_WORK
     , PHONE_OTHER
     , PHONE_FAX
     , EMAIL1
     , EMAIL2
     , SMS_OPT_IN
     , cast(null as nvarchar(75))     as ASSISTANT
     , cast(null as nvarchar(25))     as ASSISTANT_PHONE
     , cast(null as nvarchar(60))     as ASSIGNED_TO
     , cast(null as uniqueidentifier) as ASSIGNED_USER_ID
     , cast(null as uniqueidentifier) as TEAM_ID
     , cast(null as nvarchar(128))    as TEAM_NAME
     , cast(null as uniqueidentifier) as TEAM_SET_ID
     , cast(null as nvarchar(200))    as TEAM_SET_NAME
     , cast(null as uniqueidentifier) as ASSIGNED_SET_ID
     , cast(null as nvarchar(200))    as ASSIGNED_SET_NAME
     , cast(null as varchar(851))     as ASSIGNED_SET_LIST
     , N'Users' as MODULE_TYPE
  from vwUSERS_List
 where PHONE_MOBILE is not null
   and len(PHONE_MOBILE) > 0

GO

Grant Select on dbo.vwUSERS_SmsNumbers to public;
GO



if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwACL_ACCESS_ByUser')
	Drop View dbo.vwACL_ACCESS_ByUser;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 03/09/2010 Paul.  Allow IS_ADMIN and Team Management so that they can be managed separately. 
-- 09/26/2017 Paul.  Add Archive access right. 
Create View dbo.vwACL_ACCESS_ByUser
as
select vwACL_ACCESS_ByModule_USERS.USER_ID
     , vwACL_ACCESS_ByModule_USERS.MODULE_NAME
     , vwACL_ACCESS_ByModule_USERS.DISPLAY_NAME
     , (case when vwACL_ACCESS_ByAccess.ACLACCESS_ADMIN  is null then vwACL_ACCESS_ByModule_USERS.ACLACCESS_ADMIN  else vwACL_ACCESS_ByAccess.ACLACCESS_ADMIN  end) as ACLACCESS_ADMIN 
     , (case when vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is null then vwACL_ACCESS_ByModule_USERS.ACLACCESS_ACCESS else vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS end) as ACLACCESS_ACCESS
     , (case when vwACL_ACCESS_ByAccess.ACLACCESS_VIEW   is null then vwACL_ACCESS_ByModule_USERS.ACLACCESS_VIEW   else vwACL_ACCESS_ByAccess.ACLACCESS_VIEW   end) as ACLACCESS_VIEW  
     , (case when vwACL_ACCESS_ByAccess.ACLACCESS_LIST   is null then vwACL_ACCESS_ByModule_USERS.ACLACCESS_LIST   else vwACL_ACCESS_ByAccess.ACLACCESS_LIST   end) as ACLACCESS_LIST  
     , (case when vwACL_ACCESS_ByAccess.ACLACCESS_EDIT   is null then vwACL_ACCESS_ByModule_USERS.ACLACCESS_EDIT   else vwACL_ACCESS_ByAccess.ACLACCESS_EDIT   end) as ACLACCESS_EDIT  
     , (case when vwACL_ACCESS_ByAccess.ACLACCESS_DELETE is null then vwACL_ACCESS_ByModule_USERS.ACLACCESS_DELETE else vwACL_ACCESS_ByAccess.ACLACCESS_DELETE end) as ACLACCESS_DELETE
     , (case when vwACL_ACCESS_ByAccess.ACLACCESS_IMPORT is null then vwACL_ACCESS_ByModule_USERS.ACLACCESS_IMPORT else vwACL_ACCESS_ByAccess.ACLACCESS_IMPORT end) as ACLACCESS_IMPORT
     , (case when vwACL_ACCESS_ByAccess.ACLACCESS_EXPORT is null then vwACL_ACCESS_ByModule_USERS.ACLACCESS_EXPORT else vwACL_ACCESS_ByAccess.ACLACCESS_EXPORT end) as ACLACCESS_EXPORT
     , (case when vwACL_ACCESS_ByAccess.ACLACCESS_ARCHIVE is null then vwACL_ACCESS_ByModule_USERS.ACLACCESS_ARCHIVE else vwACL_ACCESS_ByAccess.ACLACCESS_ARCHIVE end) as ACLACCESS_ARCHIVE
     , vwACL_ACCESS_ByModule_USERS.IS_ADMIN
  from            vwACL_ACCESS_ByModule_USERS
  left outer join vwACL_ACCESS_ByAccess
               on vwACL_ACCESS_ByAccess.USER_ID     = vwACL_ACCESS_ByModule_USERS.USER_ID
              and vwACL_ACCESS_ByAccess.MODULE_NAME = vwACL_ACCESS_ByModule_USERS.MODULE_NAME

GO

Grant Select on dbo.vwACL_ACCESS_ByUser to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwMODULES_Access_ByUser')
	Drop View dbo.vwMODULES_Access_ByUser;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 02/08/2018 Paul.  TABLE_NAME is needed by RestUtils so that we can determine the module in the calendar. 
Create View dbo.vwMODULES_Access_ByUser
as
select vwMODULES_USERS_Cross.USER_ID
     , vwMODULES_USERS_Cross.MODULE_NAME
     , vwMODULES_USERS_Cross.DISPLAY_NAME
     , vwMODULES_USERS_Cross.RELATIVE_PATH
     , vwMODULES_USERS_Cross.TAB_ORDER
     , vwMODULES_USERS_Cross.PORTAL_ENABLED
     , vwMODULES_USERS_Cross.TABLE_NAME
  from            vwMODULES_USERS_Cross
  left outer join vwACL_ACTIONS
               on vwACL_ACTIONS.CATEGORY            = vwMODULES_USERS_Cross.MODULE_NAME
              and vwACL_ACTIONS.NAME                = N'access'
  left outer join vwACL_ACCESS_ByAccess
               on vwACL_ACCESS_ByAccess.USER_ID     = vwMODULES_USERS_Cross.USER_ID
              and vwACL_ACCESS_ByAccess.MODULE_NAME = vwMODULES_USERS_Cross.MODULE_NAME
 where vwMODULES_USERS_Cross.MODULE_ENABLED = 1
   and (   (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is not null and vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is null and vwACL_ACTIONS.ACLACCESS is not null and vwACL_ACTIONS.ACLACCESS >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is null and vwACL_ACTIONS.ACLACCESS is null)
       )
GO

Grant Select on dbo.vwMODULES_Access_ByUser to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwMODULES_Import')
	Drop View dbo.vwMODULES_Import;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/05/2006 Paul.  Literals should be in unicode to reduce conversions at runtime. 
-- 02/10/2008 Paul.  We should only be displaying modules that are enabled. 
Create View dbo.vwMODULES_Import
as
select distinct
       vwMODULES_USERS_Cross.USER_ID
     , vwMODULES_USERS_Cross.MODULE_NAME
     , vwMODULES_USERS_Cross.DISPLAY_NAME
  from            vwMODULES_USERS_Cross
  left outer join vwACL_ACTIONS
               on vwACL_ACTIONS.CATEGORY            = vwMODULES_USERS_Cross.MODULE_NAME
              and vwACL_ACTIONS.NAME                in (N'access', N'import')
  left outer join vwACL_ACCESS_ByAccess
               on vwACL_ACCESS_ByAccess.USER_ID     = vwMODULES_USERS_Cross.USER_ID
              and vwACL_ACCESS_ByAccess.MODULE_NAME = vwMODULES_USERS_Cross.MODULE_NAME
 where vwMODULES_USERS_Cross.MODULE_ENABLED = 1
   and vwMODULES_USERS_Cross.IMPORT_ENABLED = 1
   and (   (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is not null and vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is null and vwACL_ACTIONS.ACLACCESS is not null and vwACL_ACTIONS.ACLACCESS >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is null and vwACL_ACTIONS.ACLACCESS is null)
       )
GO

Grant Select on dbo.vwMODULES_Import to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwMODULES_MobileMenu_ByUser')
	Drop View dbo.vwMODULES_MobileMenu_ByUser;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/17/2007 Paul.  Just like vwMODULES_TabMenu_ByUser but only if the module is enabled for mobile browser. 
Create View dbo.vwMODULES_MobileMenu_ByUser
as
select vwMODULES_USERS_Cross.USER_ID
     , vwMODULES_USERS_Cross.MODULE_NAME
     , vwMODULES_USERS_Cross.DISPLAY_NAME
     , vwMODULES_USERS_Cross.RELATIVE_PATH
     , vwMODULES_USERS_Cross.TAB_ORDER
  from            vwMODULES_USERS_Cross
  left outer join vwACL_ACTIONS
               on vwACL_ACTIONS.CATEGORY            = vwMODULES_USERS_Cross.MODULE_NAME
              and vwACL_ACTIONS.NAME                = N'access'
  left outer join vwACL_ACCESS_ByAccess
               on vwACL_ACCESS_ByAccess.USER_ID     = vwMODULES_USERS_Cross.USER_ID
              and vwACL_ACCESS_ByAccess.MODULE_NAME = vwMODULES_USERS_Cross.MODULE_NAME
 where vwMODULES_USERS_Cross.MODULE_ENABLED = 1
   and vwMODULES_USERS_Cross.MOBILE_ENABLED = 1
   and vwMODULES_USERS_Cross.IS_ADMIN       = 0
   and (   (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is not null and vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is null and vwACL_ACTIONS.ACLACCESS is not null and vwACL_ACTIONS.ACLACCESS >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is null and vwACL_ACTIONS.ACLACCESS is null)
       )
GO

Grant Select on dbo.vwMODULES_MobileMenu_ByUser to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwMODULES_Reporting')
	Drop View dbo.vwMODULES_Reporting;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/05/2006 Paul.  Literals should be in unicode to reduce conversions at runtime. 
-- 02/10/2008 Paul.  We should only be displaying modules that are enabled. 
-- 12/06/2009 Paul.  We need the ID and TABLE_NAME when generating the SemanticModel for the ReportBuilder. 
Create View dbo.vwMODULES_Reporting
as
select distinct
       vwMODULES_USERS_Cross.USER_ID
     , vwMODULES_USERS_Cross.MODULE_NAME
     , vwMODULES_USERS_Cross.DISPLAY_NAME
     , vwMODULES_USERS_Cross.ID
     , vwMODULES_USERS_Cross.TABLE_NAME
  from            vwMODULES_USERS_Cross
  left outer join vwACL_ACTIONS
               on vwACL_ACTIONS.CATEGORY            = vwMODULES_USERS_Cross.MODULE_NAME
              and vwACL_ACTIONS.NAME                in (N'access', N'list')
  left outer join vwACL_ACCESS_ByAccess
               on vwACL_ACCESS_ByAccess.USER_ID     = vwMODULES_USERS_Cross.USER_ID
              and vwACL_ACCESS_ByAccess.MODULE_NAME = vwMODULES_USERS_Cross.MODULE_NAME
 where vwMODULES_USERS_Cross.MODULE_ENABLED = 1
   and vwMODULES_USERS_Cross.REPORT_ENABLED = 1
   and (   (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is not null and vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is null and vwACL_ACTIONS.ACLACCESS is not null and vwACL_ACTIONS.ACLACCESS >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is null and vwACL_ACTIONS.ACLACCESS is null)
       )
GO

Grant Select on dbo.vwMODULES_Reporting to public;
GO


if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwMODULES_Rules')
	Drop View dbo.vwMODULES_Rules;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/09/2021 Paul.  Exclude some modules that cannot be updated. 
Create View dbo.vwMODULES_Rules
as
select distinct
       vwMODULES_USERS_Cross.USER_ID
     , vwMODULES_USERS_Cross.MODULE_NAME
     , vwMODULES_USERS_Cross.DISPLAY_NAME
     , vwMODULES_USERS_Cross.ID
     , vwMODULES_USERS_Cross.TABLE_NAME
  from            vwMODULES_USERS_Cross
  left outer join vwACL_ACTIONS
               on vwACL_ACTIONS.CATEGORY            = vwMODULES_USERS_Cross.MODULE_NAME
              and vwACL_ACTIONS.NAME                in (N'access', N'list')
  left outer join vwACL_ACCESS_ByAccess
               on vwACL_ACCESS_ByAccess.USER_ID     = vwMODULES_USERS_Cross.USER_ID
              and vwACL_ACCESS_ByAccess.MODULE_NAME = vwMODULES_USERS_Cross.MODULE_NAME
 where vwMODULES_USERS_Cross.MODULE_ENABLED = 1
   and vwMODULES_USERS_Cross.REPORT_ENABLED = 1
   and (   (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is not null and vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is null and vwACL_ACTIONS.ACLACCESS is not null and vwACL_ACTIONS.ACLACCESS >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is null and vwACL_ACTIONS.ACLACCESS is null)
       )
   and vwMODULES_USERS_Cross.MODULE_NAME not in ('CampaignLog', 'SystemLog', 'SystemSyncLog', 'WorkflowEventLog', 'BusinessProcessesLog', 'AzureSystemLog')
GO

Grant Select on dbo.vwMODULES_Rules to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwMODULES_TabMenu_ByUser')
	Drop View dbo.vwMODULES_TabMenu_ByUser;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/28/2006 Paul.  We could not use vwACL_ACCESS_ByModule because it does not include all available modules. 
-- 06/03/2006 Paul.  Only include modules that are enabled.  
-- 12/05/2006 Paul.  Literals should be in unicode to reduce conversions at runtime. 
-- 10/26/2009 Paul.  Add PORTAL_ENABLED. 
Create View dbo.vwMODULES_TabMenu_ByUser
as
select vwMODULES_USERS_Cross.USER_ID
     , vwMODULES_USERS_Cross.MODULE_NAME
     , vwMODULES_USERS_Cross.DISPLAY_NAME
     , vwMODULES_USERS_Cross.RELATIVE_PATH
     , vwMODULES_USERS_Cross.TAB_ORDER
     , vwMODULES_USERS_Cross.PORTAL_ENABLED
  from            vwMODULES_USERS_Cross
  left outer join vwACL_ACTIONS
               on vwACL_ACTIONS.CATEGORY            = vwMODULES_USERS_Cross.MODULE_NAME
              and vwACL_ACTIONS.NAME                = N'access'
  left outer join vwACL_ACCESS_ByAccess
               on vwACL_ACCESS_ByAccess.USER_ID     = vwMODULES_USERS_Cross.USER_ID
              and vwACL_ACCESS_ByAccess.MODULE_NAME = vwMODULES_USERS_Cross.MODULE_NAME
 where vwMODULES_USERS_Cross.MODULE_ENABLED = 1
   and vwMODULES_USERS_Cross.TAB_ENABLED    = 1
   and vwMODULES_USERS_Cross.IS_ADMIN       = 0
   and (   (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is not null and vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is null and vwACL_ACTIONS.ACLACCESS is not null and vwACL_ACTIONS.ACLACCESS >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is null and vwACL_ACTIONS.ACLACCESS is null)
       )
GO

Grant Select on dbo.vwMODULES_TabMenu_ByUser to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwSHORTCUTS_Menu_ByUser')
	Drop View dbo.vwSHORTCUTS_Menu_ByUser;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/28/2006 Paul.  We need to look at both the access right and either the edit right or the list right. 
-- Although we could combine the union into a single query, it seems too complex. 
-- 09/09/2006 Paul.  Include import in types that can appear in shortcuts. 
-- 12/05/2006 Paul.  We need to filter on access rights for vwSHORTCUTS_USERS_Cross.SHORTCUT_MODULE, not the rights for the module being displayed. 
-- 12/05/2006 Paul.  Literals should be in unicode to reduce conversions at runtime. 
-- 09/26/2017 Paul.  Add Archive access right. 
Create View dbo.vwSHORTCUTS_Menu_ByUser
as
select vwSHORTCUTS_USERS_Cross.USER_ID
     , vwSHORTCUTS_USERS_Cross.MODULE_NAME
     , vwSHORTCUTS_USERS_Cross.DISPLAY_NAME
     , vwSHORTCUTS_USERS_Cross.RELATIVE_PATH
     , vwSHORTCUTS_USERS_Cross.IMAGE_NAME
     , vwSHORTCUTS_USERS_Cross.SHORTCUT_ORDER
     , vwSHORTCUTS_USERS_Cross.SHORTCUT_ACLTYPE
  from            vwSHORTCUTS_USERS_Cross
  left outer join vwACL_ACTIONS                       vwACL_ACTIONS_AccessOnly
               on vwACL_ACTIONS_AccessOnly.CATEGORY = vwSHORTCUTS_USERS_Cross.SHORTCUT_MODULE
              and vwACL_ACTIONS_AccessOnly.NAME     = N'access'
  left outer join vwACL_ACTIONS                       vwACL_ACTIONS_EditOnly
               on vwACL_ACTIONS_EditOnly.CATEGORY   = vwSHORTCUTS_USERS_Cross.SHORTCUT_MODULE
              and vwACL_ACTIONS_EditOnly.NAME       = N'edit'
  left outer join vwACL_ACCESS_ByAccess
               on vwACL_ACCESS_ByAccess.USER_ID     = vwSHORTCUTS_USERS_Cross.USER_ID
              and vwACL_ACCESS_ByAccess.MODULE_NAME = vwSHORTCUTS_USERS_Cross.SHORTCUT_MODULE
 where vwSHORTCUTS_USERS_Cross.SHORTCUT_ENABLED = 1
   and vwSHORTCUTS_USERS_Cross.SHORTCUT_ACLTYPE = N'edit'
   and (   (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is not null and vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is null     and vwACL_ACTIONS_AccessOnly.ACLACCESS is not null and vwACL_ACTIONS_AccessOnly.ACLACCESS >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is null     and vwACL_ACTIONS_AccessOnly.ACLACCESS is null)
       )
   and (   (vwACL_ACCESS_ByAccess.ACLACCESS_EDIT   is not null and vwACL_ACCESS_ByAccess.ACLACCESS_EDIT >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_EDIT   is null     and vwACL_ACTIONS_EditOnly.ACLACCESS is not null   and vwACL_ACTIONS_EditOnly.ACLACCESS   >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_EDIT   is null     and vwACL_ACTIONS_EditOnly.ACLACCESS is null)
       )
union all
select vwSHORTCUTS_USERS_Cross.USER_ID
     , vwSHORTCUTS_USERS_Cross.MODULE_NAME
     , vwSHORTCUTS_USERS_Cross.DISPLAY_NAME
     , vwSHORTCUTS_USERS_Cross.RELATIVE_PATH
     , vwSHORTCUTS_USERS_Cross.IMAGE_NAME
     , vwSHORTCUTS_USERS_Cross.SHORTCUT_ORDER
     , vwSHORTCUTS_USERS_Cross.SHORTCUT_ACLTYPE
  from            vwSHORTCUTS_USERS_Cross
  left outer join vwACL_ACTIONS                       vwACL_ACTIONS_AccessOnly
               on vwACL_ACTIONS_AccessOnly.CATEGORY = vwSHORTCUTS_USERS_Cross.SHORTCUT_MODULE
              and vwACL_ACTIONS_AccessOnly.NAME     = N'access'
  left outer join vwACL_ACTIONS                       vwACL_ACTIONS_ListOnly
               on vwACL_ACTIONS_ListOnly.CATEGORY   = vwSHORTCUTS_USERS_Cross.SHORTCUT_MODULE
              and vwACL_ACTIONS_ListOnly.NAME       = N'list'
  left outer join vwACL_ACCESS_ByAccess
               on vwACL_ACCESS_ByAccess.USER_ID     = vwSHORTCUTS_USERS_Cross.USER_ID
              and vwACL_ACCESS_ByAccess.MODULE_NAME = vwSHORTCUTS_USERS_Cross.SHORTCUT_MODULE
 where vwSHORTCUTS_USERS_Cross.SHORTCUT_ENABLED = 1
   and vwSHORTCUTS_USERS_Cross.SHORTCUT_ACLTYPE = N'list'
   and (   (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is not null and vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is null     and vwACL_ACTIONS_AccessOnly.ACLACCESS is not null and vwACL_ACTIONS_AccessOnly.ACLACCESS >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is null     and vwACL_ACTIONS_AccessOnly.ACLACCESS is null)
       )
   and (   (vwACL_ACCESS_ByAccess.ACLACCESS_LIST   is not null and vwACL_ACCESS_ByAccess.ACLACCESS_LIST >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_LIST   is null     and vwACL_ACTIONS_ListOnly.ACLACCESS is not null   and vwACL_ACTIONS_ListOnly.ACLACCESS   >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_LIST   is null     and vwACL_ACTIONS_ListOnly.ACLACCESS is null)
       )
union all
select vwSHORTCUTS_USERS_Cross.USER_ID
     , vwSHORTCUTS_USERS_Cross.MODULE_NAME
     , vwSHORTCUTS_USERS_Cross.DISPLAY_NAME
     , vwSHORTCUTS_USERS_Cross.RELATIVE_PATH
     , vwSHORTCUTS_USERS_Cross.IMAGE_NAME
     , vwSHORTCUTS_USERS_Cross.SHORTCUT_ORDER
     , vwSHORTCUTS_USERS_Cross.SHORTCUT_ACLTYPE
  from            vwSHORTCUTS_USERS_Cross
  left outer join vwACL_ACTIONS                       vwACL_ACTIONS_AccessOnly
               on vwACL_ACTIONS_AccessOnly.CATEGORY = vwSHORTCUTS_USERS_Cross.SHORTCUT_MODULE
              and vwACL_ACTIONS_AccessOnly.NAME     = N'access'
  left outer join vwACL_ACTIONS                       vwACL_ACTIONS_ListOnly
               on vwACL_ACTIONS_ListOnly.CATEGORY   = vwSHORTCUTS_USERS_Cross.SHORTCUT_MODULE
              and vwACL_ACTIONS_ListOnly.NAME       = N'import'
  left outer join vwACL_ACCESS_ByAccess
               on vwACL_ACCESS_ByAccess.USER_ID     = vwSHORTCUTS_USERS_Cross.USER_ID
              and vwACL_ACCESS_ByAccess.MODULE_NAME = vwSHORTCUTS_USERS_Cross.SHORTCUT_MODULE
 where vwSHORTCUTS_USERS_Cross.SHORTCUT_ENABLED = 1
   and vwSHORTCUTS_USERS_Cross.SHORTCUT_ACLTYPE = N'import'
   and (   (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is not null and vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is null     and vwACL_ACTIONS_AccessOnly.ACLACCESS is not null and vwACL_ACTIONS_AccessOnly.ACLACCESS >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is null     and vwACL_ACTIONS_AccessOnly.ACLACCESS is null)
       )
   and (   (vwACL_ACCESS_ByAccess.ACLACCESS_IMPORT   is not null and vwACL_ACCESS_ByAccess.ACLACCESS_IMPORT >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_IMPORT   is null     and vwACL_ACTIONS_ListOnly.ACLACCESS is not null   and vwACL_ACTIONS_ListOnly.ACLACCESS   >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_IMPORT   is null     and vwACL_ACTIONS_ListOnly.ACLACCESS is null)
       )
union all
select vwSHORTCUTS_USERS_Cross.USER_ID
     , vwSHORTCUTS_USERS_Cross.MODULE_NAME
     , vwSHORTCUTS_USERS_Cross.DISPLAY_NAME
     , vwSHORTCUTS_USERS_Cross.RELATIVE_PATH
     , vwSHORTCUTS_USERS_Cross.IMAGE_NAME
     , vwSHORTCUTS_USERS_Cross.SHORTCUT_ORDER
     , vwSHORTCUTS_USERS_Cross.SHORTCUT_ACLTYPE
  from            vwSHORTCUTS_USERS_Cross
  left outer join vwACL_ACTIONS                       vwACL_ACTIONS_AccessOnly
               on vwACL_ACTIONS_AccessOnly.CATEGORY = vwSHORTCUTS_USERS_Cross.SHORTCUT_MODULE
              and vwACL_ACTIONS_AccessOnly.NAME     = N'access'
  left outer join vwACL_ACTIONS                       vwACL_ACTIONS_ListOnly
               on vwACL_ACTIONS_ListOnly.CATEGORY   = vwSHORTCUTS_USERS_Cross.SHORTCUT_MODULE
              and vwACL_ACTIONS_ListOnly.NAME       = N'archive'
  left outer join vwACL_ACCESS_ByAccess
               on vwACL_ACCESS_ByAccess.USER_ID     = vwSHORTCUTS_USERS_Cross.USER_ID
              and vwACL_ACCESS_ByAccess.MODULE_NAME = vwSHORTCUTS_USERS_Cross.SHORTCUT_MODULE
 where vwSHORTCUTS_USERS_Cross.SHORTCUT_ENABLED = 1
   and vwSHORTCUTS_USERS_Cross.SHORTCUT_ACLTYPE = N'archive'
   and (   (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is not null and vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is null     and vwACL_ACTIONS_AccessOnly.ACLACCESS is not null and vwACL_ACTIONS_AccessOnly.ACLACCESS >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_ACCESS is null     and vwACL_ACTIONS_AccessOnly.ACLACCESS is null)
       )
   and (   (vwACL_ACCESS_ByAccess.ACLACCESS_IMPORT   is not null and vwACL_ACCESS_ByAccess.ACLACCESS_IMPORT >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_IMPORT   is null     and vwACL_ACTIONS_ListOnly.ACLACCESS is not null   and vwACL_ACTIONS_ListOnly.ACLACCESS   >= 0)
        or (vwACL_ACCESS_ByAccess.ACLACCESS_IMPORT   is null     and vwACL_ACTIONS_ListOnly.ACLACCESS is null)
       )

GO

Grant Select on dbo.vwSHORTCUTS_Menu_ByUser to public;
GO

if exists (select * from INFORMATION_SCHEMA.VIEWS where TABLE_NAME = 'vwTEAMS_ASSIGNED_TO_List')
	Drop View dbo.vwTEAMS_ASSIGNED_TO_List;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create View dbo.vwTEAMS_ASSIGNED_TO_List
as
select vwUSERS_List.*
     , vwTEAMS_ASSIGNED_TO.MEMBERSHIP_USER_ID
  from      vwTEAMS_ASSIGNED_TO
 inner join vwUSERS_List
         on vwUSERS_List.ID = vwTEAMS_ASSIGNED_TO.ID

GO

Grant Select on dbo.vwTEAMS_ASSIGNED_TO_List to public;
GO







if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spASSIGNED_SETS_NormalizeSet' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spASSIGNED_SETS_NormalizeSet;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/27/2021 Paul.  Correct to match Enterprise version.  
Create Procedure dbo.spASSIGNED_SETS_NormalizeSet
	( @ID                   uniqueidentifier output
	, @MODIFIED_USER_ID     uniqueidentifier
	, @PRIMARY_USER_ID      uniqueidentifier
	, @ASSIGNED_SET_LIST    varchar(8000)
	)
as
  begin
	set nocount on

		
  end
GO
 
Grant Execute on dbo.spASSIGNED_SETS_NormalizeSet to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spASSIGNED_SETS_UpdateNames' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spASSIGNED_SETS_UpdateNames;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spASSIGNED_SETS_UpdateNames
	( @MODIFIED_USER_ID     uniqueidentifier
	, @USER_ID              uniqueidentifier
	)
as
  begin
	set nocount on

		
  end
GO
 
Grant Execute on dbo.spASSIGNED_SETS_UpdateNames to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spMODULES_Reorder' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spMODULES_Reorder;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/24/2008 Paul.  The extension of this procedure is zero so that we do not have to rename any other procedures. 
-- The intent is to call this procedure any time the tab order changes to ensure that there are not gaps or overlaps. 
Create Procedure dbo.spMODULES_Reorder
	( @MODIFIED_USER_ID  uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @ID             uniqueidentifier;
	declare @MODULE_NAME    nvarchar(25);
	declare @MODULE_ENABLED bit;
	declare @TAB_ENABLED    bit;
	declare @TAB_ORDER_OLD  int;
	declare @TAB_ORDER_NEW  int;

	declare module_cursor cursor for
	select ID
	     , MODULE_NAME
	     , MODULE_ENABLED
	     , TAB_ENABLED
	     , TAB_ORDER
	  from vwMODULES
	 order by TAB_ORDER, MODULE_NAME;

/* -- #if IBM_DB2
	declare continue handler for not found
		set in_FETCH_STATUS = 1;
-- #endif IBM_DB2 */
/* -- #if MySQL
	declare continue handler for not found
		set in_FETCH_STATUS = 1;
	set in_FETCH_STATUS = 0;
-- #endif MySQL */

	set @TAB_ORDER_NEW = 1;
	open module_cursor;
	fetch next from module_cursor into @ID, @MODULE_NAME, @MODULE_ENABLED, @TAB_ENABLED, @TAB_ORDER_OLD;
	while @@FETCH_STATUS = 0 begin -- do
		-- 08/24/2008 Paul.  In a single loop, we want to set the tab order 
		-- or clear it if the module is not visible or disabled. 
		if @MODULE_ENABLED = 1 and @TAB_ENABLED = 1 begin -- then
			if @TAB_ORDER_OLD != @TAB_ORDER_NEW begin -- then
				print N'Correcting tab order of ' + @MODULE_NAME + N' (' + cast(@TAB_ORDER_NEW as varchar(10)) + N')';
				update MODULES
				   set TAB_ORDER        = @TAB_ORDER_NEW
				     , MODIFIED_USER_ID = null
				     , DATE_MODIFIED    = getdate()
				     , DATE_MODIFIED_UTC= getutcdate()
				 where ID               = @ID;
			end -- if;
			set @TAB_ORDER_NEW = @TAB_ORDER_NEW + 1;
		end else begin
			if @TAB_ORDER_OLD != 0 begin -- then
				print N'Correcting tab order of ' + @MODULE_NAME + N' (0)';
				update MODULES
				   set TAB_ORDER        = 0
				     , MODIFIED_USER_ID = null
				     , DATE_MODIFIED    = getdate()
				     , DATE_MODIFIED_UTC= getutcdate()
				 where ID               = @ID;
			end -- if;
		end -- if;
		fetch next from module_cursor into @ID, @MODULE_NAME, @MODULE_ENABLED, @TAB_ENABLED, @TAB_ORDER_OLD;
	end -- while;
	close module_cursor;

	deallocate module_cursor;
  end
GO
 
-- exec dbo.spMODULES_Reorder null;

Grant Execute on dbo.spMODULES_Reorder to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spMODULES_TAB_ORDER_Reorder' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spMODULES_TAB_ORDER_Reorder;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/21/2009 Paul.  The extension of this procedure is zero so that we do not have to rename any other procedures. 
-- The intent is to call this procedure any time the list order changes to ensure that there are not gaps or overlaps. 
Create Procedure dbo.spMODULES_TAB_ORDER_Reorder
	( @MODIFIED_USER_ID  uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @ID            uniqueidentifier;
	declare @NAME          nvarchar(25);
	declare @TAB_ORDER_OLD int;
	declare @TAB_ORDER_NEW int;

	declare module_cursor cursor for
	select ID
	     , MODULE_NAME
	     , TAB_ORDER
	  from MODULES
	 where (MODULE_ENABLED = 1 and (TAB_ENABLED = 1 or MOBILE_ENABLED = 1))
	   and DELETED = 0
	 order by TAB_ENABLED desc, TAB_ORDER, MOBILE_ENABLED desc, MODULE_NAME;

/* -- #if IBM_DB2
	declare continue handler for not found
		set in_FETCH_STATUS = 1;
-- #endif IBM_DB2 */
/* -- #if MySQL
	declare continue handler for not found
		set in_FETCH_STATUS = 1;
	set in_FETCH_STATUS = 0;
-- #endif MySQL */

	-- 04/21/2009 Paul.  First make sure to clear the tab order for disabled or hidden tabs. 
	update MODULES
	   set TAB_ORDER = 0
	 where (MODULE_ENABLED = 0 or (TAB_ENABLED = 0 and MOBILE_ENABLED = 0))
	   and DELETED = 0;

	set @TAB_ORDER_NEW = 1;
	open module_cursor;
	fetch next from module_cursor into @ID, @NAME, @TAB_ORDER_OLD;
	while @@FETCH_STATUS = 0 begin -- do
		if @TAB_ORDER_OLD != @TAB_ORDER_NEW begin -- then
			print N'Correcting list order of ' + @NAME + N' (' + cast(@TAB_ORDER_NEW as varchar(10)) + N')';
			update MODULES
			   set TAB_ORDER        = @TAB_ORDER_NEW
			     , MODIFIED_USER_ID = null
			     , DATE_MODIFIED    = getdate()
			     , DATE_MODIFIED_UTC= getutcdate()
			 where ID               = @ID;
		end -- if;
		set @TAB_ORDER_NEW = @TAB_ORDER_NEW + 1;
		fetch next from module_cursor into @ID, @NAME, @TAB_ORDER_OLD;
	end -- while;
	close module_cursor;

	deallocate module_cursor;
  end
GO
 
--exec dbo.spMODULES_TAB_ORDER_Reorder null;

Grant Execute on dbo.spMODULES_TAB_ORDER_Reorder to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSYSTEM_TRANSACTIONS_Create' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSYSTEM_TRANSACTIONS_Create;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 10/07/2009 Paul.  The goal will be to use the SQL Server 2008 MERGE statement. 
-- http://weblogs.sqlteam.com/mladenp/archive/2007/08/03/60277.aspx
-- 10/07/2009 Paul.  On SQL Server 2005 and 2008, this function should do nothing. 
-- 05/11/2013 Paul.  Dynamically create the procedure so that the same code would work on SQL Server and SQL Azure. 
declare @Command varchar(max);
if charindex('Microsoft SQL Azure', @@VERSION) > 0 begin -- then
	set @Command = 'Create Procedure dbo.spSYSTEM_TRANSACTIONS_Create
	( @ID               uniqueidentifier output
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on

	declare @TEMP_SESSION_SPID     int;
	declare @TEMP_MODIFIED_USER_ID uniqueidentifier;

	set @TEMP_SESSION_SPID     = @@SPID;
	set @TEMP_MODIFIED_USER_ID = @MODIFIED_USER_ID;
	if @ID is null begin -- then
		set @ID = newid();
	end -- if;
	if @TEMP_MODIFIED_USER_ID is null begin -- then
		set @TEMP_MODIFIED_USER_ID = ''00000000-0000-0000-0000-000000000000'';
	end -- if;

	merge dbo.SYSTEM_TRANSACTIONS as TARGET
	using (select @ID
	            , @TEMP_MODIFIED_USER_ID
	            , getdate()
	            , @TEMP_SESSION_SPID
	            )
	   as SOURCE( ID
	            , MODIFIED_USER_ID
	            , DATE_MODIFIED
	            , SESSION_SPID
	            )
	   on (TARGET.SESSION_SPID = SOURCE.SESSION_SPID)
	 when matched then
		update set TARGET.ID               = SOURCE.ID              
		         , TARGET.MODIFIED_USER_ID = SOURCE.MODIFIED_USER_ID
		         , TARGET.DATE_MODIFIED    = SOURCE.DATE_MODIFIED   
	 when not matched then
		insert
			( ID              
			, MODIFIED_USER_ID
			, DATE_MODIFIED   
			, SESSION_SPID    
			)
		values
			( SOURCE.ID              
			, SOURCE.MODIFIED_USER_ID
			, SOURCE.DATE_MODIFIED   
			, SOURCE.SESSION_SPID    
			);
  end
';
	exec(@Command);
end else begin
	set @Command = 'Create Procedure dbo.spSYSTEM_TRANSACTIONS_Create
	( @ID               uniqueidentifier output
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on

  end
';
	exec(@Command);
end -- if;
GO

Grant Execute on dbo.spSYSTEM_TRANSACTIONS_Create to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTEAM_SETS_AddSet' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTEAM_SETS_AddSet;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/29/2009 Paul.  Teams are not supported in the Community Edition, but the procedure is still called from MassUpdate procedures. 
Create Procedure dbo.spTEAM_SETS_AddSet
	( @ID                   uniqueidentifier output
	, @MODIFIED_USER_ID     uniqueidentifier
	, @OLD_SET_ID           uniqueidentifier
	, @PRIMARY_TEAM_ID      uniqueidentifier
	, @NEW_SET_ID           uniqueidentifier
	)
as
  begin
	set nocount on

		
  end
GO
 
Grant Execute on dbo.spTEAM_SETS_AddSet to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTEAM_SETS_NormalizeSet' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTEAM_SETS_NormalizeSet;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/29/2009 Paul.  Teams are not supported in the Community Edition, but the procedure is still called from MassUpdate procedures. 
Create Procedure dbo.spTEAM_SETS_NormalizeSet
	( @ID                   uniqueidentifier output
	, @MODIFIED_USER_ID     uniqueidentifier
	, @PRIMARY_TEAM_ID      uniqueidentifier
	, @TEAM_SET_LIST        varchar(8000)
	)
as
  begin
	set nocount on

		
  end
GO
 
Grant Execute on dbo.spTEAM_SETS_NormalizeSet to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTEAM_SETS_UpdateNames' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTEAM_SETS_UpdateNames;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/06/2012 Paul.  Team Sets are not supported in the Professional Edition, but the procedure is still called from spTEAMS_Update. 
Create Procedure dbo.spTEAM_SETS_UpdateNames
	( @MODIFIED_USER_ID     uniqueidentifier
	, @TEAM_ID              uniqueidentifier
	)
as
  begin
	set nocount on

		
  end
GO
 
Grant Execute on dbo.spTEAM_SETS_UpdateNames to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTERMINOLOGY_LIST_Reorder' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTERMINOLOGY_LIST_Reorder;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/24/2008 Paul.  The extension of this procedure is zero so that we do not have to rename any other procedures. 
-- The intent is to call this procedure any time the list order changes to ensure that there are not gaps or overlaps. 
Create Procedure dbo.spTERMINOLOGY_LIST_Reorder
	( @MODIFIED_USER_ID  uniqueidentifier
	, @LANG              nvarchar(10)
	, @LIST_NAME         nvarchar(50)
	)
as
  begin
	set nocount on
	
	declare @ID             uniqueidentifier;
	-- 08/24/2010 Paul.  Name can be 50 chars. 
	-- 03/06/2012 Paul.  Increase size of the NAME field so that it can include a date formula. 
	declare @NAME           nvarchar(150);
	declare @LIST_ORDER_OLD int;
	declare @LIST_ORDER_NEW int;

-- #if SQL_Server /*
	declare terminology_cursor cursor for
	select ID
	     , NAME
	     , LIST_ORDER
	  from vwTERMINOLOGY
	 where LANG      = @LANG
	   and LIST_NAME = @LIST_NAME
	 order by MODULE_NAME, LIST_ORDER, NAME;
-- #endif SQL_Server */

/* -- #if IBM_DB2
	declare continue handler for not found
		set in_FETCH_STATUS = 1;
-- #endif IBM_DB2 */
/* -- #if MySQL
	declare continue handler for not found
		set in_FETCH_STATUS = 1;
	set in_FETCH_STATUS = 0;
-- #endif MySQL */

	set @LIST_ORDER_NEW = 1;
	open terminology_cursor;
	fetch next from terminology_cursor into @ID, @NAME, @LIST_ORDER_OLD;
	while @@FETCH_STATUS = 0 begin -- do
		if @LIST_ORDER_OLD != @LIST_ORDER_NEW begin -- then
			print N'Correcting list order of ' + @LANG + N'.' + @LIST_NAME + N'.' + @NAME + N' (' + cast(@LIST_ORDER_NEW as varchar(10)) + N')';
			update TERMINOLOGY
			   set LIST_ORDER       = @LIST_ORDER_NEW
			     , MODIFIED_USER_ID = null
			     , DATE_MODIFIED    = getdate()
			     , DATE_MODIFIED_UTC= getutcdate()
			 where ID               = @ID;
		end -- if;
		set @LIST_ORDER_NEW = @LIST_ORDER_NEW + 1;
		fetch next from terminology_cursor into @ID, @NAME, @LIST_ORDER_OLD;
/* -- #if Oracle
		IF terminology_cursor%NOTFOUND THEN
			StoO_sqlstatus := 2;
			StoO_fetchstatus := -1;
		ELSE
			StoO_sqlstatus := 0;
			StoO_fetchstatus := 0;
		END IF;
-- #endif Oracle */
	end -- while;
	close terminology_cursor;

	deallocate terminology_cursor;
  end
GO
 
-- exec dbo.spTERMINOLOGY_LIST_Reorder null, 'en-US', 'moduleList';
/*
select ID
     , NAME
     , LIST_ORDER
  from vwTERMINOLOGY
 where LANG      = 'en-US'
   and LIST_NAME = 'moduleList'
 order by MODULE_NAME, LIST_ORDER, NAME;
*/

Grant Execute on dbo.spTERMINOLOGY_LIST_Reorder to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSERS_PASSWORD_HISTORY_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSERS_PASSWORD_HISTORY_InsertOnly;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spUSERS_PASSWORD_HISTORY_InsertOnly
	( @MODIFIED_USER_ID  uniqueidentifier
	, @USER_ID           uniqueidentifier
	, @USER_HASH         nvarchar(32)
	)
as
  begin
	set nocount on
	
	declare @HistoryMax   int;
	declare @HistoryCount int;
	declare @OLDEST_ID    uniqueidentifier;

	insert into USERS_PASSWORD_HISTORY
		( ID               
		, CREATED_BY       
		, DATE_ENTERED     
		, MODIFIED_USER_ID 
		, DATE_MODIFIED    
		, USER_ID          
		, USER_HASH        
		)
	values
		(  newid()          
		, @MODIFIED_USER_ID 
		,  getdate()        
		, @MODIFIED_USER_ID 
		,  getdate()        
		, @USER_ID          
		, @USER_HASH        
		);

	set @HistoryMax = dbo.fnCONFIG_Int(N'Password.HistoryMaximum');
	if @HistoryMax is null or @HistoryMax < 0 begin -- then
		set @HistoryMax = 0;
	end -- if;

-- #if SQL_Server /*
	select @HistoryCount = count(*)
	  from USERS_PASSWORD_HISTORY
	 where USER_ID     = @USER_ID;

	while @HistoryCount > @HistoryMax begin -- do
		select top 1 @OLDEST_ID = ID
		  from USERS_PASSWORD_HISTORY
		 where USER_ID     = @USER_ID
		 order by DATE_ENTERED;
		
		delete from USERS_PASSWORD_HISTORY
		  where ID = @OLDEST_ID;
		
		select @HistoryCount = count(*)
		  from USERS_PASSWORD_HISTORY
		 where USER_ID     = @USER_ID;
	end -- while;
-- #endif SQL_Server */




  end
GO
 
Grant Execute on dbo.spUSERS_PASSWORD_HISTORY_InsertOnly to public;
GO
 
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
if not exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spPARENT_Delete' and ROUTINE_TYPE = 'PROCEDURE') begin -- then
	exec('Create Procedure dbo.spPARENT_Delete
		( @ID               uniqueidentifier
		, @MODIFIED_USER_ID uniqueidentifier
		)
	as
	  begin
		set nocount on
		
	  end');
end -- if;
GO



if not exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spPARENT_Undelete' and ROUTINE_TYPE = 'PROCEDURE') begin -- then
	exec('Create Procedure dbo.spPARENT_Undelete
		( @ID               uniqueidentifier
		, @MODIFIED_USER_ID uniqueidentifier
		, @AUDIT_TOKEN      varchar(255)
		, @PARENT_TYPE      nvarchar(25)
		)
	as
	  begin
		set nocount on
		
	  end');
end -- if;
GO


if not exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlBuildStreamFunction' and ROUTINE_TYPE = 'PROCEDURE') begin -- then
	exec('Create Procedure dbo.spSqlBuildStreamFunction(@TABLE_NAME varchar(80))
	as
	  begin
		set nocount on
		
	  end');
end -- if;
GO


if not exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlBuildStreamView' and ROUTINE_TYPE = 'PROCEDURE') begin -- then
	exec('Create Procedure dbo.spSqlBuildStreamView(@TABLE_NAME varchar(80))
	as
	  begin
		set nocount on
		
	  end');
end -- if;
GO


if not exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlBuildArchiveTable' and ROUTINE_TYPE = 'PROCEDURE') begin -- then
	exec('Create Procedure dbo.spSqlBuildArchiveTable
		( @TABLE_NAME       nvarchar(80)
		, @ARCHIVE_DATABASE nvarchar(50)
		)
	as
	  begin
		set nocount on
	
	  end');
end -- if;
GO


if not exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSqlBuildArchiveView' and ROUTINE_TYPE = 'PROCEDURE') begin -- then
	exec('Create Procedure dbo.spSqlBuildArchiveView
		( @TABLE_NAME       nvarchar(80)
		, @ARCHIVE_DATABASE nvarchar(50)
		)
	as
	  begin
		set nocount on
	
	  end');
end -- if;
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spACL_ACTIONS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spACL_ACTIONS_Delete;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spACL_ACTIONS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	update ACL_ACTIONS
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID = @ID;
  end
GO
 
Grant Execute on dbo.spACL_ACTIONS_Delete to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spACL_ACTIONS_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spACL_ACTIONS_InsertOnly;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spACL_ACTIONS_InsertOnly
	( @NAME              nvarchar(150)
	, @CATEGORY          nvarchar(100)
	, @ACLTYPE           nvarchar(100)
	, @ACLACCESS         int
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	
	-- BEGIN Oracle Exception
		select @ID = ID
		  from ACL_ACTIONS
		 where NAME     = @NAME    
		   and CATEGORY = @CATEGORY
		   and DELETED  = 0        ;
	-- END Oracle Exception

	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into ACL_ACTIONS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, NAME             
			, CATEGORY         
			, ACLTYPE          
			, ACLACCESS        
			)
		values 	( @ID               
			, null       
			,  getdate()        
			, null 
			,  getdate()        
			, @NAME             
			, @CATEGORY         
			, @ACLTYPE          
			, @ACLACCESS        
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spACL_ACTIONS_InsertOnly to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spACL_ACTIONS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spACL_ACTIONS_Update;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spACL_ACTIONS_Update
	( @ID                uniqueidentifier output
	, @MODIFIED_USER_ID  uniqueidentifier
	, @NAME              nvarchar(150)
	, @CATEGORY          nvarchar(100)
	, @ACLTYPE           nvarchar(100)
	, @ACLACCESS         int
	)
as
  begin
	set nocount on
	
	-- BEGIN Oracle Exception
		select @ID = ID
		  from ACL_ACTIONS
		 where NAME      = @NAME    
		   and CATEGORY  = @CATEGORY
		   and DELETED   = 0        ;
	-- END Oracle Exception

	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into ACL_ACTIONS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, NAME             
			, CATEGORY         
			, ACLTYPE          
			, ACLACCESS        
			)
		values 	( @ID               
			, @MODIFIED_USER_ID       
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @NAME             
			, @CATEGORY         
			, @ACLTYPE          
			, @ACLACCESS        
			);
	end else begin
		update ACL_ACTIONS
		   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
		     , DATE_MODIFIED     =  getdate()        
		     , DATE_MODIFIED_UTC =  getutcdate()     
		     , ACLTYPE           = @ACLTYPE          
		     , ACLACCESS         = @ACLACCESS        
		 where ID                = @ID               ;
	end -- if;
  end
GO
 
Grant Execute on dbo.spACL_ACTIONS_Update to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spACL_FIELDS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spACL_FIELDS_Update;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 02/27/2021 Paul.  This procedure is now called from the Rest.svc.cs, so we need to provide a stub. 
Create Procedure dbo.spACL_FIELDS_Update
	( @ID                 uniqueidentifier output
	, @MODIFIED_USER_ID   uniqueidentifier
	, @ROLE_ID            uniqueidentifier
	, @NAME               nvarchar(150)
	, @CATEGORY           nvarchar(100)
	, @ACLACCESS          int
	)
as
  begin
	set nocount on
	
	raiserror(N'spACL_FIELDS_Update is not supported in this edition.', 16, 1);
  end
GO

Grant Execute on dbo.spACL_FIELDS_Update to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spACL_ROLES_ACTIONS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spACL_ROLES_ACTIONS_Delete;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spACL_ROLES_ACTIONS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	update ACL_ROLES_ACTIONS
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID = @ID;
  end
GO
 
Grant Execute on dbo.spACL_ROLES_ACTIONS_Delete to public;
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spACL_ROLES_ACTIONS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spACL_ROLES_ACTIONS_Update;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/17/2017 Paul.  Add helpful message. 
Create Procedure dbo.spACL_ROLES_ACTIONS_Update
	( @ID                uniqueidentifier output
	, @MODIFIED_USER_ID  uniqueidentifier
	, @ROLE_ID           uniqueidentifier
	, @ACTION_NAME       nvarchar(25)
	, @MODULE_NAME       nvarchar(25)
	, @ACCESS_OVERRIDE   int
	)
as
  begin
	set nocount on

	declare @ACTION_ID uniqueidentifier;

	-- BEGIN Oracle Exception
		select @ACTION_ID = ID
		  from ACL_ACTIONS
		 where NAME     = @ACTION_NAME
		   and CATEGORY = @MODULE_NAME
		   and DELETED  = 0           ;
	-- END Oracle Exception
	-- 12/17/2017 Paul.  Add helpful message. 
	if @ACTION_ID is null begin -- then
		raiserror(N'spACL_ROLES_ACTIONS_Update: Could not find action "%s" for module "%s".', 16, 1, @ACTION_NAME, @MODULE_NAME);
		return;
	end -- if;
	
	-- BEGIN Oracle Exception
		select @ID = ID
		  from ACL_ROLES_ACTIONS
		 where ROLE_ID   = @ROLE_ID  
		   and ACTION_ID = @ACTION_ID
		   and DELETED   = 0         ;
	-- END Oracle Exception
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into ACL_ROLES_ACTIONS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, ROLE_ID          
			, ACTION_ID        
			, ACCESS_OVERRIDE  
			)
		values 	( @ID               
			, @MODIFIED_USER_ID       
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @ROLE_ID          
			, @ACTION_ID        
			, @ACCESS_OVERRIDE  
			);
	end else begin
		update ACL_ROLES_ACTIONS
		   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
		     , DATE_MODIFIED     =  getdate()        
		     , DATE_MODIFIED_UTC =  getutcdate()     
		     , ACCESS_OVERRIDE   = @ACCESS_OVERRIDE  
		 where ID                = @ID               ;
	end -- if;
  end
GO
 
Grant Execute on dbo.spACL_ROLES_ACTIONS_Update to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spACL_ROLES_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spACL_ROLES_Delete;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spACL_ROLES_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	-- BEGIN Oracle Exception
		update ACL_ROLES_ACTIONS
		   set DELETED          = 1
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where ROLE_ID          = @ID
		   and DELETED          = 0;
	-- END Oracle Exception
	
	-- BEGIN Oracle Exception
		update ACL_ROLES_USERS
		   set DELETED          = 1
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where ROLE_ID          = @ID
		   and DELETED          = 0;
	-- END Oracle Exception
	
	-- BEGIN Oracle Exception
		update ACL_ROLES
		   set DELETED          = 1
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where ID = @ID;
	-- END Oracle Exception
  end
GO
 
Grant Execute on dbo.spACL_ROLES_Delete to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spACL_ROLES_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spACL_ROLES_InsertOnly;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spACL_ROLES_InsertOnly
	( @ID                uniqueidentifier
	, @NAME              nvarchar(150)
	, @DESCRIPTION       nvarchar(max)
	)
as
  begin
	set nocount on
	
	if not exists(select * from ACL_ROLES where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into ACL_ROLES
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, NAME             
			, DESCRIPTION      
			)
		values 	( @ID               
			, null               
			,  getdate()        
			, null               
			,  getdate()        
			, @NAME             
			, @DESCRIPTION      
			);
	end -- if;

	if not exists(select * from ACL_ROLES_CSTM where ID_C = @ID) begin -- then
		insert into ACL_ROLES_CSTM ( ID_C ) values ( @ID );
	end -- if;

  end
GO
 
Grant Execute on dbo.spACL_ROLES_InsertOnly to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spACL_ROLES_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spACL_ROLES_Update;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
Create Procedure dbo.spACL_ROLES_Update
	( @ID                uniqueidentifier output
	, @MODIFIED_USER_ID  uniqueidentifier
	, @NAME              nvarchar(150)
	, @DESCRIPTION       nvarchar(max)
	)
as
  begin
	set nocount on
	
	if not exists(select * from ACL_ROLES where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into ACL_ROLES
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, NAME             
			, DESCRIPTION      
			)
		values 	( @ID               
			, @MODIFIED_USER_ID       
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @NAME             
			, @DESCRIPTION      
			);
	end else begin
		update ACL_ROLES
		   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
		     , DATE_MODIFIED     =  getdate()        
		     , DATE_MODIFIED_UTC =  getutcdate()     
		     , NAME              = @NAME             
		     , DESCRIPTION       = @DESCRIPTION      
		 where ID                = @ID               ;
	end -- if;

	if not exists(select * from ACL_ROLES_CSTM where ID_C = @ID) begin -- then
		insert into ACL_ROLES_CSTM ( ID_C ) values ( @ID );
	end -- if;

  end
GO
 
Grant Execute on dbo.spACL_ROLES_Update to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spACL_ROLES_USERS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spACL_ROLES_USERS_Delete;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 05/05/2016 Paul.  The User Primary Role is used with role-based views. 
Create Procedure dbo.spACL_ROLES_USERS_Delete
	( @MODIFIED_USER_ID uniqueidentifier
	, @ROLE_ID          uniqueidentifier
	, @USER_ID          uniqueidentifier
	)
as
  begin
	set nocount on
	
	update ACL_ROLES_USERS
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ROLE_ID = @ROLE_ID
	   and USER_ID = @USER_ID
	   and DELETED = 0;

	-- 05/05/2016 Paul.  Remove the primary role when unassigned. 
	if exists(select * from USERS where ID = @USER_ID and PRIMARY_ROLE_ID = @ROLE_ID and DELETED = 0) begin -- then
		update USERS
		   set PRIMARY_ROLE_ID   = null
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
		 where ID                = @USER_ID
		   and DELETED           = 0;
	end -- if;
  end
GO
 
Grant Execute on dbo.spACL_ROLES_USERS_Delete to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spACL_ROLES_USERS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spACL_ROLES_USERS_Update;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/13/2009 Paul.  Remove the unnecessary update as it will reduce offline client conflicts. 
-- 05/05/2016 Paul.  The User Primary Role is used with role-based views. 
-- 03/22/2017 Paul.  Update the custom field table so that the audit view will have matching custom field values. 
Create Procedure dbo.spACL_ROLES_USERS_Update
	( @MODIFIED_USER_ID  uniqueidentifier
	, @ROLE_ID           uniqueidentifier
	, @USER_ID           uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	-- 04/26/2006 Paul.  @ACCESS_OVERRIDE is not used yet. 
	-- BEGIN Oracle Exception
		select @ID = ID
		  from ACL_ROLES_USERS
		 where ROLE_ID           = @ROLE_ID
		   and USER_ID           = @USER_ID
		   and DELETED           = 0;
	-- END Oracle Exception
	
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into ACL_ROLES_USERS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, ROLE_ID          
			, USER_ID          
			)
		values
			( @ID               
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @ROLE_ID          
			, @USER_ID          
			);

		-- 05/05/2016 Paul.  Add the primary role if unassigned. 
		if exists(select * from USERS where ID = @USER_ID and PRIMARY_ROLE_ID is null and DELETED = 0) begin -- then
			-- BEGIN Oracle Exception
				update USERS
				   set PRIMARY_ROLE_ID   = @ROLE_ID
				     , DATE_MODIFIED     = getdate()
				     , DATE_MODIFIED_UTC = getutcdate()
				     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
				 where ID                = @USER_ID
				   and DELETED           = 0;
			-- END Oracle Exception
			-- 03/22/2017 Paul.  Update the custom field table so that the audit view will have matching custom field values. 
			-- BEGIN Oracle Exception
				update USERS_CSTM
				   set ID_C              = ID_C
				 where ID_C              = @USER_ID;
			-- END Oracle Exception
		end -- if;
	end -- if;
  end
GO
 
Grant Execute on dbo.spACL_ROLES_USERS_Update to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spCONFIG_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spCONFIG_Delete;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spCONFIG_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	update CONFIG
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID               = @ID
	   and DELETED          = 0  ;
  end
GO

Grant Execute on dbo.spCONFIG_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spCONFIG_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spCONFIG_InsertOnly;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
Create Procedure dbo.spCONFIG_InsertOnly
	( @MODIFIED_USER_ID  uniqueidentifier
	, @CATEGORY          nvarchar(32)
	, @NAME              nvarchar(60)
	, @VALUE             nvarchar(max)
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	if not exists(select * from CONFIG where NAME = @NAME) begin -- then
		set @ID = newid();
		insert into CONFIG
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, CATEGORY         
			, NAME             
			, VALUE            
			)
		values
			( @ID               
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @CATEGORY         
			, @NAME             
			, @VALUE            
			);
	end -- if;
  end
GO

Grant Execute on dbo.spCONFIG_InsertOnly to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spCURRENCIES_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spCURRENCIES_Delete;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spCURRENCIES_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	update CURRENCIES
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID               = @ID;
  end
GO

Grant Execute on dbo.spCURRENCIES_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spCURRENCIES_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spCURRENCIES_InsertOnly;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 05/01/2016 Paul.  We are going to prepopulate the list and the ISO4217 is required and unique. 
-- 04/15/2020 Paul.  Allow the USD default to be renamed. 
Create Procedure dbo.spCURRENCIES_InsertOnly
	( @ID                uniqueidentifier
	, @MODIFIED_USER_ID  uniqueidentifier
	, @NAME              nvarchar(36)
	, @SYMBOL            nvarchar(36)
	, @ISO4217           nvarchar(3)
	, @CONVERSION_RATE   float(53)
	, @STATUS            nvarchar(25)
	)
as
  begin
	set nocount on
	
	-- 05/01/2016 Paul.  We are going to prepopulate the list and the ISO4217 is required and unique. 
	declare @TEMP_ID     uniqueidentifier;
	declare @TEMP_SYMBOL nvarchar(36);
	set @TEMP_ID = @ID;
	-- BEGIN Oracle Exception
		select @TEMP_ID = ID
		  from CURRENCIES
		 where ISO4217  = @ISO4217
		   and DELETED  = 0;
	-- END Oracle Exception

	if @ISO4217 is null or @ISO4217 = N'' begin -- then
		raiserror(N'ISO4217 is required', 16, 1);
		return;
	end -- if;
	if exists(select * from CURRENCIES where DELETED = 0 and ISO4217 = @ISO4217 and (ID <> @ID or @ID is null)) begin -- then
		if @ID <> 'E340202E-6291-4071-B327-A34CB4DF239B' begin -- then
			raiserror(N'ISO4217 must be unique', 16, 1);
		end -- if;
		return;
	end -- if;
	set @TEMP_SYMBOL = @SYMBOL;
	if @TEMP_SYMBOL is null or @TEMP_SYMBOL = N'' begin -- then
		set @TEMP_SYMBOL = @ISO4217;
	end -- if;
	if not exists(select * from CURRENCIES where ID = @TEMP_ID) begin -- then
		if dbo.fnIsEmptyGuid(@TEMP_ID) = 1 begin -- then
			set @TEMP_ID = newid();
		end -- if;
		insert into CURRENCIES
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, NAME             
			, SYMBOL           
			, ISO4217          
			, CONVERSION_RATE  
			, STATUS           
			)
		values
			( @TEMP_ID          
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @NAME             
			, @TEMP_SYMBOL      
			, @ISO4217          
			, @CONVERSION_RATE  
			, @STATUS           
			);

		if not exists(select * from CURRENCIES_CSTM where ID_C = @ID) begin -- then
			insert into CURRENCIES_CSTM ( ID_C ) values ( @ID );
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spCURRENCIES_InsertOnly to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spCURRENCIES_InsertOnlyByISO' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spCURRENCIES_InsertOnlyByISO;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spCURRENCIES_InsertOnlyByISO
	( @NAME              nvarchar(36)
	, @SYMBOL            nvarchar(36)
	, @ISO4217           nvarchar(3)
	, @CONVERSION_RATE   float(53)
	, @STATUS            nvarchar(25)
	)
as
  begin
	set nocount on
	
	-- 05/01/2016 Paul.  We are going to prepopulate the list and the ISO4217 is required and unique. 
	declare @ID               uniqueidentifier;
	declare @MODIFIED_USER_ID uniqueidentifier;
	declare @TEMP_SYMBOL      nvarchar(36);
	if @ISO4217 is null or @ISO4217 = N'' begin -- then
		raiserror(N'ISO4217 is required', 16, 1);
		return;
	end -- if;
	set @TEMP_SYMBOL = @SYMBOL;
	if @TEMP_SYMBOL is null or @TEMP_SYMBOL = N'' begin -- then
		set @TEMP_SYMBOL = @ISO4217;
	end -- if;
	if not exists(select * from CURRENCIES where ISO4217 = @ISO4217) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into CURRENCIES
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, NAME             
			, SYMBOL           
			, ISO4217          
			, CONVERSION_RATE  
			, STATUS           
			)
		values
			( @ID               
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @NAME             
			, @TEMP_SYMBOL      
			, @ISO4217          
			, @CONVERSION_RATE  
			, @STATUS           
			);

		if not exists(select * from CURRENCIES_CSTM where ID_C = @ID) begin -- then
			insert into CURRENCIES_CSTM ( ID_C ) values ( @ID );
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spCURRENCIES_InsertOnlyByISO to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spCURRENCIES_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spCURRENCIES_Update;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 05/01/2016 Paul.  We are going to prepopulate the list and the ISO4217 is required and unique. 
Create Procedure dbo.spCURRENCIES_Update
	( @ID                uniqueidentifier output
	, @MODIFIED_USER_ID  uniqueidentifier
	, @NAME              nvarchar(36)
	, @SYMBOL            nvarchar(36)
	, @ISO4217           nvarchar(3)
	, @CONVERSION_RATE   float(53)
	, @STATUS            nvarchar(25)
	)
as
  begin
	set nocount on
	
	declare @TEMP_SYMBOL nvarchar(36);
	-- 05/01/2016 Paul.  We are going to prepopulate the list and the ISO4217 is required and unique. 
	if @ISO4217 is null or @ISO4217 = N'' begin -- then
		raiserror(N'ISO4217 is required', 16, 1);
		return;
	end -- if;
	if exists(select * from CURRENCIES where DELETED = 0 and ISO4217 = @ISO4217 and (ID <> @ID or @ID is null)) begin -- then
		raiserror(N'ISO4217 must be unique', 16, 1);
		return;
	end -- if;
	set @TEMP_SYMBOL = @SYMBOL;
	if @TEMP_SYMBOL is null or @TEMP_SYMBOL = N'' begin -- then
		set @TEMP_SYMBOL = @ISO4217;
	end -- if;
	if not exists(select * from CURRENCIES where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into CURRENCIES
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, NAME             
			, SYMBOL           
			, ISO4217          
			, CONVERSION_RATE  
			, STATUS           
			)
		values
			( @ID               
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @NAME             
			, @TEMP_SYMBOL      
			, @ISO4217          
			, @CONVERSION_RATE  
			, @STATUS           
			);
	end else begin
		update CURRENCIES
		   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
		     , DATE_MODIFIED     =  getdate()        
		     , DATE_MODIFIED_UTC =  getutcdate()     
		     , NAME              = @NAME             
		     , SYMBOL            = @TEMP_SYMBOL      
		     , ISO4217           = @ISO4217          
		     , CONVERSION_RATE   = @CONVERSION_RATE  
		     , STATUS            = @STATUS           
		 where ID                = @ID               ;
	end -- if;

	if not exists(select * from CURRENCIES_CSTM where ID_C = @ID) begin -- then
		insert into CURRENCIES_CSTM ( ID_C ) values ( @ID );
	end -- if;

  end
GO

Grant Execute on dbo.spCURRENCIES_Update to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spCURRENCIES_UpdateRateByISO' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spCURRENCIES_UpdateRateByISO;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spCURRENCIES_UpdateRateByISO
	( @MODIFIED_USER_ID       uniqueidentifier
	, @ISO4217                nvarchar(3)
	, @CONVERSION_RATE        float(53)
	, @SYSTEM_CURRENCY_LOG_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	if exists(select * from CURRENCIES where DELETED = 0 and ISO4217 = @ISO4217 and CONVERSION_RATE <> @CONVERSION_RATE) begin -- then
		update CURRENCIES
		   set MODIFIED_USER_ID       = @MODIFIED_USER_ID      
		     , DATE_MODIFIED          =  getdate()             
		     , DATE_MODIFIED_UTC      =  getutcdate()          
		     , CONVERSION_RATE        = @CONVERSION_RATE       
		     , SYSTEM_CURRENCY_LOG_ID = @SYSTEM_CURRENCY_LOG_ID
		 where ISO4217                = @ISO4217               ;
	end -- if;
  end
GO

Grant Execute on dbo.spCURRENCIES_UpdateRateByISO to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDASHBOARDS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDASHBOARDS_Delete;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDASHBOARDS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	-- BEGIN Oracle Exception
		update DASHBOARDS
		   set DELETED           = 1
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
		 where ID                = @ID
		   and DELETED           = 0;
	-- END Oracle Exception
  end
GO
 
Grant Execute on dbo.spDASHBOARDS_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDASHBOARDS_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDASHBOARDS_InsertOnly;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 06/14/2017 Paul.  Add CATEGORY for separate home/dashboard pages. 
Create Procedure dbo.spDASHBOARDS_InsertOnly
	( @ID                uniqueidentifier
	, @ASSIGNED_USER_ID  uniqueidentifier
	, @TEAM_ID           uniqueidentifier
	, @NAME              nvarchar(100)
	, @CATEGORY          nvarchar( 50)
	)
as
  begin
	set nocount on
	
	declare @TEAM_SET_ID         uniqueidentifier;
	declare @ASSIGNED_SET_ID     uniqueidentifier;
	declare @MODIFIED_USER_ID    uniqueidentifier;
	declare @TEAM_SET_LIST       varchar(8000);
	declare @ASSIGNED_SET_LIST   varchar(8000);
	
	exec dbo.spTEAM_SETS_NormalizeSet @TEAM_SET_ID out, @MODIFIED_USER_ID, @TEAM_ID, @TEAM_SET_LIST;
	-- 11/30/2017 Paul.  Add ASSIGNED_SET_ID for Dynamic User Assignment. 
	exec dbo.spASSIGNED_SETS_NormalizeSet @ASSIGNED_SET_ID out, @MODIFIED_USER_ID, @ASSIGNED_USER_ID, @ASSIGNED_SET_LIST;
	
	if not exists(select * from DASHBOARDS where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into DASHBOARDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, ASSIGNED_USER_ID 
			, TEAM_ID          
			, TEAM_SET_ID      
			, NAME             
			, CATEGORY         
			, ASSIGNED_SET_ID  
			)
		values
		 	( @ID               
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @ASSIGNED_USER_ID 
			, @TEAM_ID          
			, @TEAM_SET_ID      
			, @NAME             
			, @CATEGORY         
			, @ASSIGNED_SET_ID  
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spDASHBOARDS_InsertOnly to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDASHBOARDS_PANELS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDASHBOARDS_PANELS_Delete;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDASHBOARDS_PANELS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	-- BEGIN Oracle Exception
		update DASHBOARDS_PANELS
		   set DELETED           = 1
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
		 where ID                = @ID
		   and DELETED           = 0;
	-- END Oracle Exception
  end
GO
 
Grant Execute on dbo.spDASHBOARDS_PANELS_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDASHBOARDS_PANELS_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDASHBOARDS_PANELS_InsertOnly;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDASHBOARDS_PANELS_InsertOnly
	( @DASHBOARD_ID       uniqueidentifier
	, @DASHBOARD_APP_NAME nvarchar(150)
	, @PANEL_ORDER        int
	, @ROW_INDEX          int
	, @COLUMN_WIDTH       int
	)
as
  begin
	set nocount on
	
	declare @ID                 uniqueidentifier;
	declare @MODIFIED_USER_ID   uniqueidentifier;
	declare @DASHBOARD_APP_ID   uniqueidentifier;

	select @DASHBOARD_APP_ID = ID
	  from DASHBOARD_APPS
	 where NAME    = @DASHBOARD_APP_NAME
	   and DELETED = 0;

	if not exists(select * from DASHBOARDS_PANELS where DASHBOARD_ID = @DASHBOARD_ID and DASHBOARD_APP_ID = @DASHBOARD_APP_ID) begin -- then
		set @ID = newid();
		insert into DASHBOARDS_PANELS
			( ID                
			, CREATED_BY        
			, DATE_ENTERED      
			, MODIFIED_USER_ID  
			, DATE_MODIFIED     
			, DATE_MODIFIED_UTC 
			, DASHBOARD_ID      
			, DASHBOARD_APP_ID  
			, PANEL_ORDER       
			, ROW_INDEX         
			, COLUMN_WIDTH      
			)
		values 	( @ID                
			, @MODIFIED_USER_ID  
			,  getdate()         
			, @MODIFIED_USER_ID  
			,  getdate()         
			,  getutcdate()      
			, @DASHBOARD_ID      
			, @DASHBOARD_APP_ID  
			, @PANEL_ORDER       
			, @ROW_INDEX         
			, @COLUMN_WIDTH      
			);
	end -- if;
  end
GO

Grant Execute on dbo.spDASHBOARDS_PANELS_InsertOnly to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDASHBOARDS_PANELS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDASHBOARDS_PANELS_Update;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDASHBOARDS_PANELS_Update
	( @ID                 uniqueidentifier output
	, @MODIFIED_USER_ID   uniqueidentifier
	, @DASHBOARD_ID       uniqueidentifier
	, @DASHBOARD_APP_ID   uniqueidentifier
	, @PANEL_ORDER        int
	, @ROW_INDEX          int
	, @COLUMN_WIDTH       int
	)
as
  begin
	set nocount on
	
	if not exists(select * from DASHBOARDS_PANELS where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into DASHBOARDS_PANELS
			( ID                
			, CREATED_BY        
			, DATE_ENTERED      
			, MODIFIED_USER_ID  
			, DATE_MODIFIED     
			, DATE_MODIFIED_UTC 
			, DASHBOARD_ID      
			, DASHBOARD_APP_ID  
			, PANEL_ORDER       
			, ROW_INDEX         
			, COLUMN_WIDTH      
			)
		values 	( @ID                
			, @MODIFIED_USER_ID  
			,  getdate()         
			, @MODIFIED_USER_ID  
			,  getdate()         
			,  getutcdate()      
			, @DASHBOARD_ID      
			, @DASHBOARD_APP_ID  
			, @PANEL_ORDER       
			, @ROW_INDEX         
			, @COLUMN_WIDTH      
			);
	end else begin
		update DASHBOARDS_PANELS
		   set MODIFIED_USER_ID   = @MODIFIED_USER_ID  
		     , DATE_MODIFIED      =  getdate()         
		     , DATE_MODIFIED_UTC  =  getutcdate()      
		     , DASHBOARD_ID       = @DASHBOARD_ID      
		     , DASHBOARD_APP_ID   = @DASHBOARD_APP_ID  
		     , PANEL_ORDER        = @PANEL_ORDER       
		     , ROW_INDEX          = @ROW_INDEX         
		     , COLUMN_WIDTH       = @COLUMN_WIDTH      
		 where ID                 = @ID                ;
	end -- if;
  end
GO

Grant Execute on dbo.spDASHBOARDS_PANELS_Update to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDASHBOARDS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDASHBOARDS_Update;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
-- 06/14/2017 Paul.  Add CATEGORY for separate home/dashboard pages. 
-- 11/30/2017 Paul.  Add ASSIGNED_SET_ID for Dynamic User Assignment. 
Create Procedure dbo.spDASHBOARDS_Update
	( @ID                uniqueidentifier output
	, @MODIFIED_USER_ID  uniqueidentifier
	, @ASSIGNED_USER_ID  uniqueidentifier
	, @TEAM_ID           uniqueidentifier
	, @TEAM_SET_LIST     varchar(8000)
	, @NAME              nvarchar(100)
	, @CATEGORY          nvarchar( 50)
	, @DESCRIPTION       nvarchar(max)
	, @CONTENT           nvarchar(max)
	, @ASSIGNED_SET_LIST varchar(8000) = null
	)
as
  begin
	set nocount on
	
	declare @TEAM_SET_ID         uniqueidentifier;
	declare @ASSIGNED_SET_ID     uniqueidentifier;
	
	exec dbo.spTEAM_SETS_NormalizeSet @TEAM_SET_ID out, @MODIFIED_USER_ID, @TEAM_ID, @TEAM_SET_LIST;
	-- 11/30/2017 Paul.  Add ASSIGNED_SET_ID for Dynamic User Assignment. 
	exec dbo.spASSIGNED_SETS_NormalizeSet @ASSIGNED_SET_ID out, @MODIFIED_USER_ID, @ASSIGNED_USER_ID, @ASSIGNED_SET_LIST;
	
	if not exists(select * from DASHBOARDS where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into DASHBOARDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, ASSIGNED_USER_ID 
			, TEAM_ID          
			, TEAM_SET_ID      
			, NAME             
			, CATEGORY         
			, DESCRIPTION      
			, CONTENT          
			, ASSIGNED_SET_ID  
			)
		values 	( @ID               
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @ASSIGNED_USER_ID 
			, @TEAM_ID          
			, @TEAM_SET_ID      
			, @NAME             
			, @CATEGORY         
			, @DESCRIPTION      
			, @CONTENT          
			, @ASSIGNED_SET_ID  
			);
	end else begin
		update DASHBOARDS
		   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
		     , DATE_MODIFIED     =  getdate()        
		     , DATE_MODIFIED_UTC =  getutcdate()     
		     , ASSIGNED_USER_ID  = @ASSIGNED_USER_ID 
		     , TEAM_ID           = @TEAM_ID          
		     , TEAM_SET_ID       = @TEAM_SET_ID      
		     , NAME              = @NAME             
		     , CATEGORY          = @CATEGORY         
		     , DESCRIPTION       = @DESCRIPTION      
		     , CONTENT           = @CONTENT          
		     , ASSIGNED_SET_ID   = @ASSIGNED_SET_ID  
		 where ID                = @ID               ;
	end -- if;
  end
GO
 
Grant Execute on dbo.spDASHBOARDS_Update to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDASHBOARD_APPS_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDASHBOARD_APPS_InsertOnly;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDASHBOARD_APPS_InsertOnly
	( @NAME                nvarchar(150)
	, @CATEGORY            nvarchar(25)
	, @MODULE_NAME         nvarchar(50)
	, @TITLE               nvarchar(100)
	, @SETTINGS_EDITVIEW   nvarchar( 50)
	, @SCRIPT_URL          nvarchar(2083)
	, @IS_ADMIN            bit
	)
as
  begin
	if not exists(select * from DASHBOARD_APPS where NAME = @NAME and DELETED = 0) begin -- then
		insert into DASHBOARD_APPS
			( ID                 
			, CREATED_BY         
			, DATE_ENTERED       
			, MODIFIED_USER_ID   
			, DATE_MODIFIED      
			, NAME               
			, CATEGORY           
			, MODULE_NAME        
			, TITLE              
			, SETTINGS_EDITVIEW  
			, SCRIPT_URL         
			, IS_ADMIN           
			, APP_ENABLED        
			)
		values 
			(  newid()            
			,  null               
			,  getdate()          
			,  null               
			,  getdate()          
			, @NAME               
			, @CATEGORY           
			, @MODULE_NAME        
			, @TITLE              
			, @SETTINGS_EDITVIEW  
			, @SCRIPT_URL         
			, @IS_ADMIN           
			, 1                   
			);
	end -- if;
  end
GO

Grant Execute on dbo.spDASHBOARD_APPS_InsertOnly to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDASHLETS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDASHLETS_Delete;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDASHLETS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	update DASHLETS
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID = @ID;
  end
GO
 
Grant Execute on dbo.spDASHLETS_Delete to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDASHLETS_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDASHLETS_InsertOnly;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/24/2009 Paul.  The new Silverlight charts exceeded the control name length of 50. 
-- 01/24/2010 Paul.  Allow multiple. 
Create Procedure dbo.spDASHLETS_InsertOnly
	( @CATEGORY            nvarchar(25)
	, @MODULE_NAME         nvarchar(50)
	, @CONTROL_NAME        nvarchar(100)
	, @TITLE               nvarchar(100)
	, @ALLOW_MULTIPLE      bit = null
	)
as
  begin
	if not exists(select * from DASHLETS where MODULE_NAME = @MODULE_NAME and CONTROL_NAME = @CONTROL_NAME and DELETED = 0) begin -- then
		insert into DASHLETS
			( ID                 
			, CREATED_BY         
			, DATE_ENTERED       
			, MODIFIED_USER_ID   
			, DATE_MODIFIED      
			, CATEGORY           
			, MODULE_NAME        
			, CONTROL_NAME       
			, TITLE              
			, DASHLET_ENABLED    
			, ALLOW_MULTIPLE     
			)
		values 
			( newid()             
			, null                
			,  getdate()          
			, null                
			,  getdate()          
			, @CATEGORY           
			, @MODULE_NAME        
			, @CONTROL_NAME       
			, @TITLE              
			, 1                   
			, @ALLOW_MULTIPLE     
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spDASHLETS_InsertOnly to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDASHLETS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDASHLETS_Update;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/24/2009 Paul.  The new Silverlight charts exceeded the control name length of 50. 
-- 01/24/2010 Paul.  Allow multiple. 
Create Procedure dbo.spDASHLETS_Update
	( @ID                  uniqueidentifier output
	, @MODIFIED_USER_ID    uniqueidentifier
	, @CATEGORY            nvarchar(25)
	, @MODULE_NAME         nvarchar(50)
	, @CONTROL_NAME        nvarchar(100)
	, @TITLE               nvarchar(100)
	, @DASHLET_ENABLED     bit
	, @ALLOW_MULTIPLE      bit = null
	)
as
  begin
	if not exists(select * from DASHLETS where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into DASHLETS
			( ID                 
			, CREATED_BY         
			, DATE_ENTERED       
			, MODIFIED_USER_ID   
			, DATE_MODIFIED      
			, CATEGORY           
			, MODULE_NAME        
			, CONTROL_NAME       
			, TITLE              
			, DASHLET_ENABLED    
			, ALLOW_MULTIPLE     
			)
		values 
			( @ID                 
			, @MODIFIED_USER_ID   
			,  getdate()          
			, @MODIFIED_USER_ID   
			,  getdate()          
			, @CATEGORY           
			, @MODULE_NAME        
			, @CONTROL_NAME       
			, @TITLE              
			, @DASHLET_ENABLED    
			, @ALLOW_MULTIPLE     
			);
	end else begin
		update DASHLETS
		   set MODIFIED_USER_ID    = @MODIFIED_USER_ID   
		     , DATE_MODIFIED       =  getdate()          
		     , DATE_MODIFIED_UTC   =  getutcdate()       
		     , CATEGORY            = @CATEGORY           
		     , MODULE_NAME         = @MODULE_NAME        
		     , CONTROL_NAME        = @CONTROL_NAME       
		     , TITLE               = @TITLE              
		     , DASHLET_ENABLED     = @DASHLET_ENABLED    
		     , ALLOW_MULTIPLE      = @ALLOW_MULTIPLE     
		 where ID                  = @ID                 ;
	end -- if;
  end
GO
 
Grant Execute on dbo.spDASHLETS_Update to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDASHLETS_USERS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDASHLETS_USERS_Delete;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDASHLETS_USERS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	-- BEGIN Oracle Exception
		update DASHLETS_USERS
		   set DELETED          = 1
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where ID = @ID;
	-- END Oracle Exception
  end
GO
 
Grant Execute on dbo.spDASHLETS_USERS_Delete to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDASHLETS_USERS_Disable' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDASHLETS_USERS_Disable;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/28/2010 Paul.  The ASSIGNED_USER_ID must be used when managing dashlets. 
Create Procedure dbo.spDASHLETS_USERS_Disable
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @ASSIGNED_USER_ID uniqueidentifier;
	declare @SWAP_ID       uniqueidentifier;
	declare @DETAIL_NAME   nvarchar(50);
	declare @DASHLET_ORDER int;

	set @ASSIGNED_USER_ID = @MODIFIED_USER_ID;
	if exists(select * from DASHLETS_USERS where ID = @ID and DELETED = 0) begin -- then
		-- BEGIN Oracle Exception
			select @DETAIL_NAME   = DETAIL_NAME
			     , @DASHLET_ORDER = DASHLET_ORDER
			  from DASHLETS_USERS
			 where ID             = @ID
			   and DELETED        = 0;
		-- END Oracle Exception
		
		-- BEGIN Oracle Exception
			update DASHLETS_USERS
			   set MODIFIED_USER_ID = @MODIFIED_USER_ID 
			     , DATE_MODIFIED    =  getdate()        
			     , DATE_MODIFIED_UTC=  getutcdate()     
			     , DASHLET_ORDER    = null
			     , DASHLET_ENABLED  = 0
			 where ID               = @ID
			   and DELETED          = 0;
		-- END Oracle Exception
		
		-- 01/28/2010 Paul.  The ASSIGNED_USER_ID must be used when managing dashlets. 
		-- BEGIN Oracle Exception
			select @SWAP_ID = ID
			  from DASHLETS_USERS
			 where ASSIGNED_USER_ID = @ASSIGNED_USER_ID 
			   and DETAIL_NAME      = @DETAIL_NAME
			   and DASHLET_ORDER    = @DASHLET_ORDER
			   and DELETED          = 0;
		-- END Oracle Exception

		-- 01/04/2006 Paul.  Shift all DASHLETS_USERS down, but only if there is no duplicate order value. 
		if dbo.fnIsEmptyGuid(@SWAP_ID) = 1 begin -- then
			-- 01/28/2010 Paul.  The ASSIGNED_USER_ID must be used when managing dashlets. 
			-- BEGIN Oracle Exception
				update DASHLETS_USERS
				   set DASHLET_ORDER    = DASHLET_ORDER - 1
				 where ASSIGNED_USER_ID = @ASSIGNED_USER_ID 
				   and DETAIL_NAME      = @DETAIL_NAME
				   and DASHLET_ORDER    > @DASHLET_ORDER
				   and DELETED          = 0;
			-- END Oracle Exception
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spDASHLETS_USERS_Disable to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDASHLETS_USERS_Enable' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDASHLETS_USERS_Enable;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/28/2010 Paul.  The ASSIGNED_USER_ID must be used when managing dashlets. 
Create Procedure dbo.spDASHLETS_USERS_Enable
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @ASSIGNED_USER_ID uniqueidentifier;
	declare @SWAP_ID       uniqueidentifier;
	declare @DETAIL_NAME   nvarchar(50);
	declare @DASHLET_ORDER int;

	set @ASSIGNED_USER_ID = @MODIFIED_USER_ID;
	if exists(select * from DASHLETS_USERS where ID = @ID and DELETED = 0) begin -- then
		-- BEGIN Oracle Exception
			select @DETAIL_NAME   = DETAIL_NAME
			     , @DASHLET_ORDER = DASHLET_ORDER
			  from DASHLETS_USERS
			 where ID          = @ID
			   and DELETED     = 0;
		-- END Oracle Exception

		-- 01/28/2010 Paul.  The ASSIGNED_USER_ID must be used when managing dashlets. 
		-- BEGIN Oracle Exception
			select @SWAP_ID = ID
			  from DASHLETS_USERS
			 where ASSIGNED_USER_ID = @ASSIGNED_USER_ID 
			   and DETAIL_NAME      = @DETAIL_NAME
			   and DASHLET_ORDER    = 0
			   and DELETED          = 0;
		-- END Oracle Exception
		-- 01/04/2005 Paul.  If there is a module at 0, shift all DASHLETS_USERS so that this one can be 1. 
		if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 begin -- then
			-- 04/02/2006 Paul.  Catch the Oracle NO_DATA_FOUND exception. 
			-- 01/28/2010 Paul.  The ASSIGNED_USER_ID must be used when managing dashlets. 
			-- BEGIN Oracle Exception
				update DASHLETS_USERS
				   set DASHLET_ORDER    = DASHLET_ORDER + 1
				 where ASSIGNED_USER_ID = @ASSIGNED_USER_ID 
				   and DETAIL_NAME      = @DETAIL_NAME
				   and DASHLET_ORDER   >= 0
				   and DELETED          = 0;
			-- END Oracle Exception
		end -- if;
		
		-- 01/04/2006 Paul.  DASHLETS_USERS made visible start at tab 0. 
		-- BEGIN Oracle Exception
			update DASHLETS_USERS
			   set MODIFIED_USER_ID = @MODIFIED_USER_ID 
			     , DATE_MODIFIED    =  getdate()        
			     , DATE_MODIFIED_UTC=  getutcdate()     
			     , DASHLET_ORDER    = 0
			     , DASHLET_ENABLED  = 1
			 where ID               = @ID
			   and DELETED          = 0;
		-- END Oracle Exception
	end -- if;
  end
GO

Grant Execute on dbo.spDASHLETS_USERS_Enable to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDASHLETS_USERS_MoveDown' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDASHLETS_USERS_MoveDown;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/28/2010 Paul.  The ASSIGNED_USER_ID must be used when managing dashlets. 
Create Procedure dbo.spDASHLETS_USERS_MoveDown
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @ASSIGNED_USER_ID uniqueidentifier;
	declare @SWAP_ID       uniqueidentifier;
	declare @DETAIL_NAME   nvarchar(50);
	declare @DASHLET_ORDER int;

	set @ASSIGNED_USER_ID = @MODIFIED_USER_ID;
	if exists(select * from DASHLETS_USERS where ID = @ID and DELETED = 0) begin -- then
		-- BEGIN Oracle Exception
			select @DETAIL_NAME   = DETAIL_NAME
			     , @DASHLET_ORDER = DASHLET_ORDER
			  from DASHLETS_USERS
			 where ID             = @ID
			   and DELETED        = 0;
		-- END Oracle Exception
		
		-- Moving down actually means incrementing the order value. 
		-- 01/28/2010 Paul.  The ASSIGNED_USER_ID must be used when managing dashlets. 
		-- BEGIN Oracle Exception
			select @SWAP_ID = ID
			  from DASHLETS_USERS
			 where ASSIGNED_USER_ID = @ASSIGNED_USER_ID 
			   and DETAIL_NAME      = @DETAIL_NAME
			   and DASHLET_ORDER    = @DASHLET_ORDER + 1
			   and DELETED          = 0;
		-- END Oracle Exception
		if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 begin -- then
			-- BEGIN Oracle Exception
				update DASHLETS_USERS
				   set DASHLET_ORDER    = DASHLET_ORDER + 1
				     , DATE_MODIFIED    = getdate()
				     , DATE_MODIFIED_UTC= getutcdate()
				     , MODIFIED_USER_ID = @MODIFIED_USER_ID
				 where ID               = @ID;
			-- END Oracle Exception
			-- BEGIN Oracle Exception
				update DASHLETS_USERS
				   set DASHLET_ORDER    = DASHLET_ORDER - 1
				     , DATE_MODIFIED    = getdate()
				     , DATE_MODIFIED_UTC= getutcdate()
				     , MODIFIED_USER_ID = @MODIFIED_USER_ID
				 where ID               = @SWAP_ID;
			-- END Oracle Exception
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spDASHLETS_USERS_MoveDown to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDASHLETS_USERS_MoveItem' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDASHLETS_USERS_MoveItem;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDASHLETS_USERS_MoveItem
	( @MODIFIED_USER_ID uniqueidentifier
	, @ASSIGNED_USER_ID uniqueidentifier
	, @DETAIL_NAME      nvarchar(50)
	, @OLD_INDEX        int
	, @NEW_INDEX        int
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID    uniqueidentifier;
	-- BEGIN Oracle Exception
		select @SWAP_ID   = ID
		  from DASHLETS_USERS
		 where ASSIGNED_USER_ID = @ASSIGNED_USER_ID 
		   and DETAIL_NAME      = @DETAIL_NAME
		   and DASHLET_ORDER    = @OLD_INDEX
		   and DELETED          = 0;
	-- END Oracle Exception

	if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 and (@OLD_INDEX > @NEW_INDEX or @OLD_INDEX < @NEW_INDEX) begin -- then
		if @OLD_INDEX < @NEW_INDEX begin -- then
			update DASHLETS_USERS
			   set DASHLET_ORDER     = DASHLET_ORDER - 1
			     , DATE_MODIFIED     = getdate()
			     , DATE_MODIFIED_UTC = getutcdate()
			     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
			 where ASSIGNED_USER_ID  = @ASSIGNED_USER_ID 
			   and DETAIL_NAME       = @DETAIL_NAME
			   and DASHLET_ORDER    >= @OLD_INDEX
			   and DASHLET_ORDER    <= @NEW_INDEX
			   and DELETED           = 0;
		end else if @OLD_INDEX > @NEW_INDEX begin -- then
			update DASHLETS_USERS
			   set DASHLET_ORDER     = DASHLET_ORDER + 1
			     , DATE_MODIFIED     = getdate()
			     , DATE_MODIFIED_UTC = getutcdate()
			     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
			 where ASSIGNED_USER_ID  = @ASSIGNED_USER_ID 
			   and DETAIL_NAME       = @DETAIL_NAME
			   and DASHLET_ORDER    >= @NEW_INDEX
			   and DASHLET_ORDER    <= @OLD_INDEX
			   and DELETED           = 0;
		end -- if;
		update DASHLETS_USERS
		   set DASHLET_ORDER     = @NEW_INDEX
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
		 where ID                = @SWAP_ID
		   and DELETED           = 0;
	end -- if;
  end
GO

Grant Execute on dbo.spDASHLETS_USERS_MoveItem to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDASHLETS_USERS_MoveUp' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDASHLETS_USERS_MoveUp;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/28/2010 Paul.  The ASSIGNED_USER_ID must be used when managing dashlets. 
Create Procedure dbo.spDASHLETS_USERS_MoveUp
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @ASSIGNED_USER_ID uniqueidentifier;
	declare @SWAP_ID       uniqueidentifier;
	declare @DETAIL_NAME   nvarchar(50);
	declare @DASHLET_ORDER int;

	set @ASSIGNED_USER_ID = @MODIFIED_USER_ID;
	if exists(select * from DASHLETS_USERS where ID = @ID and DELETED = 0) begin -- then
		-- BEGIN Oracle Exception
			select @DETAIL_NAME   = DETAIL_NAME
			     , @DASHLET_ORDER = DASHLET_ORDER
			  from DASHLETS_USERS
			 where ID             = @ID
			   and DELETED        = 0;
		-- END Oracle Exception

		-- 01/04/2006 Paul.  DASHLET_ORDER 0 is reserved.  Don't allow decrease below 1. 
		if @DASHLET_ORDER is not null begin -- then
			-- 01/28/2010 Paul.  The ASSIGNED_USER_ID must be used when managing dashlets. 
			-- BEGIN Oracle Exception
				select @SWAP_ID = ID
				  from DASHLETS_USERS
				 where ASSIGNED_USER_ID = @ASSIGNED_USER_ID 
				   and DETAIL_NAME      = @DETAIL_NAME
				   and DASHLET_ORDER    = @DASHLET_ORDER - 1
				   and DELETED          = 0;
			-- END Oracle Exception

			-- Moving up actually means decrementing the order value. 
			if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 begin -- then
				-- BEGIN Oracle Exception
					update DASHLETS_USERS
					   set DASHLET_ORDER    = DASHLET_ORDER - 1
					     , DATE_MODIFIED    = getdate()
					     , DATE_MODIFIED_UTC= getutcdate()
					     , MODIFIED_USER_ID = @MODIFIED_USER_ID
					 where ID               = @ID;
				-- END Oracle Exception
				-- BEGIN Oracle Exception
					update DASHLETS_USERS
					   set DASHLET_ORDER    = DASHLET_ORDER + 1
					     , DATE_MODIFIED    = getdate()
					     , DATE_MODIFIED_UTC= getutcdate()
					     , MODIFIED_USER_ID = @MODIFIED_USER_ID
					 where ID               = @SWAP_ID;
				-- END Oracle Exception
			end -- if;
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spDASHLETS_USERS_MoveUp to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDASHLETS_USERS_Reorder' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDASHLETS_USERS_Reorder;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDASHLETS_USERS_Reorder
	( @MODIFIED_USER_ID uniqueidentifier
	, @ASSIGNED_USER_ID uniqueidentifier
	, @DETAIL_NAME      nvarchar(50)
	)
as
  begin
	set nocount on
	
	declare @ID                 uniqueidentifier;
	declare @DASHLET_ENABLED    bit;
	declare @DASHLET_ORDER_OLD  int;
	declare @DASHLET_ORDER_NEW  int;

	declare module_cursor cursor for
	select ID
	     , DASHLET_ENABLED
	     , DASHLET_ORDER
	  from vwDASHLETS_USERS
	 where ASSIGNED_USER_ID = @ASSIGNED_USER_ID
	   and DETAIL_NAME      = @DETAIL_NAME
	 order by DASHLET_ORDER;

/* -- #if IBM_DB2
	declare continue handler for not found
		set in_FETCH_STATUS = 1;
-- #endif IBM_DB2 */
/* -- #if MySQL
	declare continue handler for not found
		set in_FETCH_STATUS = 1;
	set in_FETCH_STATUS = 0;
-- #endif MySQL */

	set @DASHLET_ORDER_NEW = 0;
	open module_cursor;
	fetch next from module_cursor into @ID, @DASHLET_ENABLED, @DASHLET_ORDER_OLD;
	while @@FETCH_STATUS = 0 begin -- do
		if @DASHLET_ENABLED = 1 begin -- then
			if @DASHLET_ORDER_OLD != @DASHLET_ORDER_NEW begin -- then
				update DASHLETS_USERS
				   set DASHLET_ORDER    = @DASHLET_ORDER_NEW
				     , MODIFIED_USER_ID = null
				     , DATE_MODIFIED    = getdate()
				     , DATE_MODIFIED_UTC= getutcdate()
				 where ID               = @ID;
			end -- if;
			set @DASHLET_ORDER_NEW = @DASHLET_ORDER_NEW + 1;
		end else begin
			if @DASHLET_ORDER_OLD != 0 begin -- then
				update DASHLETS_USERS
				   set DASHLET_ORDER    = 0
				     , MODIFIED_USER_ID = null
				     , DATE_MODIFIED    = getdate()
				     , DATE_MODIFIED_UTC= getutcdate()
				 where ID               = @ID;
			end -- if;
		end -- if;
		fetch next from module_cursor into @ID, @DASHLET_ENABLED, @DASHLET_ORDER_OLD;
	end -- while;
	close module_cursor;

	deallocate module_cursor;
  end
GO

Grant Execute on dbo.spDASHLETS_USERS_Reorder to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDASHLETS_USERS_UpdateTitle' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDASHLETS_USERS_UpdateTitle;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDASHLETS_USERS_UpdateTitle
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	, @TITLE            nvarchar(100)
	)
as
  begin
	set nocount on

	if @TITLE is not null begin -- then
		-- BEGIN Oracle Exception
			update DASHLETS_USERS
			   set TITLE             = @TITLE
			     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
			     , DATE_MODIFIED     = getdate()
			     , DATE_MODIFIED_UTC = getutcdate()
			 where ID                = @ID
			   and DELETED           = 0;
		-- END Oracle Exception
	end -- if;
  end
GO

Grant Execute on dbo.spDASHLETS_USERS_UpdateTitle to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_Delete;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDETAILVIEWS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	update DETAILVIEWS
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID = @ID;
  end
GO
 
Grant Execute on dbo.spDETAILVIEWS_Delete to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_FIELDS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_FIELDS_Delete;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDETAILVIEWS_FIELDS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	update DETAILVIEWS_FIELDS
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID = @ID;
  end
GO
 
Grant Execute on dbo.spDETAILVIEWS_FIELDS_Delete to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_FIELDS_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_FIELDS_InsertOnly;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the DATA_LABEL to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 06/12/2009 Paul.  Add TOOL_TIP for help hover.
-- 10/30/2013 Paul.  Increase size of URL_TARGET. 
-- 02/25/2015 Paul.  Increase size of DATA_FIELD and DATA_FORMAT for OfficeAddin. 
-- 02/21/2017 Paul.  Allow a field to be added to the end using an index of -1. 
Create Procedure dbo.spDETAILVIEWS_FIELDS_InsertOnly
	( @DETAIL_NAME       nvarchar( 50)
	, @FIELD_INDEX       int
	, @FIELD_TYPE        nvarchar( 25)
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(1000)
	, @DATA_FORMAT       nvarchar(max)
	, @URL_FIELD         nvarchar(max)
	, @URL_FORMAT        nvarchar(max)
	, @URL_TARGET        nvarchar( 60)
	, @LIST_NAME         nvarchar( 50)
	, @COLSPAN           int
	, @TOOL_TIP          nvarchar(150) = null
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DATA_FIELD   = @DATA_FIELD
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into DETAILVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, DETAIL_NAME      
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_FORMAT      
			, URL_FIELD        
			, URL_FORMAT       
			, URL_TARGET       
			, LIST_NAME        
			, COLSPAN          
			, TOOL_TIP         
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @DETAIL_NAME      
			, @TEMP_FIELD_INDEX 
			, @FIELD_TYPE       
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_FORMAT      
			, @URL_FIELD        
			, @URL_FORMAT       
			, @URL_TARGET       
			, @LIST_NAME        
			, @COLSPAN          
			, @TOOL_TIP         
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spDETAILVIEWS_FIELDS_InsertOnly to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_FIELDS_InsHeader' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_FIELDS_InsHeader;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 02/21/2017 Paul.  Allow a field to be added to the end using an index of -1. 
-- 04/15/2022 Paul.  Add support for Pacific layout tabs. 
Create Procedure dbo.spDETAILVIEWS_FIELDS_InsHeader
	( @DETAIL_NAME       nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @COLSPAN           int
	, @DATA_FORMAT       nvarchar(max) = null
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into DETAILVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, DETAIL_NAME      
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, COLSPAN          
			, DATA_FORMAT      
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @DETAIL_NAME      
			, @TEMP_FIELD_INDEX 
			, N'Header'         
			, @DATA_LABEL       
			, @COLSPAN          
			, @DATA_FORMAT      
			);
	end -- if;
  end
GO

Grant Execute on dbo.spDETAILVIEWS_FIELDS_InsHeader to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_FIELDS_InsSeparator' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_FIELDS_InsSeparator;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 02/21/2017 Paul.  Allow a field to be added to the end using an index of -1. 
Create Procedure dbo.spDETAILVIEWS_FIELDS_InsSeparator
	( @DETAIL_NAME       nvarchar( 50)
	, @FIELD_INDEX       int
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into DETAILVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, DETAIL_NAME      
			, FIELD_INDEX      
			, FIELD_TYPE       
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @DETAIL_NAME      
			, @TEMP_FIELD_INDEX 
			, N'Separator'      
			);
	end -- if;
  end
GO

Grant Execute on dbo.spDETAILVIEWS_FIELDS_InsSeparator to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_FIELDS_InsTags' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_FIELDS_InsTags;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDETAILVIEWS_FIELDS_InsTags
	( @DETAIL_NAME       nvarchar( 50)
	, @FIELD_INDEX       int
	, @COLSPAN           int
	)
as
  begin
	declare @TEMP_FIELD_INDEX int;	
	declare @ID               uniqueidentifier;
	declare @DATA_LABEL       nvarchar(150);
	declare @DATA_FIELD       nvarchar(1000);
	declare @DATA_FORMAT      nvarchar(max);

	set @DATA_LABEL       = N'.LBL_TAG_SET_NAME';
	set @DATA_FIELD       = N'TAG_SET_NAME';
	set @DATA_FORMAT      = N'{0}';
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DATA_FIELD   = @DATA_FIELD
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into DETAILVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, DETAIL_NAME      
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_FORMAT      
			, COLSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @DETAIL_NAME      
			, @TEMP_FIELD_INDEX 
			, N'Tags'           
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_FORMAT      
			, @COLSPAN          
			);
	end -- if;
  end
GO

Grant Execute on dbo.spDETAILVIEWS_FIELDS_InsTags to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_FIELDS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_FIELDS_Update;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the DATA_LABEL to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 11/22/2006 Paul.  Prevent index from overlapping. This is needed to simplify inserting the TEAM field. 
-- 06/12/2009 Paul.  Add TOOL_TIP for help hover.
-- 02/16/2010 Paul.  Add MODULE_TYPE so that we can lookup custom field IDs. 
-- 06/16/2010 Paul.  Increase the size of the URL_FIELD and URL_FORMAT so that we can create an IFrame to a Google map. 
-- 08/02/2010 Paul.  Increase the size of the URL_FIELD and URL_FORMAT so that we can add a javascript info column. 
-- 10/09/2010 Paul.  Add PARENT_FIELD so that we can establish dependent listboxes. 
-- 10/30/2013 Paul.  Increase size of URL_TARGET. 
-- 02/25/2015 Paul.  Increase size of DATA_FIELD and DATA_FORMAT for OfficeAddin. 
Create Procedure dbo.spDETAILVIEWS_FIELDS_Update
	( @ID                uniqueidentifier output
	, @MODIFIED_USER_ID  uniqueidentifier
	, @DETAIL_NAME       nvarchar( 50)
	, @FIELD_INDEX       int
	, @FIELD_TYPE        nvarchar( 25)
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(1000)
	, @DATA_FORMAT       nvarchar(max)
	, @URL_FIELD         nvarchar(max)
	, @URL_FORMAT        nvarchar(max)
	, @URL_TARGET        nvarchar( 60)
	, @LIST_NAME         nvarchar( 50)
	, @COLSPAN           int
	, @TOOL_TIP          nvarchar(150) = null
	, @MODULE_TYPE       nvarchar(25) = null
	, @PARENT_FIELD      nvarchar(30) = null
	)
as
  begin
	-- 06/12/2009 Paul.  PostgreSQL does not allow modifying input parameters.  Use a local temp variable. 
	declare @TEMP_DATA_LABEL        nvarchar(150);
	declare @TEMP_DATA_FIELD        nvarchar(100);
	declare @TEMP_DATA_FORMAT       nvarchar(100);
	declare @TEMP_URL_FIELD         nvarchar(500);
	declare @TEMP_URL_FORMAT        nvarchar(300);
	declare @TEMP_URL_TARGET        nvarchar( 20);
	declare @TEMP_LIST_NAME         nvarchar( 50);
	declare @TEMP_TOOL_TIP          nvarchar(150);
	declare @TEMP_MODULE_TYPE       nvarchar( 25);
	declare @TEMP_PARENT_FIELD      nvarchar( 30);

	set @TEMP_DATA_LABEL  = @DATA_LABEL ;
	set @TEMP_DATA_FIELD  = @DATA_FIELD ;
	set @TEMP_DATA_FORMAT = @DATA_FORMAT;
	set @TEMP_URL_FIELD   = @URL_FIELD  ;
	set @TEMP_URL_FORMAT  = @URL_FORMAT ;
	set @TEMP_URL_TARGET  = @URL_TARGET ;
	set @TEMP_LIST_NAME   = @LIST_NAME  ;
	set @TEMP_TOOL_TIP    = @TOOL_TIP   ;
	set @TEMP_MODULE_TYPE = @MODULE_TYPE;
	set @TEMP_PARENT_FIELD = @PARENT_FIELD;

	-- 03/19/2009 Paul.  We need to clear fields when using Blank. 
	if @FIELD_TYPE = N'Blank' begin -- then
		set @TEMP_DATA_LABEL         = null;
		set @TEMP_DATA_FIELD         = null;
		set @TEMP_DATA_FORMAT        = null;
		set @TEMP_URL_FIELD          = null;
		set @TEMP_URL_FORMAT         = null;
		set @TEMP_URL_TARGET         = null;
		set @TEMP_LIST_NAME          = null;
		set @TEMP_TOOL_TIP           = null;
		set @TEMP_MODULE_TYPE        = null;
		set @TEMP_PARENT_FIELD       = null;
	end -- if;

	-- 01/09/2006 Paul.  Can't convert EDIT_NAME and FIELD_INDEX into an ID
	-- as it would prevent the Layout Manager from working properly. 
	if not exists(select * from DETAILVIEWS_FIELDS where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		-- 11/22/2006 Paul.  Prevent index from overlapping. 
		if exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = @DETAIL_NAME and FIELD_INDEX = @FIELD_INDEX and DEFAULT_VIEW = 0 and DELETED = 0) begin -- then
			update DETAILVIEWS_FIELDS
			   set FIELD_INDEX   = FIELD_INDEX + 1
			 where DETAIL_NAME   = @DETAIL_NAME
			   and FIELD_INDEX  >= @FIELD_INDEX
			   and DEFAULT_VIEW  = 0
			   and DELETED       = 0;
		end -- if;
		insert into DETAILVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, DETAIL_NAME      
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_FORMAT      
			, URL_FIELD        
			, URL_FORMAT       
			, URL_TARGET       
			, LIST_NAME        
			, COLSPAN          
			, TOOL_TIP         
			, MODULE_TYPE      
			, PARENT_FIELD     
			)
		values 
			( @ID               
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @DETAIL_NAME      
			, @FIELD_INDEX      
			, @FIELD_TYPE       
			, @TEMP_DATA_LABEL  
			, @TEMP_DATA_FIELD  
			, @TEMP_DATA_FORMAT 
			, @TEMP_URL_FIELD   
			, @TEMP_URL_FORMAT  
			, @TEMP_URL_TARGET  
			, @TEMP_LIST_NAME   
			, @COLSPAN          
			, @TEMP_TOOL_TIP    
			, @TEMP_MODULE_TYPE 
			, @PARENT_FIELD     
			);
	end else begin
		update DETAILVIEWS_FIELDS
		   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
		     , DATE_MODIFIED     =  getdate()        
		     , DATE_MODIFIED_UTC =  getutcdate()     
		     , DETAIL_NAME       = @DETAIL_NAME      
		     , FIELD_INDEX       = @FIELD_INDEX      
		     , FIELD_TYPE        = @FIELD_TYPE       
		     , DATA_LABEL        = @TEMP_DATA_LABEL  
		     , DATA_FIELD        = @TEMP_DATA_FIELD  
		     , DATA_FORMAT       = @TEMP_DATA_FORMAT 
		     , URL_FIELD         = @TEMP_URL_FIELD   
		     , URL_FORMAT        = @TEMP_URL_FORMAT  
		     , URL_TARGET        = @TEMP_URL_TARGET  
		     , LIST_NAME         = @TEMP_LIST_NAME   
		     , COLSPAN           = @COLSPAN          
		     , TOOL_TIP          = @TEMP_TOOL_TIP    
		     , MODULE_TYPE       = @TEMP_MODULE_TYPE 
		     , PARENT_FIELD      = @TEMP_PARENT_FIELD
		 where ID                = @ID               ;
	end -- if;
  end
GO
 
Grant Execute on dbo.spDETAILVIEWS_FIELDS_Update to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_FIELDS_UpdateTip' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_FIELDS_UpdateTip;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDETAILVIEWS_FIELDS_UpdateTip
	( @MODIFIED_USER_ID            uniqueidentifier
	, @DETAIL_NAME                 nvarchar(50)
	, @FIELD_INDEX                 int
	, @TOOL_TIP                    nvarchar(150)
	)
as
  begin
	update DETAILVIEWS_FIELDS
	   set MODIFIED_USER_ID = @MODIFIED_USER_ID
	     , DATE_MODIFIED    =  getdate()        
	     , DATE_MODIFIED_UTC=  getutcdate()     
	     , TOOL_TIP         = @TOOL_TIP    
	 where DETAIL_NAME      = @DETAIL_NAME 
	   and FIELD_INDEX      = @FIELD_INDEX 
	   and DELETED          = 0            
	   and DEFAULT_VIEW     = 0            ;
  end
GO
 
Grant Execute on dbo.spDETAILVIEWS_FIELDS_UpdateTip to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_FIELDS_UpdateUrl' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_FIELDS_UpdateUrl;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/18/2010 Paul.  Fix problem with updating URL fields. 
-- 10/30/2013 Paul.  Increase size of URL_TARGET. 
-- 02/25/2015 Paul.  Increase size of DATA_FIELD and DATA_FORMAT for OfficeAddin. 
Create Procedure dbo.spDETAILVIEWS_FIELDS_UpdateUrl
	( @MODIFIED_USER_ID            uniqueidentifier
	, @DETAIL_NAME                 nvarchar(50)
	, @DATA_FIELD                  nvarchar(1000)
	, @URL_FIELD                   nvarchar(max)
	, @URL_FORMAT                  nvarchar(max)
	, @URL_TARGET                  nvarchar( 60)
	)
as
  begin
	update DETAILVIEWS_FIELDS
	   set MODIFIED_USER_ID  = @MODIFIED_USER_ID
	     , DATE_MODIFIED     =  getdate()   
	     , DATE_MODIFIED_UTC =  getutcdate()
	     , URL_FIELD         = @URL_FIELD   
	     , URL_FORMAT        = @URL_FORMAT  
	     , URL_TARGET        = @URL_TARGET  
	 where DETAIL_NAME       = @DETAIL_NAME 
	   and DATA_FIELD        = @DATA_FIELD  
	   and DELETED           = 0            
	   and DEFAULT_VIEW      = 0            ;
  end
GO
 
Grant Execute on dbo.spDETAILVIEWS_FIELDS_UpdateUrl to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_InsertOnly;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/02/2007 Paul.  Add field for data columns. 
Create Procedure dbo.spDETAILVIEWS_InsertOnly
	( @NAME              nvarchar(50)
	, @MODULE_NAME       nvarchar(25)
	, @VIEW_NAME         nvarchar(50)
	, @LABEL_WIDTH       nvarchar(10)
	, @FIELD_WIDTH       nvarchar(10)
	, @DATA_COLUMNS      int = null
	)
as
  begin
	if not exists(select * from DETAILVIEWS where NAME = @NAME and DELETED = 0) begin -- then
		insert into DETAILVIEWS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, NAME             
			, MODULE_NAME      
			, VIEW_NAME        
			, LABEL_WIDTH      
			, FIELD_WIDTH      
			, DATA_COLUMNS     
			)
		values 
			( newid()           
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @NAME             
			, @MODULE_NAME      
			, @VIEW_NAME        
			, @LABEL_WIDTH      
			, @FIELD_WIDTH      
			, @DATA_COLUMNS     
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spDETAILVIEWS_InsertOnly to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_RELATIONSHIPS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_RELATIONSHIPS_Delete;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDETAILVIEWS_RELATIONSHIPS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	update DETAILVIEWS_RELATIONSHIPS
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID = @ID;
  end
GO
 
Grant Execute on dbo.spDETAILVIEWS_RELATIONSHIPS_Delete to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_RELATIONSHIPS_Disable' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_RELATIONSHIPS_Disable;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDETAILVIEWS_RELATIONSHIPS_Disable
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID             uniqueidentifier;
	declare @DETAIL_NAME        nvarchar(50);
	declare @RELATIONSHIP_ORDER  int;
	if exists(select * from DETAILVIEWS_RELATIONSHIPS where ID = @ID and DELETED = 0) begin -- then
		-- BEGIN Oracle Exception
			select @DETAIL_NAME        = DETAIL_NAME
			     , @RELATIONSHIP_ORDER = RELATIONSHIP_ORDER
			  from DETAILVIEWS_RELATIONSHIPS
			 where ID                  = @ID
			   and DELETED             = 0;
		-- END Oracle Exception
		
		-- BEGIN Oracle Exception
			update DETAILVIEWS_RELATIONSHIPS
			   set MODIFIED_USER_ID     = @MODIFIED_USER_ID 
			     , DATE_MODIFIED        =  getdate()        
			     , DATE_MODIFIED_UTC    =  getutcdate()     
			     , RELATIONSHIP_ORDER   = null
			     , RELATIONSHIP_ENABLED = 0
			 where ID                   = @ID
			   and DELETED              = 0;
		-- END Oracle Exception
		
		-- BEGIN Oracle Exception
			select @SWAP_ID           = ID
			  from DETAILVIEWS_RELATIONSHIPS
			 where DETAIL_NAME        = @DETAIL_NAME
			   and RELATIONSHIP_ORDER = @RELATIONSHIP_ORDER
			   and DELETED            = 0;
		-- END Oracle Exception

		-- 01/04/2006 Paul.  Shift all DETAILVIEWS_RELATIONSHIPS down, but only if there is no duplicate order value. 
		if dbo.fnIsEmptyGuid(@SWAP_ID) = 1 begin -- then
			-- BEGIN Oracle Exception
				update DETAILVIEWS_RELATIONSHIPS
				   set RELATIONSHIP_ORDER = RELATIONSHIP_ORDER - 1
				 where DETAIL_NAME        = @DETAIL_NAME
				   and RELATIONSHIP_ORDER > @RELATIONSHIP_ORDER
				   and DELETED            = 0;
			-- END Oracle Exception
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spDETAILVIEWS_RELATIONSHIPS_Disable to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_RELATIONSHIPS_Down' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_RELATIONSHIPS_Down;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDETAILVIEWS_RELATIONSHIPS_Down
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID            uniqueidentifier;
	declare @DETAIL_NAME        nvarchar(50);
	declare @RELATIONSHIP_ORDER int;
	if exists(select * from DETAILVIEWS_RELATIONSHIPS where ID = @ID and DELETED = 0) begin -- then
		-- BEGIN Oracle Exception
			select @DETAIL_NAME        = DETAIL_NAME
			     , @RELATIONSHIP_ORDER = RELATIONSHIP_ORDER
			  from DETAILVIEWS_RELATIONSHIPS
			 where ID                  = @ID
			   and DELETED             = 0;
		-- END Oracle Exception
		
		-- Moving down actually means incrementing the order value. 
		-- BEGIN Oracle Exception
			select @SWAP_ID           = ID
			  from DETAILVIEWS_RELATIONSHIPS
			 where DETAIL_NAME        = @DETAIL_NAME
			   and RELATIONSHIP_ORDER = @RELATIONSHIP_ORDER + 1
			   and DELETED            = 0;
		-- END Oracle Exception
		if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 begin -- then
			-- BEGIN Oracle Exception
				update DETAILVIEWS_RELATIONSHIPS
				   set RELATIONSHIP_ORDER = RELATIONSHIP_ORDER + 1
				     , DATE_MODIFIED      = getdate()
				     , DATE_MODIFIED_UTC= getutcdate()
				     , MODIFIED_USER_ID   = @MODIFIED_USER_ID
				 where ID                 = @ID;
			-- END Oracle Exception
			-- BEGIN Oracle Exception
				update DETAILVIEWS_RELATIONSHIPS
				   set RELATIONSHIP_ORDER = RELATIONSHIP_ORDER - 1
				     , DATE_MODIFIED      = getdate()
				     , DATE_MODIFIED_UTC= getutcdate()
				     , MODIFIED_USER_ID   = @MODIFIED_USER_ID
				 where ID                 = @SWAP_ID;
			-- END Oracle Exception
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spDETAILVIEWS_RELATIONSHIPS_Down to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_RELATIONSHIPS_Enable' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_RELATIONSHIPS_Enable;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDETAILVIEWS_RELATIONSHIPS_Enable
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID            uniqueidentifier;
	declare @DETAIL_NAME        nvarchar(50);
	declare @RELATIONSHIP_ORDER int;
	if exists(select * from DETAILVIEWS_RELATIONSHIPS where ID = @ID and DELETED = 0) begin -- then
		-- BEGIN Oracle Exception
			select @DETAIL_NAME        = DETAIL_NAME
			     , @RELATIONSHIP_ORDER = RELATIONSHIP_ORDER
			  from DETAILVIEWS_RELATIONSHIPS
			 where ID          = @ID
			   and DELETED     = 0;
		-- END Oracle Exception

		-- BEGIN Oracle Exception
			select @SWAP_ID           = ID
			  from DETAILVIEWS_RELATIONSHIPS
			 where DETAIL_NAME        = @DETAIL_NAME
			   and RELATIONSHIP_ORDER = 0
			   and DELETED            = 0;
		-- END Oracle Exception
		-- 01/04/2005 Paul.  If there is a module at 0, shift all DETAILVIEWS_RELATIONSHIPS so that this one can be 1. 
		if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 begin -- then
			-- 04/02/2006 Paul.  Catch the Oracle NO_DATA_FOUND exception. 
			-- BEGIN Oracle Exception
				update DETAILVIEWS_RELATIONSHIPS
				   set RELATIONSHIP_ORDER = RELATIONSHIP_ORDER + 1
				 where DETAIL_NAME        = @DETAIL_NAME
				   and RELATIONSHIP_ORDER >= 0
				   and DELETED = 0;
			-- END Oracle Exception
		end -- if;
		
		-- 01/04/2006 Paul.  DETAILVIEWS_RELATIONSHIPS made visible start at tab 0. 
		-- BEGIN Oracle Exception
			update DETAILVIEWS_RELATIONSHIPS
			   set MODIFIED_USER_ID     = @MODIFIED_USER_ID 
			     , DATE_MODIFIED        =  getdate()        
			     , DATE_MODIFIED_UTC    =  getutcdate()     
			     , RELATIONSHIP_ORDER   = 0
			     , RELATIONSHIP_ENABLED = 1
			 where ID                   = @ID
			   and DELETED              = 0;
		-- END Oracle Exception
	end -- if;
  end
GO

Grant Execute on dbo.spDETAILVIEWS_RELATIONSHIPS_Enable to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_RELATIONSHIPS_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_RELATIONSHIPS_InsertOnly;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/08/2007 Paul.  We need a title when we migrate to WebParts. 
-- 12/16/2007 Paul.  Make the title optional to reduce problems during upgrade. 
-- 09/24/2009 Paul.  The new Silverlight charts exceeded the control name length of 50. 
-- 03/05/2011 Paul.  If @RELATIONSHIP_ORDER is null, then add control to the bottom. 
-- 10/13/2012 Paul.  Add table info for HTML5 Offline Client. 
-- 03/01/2013 Paul.  Sort Field and Sort Direction may be invalid. Correct for this. 
-- 03/20/2016 Paul.  Increase PRIMARY_FIELD size to 255 to support OfficeAddin. 
Create Procedure dbo.spDETAILVIEWS_RELATIONSHIPS_InsertOnly
	( @DETAIL_NAME         nvarchar(50)
	, @MODULE_NAME         nvarchar(50)
	, @CONTROL_NAME        nvarchar(100)
	, @RELATIONSHIP_ORDER  int
	, @TITLE               nvarchar(100) = null
	, @TABLE_NAME          nvarchar(50) = null
	, @PRIMARY_FIELD       nvarchar(255) = null
	, @SORT_FIELD          nvarchar(50) = null
	, @SORT_DIRECTION      nvarchar(10) = null
	)
as
  begin

	declare @TEMP_RELATIONSHIP_ORDER  int;
	declare @TEMP_SORT_FIELD          nvarchar(50);
	declare @TEMP_SORT_DIRECTION      nvarchar(10);
	set @TEMP_RELATIONSHIP_ORDER = @RELATIONSHIP_ORDER;
	set @TEMP_SORT_FIELD         = @SORT_FIELD;
	set @TEMP_SORT_DIRECTION     = @SORT_DIRECTION;
	if @RELATIONSHIP_ORDER is null or @RELATIONSHIP_ORDER = -1 begin -- then
		-- 09/09/2012 Paul.  Only include enabled relationships. 
		-- BEGIN Oracle Exception
			select @TEMP_RELATIONSHIP_ORDER = isnull(max(RELATIONSHIP_ORDER), 0) + 1
			  from DETAILVIEWS_RELATIONSHIPS
			 where DETAIL_NAME          = @DETAIL_NAME
			   and RELATIONSHIP_ENABLED = 1
			   and DELETED              = 0;
		-- END Oracle Exception
	end -- if;
	-- 03/01/2013 Paul.  Sort Field and Sort Direction may be invalid. Correct for this. 
	if @TABLE_NAME is not null and @TEMP_SORT_FIELD is not null begin -- then
		if not exists(select * from vwSqlColumns where ObjectName = @TABLE_NAME and ColumnName = @SORT_FIELD) begin -- then
			set @TEMP_SORT_FIELD     = null;
			set @TEMP_SORT_DIRECTION = null;
		end -- if;
	end -- if;
	if not exists(select * from DETAILVIEWS_RELATIONSHIPS where DETAIL_NAME = @DETAIL_NAME and CONTROL_NAME = @CONTROL_NAME and DELETED = 0) begin -- then
		insert into DETAILVIEWS_RELATIONSHIPS
			( ID                 
			, CREATED_BY         
			, DATE_ENTERED       
			, MODIFIED_USER_ID   
			, DATE_MODIFIED      
			, DETAIL_NAME        
			, MODULE_NAME        
			, CONTROL_NAME       
			, RELATIONSHIP_ORDER 
			, TITLE              
			, TABLE_NAME         
			, PRIMARY_FIELD      
			, SORT_FIELD         
			, SORT_DIRECTION     
			)
		values 
			( newid()                 
			, null                    
			,  getdate()              
			, null                    
			,  getdate()              
			, @DETAIL_NAME            
			, @MODULE_NAME            
			, @CONTROL_NAME           
			, @TEMP_RELATIONSHIP_ORDER
			, @TITLE                  
			, @TABLE_NAME             
			, @PRIMARY_FIELD          
			, @TEMP_SORT_FIELD        
			, @TEMP_SORT_DIRECTION    
			);
	end else begin
		-- 03/01/2013 Paul.  If this is an old entry, make sure that it has an updated sort field. 
		if @TABLE_NAME is not null and @TEMP_SORT_FIELD is not null begin -- then
			if exists(select * from DETAILVIEWS_RELATIONSHIPS where DETAIL_NAME = @DETAIL_NAME and CONTROL_NAME = @CONTROL_NAME and TABLE_NAME is null and SORT_FIELD is null and DELETED = 0) begin -- then
				update DETAILVIEWS_RELATIONSHIPS
				   set TABLE_NAME        = @TABLE_NAME
				     , SORT_FIELD        = @TEMP_SORT_FIELD
				     , SORT_DIRECTION    = @TEMP_SORT_DIRECTION
				     , DATE_MODIFIED     = getdate()
				     , DATE_MODIFIED_UTC = getutcdate()
				     , MODIFIED_USER_ID  = null
				 where DETAIL_NAME       = @DETAIL_NAME
				   and CONTROL_NAME      = @CONTROL_NAME
				   and TABLE_NAME        is null 
				   and SORT_FIELD        is null
				   and DELETED           = 0;
			end -- if;
		end -- if;
	end -- if;
  end
GO
 
Grant Execute on dbo.spDETAILVIEWS_RELATIONSHIPS_InsertOnly to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_RELATIONSHIPS_Item' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_RELATIONSHIPS_Item;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDETAILVIEWS_RELATIONSHIPS_Item
	( @MODIFIED_USER_ID uniqueidentifier
	, @DETAIL_NAME      nvarchar(50)
	, @OLD_INDEX        int
	, @NEW_INDEX        int
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID    uniqueidentifier;
	-- BEGIN Oracle Exception
		select @SWAP_ID   = ID
		  from DETAILVIEWS_RELATIONSHIPS
		 where DETAIL_NAME        = @DETAIL_NAME
		   and RELATIONSHIP_ORDER = @OLD_INDEX
		   and DELETED            = 0;
	-- END Oracle Exception

	if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 and (@OLD_INDEX > @NEW_INDEX or @OLD_INDEX < @NEW_INDEX) begin -- then
		if @OLD_INDEX < @NEW_INDEX begin -- then
			update DETAILVIEWS_RELATIONSHIPS
			   set RELATIONSHIP_ORDER  = RELATIONSHIP_ORDER - 1
			     , DATE_MODIFIED       = getdate()
			     , DATE_MODIFIED_UTC   = getutcdate()
			     , MODIFIED_USER_ID    = @MODIFIED_USER_ID
			 where DETAIL_NAME         = @DETAIL_NAME
			   and RELATIONSHIP_ORDER >= @OLD_INDEX
			   and RELATIONSHIP_ORDER <= @NEW_INDEX
			   and DELETED             = 0;
		end else if @OLD_INDEX > @NEW_INDEX begin -- then
			update DETAILVIEWS_RELATIONSHIPS
			   set RELATIONSHIP_ORDER  = RELATIONSHIP_ORDER + 1
			     , DATE_MODIFIED       = getdate()
			     , DATE_MODIFIED_UTC   = getutcdate()
			     , MODIFIED_USER_ID    = @MODIFIED_USER_ID
			 where DETAIL_NAME         = @DETAIL_NAME
			   and RELATIONSHIP_ORDER >= @NEW_INDEX
			   and RELATIONSHIP_ORDER <= @OLD_INDEX
			   and DELETED             = 0;
		end -- if;
		update DETAILVIEWS_RELATIONSHIPS
		   set RELATIONSHIP_ORDER = @NEW_INDEX
		     , DATE_MODIFIED      = getdate()
		     , DATE_MODIFIED_UTC  = getutcdate()
		     , MODIFIED_USER_ID   = @MODIFIED_USER_ID
		 where ID                 = @SWAP_ID
		   and DELETED            = 0;
	end -- if;
  end
GO

Grant Execute on dbo.spDETAILVIEWS_RELATIONSHIPS_Item to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_RELATIONSHIPS_MoveUp' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_RELATIONSHIPS_MoveUp;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/08/2007 Paul.  Name will be truncated for Oracle to spDETAILVIEWS_RELATIONSHIPS_Mo. 
Create Procedure dbo.spDETAILVIEWS_RELATIONSHIPS_MoveUp
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID            uniqueidentifier;
	declare @DETAIL_NAME        nvarchar(50);
	declare @RELATIONSHIP_ORDER int;
	if exists(select * from DETAILVIEWS_RELATIONSHIPS where ID = @ID and DELETED = 0) begin -- then
		-- BEGIN Oracle Exception
			select @DETAIL_NAME        = DETAIL_NAME
			     , @RELATIONSHIP_ORDER = RELATIONSHIP_ORDER
			  from DETAILVIEWS_RELATIONSHIPS
			 where ID                  = @ID
			   and DELETED             = 0;
		-- END Oracle Exception

		-- 01/04/2006 Paul.  RELATIONSHIP_ORDER 0 is reserved.  Don't allow decrease below 1. 
		if @RELATIONSHIP_ORDER is not null begin -- then
			-- BEGIN Oracle Exception
				select @SWAP_ID           = ID
				  from DETAILVIEWS_RELATIONSHIPS
				 where DETAIL_NAME        = @DETAIL_NAME
				   and RELATIONSHIP_ORDER = @RELATIONSHIP_ORDER - 1
				   and DELETED            = 0;
			-- END Oracle Exception

			-- Moving up actually means decrementing the order value. 
			if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 begin -- then
				-- BEGIN Oracle Exception
					update DETAILVIEWS_RELATIONSHIPS
					   set RELATIONSHIP_ORDER = RELATIONSHIP_ORDER - 1
					     , DATE_MODIFIED      = getdate()
					     , DATE_MODIFIED_UTC= getutcdate()
					     , MODIFIED_USER_ID   = @MODIFIED_USER_ID
					 where ID                 = @ID;
				-- END Oracle Exception
				-- BEGIN Oracle Exception
					update DETAILVIEWS_RELATIONSHIPS
					   set RELATIONSHIP_ORDER = RELATIONSHIP_ORDER + 1
					     , DATE_MODIFIED      = getdate()
					     , DATE_MODIFIED_UTC= getutcdate()
					     , MODIFIED_USER_ID   = @MODIFIED_USER_ID
					 where ID                 = @SWAP_ID;
				-- END Oracle Exception
			end -- if;
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spDETAILVIEWS_RELATIONSHIPS_MoveUp to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_RELATIONSHIPS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_RELATIONSHIPS_Update;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/08/2007 Paul.  We need a title when we migrate to WebParts. 
-- 09/24/2009 Paul.  The new Silverlight charts exceeded the control name length of 50. 
-- 10/13/2012 Paul.  Add table info for HTML5 Offline Client. 
-- 03/14/2016 Paul.  The new layout editor needs to update the RELATIONSHIP_ENABLED field. 
-- 03/20/2016 Paul.  Increase PRIMARY_FIELD size to 255 to support OfficeAddin. 
-- 03/30/2022 Paul.  Add Insight fields. 
Create Procedure dbo.spDETAILVIEWS_RELATIONSHIPS_Update
	( @ID                  uniqueidentifier output
	, @MODIFIED_USER_ID    uniqueidentifier
	, @DETAIL_NAME         nvarchar(50)
	, @MODULE_NAME         nvarchar(50)
	, @CONTROL_NAME        nvarchar(100)
	, @RELATIONSHIP_ORDER  int
	, @TITLE               nvarchar(100)
	, @TABLE_NAME          nvarchar(50) = null
	, @PRIMARY_FIELD       nvarchar(255) = null
	, @SORT_FIELD          nvarchar(50) = null
	, @SORT_DIRECTION      nvarchar(10) = null
	, @RELATIONSHIP_ENABLED bit = null
	, @INSIGHT_VIEW         nvarchar(50) = null
	, @INSIGHT_LABEL        nvarchar(100) = null
	)
as
  begin
	-- 01/09/2006 Paul.  Can't convert EDIT_NAME and FIELD_INDEX into an ID
	-- as it would prevent the Layout Manager from working properly. 
	if not exists(select * from DETAILVIEWS_RELATIONSHIPS where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into DETAILVIEWS_RELATIONSHIPS
			( ID                 
			, CREATED_BY         
			, DATE_ENTERED       
			, MODIFIED_USER_ID   
			, DATE_MODIFIED      
			, DETAIL_NAME        
			, MODULE_NAME        
			, CONTROL_NAME       
			, RELATIONSHIP_ORDER 
			, RELATIONSHIP_ENABLED
			, TITLE              
			, TABLE_NAME         
			, PRIMARY_FIELD      
			, SORT_FIELD         
			, SORT_DIRECTION     
			, INSIGHT_VIEW       
			, INSIGHT_LABEL      
			)
		values 
			( @ID                 
			, @MODIFIED_USER_ID   
			,  getdate()          
			, @MODIFIED_USER_ID   
			,  getdate()          
			, @DETAIL_NAME        
			, @MODULE_NAME        
			, @CONTROL_NAME       
			, @RELATIONSHIP_ORDER 
			, @RELATIONSHIP_ENABLED
			, @TITLE              
			, @TABLE_NAME         
			, @PRIMARY_FIELD      
			, @SORT_FIELD         
			, @SORT_DIRECTION     
			, @INSIGHT_VIEW       
			, @INSIGHT_LABEL      
			);
	end else begin
		update DETAILVIEWS_RELATIONSHIPS
		   set MODIFIED_USER_ID     = @MODIFIED_USER_ID   
		     , DATE_MODIFIED        =  getdate()          
		     , DATE_MODIFIED_UTC    =  getutcdate()       
		     , DETAIL_NAME          = @DETAIL_NAME        
		     , MODULE_NAME          = @MODULE_NAME        
		     , CONTROL_NAME         = @CONTROL_NAME       
		     , RELATIONSHIP_ORDER   = @RELATIONSHIP_ORDER 
		     , TITLE                = @TITLE              
		     , TABLE_NAME           = @TABLE_NAME         
		     , PRIMARY_FIELD        = @PRIMARY_FIELD      
		     , SORT_FIELD           = @SORT_FIELD         
		     , SORT_DIRECTION       = @SORT_DIRECTION     
		     , RELATIONSHIP_ENABLED = isnull(@RELATIONSHIP_ENABLED, RELATIONSHIP_ENABLED)
		     , INSIGHT_VIEW         = isnull(@INSIGHT_VIEW, INSIGHT_VIEW)
		     , INSIGHT_LABEL        = isnull(@INSIGHT_LABEL, INSIGHT_LABEL)
		 where ID                   = @ID                 ;
	end -- if;
  end
GO
 
Grant Execute on dbo.spDETAILVIEWS_RELATIONSHIPS_Update to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_Update;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/02/2007 Paul.  Add field for data columns. 
-- 10/30/2010 Paul.  Add support for Business Rules Framework. 
-- 11/11/2010 Paul.  Change to Pre Load and Post Load. 
-- 09/20/2012 Paul.  We need a SCRIPT field that is form specific. 
Create Procedure dbo.spDETAILVIEWS_Update
	( @ID                  uniqueidentifier output
	, @MODIFIED_USER_ID    uniqueidentifier
	, @NAME                nvarchar(50)
	, @MODULE_NAME         nvarchar(25)
	, @VIEW_NAME           nvarchar(50)
	, @LABEL_WIDTH         nvarchar(10)
	, @FIELD_WIDTH         nvarchar(10)
	, @DATA_COLUMNS        int
	, @PRE_LOAD_EVENT_ID   uniqueidentifier = null
	, @POST_LOAD_EVENT_ID  uniqueidentifier = null
	, @SCRIPT              nvarchar(max) = null
	)
as
  begin
	if not exists(select * from DETAILVIEWS where NAME = @NAME and DELETED = 0) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into DETAILVIEWS
			( ID                 
			, CREATED_BY         
			, DATE_ENTERED       
			, MODIFIED_USER_ID   
			, DATE_MODIFIED      
			, NAME               
			, MODULE_NAME        
			, VIEW_NAME          
			, LABEL_WIDTH        
			, FIELD_WIDTH        
			, DATA_COLUMNS       
			, PRE_LOAD_EVENT_ID  
			, POST_LOAD_EVENT_ID 
			, SCRIPT             
			)
		values 
			( @ID                 
			, @MODIFIED_USER_ID   
			,  getdate()          
			, @MODIFIED_USER_ID   
			,  getdate()          
			, @NAME               
			, @MODULE_NAME        
			, @VIEW_NAME          
			, @LABEL_WIDTH        
			, @FIELD_WIDTH        
			, @DATA_COLUMNS       
			, @PRE_LOAD_EVENT_ID  
			, @POST_LOAD_EVENT_ID 
			, @SCRIPT             
			);
	end else begin
		update DETAILVIEWS
		   set MODIFIED_USER_ID    = @MODIFIED_USER_ID   
		     , DATE_MODIFIED       =  getdate()          
		     , DATE_MODIFIED_UTC   =  getutcdate()       
		     , NAME                = @NAME               
		     , MODULE_NAME         = @MODULE_NAME        
		     , VIEW_NAME           = @VIEW_NAME          
		     , LABEL_WIDTH         = @LABEL_WIDTH        
		     , FIELD_WIDTH         = @FIELD_WIDTH        
		     , DATA_COLUMNS        = @DATA_COLUMNS       
		     , PRE_LOAD_EVENT_ID   = @PRE_LOAD_EVENT_ID  
		     , POST_LOAD_EVENT_ID  = @POST_LOAD_EVENT_ID 
		     , SCRIPT              = @SCRIPT             
		 where NAME                = @NAME               
		   and DELETED             = 0                   ;
	end -- if;
  end
GO
 
Grant Execute on dbo.spDETAILVIEWS_Update to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_UpdateEvents' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_UpdateEvents;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/11/2010 Paul.  Change to Pre Load and Post Load. 
-- 09/20/2012 Paul.  We need a SCRIPT field that is form specific. 
-- 09/20/2012 Paul.  We need a SCRIPT field that is form specific. 
Create Procedure dbo.spDETAILVIEWS_UpdateEvents
	( @MODIFIED_USER_ID    uniqueidentifier
	, @NAME                nvarchar(50)
	, @PRE_LOAD_EVENT_ID   uniqueidentifier
	, @POST_LOAD_EVENT_ID  uniqueidentifier
	, @SCRIPT              nvarchar(max) = null
	)
as
  begin
	-- BEGIN Oracle Exception
		update DETAILVIEWS
		   set MODIFIED_USER_ID    = @MODIFIED_USER_ID   
		     , DATE_MODIFIED       =  getdate()          
		     , DATE_MODIFIED_UTC   =  getutcdate()       
		     , PRE_LOAD_EVENT_ID   = @PRE_LOAD_EVENT_ID  
		     , POST_LOAD_EVENT_ID  = @POST_LOAD_EVENT_ID 
		     , SCRIPT              = @SCRIPT             
		 where NAME                = @NAME               
		   and DELETED             = 0                   ;
	-- END Oracle Exception
  end
GO
 
Grant Execute on dbo.spDETAILVIEWS_UpdateEvents to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDYNAMIC_BUTTONS_CopyDefault' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDYNAMIC_BUTTONS_CopyDefault;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/13/2008 Paul.  Manually insert the ID to ease migration to Oracle. 
-- 03/14/2014 Paul.  Allow hidden buttons to be created. 
Create Procedure dbo.spDYNAMIC_BUTTONS_CopyDefault
	( @SOURCE_VIEW_NAME    nvarchar(50)
	, @NEW_VIEW_NAME       nvarchar(50)
	, @MODULE_NAME         nvarchar(25)
	)
as
  begin
	set nocount on
	
	if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = @NEW_VIEW_NAME and DELETED = 0) begin -- then
		insert into DYNAMIC_BUTTONS
			( ID
			, DATE_ENTERED      
			, DATE_MODIFIED     
			, VIEW_NAME         
			, CONTROL_INDEX     
			, CONTROL_TYPE      
			, DEFAULT_VIEW      
			, MODULE_NAME       
			, MODULE_ACCESS_TYPE
			, TARGET_NAME       
			, TARGET_ACCESS_TYPE
			, MOBILE_ONLY       
			, ADMIN_ONLY        
			, EXCLUDE_MOBILE    
			, HIDDEN            
			, CONTROL_TEXT      
			, CONTROL_TOOLTIP   
			, CONTROL_ACCESSKEY 
			, CONTROL_CSSCLASS  
			, TEXT_FIELD        
			, ARGUMENT_FIELD    
			, COMMAND_NAME      
			, URL_FORMAT        
			, URL_TARGET        
			, ONCLICK_SCRIPT    
			)
		select	   newid()
			,  getdate()
			,  getdate()
			, @NEW_VIEW_NAME
			,  CONTROL_INDEX     
			,  CONTROL_TYPE      
			,  DEFAULT_VIEW      
			, @MODULE_NAME       
			,  MODULE_ACCESS_TYPE
			,  TARGET_NAME       
			,  TARGET_ACCESS_TYPE
			,  MOBILE_ONLY       
			,  ADMIN_ONLY        
			,  EXCLUDE_MOBILE    
			,  HIDDEN            
			,  CONTROL_TEXT      
			,  CONTROL_TOOLTIP   
			,  CONTROL_ACCESSKEY 
			,  CONTROL_CSSCLASS  
			,  TEXT_FIELD        
			,  ARGUMENT_FIELD    
			,  COMMAND_NAME      
			,  URL_FORMAT        
			,  URL_TARGET        
			,  ONCLICK_SCRIPT    
		  from DYNAMIC_BUTTONS
		 where VIEW_NAME = @SOURCE_VIEW_NAME
		   and DELETED   = 0;
	end -- if;
  end
GO

Grant Execute on dbo.spDYNAMIC_BUTTONS_CopyDefault to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDYNAMIC_BUTTONS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDYNAMIC_BUTTONS_Delete;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDYNAMIC_BUTTONS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	update DYNAMIC_BUTTONS
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID = @ID;
  end
GO

Grant Execute on dbo.spDYNAMIC_BUTTONS_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDYNAMIC_BUTTONS_ORDER_MoveDown' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDYNAMIC_BUTTONS_ORDER_MoveDown;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDYNAMIC_BUTTONS_ORDER_MoveDown
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID            uniqueidentifier;
	declare @VIEW_NAME          nvarchar(50);
	declare @CONTROL_INDEX      int;
	if exists(select * from DYNAMIC_BUTTONS where ID = @ID and DELETED = 0) begin -- then
		-- BEGIN Oracle Exception
			select @VIEW_NAME          = VIEW_NAME
			     , @CONTROL_INDEX      = CONTROL_INDEX
			  from DYNAMIC_BUTTONS
			 where ID                  = @ID
			   and DELETED             = 0;
		-- END Oracle Exception
		
		-- Moving down actually means incrementing the order value. 
		-- BEGIN Oracle Exception
			select @SWAP_ID           = ID
			  from DYNAMIC_BUTTONS
			 where VIEW_NAME          = @VIEW_NAME
			   and CONTROL_INDEX     = @CONTROL_INDEX + 1
			   and DELETED            = 0;
		-- END Oracle Exception
		if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 begin -- then
			-- BEGIN Oracle Exception
				update DYNAMIC_BUTTONS
				   set CONTROL_INDEX      = CONTROL_INDEX + 1
				     , DATE_MODIFIED      = getdate()
				     , DATE_MODIFIED_UTC= getutcdate()
				     , MODIFIED_USER_ID   = @MODIFIED_USER_ID
				 where ID                 = @ID;
			-- END Oracle Exception
			-- BEGIN Oracle Exception
				update DYNAMIC_BUTTONS
				   set CONTROL_INDEX      = CONTROL_INDEX - 1
				     , DATE_MODIFIED      = getdate()
				     , DATE_MODIFIED_UTC= getutcdate()
				     , MODIFIED_USER_ID   = @MODIFIED_USER_ID
				 where ID                 = @SWAP_ID;
			-- END Oracle Exception
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spDYNAMIC_BUTTONS_ORDER_MoveDown to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDYNAMIC_BUTTONS_ORDER_MoveItem' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDYNAMIC_BUTTONS_ORDER_MoveItem;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDYNAMIC_BUTTONS_ORDER_MoveItem
	( @MODIFIED_USER_ID uniqueidentifier
	, @VIEW_NAME        nvarchar(50)
	, @OLD_INDEX        int
	, @NEW_INDEX        int
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID    uniqueidentifier;
	-- BEGIN Oracle Exception
		select @SWAP_ID   = ID
		  from DYNAMIC_BUTTONS
		 where VIEW_NAME     = @VIEW_NAME
		   and CONTROL_INDEX = @OLD_INDEX
		   and DELETED       = 0;
	-- END Oracle Exception

	if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 and (@OLD_INDEX > @NEW_INDEX or @OLD_INDEX < @NEW_INDEX) begin -- then
		if @OLD_INDEX < @NEW_INDEX begin -- then
			update DYNAMIC_BUTTONS
			   set CONTROL_INDEX     = CONTROL_INDEX - 1
			     , DATE_MODIFIED     = getdate()
			     , DATE_MODIFIED_UTC = getutcdate()
			     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
			 where VIEW_NAME         = @VIEW_NAME
			   and CONTROL_INDEX    >= @OLD_INDEX
			   and CONTROL_INDEX    <= @NEW_INDEX
			   and DELETED           = 0;
		end else if @OLD_INDEX > @NEW_INDEX begin -- then
			update DYNAMIC_BUTTONS
			   set CONTROL_INDEX     = CONTROL_INDEX + 1
			     , DATE_MODIFIED     = getdate()
			     , DATE_MODIFIED_UTC = getutcdate()
			     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
			 where VIEW_NAME         = @VIEW_NAME
			   and CONTROL_INDEX    >= @NEW_INDEX
			   and CONTROL_INDEX    <= @OLD_INDEX
			   and DELETED           = 0;
		end -- if;
		update DYNAMIC_BUTTONS
		   set CONTROL_INDEX     = @NEW_INDEX
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
		 where ID                = @SWAP_ID
		   and DELETED           = 0;
	end -- if;
  end
GO

Grant Execute on dbo.spDYNAMIC_BUTTONS_ORDER_MoveItem to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDYNAMIC_BUTTONS_ORDER_MoveUp' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDYNAMIC_BUTTONS_ORDER_MoveUp;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDYNAMIC_BUTTONS_ORDER_MoveUp
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID            uniqueidentifier;
	declare @VIEW_NAME          nvarchar(50);
	declare @CONTROL_INDEX      int;
	if exists(select * from DYNAMIC_BUTTONS where ID = @ID and DELETED = 0) begin -- then
		-- BEGIN Oracle Exception
			select @VIEW_NAME          = VIEW_NAME
			     , @CONTROL_INDEX      = CONTROL_INDEX
			  from DYNAMIC_BUTTONS
			 where ID                  = @ID
			   and DELETED             = 0;
		-- END Oracle Exception

		-- 12/13/2007 Paul.  CONTROL_INDEX 0 is reserved.  Don't allow decrease below 1. 
		if @CONTROL_INDEX is not null begin -- then
			-- BEGIN Oracle Exception
				select @SWAP_ID           = ID
				  from DYNAMIC_BUTTONS
				 where VIEW_NAME          = @VIEW_NAME
				   and CONTROL_INDEX      = @CONTROL_INDEX - 1
				   and DELETED            = 0;
			-- END Oracle Exception

			-- Moving up actually means decrementing the order value. 
			if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 begin -- then
				-- BEGIN Oracle Exception
					update DYNAMIC_BUTTONS
					   set CONTROL_INDEX      = CONTROL_INDEX - 1
					     , DATE_MODIFIED      = getdate()
					     , DATE_MODIFIED_UTC= getutcdate()
					     , MODIFIED_USER_ID   = @MODIFIED_USER_ID
					 where ID                 = @ID;
				-- END Oracle Exception
				-- BEGIN Oracle Exception
					update DYNAMIC_BUTTONS
					   set CONTROL_INDEX      = CONTROL_INDEX + 1
					     , DATE_MODIFIED      = getdate()
					     , DATE_MODIFIED_UTC= getutcdate()
					     , MODIFIED_USER_ID   = @MODIFIED_USER_ID
					 where ID                 = @SWAP_ID;
				-- END Oracle Exception
			end -- if;
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spDYNAMIC_BUTTONS_ORDER_MoveUp to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDYNAMIC_BUTTONS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDYNAMIC_BUTTONS_Update;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/25/2008 Paul.  Don't update CONTROL_INDEX.  Only use it during insert. 
-- 07/28/2010 Paul.  We need a flag to exclude a button from a mobile device. 
-- 11/10/2010 Paul.  Control index of -1 means to put at the end. 
-- 03/14/2014 Paul.  Allow hidden buttons to be created. 
-- 08/16/2017 Paul.  Increase the size of the ONCLICK_SCRIPT so that we can add a javascript info column. 
-- 08/16/2017 Paul.  Add ability to apply a business rule to a button. 
Create Procedure dbo.spDYNAMIC_BUTTONS_Update
	( @ID                  uniqueidentifier output
	, @MODIFIED_USER_ID    uniqueidentifier
	, @VIEW_NAME           nvarchar(50)
	, @CONTROL_INDEX       int
	, @CONTROL_TYPE        nvarchar(25)
	, @MODULE_NAME         nvarchar(25)
	, @MODULE_ACCESS_TYPE  nvarchar(100)
	, @TARGET_NAME         nvarchar(25)
	, @TARGET_ACCESS_TYPE  nvarchar(100)
	, @CONTROL_TEXT        nvarchar(150)
	, @CONTROL_TOOLTIP     nvarchar(150)
	, @CONTROL_ACCESSKEY   nvarchar(150)
	, @CONTROL_CSSCLASS    nvarchar(50)
	, @TEXT_FIELD          nvarchar(200)
	, @ARGUMENT_FIELD      nvarchar(200)
	, @COMMAND_NAME        nvarchar(50)
	, @URL_FORMAT          nvarchar(255)
	, @URL_TARGET          nvarchar(20)
	, @ONCLICK_SCRIPT      nvarchar(max)
	, @MOBILE_ONLY         bit
	, @ADMIN_ONLY          bit
	, @EXCLUDE_MOBILE      bit = null
	, @HIDDEN              bit = null
	, @BUSINESS_RULE       nvarchar(max) = null
	, @BUSINESS_SCRIPT     nvarchar(max) = null
	)
as
  begin
	set nocount on
	
	declare @TEMP_CONTROL_INDEX int;	
	set @TEMP_CONTROL_INDEX = @CONTROL_INDEX;
	if @TEMP_CONTROL_INDEX is null or @TEMP_CONTROL_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_CONTROL_INDEX = isnull(max(CONTROL_INDEX), -1) + 1
			  from DYNAMIC_BUTTONS
			 where VIEW_NAME    = @VIEW_NAME
			   and DELETED      = 0         
			   and DEFAULT_VIEW = 0         ;
		-- END Oracle Exception
	end -- if;
	if not exists(select * from DYNAMIC_BUTTONS where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		-- 03/18/2008 Paul.  Prevent index from overlapping. 
		if exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = @VIEW_NAME and CONTROL_INDEX = @TEMP_CONTROL_INDEX and DEFAULT_VIEW = 0 and DELETED = 0) begin -- then
			update DYNAMIC_BUTTONS
			   set CONTROL_INDEX  = CONTROL_INDEX + 1
			 where VIEW_NAME      = @VIEW_NAME
			   and CONTROL_INDEX >= @TEMP_CONTROL_INDEX
			   and DEFAULT_VIEW   = 0
			   and DELETED        = 0;
		end -- if;
		insert into DYNAMIC_BUTTONS
			( ID                 
			, CREATED_BY         
			, DATE_ENTERED       
			, MODIFIED_USER_ID   
			, DATE_MODIFIED      
			, VIEW_NAME          
			, CONTROL_INDEX      
			, CONTROL_TYPE       
			, MODULE_NAME        
			, MODULE_ACCESS_TYPE 
			, TARGET_NAME        
			, TARGET_ACCESS_TYPE 
			, MOBILE_ONLY        
			, ADMIN_ONLY         
			, EXCLUDE_MOBILE     
			, HIDDEN             
			, CONTROL_TEXT       
			, CONTROL_TOOLTIP    
			, CONTROL_ACCESSKEY  
			, CONTROL_CSSCLASS   
			, TEXT_FIELD         
			, ARGUMENT_FIELD     
			, COMMAND_NAME       
			, URL_FORMAT         
			, URL_TARGET         
			, ONCLICK_SCRIPT     
			, BUSINESS_RULE      
			, BUSINESS_SCRIPT    
			)
		values 	( @ID                 
			, @MODIFIED_USER_ID   
			,  getdate()          
			, @MODIFIED_USER_ID   
			,  getdate()          
			, @VIEW_NAME          
			, @TEMP_CONTROL_INDEX 
			, @CONTROL_TYPE       
			, @MODULE_NAME        
			, @MODULE_ACCESS_TYPE 
			, @TARGET_NAME        
			, @TARGET_ACCESS_TYPE 
			, @MOBILE_ONLY        
			, @ADMIN_ONLY         
			, @EXCLUDE_MOBILE     
			, @HIDDEN             
			, @CONTROL_TEXT       
			, @CONTROL_TOOLTIP    
			, @CONTROL_ACCESSKEY  
			, @CONTROL_CSSCLASS   
			, @TEXT_FIELD         
			, @ARGUMENT_FIELD     
			, @COMMAND_NAME       
			, @URL_FORMAT         
			, @URL_TARGET         
			, @ONCLICK_SCRIPT     
			, @BUSINESS_RULE      
			, @BUSINESS_SCRIPT    
			);
	end else begin
		update DYNAMIC_BUTTONS
		   set MODIFIED_USER_ID    = @MODIFIED_USER_ID   
		     , DATE_MODIFIED       =  getdate()          
		     , DATE_MODIFIED_UTC   =  getutcdate()       
		     , VIEW_NAME           = @VIEW_NAME          
		     , CONTROL_TYPE        = @CONTROL_TYPE       
		     , MODULE_NAME         = @MODULE_NAME        
		     , MODULE_ACCESS_TYPE  = @MODULE_ACCESS_TYPE 
		     , TARGET_NAME         = @TARGET_NAME        
		     , TARGET_ACCESS_TYPE  = @TARGET_ACCESS_TYPE 
		     , MOBILE_ONLY         = @MOBILE_ONLY        
		     , ADMIN_ONLY          = @ADMIN_ONLY         
		     , EXCLUDE_MOBILE      = @EXCLUDE_MOBILE     
		     , HIDDEN              = @HIDDEN             
		     , CONTROL_TEXT        = @CONTROL_TEXT       
		     , CONTROL_TOOLTIP     = @CONTROL_TOOLTIP    
		     , CONTROL_ACCESSKEY   = @CONTROL_ACCESSKEY  
		     , CONTROL_CSSCLASS    = @CONTROL_CSSCLASS   
		     , TEXT_FIELD          = @TEXT_FIELD         
		     , ARGUMENT_FIELD      = @ARGUMENT_FIELD     
		     , COMMAND_NAME        = @COMMAND_NAME       
		     , URL_FORMAT          = @URL_FORMAT         
		     , URL_TARGET          = @URL_TARGET         
		     , ONCLICK_SCRIPT      = @ONCLICK_SCRIPT     
		     , BUSINESS_RULE       = @BUSINESS_RULE      
		     , BUSINESS_SCRIPT     = @BUSINESS_SCRIPT    
		 where ID                  = @ID                 ;
	end -- if;
  end
GO

Grant Execute on dbo.spDYNAMIC_BUTTONS_Update to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_Delete;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	update EDITVIEWS
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID = @ID;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_Delete to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_Delete;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_FIELDS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	update EDITVIEWS_FIELDS
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID = @ID;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_Delete to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsValidator' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsValidator;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 02/21/2017 Paul.  Allow a field to be added to the end using an index of -1. 
-- 03/19/2020 Paul.  The FIELD_INDEX is not needed, so remove from update statement. 
Create Procedure dbo.spEDITVIEWS_FIELDS_InsValidator
	( @EDIT_NAME                   nvarchar(50)
	, @FIELD_INDEX                 int
	, @FIELD_VALIDATOR_NAME        nvarchar(50)
	, @DATA_FIELD                  nvarchar(100)
	, @FIELD_VALIDATOR_MESSAGE     nvarchar(150)
	)
as
  begin
	set nocount on
	
	declare @FIELD_VALIDATOR_ID uniqueidentifier;
	-- BEGIN Oracle Exception
		select @FIELD_VALIDATOR_ID = ID
		  from FIELD_VALIDATORS
		 where NAME    = @FIELD_VALIDATOR_NAME
		   and DELETED = 0;
	-- END Oracle Exception
	
	if dbo.fnIsEmptyGuid(@FIELD_VALIDATOR_ID) = 1 begin -- then
		raiserror(N'spEDITVIEWS_FIELDS_InsValidator: Could not find validator %s.', 16, 1, @FIELD_VALIDATOR_NAME);
	end else begin
		update EDITVIEWS_FIELDS
		   set DATE_MODIFIED               =  getdate()        
		     , DATE_MODIFIED_UTC           =  getutcdate()     
		     , FIELD_VALIDATOR_ID          = @FIELD_VALIDATOR_ID
		     , FIELD_VALIDATOR_MESSAGE     = @FIELD_VALIDATOR_MESSAGE
		 where EDIT_NAME                   = @EDIT_NAME
		   and DATA_FIELD                  = @DATA_FIELD
		   and DELETED                     = 0
		   and DEFAULT_VIEW                = 0
		   and FIELD_VALIDATOR_ID is null;
	end -- if;
  end
GO

Grant Execute on dbo.spEDITVIEWS_FIELDS_InsValidator to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_Update;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the DATA_LABEL to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 11/22/2006 Paul.  Prevent index from overlapping. This is needed to simplify inserting the TEAM field. 
-- 05/17/2009 Paul.  Add support for a generic module popup. 
-- 05/17/2009 Paul.  PostgreSQL does not allow modifying input parameters.  Use a local temp variable. 
-- 06/12/2009 Paul.  Add TOOL_TIP for help hover.
-- 08/26/2009 Paul.  Add support for TeamSelect, which has very few optional parameters. 
-- 09/12/2009 Paul.  Add FIELD_VALIDATOR_ID it can be edited with the DynamicLayout editor. 
-- 01/19/2010 Paul.  Add support for new DATA_FORMAT field. 
-- 09/13/2010 Paul.  Add relationship fields. 
-- 10/09/2010 Paul.  Add PARENT_FIELD so that we can establish dependent listboxes. 
-- 09/16/2012 Paul.  Increase ONCLICK_SCRIPT to nvarchar(max). 
-- 11/21/2021 Paul.  React Client allows Module Type for ChangeButton. 
Create Procedure dbo.spEDITVIEWS_FIELDS_Update
	( @ID                      uniqueidentifier output
	, @MODIFIED_USER_ID        uniqueidentifier
	, @EDIT_NAME               nvarchar( 50)
	, @FIELD_INDEX             int
	, @FIELD_TYPE              nvarchar( 25)
	, @DATA_LABEL              nvarchar(150)
	, @DATA_FIELD              nvarchar(100)
	, @DISPLAY_FIELD           nvarchar(100)
	, @CACHE_NAME              nvarchar( 50)
	, @DATA_REQUIRED           bit
	, @UI_REQUIRED             bit
	, @ONCLICK_SCRIPT          nvarchar(max)
	, @FORMAT_SCRIPT           nvarchar(255)
	, @FORMAT_TAB_INDEX        int
	, @FORMAT_MAX_LENGTH       int
	, @FORMAT_SIZE             int
	, @FORMAT_ROWS             int
	, @FORMAT_COLUMNS          int
	, @COLSPAN                 int
	, @ROWSPAN                 int
	, @MODULE_TYPE             nvarchar( 25) = null
	, @TOOL_TIP                nvarchar(150) = null
	, @FIELD_VALIDATOR_ID      uniqueidentifier = null
	, @FIELD_VALIDATOR_MESSAGE nvarchar(150) = null
	, @DATA_FORMAT             nvarchar(100) = null
	, @RELATED_SOURCE_MODULE_NAME   nvarchar(50) = null
	, @RELATED_SOURCE_VIEW_NAME     nvarchar(50) = null
	, @RELATED_SOURCE_ID_FIELD      nvarchar(30) = null
	, @RELATED_SOURCE_NAME_FIELD    nvarchar(100) = null
	, @RELATED_VIEW_NAME            nvarchar(50) = null
	, @RELATED_ID_FIELD             nvarchar(30) = null
	, @RELATED_NAME_FIELD           nvarchar(100) = null
	, @RELATED_JOIN_FIELD           nvarchar(30) = null
	, @PARENT_FIELD                 nvarchar(30) = null
	)
as
  begin
	-- 05/17/2009 Paul.  PostgreSQL does not allow modifying input parameters.  Use a local temp variable. 
	declare @TEMP_DATA_LABEL              nvarchar(150);
	declare @TEMP_DATA_FIELD              nvarchar(100);
	declare @TEMP_DISPLAY_FIELD           nvarchar(100);
	declare @TEMP_CACHE_NAME              nvarchar( 50);
	declare @TEMP_DATA_REQUIRED           bit;
	declare @TEMP_UI_REQUIRED             bit;
	-- 10/01/2013 Paul.  ONCLICK_SCRIPT was increased to max. 
	declare @TEMP_ONCLICK_SCRIPT          nvarchar(max);
	declare @TEMP_FORMAT_SCRIPT           nvarchar(255);
	declare @TEMP_FORMAT_TAB_INDEX        int;
	declare @TEMP_FORMAT_MAX_LENGTH       int;
	declare @TEMP_FORMAT_SIZE             int;
	declare @TEMP_FORMAT_ROWS             int;
	declare @TEMP_FORMAT_COLUMNS          int;
	declare @TEMP_COLSPAN                 int;
	declare @TEMP_ROWSPAN                 int;
	declare @TEMP_MODULE_TYPE             nvarchar( 25);
	declare @TEMP_TOOL_TIP                nvarchar(150);
	declare @TEMP_FIELD_VALIDATOR_ID      uniqueidentifier;
	declare @TEMP_FIELD_VALIDATOR_MESSAGE nvarchar(150);
	declare @TEMP_DATA_FORMAT             nvarchar(100);
	declare @TEMP_RELATED_SOURCE_MODULE_NAME   nvarchar(50);
	declare @TEMP_RELATED_SOURCE_VIEW_NAME     nvarchar(50);
	declare @TEMP_RELATED_SOURCE_ID_FIELD      nvarchar(30);
	declare @TEMP_RELATED_SOURCE_NAME_FIELD    nvarchar(100);
	declare @TEMP_RELATED_VIEW_NAME            nvarchar(50);
	declare @TEMP_RELATED_ID_FIELD             nvarchar(30);
	declare @TEMP_RELATED_NAME_FIELD           nvarchar(100);
	declare @TEMP_RELATED_JOIN_FIELD           nvarchar(30);
	declare @TEMP_PARENT_FIELD                 nvarchar(30);

	set @TEMP_DATA_LABEL              = @DATA_LABEL             ;
	set @TEMP_DATA_FIELD              = @DATA_FIELD             ;
	set @TEMP_DISPLAY_FIELD           = @DISPLAY_FIELD          ;
	set @TEMP_CACHE_NAME              = @CACHE_NAME             ;
	set @TEMP_DATA_REQUIRED           = @DATA_REQUIRED          ;
	set @TEMP_UI_REQUIRED             = @UI_REQUIRED            ;
	set @TEMP_ONCLICK_SCRIPT          = @ONCLICK_SCRIPT         ;
	set @TEMP_FORMAT_SCRIPT           = @FORMAT_SCRIPT          ;
	set @TEMP_FORMAT_TAB_INDEX        = @FORMAT_TAB_INDEX       ;
	set @TEMP_FORMAT_MAX_LENGTH       = @FORMAT_MAX_LENGTH      ;
	set @TEMP_FORMAT_SIZE             = @FORMAT_SIZE            ;
	set @TEMP_FORMAT_ROWS             = @FORMAT_ROWS            ;
	set @TEMP_FORMAT_COLUMNS          = @FORMAT_COLUMNS         ;
	set @TEMP_COLSPAN                 = @COLSPAN                ;
	set @TEMP_ROWSPAN                 = @ROWSPAN                ;
	set @TEMP_MODULE_TYPE             = @MODULE_TYPE            ;
	-- 01/24/2010 Paul.  The tool tip was not being saved to the temp field. 
	set @TEMP_TOOL_TIP                = @TOOL_TIP               ;
	set @TEMP_FIELD_VALIDATOR_ID      = @FIELD_VALIDATOR_ID     ;
	set @TEMP_FIELD_VALIDATOR_MESSAGE = @FIELD_VALIDATOR_MESSAGE;
	set @TEMP_DATA_FORMAT             = @DATA_FORMAT            ;
	set @TEMP_RELATED_SOURCE_MODULE_NAME   = @RELATED_SOURCE_MODULE_NAME  ;
	set @TEMP_RELATED_SOURCE_VIEW_NAME     = @RELATED_SOURCE_VIEW_NAME    ;
	set @TEMP_RELATED_SOURCE_ID_FIELD      = @RELATED_SOURCE_ID_FIELD     ;
	set @TEMP_RELATED_SOURCE_NAME_FIELD    = @RELATED_SOURCE_NAME_FIELD   ;
	set @TEMP_RELATED_VIEW_NAME            = @RELATED_VIEW_NAME           ;
	set @TEMP_RELATED_ID_FIELD             = @RELATED_ID_FIELD            ;
	set @TEMP_RELATED_NAME_FIELD           = @RELATED_NAME_FIELD          ;
	set @TEMP_RELATED_JOIN_FIELD           = @RELATED_JOIN_FIELD          ;
	set @TEMP_PARENT_FIELD                 = @PARENT_FIELD                ;

	-- 03/19/2009 Paul.  We need to clear fields when using Blank. 
	if @FIELD_TYPE = N'Blank' begin -- then
		set @TEMP_DATA_LABEL              = null;
		set @TEMP_DATA_FIELD              = null;
		set @TEMP_DISPLAY_FIELD           = null;
		set @TEMP_CACHE_NAME              = null;
		set @TEMP_DATA_REQUIRED           = null;
		set @TEMP_UI_REQUIRED             = null;
		set @TEMP_ONCLICK_SCRIPT          = null;
		set @TEMP_FORMAT_SCRIPT           = null;
		set @TEMP_FORMAT_TAB_INDEX        = null;
		set @TEMP_FORMAT_MAX_LENGTH       = null;
		set @TEMP_FORMAT_SIZE             = null;
		set @TEMP_FORMAT_ROWS             = null;
		set @TEMP_FORMAT_COLUMNS          = null;
		set @TEMP_ROWSPAN                 = null;
		set @TEMP_TOOL_TIP                = null;
		set @TEMP_FIELD_VALIDATOR_ID      = null;
		set @TEMP_FIELD_VALIDATOR_MESSAGE = null;
		set @TEMP_DATA_FORMAT             = null;
		set @TEMP_RELATED_SOURCE_MODULE_NAME   = null;
		set @TEMP_RELATED_SOURCE_VIEW_NAME     = null;
		set @TEMP_RELATED_SOURCE_ID_FIELD      = null;
		set @TEMP_RELATED_SOURCE_NAME_FIELD    = null;
		set @TEMP_RELATED_VIEW_NAME            = null;
		set @TEMP_RELATED_ID_FIELD             = null;
		set @TEMP_RELATED_NAME_FIELD           = null;
		set @TEMP_RELATED_JOIN_FIELD           = null;
		set @TEMP_PARENT_FIELD                 = null;
	end -- if;
	-- 11/24/2011 Sabarish.  Module Type was getting cleared for ModuleAutoComplete and Label. 
	-- 11/21/2021 Paul.  React Client allows Module Type for ChangeButton. 
	if @FIELD_TYPE <> N'ModulePopup' and @FIELD_TYPE <> N'ModuleAutoComplete' and @FIELD_TYPE <> N'Label' and @FIELD_TYPE <> N'ChangeButton' begin -- then
		set @TEMP_MODULE_TYPE        = null;
	end -- if;
	if @FIELD_TYPE = N'TeamSelect' begin -- then
		set @TEMP_DATA_LABEL         = N'.LBL_TEAM_SET_NAME';
		set @TEMP_DATA_FIELD         = N'TEAM_SET_NAME';
		set @TEMP_DISPLAY_FIELD      = null;
		set @TEMP_ONCLICK_SCRIPT     = null;
	end -- if;
	if @FIELD_TYPE <> N'TextBox' begin -- then
		set @TEMP_FIELD_VALIDATOR_ID      = null;
		set @TEMP_FIELD_VALIDATOR_MESSAGE = null;
	end -- if;

	-- 01/09/2006 Paul.  Can't convert EDIT_NAME and FIELD_INDEX into an ID
	-- as it would prevent the Layout Manager from working properly. 
	if not exists(select * from EDITVIEWS_FIELDS where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		-- 11/22/2006 Paul.  Prevent index from overlapping. 
		if exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = @EDIT_NAME and FIELD_INDEX = @FIELD_INDEX and DEFAULT_VIEW = 0 and DELETED = 0) begin -- then
			update EDITVIEWS_FIELDS
			   set FIELD_INDEX   = FIELD_INDEX + 1
			 where EDIT_NAME     = @EDIT_NAME
			   and FIELD_INDEX  >= @FIELD_INDEX
			   and DEFAULT_VIEW  = 0
			   and DELETED       = 0;
		end -- if;
		insert into EDITVIEWS_FIELDS
			( ID                     
			, CREATED_BY             
			, DATE_ENTERED           
			, MODIFIED_USER_ID       
			, DATE_MODIFIED          
			, EDIT_NAME              
			, FIELD_INDEX            
			, FIELD_TYPE             
			, DATA_LABEL             
			, DATA_FIELD             
			, DISPLAY_FIELD          
			, CACHE_NAME             
			, DATA_REQUIRED          
			, UI_REQUIRED            
			, ONCLICK_SCRIPT         
			, FORMAT_SCRIPT          
			, FORMAT_TAB_INDEX       
			, FORMAT_MAX_LENGTH      
			, FORMAT_SIZE            
			, FORMAT_ROWS            
			, FORMAT_COLUMNS         
			, COLSPAN                
			, ROWSPAN                
			, MODULE_TYPE            
			, TOOL_TIP               
			, FIELD_VALIDATOR_ID     
			, FIELD_VALIDATOR_MESSAGE
			, DATA_FORMAT            
			, RELATED_SOURCE_MODULE_NAME  
			, RELATED_SOURCE_VIEW_NAME    
			, RELATED_SOURCE_ID_FIELD     
			, RELATED_SOURCE_NAME_FIELD   
			, RELATED_VIEW_NAME           
			, RELATED_ID_FIELD            
			, RELATED_NAME_FIELD          
			, RELATED_JOIN_FIELD          
			, PARENT_FIELD                
			)
		values 
			( @ID                          
			, @MODIFIED_USER_ID            
			,  getdate()                   
			, @MODIFIED_USER_ID            
			,  getdate()                   
			, @EDIT_NAME                   
			, @FIELD_INDEX                 
			, @FIELD_TYPE                  
			, @TEMP_DATA_LABEL             
			, @TEMP_DATA_FIELD             
			, @TEMP_DISPLAY_FIELD          
			, @TEMP_CACHE_NAME             
			, @TEMP_DATA_REQUIRED          
			, @TEMP_UI_REQUIRED            
			, @TEMP_ONCLICK_SCRIPT         
			, @TEMP_FORMAT_SCRIPT          
			, @TEMP_FORMAT_TAB_INDEX       
			, @TEMP_FORMAT_MAX_LENGTH      
			, @TEMP_FORMAT_SIZE            
			, @TEMP_FORMAT_ROWS            
			, @TEMP_FORMAT_COLUMNS         
			, @TEMP_COLSPAN                
			, @TEMP_ROWSPAN                
			, @TEMP_MODULE_TYPE            
			, @TEMP_TOOL_TIP               
			, @TEMP_FIELD_VALIDATOR_ID     
			, @TEMP_FIELD_VALIDATOR_MESSAGE
			, @TEMP_DATA_FORMAT            
			, @TEMP_RELATED_SOURCE_MODULE_NAME  
			, @TEMP_RELATED_SOURCE_VIEW_NAME    
			, @TEMP_RELATED_SOURCE_ID_FIELD     
			, @TEMP_RELATED_SOURCE_NAME_FIELD   
			, @TEMP_RELATED_VIEW_NAME           
			, @TEMP_RELATED_ID_FIELD            
			, @TEMP_RELATED_NAME_FIELD          
			, @TEMP_RELATED_JOIN_FIELD          
			, @TEMP_PARENT_FIELD                
			);
	end else begin
		update EDITVIEWS_FIELDS
		   set MODIFIED_USER_ID        = @MODIFIED_USER_ID            
		     , DATE_MODIFIED           =  getdate()                   
		     , DATE_MODIFIED_UTC       =  getutcdate()                
		     , EDIT_NAME               = @EDIT_NAME                   
		     , FIELD_INDEX             = @FIELD_INDEX                 
		     , FIELD_TYPE              = @FIELD_TYPE                  
		     , DATA_LABEL              = @TEMP_DATA_LABEL             
		     , DATA_FIELD              = @TEMP_DATA_FIELD             
		     , DISPLAY_FIELD           = @TEMP_DISPLAY_FIELD          
		     , CACHE_NAME              = @TEMP_CACHE_NAME             
		     , DATA_REQUIRED           = @TEMP_DATA_REQUIRED          
		     , UI_REQUIRED             = @TEMP_UI_REQUIRED            
		     , ONCLICK_SCRIPT          = @TEMP_ONCLICK_SCRIPT         
		     , FORMAT_SCRIPT           = @TEMP_FORMAT_SCRIPT          
		     , FORMAT_TAB_INDEX        = @TEMP_FORMAT_TAB_INDEX       
		     , FORMAT_MAX_LENGTH       = @TEMP_FORMAT_MAX_LENGTH      
		     , FORMAT_SIZE             = @TEMP_FORMAT_SIZE            
		     , FORMAT_ROWS             = @TEMP_FORMAT_ROWS            
		     , FORMAT_COLUMNS          = @TEMP_FORMAT_COLUMNS         
		     , COLSPAN                 = @TEMP_COLSPAN                
		     , ROWSPAN                 = @TEMP_ROWSPAN                
		     , MODULE_TYPE             = @TEMP_MODULE_TYPE            
		     , TOOL_TIP                = @TEMP_TOOL_TIP               
		     , FIELD_VALIDATOR_ID      = @TEMP_FIELD_VALIDATOR_ID     
		     , FIELD_VALIDATOR_MESSAGE = @TEMP_FIELD_VALIDATOR_MESSAGE
		     , DATA_FORMAT             = @TEMP_DATA_FORMAT            
		     , RELATED_SOURCE_MODULE_NAME   = @TEMP_RELATED_SOURCE_MODULE_NAME  
		     , RELATED_SOURCE_VIEW_NAME     = @TEMP_RELATED_SOURCE_VIEW_NAME    
		     , RELATED_SOURCE_ID_FIELD      = @TEMP_RELATED_SOURCE_ID_FIELD     
		     , RELATED_SOURCE_NAME_FIELD    = @TEMP_RELATED_SOURCE_NAME_FIELD   
		     , RELATED_VIEW_NAME            = @TEMP_RELATED_VIEW_NAME           
		     , RELATED_ID_FIELD             = @TEMP_RELATED_ID_FIELD            
		     , RELATED_NAME_FIELD           = @TEMP_RELATED_NAME_FIELD          
		     , RELATED_JOIN_FIELD           = @TEMP_RELATED_JOIN_FIELD          
		     , PARENT_FIELD                 = @TEMP_PARENT_FIELD                
		 where ID                 = @ID                ;
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_Update to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_UpdateDataFormat' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_UpdateDataFormat;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_FIELDS_UpdateDataFormat
	( @MODIFIED_USER_ID            uniqueidentifier
	, @EDIT_NAME                   nvarchar(50)
	, @DATA_FIELD                  nvarchar(100)
	, @DATA_FORMAT                 nvarchar(100)
	)
as
  begin
	update EDITVIEWS_FIELDS
	   set MODIFIED_USER_ID  = @MODIFIED_USER_ID
	     , DATE_MODIFIED     =  getdate()
	     , DATE_MODIFIED_UTC =  getutcdate()
	     , DATA_FORMAT       = @DATA_FORMAT
	 where EDIT_NAME         = @EDIT_NAME
	   and DATA_FIELD        = @DATA_FIELD
	   and DELETED           = 0            ;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_UpdateDataFormat to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_UpdateOnClick' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_UpdateOnClick;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/16/2012 Paul.  Increase ONCLICK_SCRIPT to nvarchar(max). 
Create Procedure dbo.spEDITVIEWS_FIELDS_UpdateOnClick
	( @MODIFIED_USER_ID            uniqueidentifier
	, @EDIT_NAME                   nvarchar(50)
	, @DATA_FIELD                  nvarchar(100)
	, @ONCLICK_SCRIPT              nvarchar(max)
	)
as
  begin
	update EDITVIEWS_FIELDS
	   set MODIFIED_USER_ID  = @MODIFIED_USER_ID
	     , DATE_MODIFIED     =  getdate()
	     , DATE_MODIFIED_UTC =  getutcdate()
	     , ONCLICK_SCRIPT    = @ONCLICK_SCRIPT
	 where EDIT_NAME         = @EDIT_NAME
	   and DATA_FIELD        = @DATA_FIELD
	   and DELETED           = 0            ;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_UpdateOnClick to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_UpdateTip' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_UpdateTip;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_FIELDS_UpdateTip
	( @MODIFIED_USER_ID            uniqueidentifier
	, @EDIT_NAME                   nvarchar(50)
	, @FIELD_INDEX                 int
	, @TOOL_TIP                    nvarchar(150)
	)
as
  begin
	update EDITVIEWS_FIELDS
	   set MODIFIED_USER_ID = @MODIFIED_USER_ID
	     , DATE_MODIFIED    =  getdate()        
	     , DATE_MODIFIED_UTC=  getutcdate()     
	     , TOOL_TIP         = @TOOL_TIP    
	 where EDIT_NAME        = @EDIT_NAME 
	   and FIELD_INDEX      = @FIELD_INDEX 
	   and DELETED          = 0            
	   and DEFAULT_VIEW     = 0            ;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_UpdateTip to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_InsertOnly;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/02/2007 Paul.  Add field for data columns. 
Create Procedure dbo.spEDITVIEWS_InsertOnly
	( @NAME              nvarchar(50)
	, @MODULE_NAME       nvarchar(25)
	, @VIEW_NAME         nvarchar(50)
	, @LABEL_WIDTH       nvarchar(10)
	, @FIELD_WIDTH       nvarchar(10)
	, @DATA_COLUMNS      int = null
	)
as
  begin
	if not exists(select * from EDITVIEWS where NAME = @NAME and DELETED = 0) begin -- then
		insert into EDITVIEWS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, NAME             
			, MODULE_NAME      
			, VIEW_NAME        
			, LABEL_WIDTH      
			, FIELD_WIDTH      
			, DATA_COLUMNS     
			)
		values 
			( newid()           
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @NAME             
			, @MODULE_NAME      
			, @VIEW_NAME        
			, @LABEL_WIDTH      
			, @FIELD_WIDTH      
			, @DATA_COLUMNS     
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_InsertOnly to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_RELATIONSHIPS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_RELATIONSHIPS_Delete;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_RELATIONSHIPS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	update EDITVIEWS_RELATIONSHIPS
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID = @ID;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_RELATIONSHIPS_Delete to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_RELATIONSHIPS_Disable' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_RELATIONSHIPS_Disable;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_RELATIONSHIPS_Disable
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID             uniqueidentifier;
	declare @EDIT_NAME           nvarchar(50);
	declare @RELATIONSHIP_ORDER  int;
	if exists(select * from EDITVIEWS_RELATIONSHIPS where ID = @ID and DELETED = 0) begin -- then
		-- BEGIN Oracle Exception
			select @EDIT_NAME          = EDIT_NAME
			     , @RELATIONSHIP_ORDER = RELATIONSHIP_ORDER
			  from EDITVIEWS_RELATIONSHIPS
			 where ID                  = @ID
			   and DELETED             = 0;
		-- END Oracle Exception
		
		-- BEGIN Oracle Exception
			update EDITVIEWS_RELATIONSHIPS
			   set MODIFIED_USER_ID     = @MODIFIED_USER_ID 
			     , DATE_MODIFIED        =  getdate()        
			     , DATE_MODIFIED_UTC    =  getutcdate()     
			     , RELATIONSHIP_ORDER   = null
			     , RELATIONSHIP_ENABLED = 0
			 where ID                   = @ID
			   and DELETED              = 0;
		-- END Oracle Exception
		
		-- BEGIN Oracle Exception
			select @SWAP_ID           = ID
			  from EDITVIEWS_RELATIONSHIPS
			 where EDIT_NAME          = @EDIT_NAME
			   and RELATIONSHIP_ORDER = @RELATIONSHIP_ORDER
			   and DELETED            = 0;
		-- END Oracle Exception

		-- 01/04/2006 Paul.  Shift all EDITVIEWS_RELATIONSHIPS down, but only if there is no duplicate order value. 
		if dbo.fnIsEmptyGuid(@SWAP_ID) = 1 begin -- then
			-- BEGIN Oracle Exception
				update EDITVIEWS_RELATIONSHIPS
				   set RELATIONSHIP_ORDER = RELATIONSHIP_ORDER - 1
				 where EDIT_NAME          = @EDIT_NAME
				   and RELATIONSHIP_ORDER > @RELATIONSHIP_ORDER
				   and DELETED            = 0;
			-- END Oracle Exception
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spEDITVIEWS_RELATIONSHIPS_Disable to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_RELATIONSHIPS_Down' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_RELATIONSHIPS_Down;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_RELATIONSHIPS_Down
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID            uniqueidentifier;
	declare @EDIT_NAME          nvarchar(50);
	declare @RELATIONSHIP_ORDER int;
	if exists(select * from EDITVIEWS_RELATIONSHIPS where ID = @ID and DELETED = 0) begin -- then
		-- BEGIN Oracle Exception
			select @EDIT_NAME          = EDIT_NAME
			     , @RELATIONSHIP_ORDER = RELATIONSHIP_ORDER
			  from EDITVIEWS_RELATIONSHIPS
			 where ID                  = @ID
			   and DELETED             = 0;
		-- END Oracle Exception
		
		-- Moving down actually means incrementing the order value. 
		-- BEGIN Oracle Exception
			select @SWAP_ID           = ID
			  from EDITVIEWS_RELATIONSHIPS
			 where EDIT_NAME          = @EDIT_NAME
			   and RELATIONSHIP_ORDER = @RELATIONSHIP_ORDER + 1
			   and DELETED            = 0;
		-- END Oracle Exception
		if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 begin -- then
			-- BEGIN Oracle Exception
				update EDITVIEWS_RELATIONSHIPS
				   set RELATIONSHIP_ORDER = RELATIONSHIP_ORDER + 1
				     , DATE_MODIFIED      = getdate()
				     , DATE_MODIFIED_UTC= getutcdate()
				     , MODIFIED_USER_ID   = @MODIFIED_USER_ID
				 where ID                 = @ID;
			-- END Oracle Exception
			-- BEGIN Oracle Exception
				update EDITVIEWS_RELATIONSHIPS
				   set RELATIONSHIP_ORDER = RELATIONSHIP_ORDER - 1
				     , DATE_MODIFIED      = getdate()
				     , DATE_MODIFIED_UTC= getutcdate()
				     , MODIFIED_USER_ID   = @MODIFIED_USER_ID
				 where ID                 = @SWAP_ID;
			-- END Oracle Exception
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spEDITVIEWS_RELATIONSHIPS_Down to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_RELATIONSHIPS_Enable' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_RELATIONSHIPS_Enable;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_RELATIONSHIPS_Enable
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID            uniqueidentifier;
	declare @EDIT_NAME        nvarchar(50);
	declare @RELATIONSHIP_ORDER int;
	if exists(select * from EDITVIEWS_RELATIONSHIPS where ID = @ID and DELETED = 0) begin -- then
		-- BEGIN Oracle Exception
			select @EDIT_NAME          = EDIT_NAME
			     , @RELATIONSHIP_ORDER = RELATIONSHIP_ORDER
			  from EDITVIEWS_RELATIONSHIPS
			 where ID          = @ID
			   and DELETED     = 0;
		-- END Oracle Exception

		-- BEGIN Oracle Exception
			select @SWAP_ID           = ID
			  from EDITVIEWS_RELATIONSHIPS
			 where EDIT_NAME          = @EDIT_NAME
			   and RELATIONSHIP_ORDER = 0
			   and DELETED            = 0;
		-- END Oracle Exception
		-- 01/04/2005 Paul.  If there is a module at 0, shift all EDITVIEWS_RELATIONSHIPS so that this one can be 1. 
		if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 begin -- then
			-- 04/02/2006 Paul.  Catch the Oracle NO_DATA_FOUND exception. 
			-- BEGIN Oracle Exception
				update EDITVIEWS_RELATIONSHIPS
				   set RELATIONSHIP_ORDER = RELATIONSHIP_ORDER + 1
				 where EDIT_NAME          = @EDIT_NAME
				   and RELATIONSHIP_ORDER >= 0
				   and DELETED = 0;
			-- END Oracle Exception
		end -- if;
		
		-- 01/04/2006 Paul.  EDITVIEWS_RELATIONSHIPS made visible start at tab 0. 
		-- BEGIN Oracle Exception
			update EDITVIEWS_RELATIONSHIPS
			   set MODIFIED_USER_ID     = @MODIFIED_USER_ID 
			     , DATE_MODIFIED        =  getdate()        
			     , DATE_MODIFIED_UTC    =  getutcdate()     
			     , RELATIONSHIP_ORDER   = 0
			     , RELATIONSHIP_ENABLED = 1
			 where ID                   = @ID
			   and DELETED              = 0;
		-- END Oracle Exception
	end -- if;
  end
GO

Grant Execute on dbo.spEDITVIEWS_RELATIONSHIPS_Enable to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_RELATIONSHIPS_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_RELATIONSHIPS_InsertOnly;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_RELATIONSHIPS_InsertOnly
	( @EDIT_NAME               nvarchar(50)
	, @MODULE_NAME             nvarchar(50)
	, @CONTROL_NAME            nvarchar(100)
	, @RELATIONSHIP_ENABLED    bit
	, @RELATIONSHIP_ORDER      int
	, @NEW_RECORD_ENABLED      bit
	, @EXISTING_RECORD_ENABLED bit
	, @TITLE                   nvarchar(100)
	, @ALTERNATE_VIEW          nvarchar(50)
	)
as
  begin
	if not exists(select * from EDITVIEWS_RELATIONSHIPS where EDIT_NAME = @EDIT_NAME and CONTROL_NAME = @CONTROL_NAME and DELETED = 0) begin -- then
		insert into EDITVIEWS_RELATIONSHIPS
			( ID                 
			, CREATED_BY         
			, DATE_ENTERED       
			, MODIFIED_USER_ID   
			, DATE_MODIFIED      
			, EDIT_NAME          
			, MODULE_NAME        
			, CONTROL_NAME       
			, RELATIONSHIP_ORDER 
			, RELATIONSHIP_ENABLED
			, NEW_RECORD_ENABLED     
			, EXISTING_RECORD_ENABLED
			, TITLE              
			, ALTERNATE_VIEW     
			)
		values 
			( newid()             
			, null                
			,  getdate()          
			, null                
			,  getdate()          
			, @EDIT_NAME          
			, @MODULE_NAME        
			, @CONTROL_NAME       
			, @RELATIONSHIP_ORDER 
			, @RELATIONSHIP_ENABLED
			, @NEW_RECORD_ENABLED     
			, @EXISTING_RECORD_ENABLED
			, @TITLE              
			, @ALTERNATE_VIEW     
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_RELATIONSHIPS_InsertOnly to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_RELATIONSHIPS_Item' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_RELATIONSHIPS_Item;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_RELATIONSHIPS_Item
	( @MODIFIED_USER_ID uniqueidentifier
	, @EDIT_NAME        nvarchar(50)
	, @OLD_INDEX        int
	, @NEW_INDEX        int
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID    uniqueidentifier;
	-- BEGIN Oracle Exception
		select @SWAP_ID   = ID
		  from EDITVIEWS_RELATIONSHIPS
		 where EDIT_NAME          = @EDIT_NAME
		   and RELATIONSHIP_ORDER = @OLD_INDEX
		   and DELETED            = 0;
	-- END Oracle Exception

	if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 and (@OLD_INDEX > @NEW_INDEX or @OLD_INDEX < @NEW_INDEX) begin -- then
		if @OLD_INDEX < @NEW_INDEX begin -- then
			update EDITVIEWS_RELATIONSHIPS
			   set RELATIONSHIP_ORDER  = RELATIONSHIP_ORDER - 1
			     , DATE_MODIFIED       = getdate()
			     , DATE_MODIFIED_UTC   = getutcdate()
			     , MODIFIED_USER_ID    = @MODIFIED_USER_ID
			 where EDIT_NAME           = @EDIT_NAME
			   and RELATIONSHIP_ORDER >= @OLD_INDEX
			   and RELATIONSHIP_ORDER <= @NEW_INDEX
			   and DELETED             = 0;
		end else if @OLD_INDEX > @NEW_INDEX begin -- then
			update EDITVIEWS_RELATIONSHIPS
			   set RELATIONSHIP_ORDER  = RELATIONSHIP_ORDER + 1
			     , DATE_MODIFIED       = getdate()
			     , DATE_MODIFIED_UTC   = getutcdate()
			     , MODIFIED_USER_ID    = @MODIFIED_USER_ID
			 where EDIT_NAME           = @EDIT_NAME
			   and RELATIONSHIP_ORDER >= @NEW_INDEX
			   and RELATIONSHIP_ORDER <= @OLD_INDEX
			   and DELETED             = 0;
		end -- if;
		update EDITVIEWS_RELATIONSHIPS
		   set RELATIONSHIP_ORDER = @NEW_INDEX
		     , DATE_MODIFIED      = getdate()
		     , DATE_MODIFIED_UTC  = getutcdate()
		     , MODIFIED_USER_ID   = @MODIFIED_USER_ID
		 where ID                 = @SWAP_ID
		   and DELETED            = 0;
	end -- if;
  end
GO

Grant Execute on dbo.spEDITVIEWS_RELATIONSHIPS_Item to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_RELATIONSHIPS_MoveUp' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_RELATIONSHIPS_MoveUp;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_RELATIONSHIPS_MoveUp
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID            uniqueidentifier;
	declare @EDIT_NAME          nvarchar(50);
	declare @RELATIONSHIP_ORDER int;
	if exists(select * from EDITVIEWS_RELATIONSHIPS where ID = @ID and DELETED = 0) begin -- then
		-- BEGIN Oracle Exception
			select @EDIT_NAME          = EDIT_NAME
			     , @RELATIONSHIP_ORDER = RELATIONSHIP_ORDER
			  from EDITVIEWS_RELATIONSHIPS
			 where ID                  = @ID
			   and DELETED             = 0;
		-- END Oracle Exception

		-- 01/04/2006 Paul.  RELATIONSHIP_ORDER 0 is reserved.  Don't allow decrease below 1. 
		if @RELATIONSHIP_ORDER is not null begin -- then
			-- BEGIN Oracle Exception
				select @SWAP_ID           = ID
				  from EDITVIEWS_RELATIONSHIPS
				 where EDIT_NAME          = @EDIT_NAME
				   and RELATIONSHIP_ORDER = @RELATIONSHIP_ORDER - 1
				   and DELETED            = 0;
			-- END Oracle Exception

			-- Moving up actually means decrementing the order value. 
			if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 begin -- then
				-- BEGIN Oracle Exception
					update EDITVIEWS_RELATIONSHIPS
					   set RELATIONSHIP_ORDER = RELATIONSHIP_ORDER - 1
					     , DATE_MODIFIED      = getdate()
					     , DATE_MODIFIED_UTC= getutcdate()
					     , MODIFIED_USER_ID   = @MODIFIED_USER_ID
					 where ID                 = @ID;
				-- END Oracle Exception
				-- BEGIN Oracle Exception
					update EDITVIEWS_RELATIONSHIPS
					   set RELATIONSHIP_ORDER = RELATIONSHIP_ORDER + 1
					     , DATE_MODIFIED      = getdate()
					     , DATE_MODIFIED_UTC= getutcdate()
					     , MODIFIED_USER_ID   = @MODIFIED_USER_ID
					 where ID                 = @SWAP_ID;
				-- END Oracle Exception
			end -- if;
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spEDITVIEWS_RELATIONSHIPS_MoveUp to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_RELATIONSHIPS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_RELATIONSHIPS_Update;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 03/14/2016 Paul.  The new layout editor needs to update the RELATIONSHIP_ENABLED field. 
Create Procedure dbo.spEDITVIEWS_RELATIONSHIPS_Update
	( @ID                      uniqueidentifier output
	, @MODIFIED_USER_ID        uniqueidentifier
	, @EDIT_NAME               nvarchar(50)
	, @MODULE_NAME             nvarchar(50)
	, @CONTROL_NAME            nvarchar(100)
	, @RELATIONSHIP_ORDER      int
	, @NEW_RECORD_ENABLED      bit
	, @EXISTING_RECORD_ENABLED bit
	, @TITLE                   nvarchar(100)
	, @ALTERNATE_VIEW          nvarchar(50)
	, @RELATIONSHIP_ENABLED    bit = null
	)
as
  begin
	-- 01/09/2006 Paul.  Can't convert EDIT_NAME and FIELD_INDEX into an ID
	-- as it would prevent the Layout Manager from working properly. 
	if not exists(select * from EDITVIEWS_RELATIONSHIPS where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into EDITVIEWS_RELATIONSHIPS
			( ID                 
			, CREATED_BY         
			, DATE_ENTERED       
			, MODIFIED_USER_ID   
			, DATE_MODIFIED      
			, EDIT_NAME          
			, MODULE_NAME        
			, CONTROL_NAME       
			, RELATIONSHIP_ORDER 
			, RELATIONSHIP_ENABLED
			, NEW_RECORD_ENABLED     
			, EXISTING_RECORD_ENABLED
			, TITLE              
			, ALTERNATE_VIEW     
			)
		values 
			( @ID                 
			, @MODIFIED_USER_ID   
			,  getdate()          
			, @MODIFIED_USER_ID   
			,  getdate()          
			, @EDIT_NAME          
			, @MODULE_NAME        
			, @CONTROL_NAME       
			, @RELATIONSHIP_ORDER 
			, @RELATIONSHIP_ENABLED
			, @NEW_RECORD_ENABLED     
			, @EXISTING_RECORD_ENABLED
			, @TITLE              
			, @ALTERNATE_VIEW     
			);
	end else begin
		update EDITVIEWS_RELATIONSHIPS
		   set MODIFIED_USER_ID        = @MODIFIED_USER_ID   
		     , DATE_MODIFIED           =  getdate()          
		     , DATE_MODIFIED_UTC       =  getutcdate()       
		     , EDIT_NAME               = @EDIT_NAME          
		     , MODULE_NAME             = @MODULE_NAME        
		     , CONTROL_NAME            = @CONTROL_NAME       
		     , RELATIONSHIP_ORDER      = @RELATIONSHIP_ORDER 
		     , NEW_RECORD_ENABLED      = @NEW_RECORD_ENABLED     
		     , EXISTING_RECORD_ENABLED = @EXISTING_RECORD_ENABLED
		     , TITLE                   = @TITLE              
		     , ALTERNATE_VIEW          = @ALTERNATE_VIEW     
		     , RELATIONSHIP_ENABLED    = isnull(@RELATIONSHIP_ENABLED, RELATIONSHIP_ENABLED)
		 where ID                      = @ID                 ;
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_RELATIONSHIPS_Update to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_Update;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/02/2007 Paul.  Add field for data columns. 
-- 10/30/2010 Paul.  Add support for Business Rules Framework. 
-- 11/11/2010 Paul.  Change to Pre Load and Post Load. 
-- 09/20/2012 Paul.  We need a SCRIPT field that is form specific. 
Create Procedure dbo.spEDITVIEWS_Update
	( @ID                  uniqueidentifier output
	, @MODIFIED_USER_ID    uniqueidentifier
	, @NAME                nvarchar(50)
	, @MODULE_NAME         nvarchar(25)
	, @VIEW_NAME           nvarchar(50)
	, @LABEL_WIDTH         nvarchar(10)
	, @FIELD_WIDTH         nvarchar(10)
	, @DATA_COLUMNS        int
	, @NEW_EVENT_ID        uniqueidentifier = null
	, @PRE_LOAD_EVENT_ID   uniqueidentifier = null
	, @POST_LOAD_EVENT_ID  uniqueidentifier = null
	, @VALIDATION_EVENT_ID uniqueidentifier = null
	, @PRE_SAVE_EVENT_ID   uniqueidentifier = null
	, @POST_SAVE_EVENT_ID  uniqueidentifier = null
	, @SCRIPT              nvarchar(max) = null
	)
as
  begin
	if not exists(select * from EDITVIEWS where NAME = @NAME and DELETED = 0) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into EDITVIEWS
			( ID                 
			, CREATED_BY         
			, DATE_ENTERED       
			, MODIFIED_USER_ID   
			, DATE_MODIFIED      
			, NAME               
			, MODULE_NAME        
			, VIEW_NAME          
			, LABEL_WIDTH        
			, FIELD_WIDTH        
			, DATA_COLUMNS       
			, NEW_EVENT_ID       
			, PRE_LOAD_EVENT_ID  
			, POST_LOAD_EVENT_ID 
			, VALIDATION_EVENT_ID
			, PRE_SAVE_EVENT_ID  
			, POST_SAVE_EVENT_ID 
			, SCRIPT             
			)
		values 
			( @ID                 
			, @MODIFIED_USER_ID   
			,  getdate()          
			, @MODIFIED_USER_ID   
			,  getdate()          
			, @NAME               
			, @MODULE_NAME        
			, @VIEW_NAME          
			, @LABEL_WIDTH        
			, @FIELD_WIDTH        
			, @DATA_COLUMNS       
			, @NEW_EVENT_ID       
			, @PRE_LOAD_EVENT_ID  
			, @POST_LOAD_EVENT_ID 
			, @VALIDATION_EVENT_ID
			, @PRE_SAVE_EVENT_ID  
			, @POST_SAVE_EVENT_ID 
			, @SCRIPT             
			);
	end else begin
		update EDITVIEWS
		   set MODIFIED_USER_ID    = @MODIFIED_USER_ID   
		     , DATE_MODIFIED       =  getdate()          
		     , DATE_MODIFIED_UTC   =  getutcdate()       
		     , NAME                = @NAME               
		     , MODULE_NAME         = @MODULE_NAME        
		     , VIEW_NAME           = @VIEW_NAME          
		     , LABEL_WIDTH         = @LABEL_WIDTH        
		     , FIELD_WIDTH         = @FIELD_WIDTH        
		     , DATA_COLUMNS        = @DATA_COLUMNS       
		     , NEW_EVENT_ID        = @NEW_EVENT_ID       
		     , PRE_LOAD_EVENT_ID   = @PRE_LOAD_EVENT_ID  
		     , POST_LOAD_EVENT_ID  = @POST_LOAD_EVENT_ID 
		     , VALIDATION_EVENT_ID = @VALIDATION_EVENT_ID
		     , PRE_SAVE_EVENT_ID   = @PRE_SAVE_EVENT_ID  
		     , POST_SAVE_EVENT_ID  = @POST_SAVE_EVENT_ID 
		     , SCRIPT              = @SCRIPT             
		 where NAME                = @NAME               
		   and DELETED             = 0                   ;
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_Update to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_UpdateEvents' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_UpdateEvents;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/11/2010 Paul.  Change to Pre Load and Post Load. 
-- 09/20/2012 Paul.  We need a SCRIPT field that is form specific. 
Create Procedure dbo.spEDITVIEWS_UpdateEvents
	( @MODIFIED_USER_ID    uniqueidentifier
	, @NAME                nvarchar(50)
	, @NEW_EVENT_ID        uniqueidentifier
	, @PRE_LOAD_EVENT_ID   uniqueidentifier
	, @POST_LOAD_EVENT_ID  uniqueidentifier
	, @VALIDATION_EVENT_ID uniqueidentifier
	, @PRE_SAVE_EVENT_ID   uniqueidentifier
	, @POST_SAVE_EVENT_ID  uniqueidentifier
	, @SCRIPT              nvarchar(max) = null
	)
as
  begin
	-- BEGIN Oracle Exception
		update EDITVIEWS
		   set MODIFIED_USER_ID    = @MODIFIED_USER_ID   
		     , DATE_MODIFIED       =  getdate()          
		     , DATE_MODIFIED_UTC   =  getutcdate()       
		     , NEW_EVENT_ID        = @NEW_EVENT_ID       
		     , PRE_LOAD_EVENT_ID   = @PRE_LOAD_EVENT_ID  
		     , POST_LOAD_EVENT_ID  = @POST_LOAD_EVENT_ID 
		     , VALIDATION_EVENT_ID = @VALIDATION_EVENT_ID
		     , PRE_SAVE_EVENT_ID   = @PRE_SAVE_EVENT_ID  
		     , POST_SAVE_EVENT_ID  = @POST_SAVE_EVENT_ID 
		     , SCRIPT              = @SCRIPT             
		 where NAME                = @NAME               
		   and DELETED             = 0                   ;
	-- END Oracle Exception
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_UpdateEvents to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spFIELD_VALIDATORS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spFIELD_VALIDATORS_Delete;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spFIELD_VALIDATORS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	update FIELD_VALIDATORS
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID               = @ID
	   and DELETED          = 0  ;
  end
GO

Grant Execute on dbo.spFIELD_VALIDATORS_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spFIELD_VALIDATORS_InsertRegEx' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spFIELD_VALIDATORS_InsertRegEx;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spFIELD_VALIDATORS_InsertRegEx
	( @MODIFIED_USER_ID   uniqueidentifier
	, @NAME               nvarchar(50)
	, @REGULAR_EXPRESSION nvarchar(2000)
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	if not exists(select * from FIELD_VALIDATORS where NAME = @NAME) begin -- then
		set @ID = newid();
		insert into FIELD_VALIDATORS
			( ID                
			, CREATED_BY        
			, DATE_ENTERED      
			, MODIFIED_USER_ID  
			, DATE_MODIFIED     
			, NAME              
			, VALIDATION_TYPE   
			, REGULAR_EXPRESSION
			)
		values
			( @ID                
			, @MODIFIED_USER_ID  
			,  getdate()         
			, @MODIFIED_USER_ID  
			,  getdate()         
			, @NAME              
			, N'RegularExpressionValidator'
			, @REGULAR_EXPRESSION
			);
	end -- if;
  end
GO

Grant Execute on dbo.spFIELD_VALIDATORS_InsertRegEx to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spFIELD_VALIDATORS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spFIELD_VALIDATORS_Update;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spFIELD_VALIDATORS_Update
	( @ID                  uniqueidentifier output
	, @MODIFIED_USER_ID    uniqueidentifier
	, @NAME                nvarchar(50)
	, @VALIDATION_TYPE     nvarchar(50)
	, @REGULAR_EXPRESSION  nvarchar(2000)
	, @DATA_TYPE           nvarchar(25)
	, @MININUM_VALUE       nvarchar(255)
	, @MAXIMUM_VALUE       nvarchar(255)
	, @COMPARE_OPERATOR    nvarchar(25)
	)
as
  begin
	set nocount on
	
	if not exists(select * from FIELD_VALIDATORS where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into FIELD_VALIDATORS
			( ID                 
			, CREATED_BY         
			, DATE_ENTERED       
			, MODIFIED_USER_ID   
			, DATE_MODIFIED      
			, NAME               
			, VALIDATION_TYPE    
			, REGULAR_EXPRESSION 
			, DATA_TYPE          
			, MININUM_VALUE      
			, MAXIMUM_VALUE      
			, COMPARE_OPERATOR   
			)
		values 	( @ID                 
			, @MODIFIED_USER_ID         
			,  getdate()          
			, @MODIFIED_USER_ID   
			,  getdate()          
			, @NAME               
			, @VALIDATION_TYPE    
			, @REGULAR_EXPRESSION 
			, @DATA_TYPE          
			, @MININUM_VALUE      
			, @MAXIMUM_VALUE      
			, @COMPARE_OPERATOR   
			);
	end else begin
		update FIELD_VALIDATORS
		   set MODIFIED_USER_ID    = @MODIFIED_USER_ID   
		     , DATE_MODIFIED       =  getdate()          
		     , DATE_MODIFIED_UTC   =  getutcdate()       
		     , NAME                = @NAME               
		     , VALIDATION_TYPE     = @VALIDATION_TYPE    
		     , REGULAR_EXPRESSION  = @REGULAR_EXPRESSION 
		     , DATA_TYPE           = @DATA_TYPE          
		     , MININUM_VALUE       = @MININUM_VALUE      
		     , MAXIMUM_VALUE       = @MAXIMUM_VALUE      
		     , COMPARE_OPERATOR    = @COMPARE_OPERATOR   
		 where ID                  = @ID                 ;
	end -- if;
  end
GO

Grant Execute on dbo.spFIELD_VALIDATORS_Update to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spGRIDVIEWS_COLUMNS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spGRIDVIEWS_COLUMNS_Delete;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spGRIDVIEWS_COLUMNS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	update GRIDVIEWS_COLUMNS
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID = @ID;
  end
GO
 
Grant Execute on dbo.spGRIDVIEWS_COLUMNS_Delete to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spGRIDVIEWS_COLUMNS_ReserveIndex' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spGRIDVIEWS_COLUMNS_ReserveIndex;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spGRIDVIEWS_COLUMNS_ReserveIndex
	( @MODIFIED_USER_ID            uniqueidentifier
	, @GRID_NAME                   nvarchar(50)
	, @RESERVE_INDEX               int
	)
as
  begin
	declare @MIN_INDEX int;
	-- BEGIN Oracle Exception
		select @MIN_INDEX = min(COLUMN_INDEX)
		  from GRIDVIEWS_COLUMNS
		 where GRID_NAME         = @GRID_NAME       
		   and DELETED           = 0                
		   and DEFAULT_VIEW      = 0                ;
	-- END Oracle Exception
	while @MIN_INDEX < @RESERVE_INDEX begin -- do
		update GRIDVIEWS_COLUMNS
		   set COLUMN_INDEX      = COLUMN_INDEX + 1 
		     , DATE_MODIFIED     =  getdate()       
		     , DATE_MODIFIED_UTC =  getutcdate()    
		     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
		 where GRID_NAME         = @GRID_NAME       
		   and DELETED           = 0                
		   and DEFAULT_VIEW      = 0                ;
		set @MIN_INDEX = @MIN_INDEX + 1;
	end -- while;

	-- BEGIN Oracle Exception
		select @MIN_INDEX = min(COLUMN_INDEX)
		  from GRIDVIEWS_COLUMNS
		 where GRID_NAME         = @GRID_NAME       
		   and DELETED           = 0                
		   and DEFAULT_VIEW      = 1                ;
	-- END Oracle Exception
	while @MIN_INDEX < @RESERVE_INDEX begin -- do
		update GRIDVIEWS_COLUMNS
		   set COLUMN_INDEX      = COLUMN_INDEX + 1 
		     , DATE_MODIFIED     =  getdate()       
		     , DATE_MODIFIED_UTC =  getutcdate()    
		     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
		 where GRID_NAME         = @GRID_NAME       
		   and DELETED           = 0                
		   and DEFAULT_VIEW      = 1                ;
		set @MIN_INDEX = @MIN_INDEX + 1;
	end -- while;
  end
GO
 
Grant Execute on dbo.spGRIDVIEWS_COLUMNS_ReserveIndex to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spGRIDVIEWS_COLUMNS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spGRIDVIEWS_COLUMNS_Update;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/28/2006 Paul.  Add URL_MODULE to support ACL. 
-- 05/02/2006 Paul.  Add URL_ASSIGNED_FIELD to support ACL. 
-- 07/24/2006 Paul.  Increase the HEADER_TEXT to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 11/22/2006 Paul.  Prevent index from overlapping. This is needed to simplify inserting the TEAM field. 
-- 02/16/2010 Paul.  Add MODULE_TYPE so that we can lookup custom field IDs. 
-- 08/02/2010 Paul.  Increase the size of the URL_FIELD and URL_FORMAT so that we can add a javascript info column. 
-- 10/09/2010 Paul.  Add PARENT_FIELD so that we can establish dependent listboxes. 
-- 10/30/2013 Paul.  Increase size of URL_TARGET. 
-- 03/01/2014 Paul.  Increase size of DATA_FORMAT. 
Create Procedure dbo.spGRIDVIEWS_COLUMNS_Update
	( @ID                          uniqueidentifier output
	, @MODIFIED_USER_ID            uniqueidentifier
	, @GRID_NAME                   nvarchar( 50)
	, @COLUMN_INDEX                int
	, @COLUMN_TYPE                 nvarchar( 25)
	, @HEADER_TEXT                 nvarchar(150)
	, @SORT_EXPRESSION             nvarchar( 50)
	, @ITEMSTYLE_WIDTH             nvarchar( 10)
	, @ITEMSTYLE_CSSCLASS          nvarchar( 50)
	, @ITEMSTYLE_HORIZONTAL_ALIGN  nvarchar( 10)
	, @ITEMSTYLE_VERTICAL_ALIGN    nvarchar( 10)
	, @ITEMSTYLE_WRAP              bit
	, @DATA_FIELD                  nvarchar( 50)
	, @DATA_FORMAT                 nvarchar( 25)
	, @URL_FIELD                   nvarchar(max)
	, @URL_FORMAT                  nvarchar(max)
	, @URL_TARGET                  nvarchar( 60)
	, @LIST_NAME                   nvarchar( 50)
	, @URL_MODULE                  nvarchar( 25)
	, @URL_ASSIGNED_FIELD          nvarchar( 30)
	, @MODULE_TYPE                 nvarchar( 25) = null
	, @PARENT_FIELD                nvarchar( 30) = null
	)
as
  begin
	-- 01/09/2006 Paul.  Can't convert EDIT_NAME and FIELD_INDEX into an ID
	-- as it would prevent the Layout Manager from working properly. 
	if not exists(select * from GRIDVIEWS_COLUMNS where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		-- 11/22/2006 Paul.  Prevent index from overlapping. 
		if exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = @GRID_NAME and COLUMN_INDEX = @COLUMN_INDEX and DEFAULT_VIEW = 0 and DELETED = 0) begin -- then
			update GRIDVIEWS_COLUMNS
			   set COLUMN_INDEX  = COLUMN_INDEX + 1
			 where GRID_NAME     = @GRID_NAME
			   and COLUMN_INDEX >= @COLUMN_INDEX
			   and DEFAULT_VIEW  = 0
			   and DELETED       = 0;
		end -- if;
		insert into GRIDVIEWS_COLUMNS
			( ID                         
			, CREATED_BY                 
			, DATE_ENTERED               
			, MODIFIED_USER_ID           
			, DATE_MODIFIED              
			, GRID_NAME                  
			, COLUMN_INDEX               
			, COLUMN_TYPE                
			, HEADER_TEXT                
			, SORT_EXPRESSION            
			, ITEMSTYLE_WIDTH            
			, ITEMSTYLE_CSSCLASS         
			, ITEMSTYLE_HORIZONTAL_ALIGN 
			, ITEMSTYLE_VERTICAL_ALIGN   
			, ITEMSTYLE_WRAP             
			, DATA_FIELD                 
			, DATA_FORMAT                
			, URL_FIELD                  
			, URL_FORMAT                 
			, URL_TARGET                 
			, LIST_NAME                  
			, URL_MODULE                 
			, URL_ASSIGNED_FIELD         
			, MODULE_TYPE                
			, PARENT_FIELD               
			)
		values 
			( @ID                         
			, @MODIFIED_USER_ID           
			,  getdate()                  
			, @MODIFIED_USER_ID           
			,  getdate()                  
			, @GRID_NAME                  
			, @COLUMN_INDEX               
			, @COLUMN_TYPE                
			, @HEADER_TEXT                
			, @SORT_EXPRESSION            
			, @ITEMSTYLE_WIDTH            
			, @ITEMSTYLE_CSSCLASS         
			, @ITEMSTYLE_HORIZONTAL_ALIGN 
			, @ITEMSTYLE_VERTICAL_ALIGN   
			, @ITEMSTYLE_WRAP             
			, @DATA_FIELD                 
			, @DATA_FORMAT                
			, @URL_FIELD                  
			, @URL_FORMAT                 
			, @URL_TARGET                 
			, @LIST_NAME                  
			, @URL_MODULE                 
			, @URL_ASSIGNED_FIELD         
			, @MODULE_TYPE                
			, @PARENT_FIELD               
			);
	end else begin
		update GRIDVIEWS_COLUMNS
		   set MODIFIED_USER_ID            = @MODIFIED_USER_ID           
		     , DATE_MODIFIED               =  getdate()                  
		     , DATE_MODIFIED_UTC           =  getutcdate()               
		     , GRID_NAME                   = @GRID_NAME                  
		     , COLUMN_INDEX                = @COLUMN_INDEX               
		     , COLUMN_TYPE                 = @COLUMN_TYPE                
		     , HEADER_TEXT                 = @HEADER_TEXT                
		     , SORT_EXPRESSION             = @SORT_EXPRESSION            
		     , ITEMSTYLE_WIDTH             = @ITEMSTYLE_WIDTH            
		     , ITEMSTYLE_CSSCLASS          = @ITEMSTYLE_CSSCLASS         
		     , ITEMSTYLE_HORIZONTAL_ALIGN  = @ITEMSTYLE_HORIZONTAL_ALIGN 
		     , ITEMSTYLE_VERTICAL_ALIGN    = @ITEMSTYLE_VERTICAL_ALIGN   
		     , ITEMSTYLE_WRAP              = @ITEMSTYLE_WRAP             
		     , DATA_FIELD                  = @DATA_FIELD                 
		     , DATA_FORMAT                 = @DATA_FORMAT                
		     , URL_FIELD                   = @URL_FIELD                  
		     , URL_FORMAT                  = @URL_FORMAT                 
		     , URL_TARGET                  = @URL_TARGET                 
		     , LIST_NAME                   = @LIST_NAME                  
		     , URL_MODULE                  = @URL_MODULE                 
		     , URL_ASSIGNED_FIELD          = @URL_ASSIGNED_FIELD         
		     , MODULE_TYPE                 = @MODULE_TYPE                
		     , PARENT_FIELD                = @PARENT_FIELD               
		 where ID                          = @ID                         ;
	end -- if;
  end
GO
 
Grant Execute on dbo.spGRIDVIEWS_COLUMNS_Update to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spGRIDVIEWS_COLUMNS_UpdateFormat' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spGRIDVIEWS_COLUMNS_UpdateFormat;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spGRIDVIEWS_COLUMNS_UpdateFormat
	( @MODIFIED_USER_ID            uniqueidentifier
	, @GRID_NAME                   nvarchar(50)
	, @DATA_FIELD                  nvarchar( 50)
	, @DATA_FORMAT                 nvarchar( 25)
	)
as
  begin
	update GRIDVIEWS_COLUMNS
	   set MODIFIED_USER_ID            = @MODIFIED_USER_ID 
	     , DATE_MODIFIED               =  getdate()        
	     , DATE_MODIFIED_UTC           =  getutcdate()     
	     , DATA_FORMAT                 = @DATA_FORMAT
	 where GRID_NAME                   = @GRID_NAME
	   and DATA_FIELD                  = @DATA_FIELD
	   and DELETED                     = 0            ;
  end
GO
 
Grant Execute on dbo.spGRIDVIEWS_COLUMNS_UpdateFormat to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spGRIDVIEWS_COLUMNS_UpdateStyle' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spGRIDVIEWS_COLUMNS_UpdateStyle;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spGRIDVIEWS_COLUMNS_UpdateStyle
	( @MODIFIED_USER_ID            uniqueidentifier
	, @GRID_NAME                   nvarchar(50)
	, @COLUMN_INDEX                int
	, @ITEMSTYLE_WIDTH             nvarchar(10)
	, @ITEMSTYLE_CSSCLASS          nvarchar(50)
	, @ITEMSTYLE_HORIZONTAL_ALIGN  nvarchar(10)
	, @ITEMSTYLE_VERTICAL_ALIGN    nvarchar(10)
	, @ITEMSTYLE_WRAP              bit
	)
as
  begin
	update GRIDVIEWS_COLUMNS
	   set MODIFIED_USER_ID            = @MODIFIED_USER_ID 
	     , DATE_MODIFIED               =  getdate()        
	     , DATE_MODIFIED_UTC           =  getutcdate()     
	     , ITEMSTYLE_WIDTH             = isnull(@ITEMSTYLE_WIDTH           , ITEMSTYLE_WIDTH           )
	     , ITEMSTYLE_CSSCLASS          = isnull(@ITEMSTYLE_CSSCLASS        , ITEMSTYLE_CSSCLASS        )
	     , ITEMSTYLE_HORIZONTAL_ALIGN  = isnull(@ITEMSTYLE_HORIZONTAL_ALIGN, ITEMSTYLE_HORIZONTAL_ALIGN)
	     , ITEMSTYLE_VERTICAL_ALIGN    = isnull(@ITEMSTYLE_VERTICAL_ALIGN  , ITEMSTYLE_VERTICAL_ALIGN  )
	     , ITEMSTYLE_WRAP              = isnull(@ITEMSTYLE_WRAP            , ITEMSTYLE_WRAP            )
	 where GRID_NAME                   = @GRID_NAME
	   and COLUMN_INDEX                = @COLUMN_INDEX
	   and DELETED                     = 0            
	   and DEFAULT_VIEW                = 0            ;
  end
GO
 
Grant Execute on dbo.spGRIDVIEWS_COLUMNS_UpdateStyle to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spGRIDVIEWS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spGRIDVIEWS_Delete;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spGRIDVIEWS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	update GRIDVIEWS
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID = @ID;
  end
GO
 
Grant Execute on dbo.spGRIDVIEWS_Delete to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spGRIDVIEWS_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spGRIDVIEWS_InsertOnly;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 02/22/2021 Paul.  The React client needs a way to determine the default sort, besides NAME asc. 
Create Procedure dbo.spGRIDVIEWS_InsertOnly
	( @NAME              nvarchar(50)
	, @MODULE_NAME       nvarchar(25)
	, @VIEW_NAME         nvarchar(50)
	, @SORT_FIELD        nvarchar(50) = null
	, @SORT_DIRECTION    nvarchar(10) = null
	)
as
  begin
	if not exists(select * from GRIDVIEWS where NAME = @NAME and DELETED = 0) begin -- then
		insert into GRIDVIEWS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, NAME             
			, MODULE_NAME      
			, VIEW_NAME        
			, SORT_FIELD       
			, SORT_DIRECTION   
			)
		values 
			( newid()           
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @NAME             
			, @MODULE_NAME      
			, @VIEW_NAME        
			, @SORT_FIELD       
			, @SORT_DIRECTION   
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spGRIDVIEWS_InsertOnly to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spGRIDVIEWS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spGRIDVIEWS_Update;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/22/2010 Paul.  Add support for Business Rules Framework. 
-- 09/20/2012 Paul.  We need a SCRIPT field that is form specific. 
-- 02/22/2021 Paul.  The React client needs a way to determine the default sort, besides NAME asc. 
Create Procedure dbo.spGRIDVIEWS_Update
	( @ID                  uniqueidentifier output
	, @MODIFIED_USER_ID    uniqueidentifier
	, @NAME                nvarchar(50)
	, @MODULE_NAME         nvarchar(25)
	, @VIEW_NAME           nvarchar(50)
	, @PRE_LOAD_EVENT_ID   uniqueidentifier = null
	, @POST_LOAD_EVENT_ID  uniqueidentifier = null
	, @SCRIPT              nvarchar(max) = null
	, @SORT_FIELD          nvarchar(50) = null
	, @SORT_DIRECTION      nvarchar(10) = null
	)
as
  begin
	if not exists(select * from GRIDVIEWS where NAME = @NAME and DELETED = 0) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into GRIDVIEWS
			( ID                 
			, CREATED_BY         
			, DATE_ENTERED       
			, MODIFIED_USER_ID   
			, DATE_MODIFIED      
			, NAME               
			, MODULE_NAME        
			, VIEW_NAME          
			, PRE_LOAD_EVENT_ID  
			, POST_LOAD_EVENT_ID 
			, SCRIPT             
			, SORT_FIELD         
			, SORT_DIRECTION     
			)
		values 
			( @ID                 
			, @MODIFIED_USER_ID   
			,  getdate()          
			, @MODIFIED_USER_ID   
			,  getdate()          
			, @NAME               
			, @MODULE_NAME        
			, @VIEW_NAME          
			, @PRE_LOAD_EVENT_ID  
			, @POST_LOAD_EVENT_ID 
			, @SCRIPT             
			, @SORT_FIELD         
			, @SORT_DIRECTION     
			);
	end else begin
		update GRIDVIEWS
		   set MODIFIED_USER_ID    = @MODIFIED_USER_ID   
		     , DATE_MODIFIED       =  getdate()          
		     , DATE_MODIFIED_UTC   =  getutcdate()       
		     , NAME                = @NAME               
		     , MODULE_NAME         = @MODULE_NAME        
		     , VIEW_NAME           = @VIEW_NAME          
		     , PRE_LOAD_EVENT_ID   = @PRE_LOAD_EVENT_ID  
		     , POST_LOAD_EVENT_ID  = @POST_LOAD_EVENT_ID 
		     , SCRIPT              = @SCRIPT             
		     , SORT_FIELD          = @SORT_FIELD         
		     , SORT_DIRECTION      = @SORT_DIRECTION     
		 where NAME                = @NAME               
		   and DELETED = 0                              ;
	end -- if;
  end
GO
 
Grant Execute on dbo.spGRIDVIEWS_Update to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spGRIDVIEWS_UpdateEvents' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spGRIDVIEWS_UpdateEvents;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/22/2010 Paul.  Add support for Business Rules Framework. 
-- 09/20/2012 Paul.  We need a SCRIPT field that is form specific. 
-- 09/20/2012 Paul.  We need a SCRIPT field that is form specific. 
Create Procedure dbo.spGRIDVIEWS_UpdateEvents
	( @MODIFIED_USER_ID    uniqueidentifier
	, @NAME                nvarchar(50)
	, @PRE_LOAD_EVENT_ID   uniqueidentifier
	, @POST_LOAD_EVENT_ID  uniqueidentifier
	, @SCRIPT              nvarchar(max) = null
	)
as
  begin
	-- BEGIN Oracle Exception
		update GRIDVIEWS
		   set MODIFIED_USER_ID    = @MODIFIED_USER_ID   
		     , DATE_MODIFIED       =  getdate()          
		     , DATE_MODIFIED_UTC   =  getutcdate()       
		     , PRE_LOAD_EVENT_ID   = @PRE_LOAD_EVENT_ID  
		     , POST_LOAD_EVENT_ID  = @POST_LOAD_EVENT_ID 
		     , SCRIPT              = @SCRIPT             
		 where NAME                = @NAME               
		   and DELETED             = 0                   ;
	-- END Oracle Exception
  end
GO
 
Grant Execute on dbo.spGRIDVIEWS_UpdateEvents to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spGRIDVIEWS_UpdateSort' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spGRIDVIEWS_UpdateSort;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 02/22/2021 Paul.  The React client needs a way to determine the default sort, besides NAME asc. 
Create Procedure dbo.spGRIDVIEWS_UpdateSort
	( @MODIFIED_USER_ID    uniqueidentifier
	, @NAME                nvarchar(50)
	, @SORT_FIELD          nvarchar(50)
	, @SORT_DIRECTION      nvarchar(10)
	)
as
  begin
	-- BEGIN Oracle Exception
		update GRIDVIEWS
		   set MODIFIED_USER_ID    = @MODIFIED_USER_ID   
		     , DATE_MODIFIED       =  getdate()          
		     , DATE_MODIFIED_UTC   =  getutcdate()       
		     , SORT_FIELD          = @SORT_FIELD         
		     , SORT_DIRECTION      = @SORT_DIRECTION     
		 where NAME                = @NAME               
		   and DELETED             = 0                   ;
	-- END Oracle Exception
  end
GO
 
Grant Execute on dbo.spGRIDVIEWS_UpdateSort to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spIMAGES_CONTENT_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spIMAGES_CONTENT_Update;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/15/2009 Paul.  Convert data type to varbinary(max) to support Azure. 
Create Procedure dbo.spIMAGES_CONTENT_Update
	( @ID                   uniqueidentifier
	, @CONTENT              varbinary(max)
	)
as
  begin
	set nocount on

	update IMAGES
	   set CONTENT = @CONTENT
	 where ID      = @ID;	
  end
GO
 
Grant Execute on dbo.spIMAGES_CONTENT_Update to public;
GO



if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spIMAGES_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spIMAGES_Delete;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spIMAGES_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	update IMAGES
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID               = @ID;
  end
GO

Grant Execute on dbo.spIMAGES_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spIMAGES_Insert' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spIMAGES_Insert;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spIMAGES_Insert
	( @ID                uniqueidentifier output
	, @MODIFIED_USER_ID  uniqueidentifier
	, @PARENT_ID         uniqueidentifier
	, @FILENAME          nvarchar(255)
	, @FILE_EXT          nvarchar(25)
	, @FILE_MIME_TYPE    nvarchar(100)
	)
as
  begin
	set nocount on
	
	set @ID = newid();
	insert into IMAGES
		( ID               
		, CREATED_BY       
		, DATE_ENTERED     
		, MODIFIED_USER_ID 
		, DATE_MODIFIED    
		, PARENT_ID        
		, FILENAME         
		, FILE_EXT         
		, FILE_MIME_TYPE   
		)
	values
		( @ID               
		, @MODIFIED_USER_ID 
		,  getdate()        
		, @MODIFIED_USER_ID 
		,  getdate()        
		, @PARENT_ID        
		, @FILENAME         
		, @FILE_EXT         
		, @FILE_MIME_TYPE   
		);
	
  end
GO

Grant Execute on dbo.spIMAGES_Insert to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spIMAGE_InitPointer' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spIMAGE_InitPointer;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/15/2009 Paul.  updatetext, readtext and textptr() have been deprecated in SQL Server and are not supported in Azure. 
-- http://msdn.microsoft.com/en-us/library/ms143729.aspx
Create Procedure dbo.spIMAGE_InitPointer
	( @ID                uniqueidentifier
	, @MODIFIED_USER_ID  uniqueidentifier
	, @FILE_POINTER      binary(16) output
	)
as
  begin
	set nocount on
	
	-- 10/20/2005 Paul.  Truncate the CONTENT column so that future write operations can simply append data. 
-- #if SQL_Server /*
	raiserror(N'updatetext, readtext and textptr() have been deprecated. ', 16, 1);
	-- update IMAGES
	--    set CONTENT       = ''               
	--      , MODIFIED_USER_ID = @MODIFIED_USER_ID
	--      , DATE_MODIFIED    =  getdate()        
	--      , DATE_MODIFIED_UTC=  getutcdate()     
	--  where ID               = @ID              ;
	
	-- 10/20/2005 Paul.  in_FILE_POINTER is not used in MySQL. 
	-- select @FILE_POINTER = textptr(CONTENT)
	--   from IMAGES
	--  where ID               = @ID;
-- #endif SQL_Server */



  end
GO
 
Grant Execute on dbo.spIMAGE_InitPointer to public;
GO



if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spIMAGE_ReadOffset' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spIMAGE_ReadOffset;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/15/2009 Paul.  Convert data type to varbinary(max) to support Azure. 
-- 09/15/2009 Paul.  updatetext, readtext and textptr() have been deprecated in SQL Server and are not supported in Azure. 
-- http://msdn.microsoft.com/en-us/library/ms143729.aspx
Create Procedure dbo.spIMAGE_ReadOffset
	( @ID                   uniqueidentifier
	, @FILE_OFFSET          int
	, @READ_SIZE            int
	, @BYTES                varbinary(max) output
	)
as
  begin
	set nocount on
	
	-- 08/12/2005 Paul.  Oracle returns its data in the @BYTES field. 
	-- 10/22/2005 Paul.  MySQL can also return data in @BYTES, but using a recordset has fewer limitations. 
	-- 01/25/2007 Paul.  Protect against a read error by ensuring that the file size is zero if no content. 
-- #if SQL_Server /*
	raiserror(N'updatetext, readtext and textptr() have been deprecated. ', 16, 1);
	-- declare @FILE_SIZE    bigint;
	-- declare @FILE_POINTER binary(16);
	-- select @FILE_SIZE    = isnull(datalength(CONTENT), 0)
	--      , @FILE_POINTER = textptr(CONTENT)
	--   from IMAGES
	--  where ID            = @ID;
	-- if @FILE_OFFSET + @READ_SIZE > @FILE_SIZE begin -- then
	-- 	set @READ_SIZE = @FILE_SIZE - @FILE_OFFSET;
	-- end -- if;
	-- if @READ_SIZE > 0 begin -- then
	-- 	readtext IMAGES.CONTENT @FILE_POINTER @FILE_OFFSET @READ_SIZE;
	-- end -- if;
-- #endif SQL_Server */



  end
GO
 
Grant Execute on dbo.spIMAGE_ReadOffset to public;
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spIMAGE_WriteOffset' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spIMAGE_WriteOffset;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/15/2009 Paul.  Convert data type to varbinary(max) to support Azure. 
-- 09/15/2009 Paul.  updatetext, readtext and textptr() have been deprecated in SQL Server and are not supported in Azure. 
-- http://msdn.microsoft.com/en-us/library/ms143729.aspx
Create Procedure dbo.spIMAGE_WriteOffset
	( @ID                   uniqueidentifier
	, @FILE_POINTER         binary(16)
	, @MODIFIED_USER_ID     uniqueidentifier
	, @FILE_OFFSET          int
	, @BYTES                varbinary(max)
	)
as
  begin
	set nocount on
	
	-- 10/22/2005 Paul.  @ID is used in Oracle and MySQL. 
-- #if SQL_Server /*
	raiserror(N'updatetext, readtext and textptr() have been deprecated. ', 16, 1);
	-- updatetext IMAGES.CONTENT
	--            @FILE_POINTER
	--            @FILE_OFFSET
	--            null -- 0 deletes no data, null deletes all data from insertion point. 
	--            @BYTES;
-- #endif SQL_Server */



  end
GO
 
Grant Execute on dbo.spIMAGE_WriteOffset to public;
GO



if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spIMPORT_MAPS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spIMPORT_MAPS_Delete;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spIMPORT_MAPS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	update IMPORT_MAPS
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID               = @ID;
  end
GO

Grant Execute on dbo.spIMPORT_MAPS_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spIMPORT_MAPS_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spIMPORT_MAPS_InsertOnly;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
Create Procedure dbo.spIMPORT_MAPS_InsertOnly
	( @ID                uniqueidentifier output
	, @NAME              nvarchar(150)
	, @SOURCE            nvarchar(25)
	, @MODULE            nvarchar(25)
	, @HAS_HEADER        bit
	, @IS_PUBLISHED      bit
	, @CONTENT           nvarchar(max)
	, @RULES_XML         nvarchar(max) = null
	)
as
  begin
	set nocount on
	
	declare @MODIFIED_USER_ID  uniqueidentifier;
	declare @ASSIGNED_USER_ID  uniqueidentifier;
	if not exists(select * from IMPORT_MAPS where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into IMPORT_MAPS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, ASSIGNED_USER_ID 
			, NAME             
			, SOURCE           
			, MODULE           
			, HAS_HEADER       
			, IS_PUBLISHED     
			, CONTENT          
			, RULES_XML        
			)
		values
			( @ID               
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @ASSIGNED_USER_ID 
			, @NAME             
			, @SOURCE           
			, @MODULE           
			, @HAS_HEADER       
			, @IS_PUBLISHED     
			, @CONTENT          
			, @RULES_XML        
			);
	end -- if;
  end
GO

Grant Execute on dbo.spIMPORT_MAPS_InsertOnly to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spIMPORT_MAPS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spIMPORT_MAPS_Update;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 10/08/2006 Paul.  NAME, SOURCE and MODULE are now nvarchar fields. 
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
-- 09/17/2013 Paul.  Add Business Rules to import. 
Create Procedure dbo.spIMPORT_MAPS_Update
	( @ID                uniqueidentifier output
	, @MODIFIED_USER_ID  uniqueidentifier
	, @ASSIGNED_USER_ID  uniqueidentifier
	, @NAME              nvarchar(150)
	, @SOURCE            nvarchar(25)
	, @MODULE            nvarchar(25)
	, @HAS_HEADER        bit
	, @IS_PUBLISHED      bit
	, @CONTENT           nvarchar(max)
	, @RULES_XML         nvarchar(max) = null
	)
as
  begin
	set nocount on
	
	if not exists(select * from IMPORT_MAPS where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into IMPORT_MAPS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, ASSIGNED_USER_ID 
			, NAME             
			, SOURCE           
			, MODULE           
			, HAS_HEADER       
			, IS_PUBLISHED     
			, CONTENT          
			, RULES_XML        
			)
		values
			( @ID               
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @ASSIGNED_USER_ID 
			, @NAME             
			, @SOURCE           
			, @MODULE           
			, @HAS_HEADER       
			, @IS_PUBLISHED     
			, @CONTENT          
			, @RULES_XML        
			);
	end else begin
		update IMPORT_MAPS
		   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
		     , DATE_MODIFIED     =  getdate()        
		     , DATE_MODIFIED_UTC =  getutcdate()     
		     , ASSIGNED_USER_ID  = @ASSIGNED_USER_ID 
		     , NAME              = @NAME             
		     , SOURCE            = @SOURCE           
		     , MODULE            = @MODULE           
		     , HAS_HEADER        = @HAS_HEADER       
		     , IS_PUBLISHED      = @IS_PUBLISHED     
		     , CONTENT           = @CONTENT          
		     , RULES_XML         = @RULES_XML        
		 where ID                = @ID               ;
	end -- if;
  end
GO

Grant Execute on dbo.spIMPORT_MAPS_Update to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spLANGUAGES_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spLANGUAGES_Delete;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 05/20/2008 Paul.  Delete using the NAME. 
-- 08/07/2013 Paul.  Add Oracle Exception. 
Create Procedure dbo.spLANGUAGES_Delete
	( @MODIFIED_USER_ID  uniqueidentifier
	, @NAME              nvarchar(10)
	)
as
  begin
	set nocount on
	
	-- BEGIN Oracle Exception
		update LANGUAGES
		   set DELETED          = 1
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where lower(NAME)      = lower(@NAME)
		   and DELETED          = 0;
	-- END Oracle Exception
	
	-- 05/20/2008 Paul.  When a language is deleted, so are all of its terms. 
	-- BEGIN Oracle Exception
		update TERMINOLOGY
		   set DELETED          = 1
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where lower(LANG)      = lower(@NAME)
		   and DELETED          = 0;
	-- END Oracle Exception
  end
GO
 
Grant Execute on dbo.spLANGUAGES_Delete to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spLANGUAGES_Disable' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spLANGUAGES_Disable;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spLANGUAGES_Disable
	( @MODIFIED_USER_ID  uniqueidentifier
	, @NAME              nvarchar(10)
	)
as
  begin
	set nocount on
	
	update LANGUAGES
	   set ACTIVE           = 0
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where lower(NAME)      = lower(@NAME)
	   and DELETED          = 0;
  end
GO
 
Grant Execute on dbo.spLANGUAGES_Disable to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spLANGUAGES_Enable' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spLANGUAGES_Enable;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spLANGUAGES_Enable
	( @MODIFIED_USER_ID  uniqueidentifier
	, @NAME              nvarchar(10)
	)
as
  begin
	set nocount on
	
	update LANGUAGES
	   set ACTIVE           = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where lower(NAME)      = lower(@NAME)
	   and DELETED          = 0;
  end
GO
 
Grant Execute on dbo.spLANGUAGES_Enable to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spLANGUAGES_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spLANGUAGES_InsertOnly;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spLANGUAGES_InsertOnly
	( @NAME              nvarchar(10)
	, @LCID              int
	, @ACTIVE            bit
	, @NATIVE_NAME       nvarchar(80)
	, @DISPLAY_NAME      nvarchar(80)
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	declare @MODIFIED_USER_ID  uniqueidentifier;
	if not exists(select * from LANGUAGES where NAME = @NAME and DELETED = 0) begin -- then
		set @ID = newid();
		insert into LANGUAGES
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, NAME             
			, LCID             
			, ACTIVE           
			, NATIVE_NAME      
			, DISPLAY_NAME     
			)
		values
			( @ID               
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @NAME             
			, @LCID             
			, @ACTIVE           
			, @NATIVE_NAME      
			, @DISPLAY_NAME     
			);
	end -- if;
	-- 01/13/2006 Paul.  InsertOnly is used when importing a Language Pack. Enable the language if necessary. 
	-- 05/21/2008 Paul.  Language is no longer automatically enabled. Now that we add all supported languages, only support the minimum. 
  end
GO
 
Grant Execute on dbo.spLANGUAGES_InsertOnly to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spLANGUAGES_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spLANGUAGES_Update;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spLANGUAGES_Update
	( @ID                uniqueidentifier output
	, @MODIFIED_USER_ID  uniqueidentifier
	, @NAME              nvarchar(10)
	, @LCID              int
	, @ACTIVE            bit
	, @NATIVE_NAME       nvarchar(80)
	, @DISPLAY_NAME      nvarchar(80)
	)
as
  begin
	set nocount on
	
	if not exists(select * from LANGUAGES where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into LANGUAGES
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, NAME             
			, LCID             
			, ACTIVE           
			, NATIVE_NAME      
			, DISPLAY_NAME     
			)
		values
			( @ID               
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @NAME             
			, @LCID             
			, @ACTIVE           
			, @NATIVE_NAME      
			, @DISPLAY_NAME     
			);
	end else begin
		update LANGUAGES
		   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
		     , DATE_MODIFIED     =  getdate()        
		     , DATE_MODIFIED_UTC =  getutcdate()     
		     , NAME              = @NAME             
		     , LCID              = @LCID             
		     , ACTIVE            = @ACTIVE           
		     , NATIVE_NAME       = @NATIVE_NAME      
		     , DISPLAY_NAME      = @DISPLAY_NAME     
		 where ID                = @ID               ;
	end -- if;
  end
GO
 
Grant Execute on dbo.spLANGUAGES_Update to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spMODULES_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spMODULES_Delete;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spMODULES_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	update MODULES
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID = @ID;
  end
GO
 
Grant Execute on dbo.spMODULES_Delete to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spMODULES_GROUPS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spMODULES_GROUPS_Delete;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spMODULES_GROUPS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	update MODULES_GROUPS
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID = @ID;
  end
GO

Grant Execute on dbo.spMODULES_GROUPS_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spMODULES_GROUPS_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spMODULES_GROUPS_InsertOnly;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 02/24/2010 Paul.  We need to specify an order to the modules for the tab menu. 
Create Procedure dbo.spMODULES_GROUPS_InsertOnly
	( @GROUP_NAME         nvarchar(25)
	, @MODULE_NAME        nvarchar(50)
	, @MODULE_ORDER       int
	, @MODULE_MENU        bit
	)
as
  begin
	set nocount on
	
	declare @ID                 uniqueidentifier;
	declare @MODIFIED_USER_ID   uniqueidentifier;
	-- BEGIN Oracle Exception
		select @ID = ID
		  from MODULES_GROUPS
		 where GROUP_NAME        = @GROUP_NAME
		   and MODULE_NAME       = @MODULE_NAME
		   and DELETED           = 0;
	-- END Oracle Exception
	
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into MODULES_GROUPS
			( ID                
			, CREATED_BY        
			, DATE_ENTERED      
			, MODIFIED_USER_ID  
			, DATE_MODIFIED     
			, DATE_MODIFIED_UTC 
			, GROUP_NAME        
			, MODULE_NAME       
			, MODULE_ORDER      
			, MODULE_MENU       
			)
		values 	( @ID                
			, @MODIFIED_USER_ID  
			,  getdate()         
			, @MODIFIED_USER_ID  
			,  getdate()         
			,  getutcdate()      
			, @GROUP_NAME        
			, @MODULE_NAME       
			, @MODULE_ORDER      
			, @MODULE_MENU       
			);
	end -- if;
  end
GO

Grant Execute on dbo.spMODULES_GROUPS_InsertOnly to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spMODULES_GROUPS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spMODULES_GROUPS_Update;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 02/24/2010 Paul.  We need to specify an order to the modules for the tab menu. 
Create Procedure dbo.spMODULES_GROUPS_Update
	( @MODIFIED_USER_ID   uniqueidentifier
	, @GROUP_NAME         nvarchar(25)
	, @MODULE_NAME        nvarchar(50)
	, @MODULE_ORDER       int
	, @MODULE_MENU        bit
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	-- BEGIN Oracle Exception
		select @ID = ID
		  from MODULES_GROUPS
		 where GROUP_NAME        = @GROUP_NAME
		   and MODULE_NAME       = @MODULE_NAME
		   and DELETED           = 0;
	-- END Oracle Exception
	
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into MODULES_GROUPS
			( ID                
			, CREATED_BY        
			, DATE_ENTERED      
			, MODIFIED_USER_ID  
			, DATE_MODIFIED     
			, DATE_MODIFIED_UTC 
			, GROUP_NAME        
			, MODULE_NAME       
			, MODULE_ORDER      
			, MODULE_MENU       
			)
		values 	( @ID                
			, @MODIFIED_USER_ID  
			,  getdate()         
			, @MODIFIED_USER_ID  
			,  getdate()         
			,  getutcdate()      
			, @GROUP_NAME        
			, @MODULE_NAME       
			, @MODULE_ORDER      
			, @MODULE_MENU       
			);
	end -- if;
  end
GO

Grant Execute on dbo.spMODULES_GROUPS_Update to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spMODULES_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spMODULES_InsertOnly;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/24/2006 Paul.  Add IS_ADMIN to simplify ACL management. 
-- 04/24/2006 Paul.  When a module is inserted, also make sure to add the ACL_ACTIONS. 
-- 05/02/2006 Paul.  Add TABLE_NAME as direct table queries are required by SOAP and we need a mapping. 
-- 05/20/2006 Paul.  Add REPORT_ENABLED if the module can be the basis of a report. ACL rules will still apply. 
-- 10/06/2006 Paul.  Add IMPORT_ENABLED if the module can allow importing. 
-- 09/17/2008 Paul.  We need to be able to enable a few mobile modules. 
-- 01/13/2010 Paul.  Add the MASS_UPDATE_ENABLED flag. 
-- 04/01/2010 Paul.  Add Exchange Sync flag. 
-- 05/02/2010 Paul.  Need to be able to set the default for EXCHANGE_FOLDERS and EXCHANGE_CREATE_PARENT.
-- 09/12/2011 Paul.  REST_ENABLED provides a way to enable/disable a module in the REST API. 
-- 03/14/2014 Paul.  DUPLICATE_CHECHING_ENABLED enables duplicate checking. 
Create Procedure dbo.spMODULES_InsertOnly
	( @MODIFIED_USER_ID       uniqueidentifier
	, @MODULE_NAME            nvarchar(25)
	, @DISPLAY_NAME           nvarchar(50)
	, @RELATIVE_PATH          nvarchar(50)
	, @MODULE_ENABLED         bit
	, @TAB_ENABLED            bit
	, @TAB_ORDER              int
	, @PORTAL_ENABLED         bit
	, @CUSTOM_ENABLED         bit
	, @REPORT_ENABLED         bit
	, @IMPORT_ENABLED         bit
	, @IS_ADMIN               bit
	, @TABLE_NAME             nvarchar(30)
	, @MOBILE_ENABLED         bit = null
	, @MASS_UPDATE_ENABLED    bit = null
	, @EXCHANGE_SYNC          bit = null
	, @EXCHANGE_FOLDERS       bit = null
	, @EXCHANGE_CREATE_PARENT bit = null
	, @REST_ENABLED           bit = null
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	

	-- BEGIN Oracle Exception
		select @ID = ID
		  from MODULES
		 where MODULE_NAME = @MODULE_NAME
		   and DELETED      = 0          ;
	-- END Oracle Exception
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into MODULES
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, MODULE_NAME      
			, DISPLAY_NAME     
			, RELATIVE_PATH    
			, MODULE_ENABLED   
			, TAB_ENABLED      
			, TAB_ORDER        
			, PORTAL_ENABLED   
			, CUSTOM_ENABLED   
			, REPORT_ENABLED   
			, IMPORT_ENABLED   
			, IS_ADMIN         
			, TABLE_NAME       
			, MOBILE_ENABLED   
			, MASS_UPDATE_ENABLED
			, EXCHANGE_SYNC    
			, EXCHANGE_FOLDERS      
			, EXCHANGE_CREATE_PARENT
			, REST_ENABLED     
			, DUPLICATE_CHECHING_ENABLED
			)
		values 
			( @ID               
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODULE_NAME      
			, @DISPLAY_NAME     
			, @RELATIVE_PATH    
			, @MODULE_ENABLED   
			, @TAB_ENABLED      
			, @TAB_ORDER        
			, @PORTAL_ENABLED   
			, @CUSTOM_ENABLED   
			, @REPORT_ENABLED   
			, @IMPORT_ENABLED   
			, @IS_ADMIN         
			, @TABLE_NAME       
			, @MOBILE_ENABLED   
			, @MASS_UPDATE_ENABLED
			, @EXCHANGE_SYNC    
			, @EXCHANGE_FOLDERS      
			, @EXCHANGE_CREATE_PARENT
			, @REST_ENABLED     
			, null
			);

		exec dbo.spACL_ACTIONS_InsertOnly 'admin' , @MODULE_NAME, 'module',  1;
		exec dbo.spACL_ACTIONS_InsertOnly 'access', @MODULE_NAME, 'module', 89;
		exec dbo.spACL_ACTIONS_InsertOnly 'view'  , @MODULE_NAME, 'module', 90;
		exec dbo.spACL_ACTIONS_InsertOnly 'list'  , @MODULE_NAME, 'module', 90;
		exec dbo.spACL_ACTIONS_InsertOnly 'edit'  , @MODULE_NAME, 'module', 90;
		exec dbo.spACL_ACTIONS_InsertOnly 'delete', @MODULE_NAME, 'module', 90;
		exec dbo.spACL_ACTIONS_InsertOnly 'import', @MODULE_NAME, 'module', 90;
		exec dbo.spACL_ACTIONS_InsertOnly 'export', @MODULE_NAME, 'module', 90;
	end -- if;

  end
GO
 
Grant Execute on dbo.spMODULES_InsertOnly to public;
GO
 

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spMODULES_TAB_Hide' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spMODULES_TAB_Hide;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/27/2007 Paul.  Update auditing records for primary module being modified only.
-- No sense in updating the auditing records for all modules as it would confuse the issue. 
-- 04/21/2009 Paul.  Correct any ordering problems. 
-- 09/13/2010 Paul.  If the data is bad, then the there may be more than one record with the tab order 
-- so make sure to only return one record. 
Create Procedure dbo.spMODULES_TAB_Hide
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID    uniqueidentifier;
	declare @TAB_ORDER  int;
	if exists(select * from MODULES where ID = @ID and DELETED = 0) begin -- then
		-- 11/17/2007 Paul.  First disable, then only reset the tab order if not visible on mobile. 
		-- BEGIN Oracle Exception
			update MODULES
			   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
			     , DATE_MODIFIED     =  getdate()        
			     , DATE_MODIFIED_UTC =  getutcdate()     
			     , TAB_ENABLED       = 0
			 where ID                = @ID
			   and DELETED           = 0;
		-- END Oracle Exception

		if exists(select * from MODULES where ID = @ID and TAB_ENABLED = 0 and MOBILE_ENABLED = 0 and DELETED = 0) begin -- then
			-- BEGIN Oracle Exception
				select @TAB_ORDER = TAB_ORDER
				  from MODULES
				 where ID          = @ID
				   and DELETED     = 0;
			-- END Oracle Exception
			
			-- 01/04/2006 Paul.  Hidden modules get an order of 0. 
			-- BEGIN Oracle Exception
				update MODULES
				   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
				     , DATE_MODIFIED     =  getdate()        
				     , DATE_MODIFIED_UTC =  getutcdate()     
				     , TAB_ORDER         = 0
				 where ID                = @ID
				   and DELETED           = 0;
			-- END Oracle Exception
			
			-- BEGIN Oracle Exception
				-- 09/13/2010 Paul.  If the data is bad, then the there may be more than one record with the tab order 
				-- so make sure to only return one record. 
				select top 1 @SWAP_ID   = ID
				  from MODULES
				 where TAB_ORDER  = @TAB_ORDER
				   and DELETED    = 0
				 order by TAB_ORDER;
			-- END Oracle Exception
	
			-- 01/04/2006 Paul.  Shift all modules down, but only if there is no duplicate order value. 
			if dbo.fnIsEmptyGuid(@SWAP_ID) = 1 begin -- then
				-- BEGIN Oracle Exception
					update MODULES
					   set TAB_ORDER = TAB_ORDER - 1
					 where TAB_ORDER > @TAB_ORDER
					   and DELETED = 0;
				-- END Oracle Exception
			end -- if;
		end -- if;

		-- 04/21/2009 Paul.  Correct any ordering problems. 
		exec dbo.spMODULES_TAB_ORDER_Reorder @MODIFIED_USER_ID;
	end -- if;
  end
GO

Grant Execute on dbo.spMODULES_TAB_Hide to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spMODULES_TAB_HideMobile' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spMODULES_TAB_HideMobile;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/21/2009 Paul.  Correct any ordering problems. 
-- 09/13/2010 Paul.  If the data is bad, then the there may be more than one record with the tab order 
-- so make sure to only return one record. 
Create Procedure dbo.spMODULES_TAB_HideMobile
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID    uniqueidentifier;
	declare @TAB_ORDER  int;
	if exists(select * from MODULES where ID = @ID and DELETED = 0) begin -- then
		-- 11/17/2007 Paul.  First disable, then only reset the tab order if not visible on mobile. 
		-- BEGIN Oracle Exception
			update MODULES
			   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
			     , DATE_MODIFIED     =  getdate()        
			     , DATE_MODIFIED_UTC =  getutcdate()     
			     , MOBILE_ENABLED    = 0
			 where ID                = @ID
			   and DELETED           = 0;
		-- END Oracle Exception

		if exists(select * from MODULES where ID = @ID and TAB_ENABLED = 0 and MOBILE_ENABLED = 0 and DELETED = 0) begin -- then
			-- BEGIN Oracle Exception
				select @TAB_ORDER = TAB_ORDER
				  from MODULES
				 where ID          = @ID
				   and DELETED     = 0;
			-- END Oracle Exception
			
			-- 01/04/2006 Paul.  Hidden modules get an order of 0. 
			-- BEGIN Oracle Exception
				update MODULES
				   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
				     , DATE_MODIFIED     =  getdate()        
				     , DATE_MODIFIED_UTC =  getutcdate()     
				     , TAB_ORDER         = 0
				 where ID                = @ID
				   and DELETED           = 0;
			-- END Oracle Exception
			
			-- BEGIN Oracle Exception
				-- 09/13/2010 Paul.  If the data is bad, then the there may be more than one record with the tab order 
				-- so make sure to only return one record. 
				select top 1 @SWAP_ID   = ID
				  from MODULES
				 where TAB_ORDER  = @TAB_ORDER
				   and DELETED    = 0
				 order by TAB_ORDER;
			-- END Oracle Exception
	
			-- 01/04/2006 Paul.  Shift all modules down, but only if there is no duplicate order value. 
			if dbo.fnIsEmptyGuid(@SWAP_ID) = 1 begin -- then
				-- BEGIN Oracle Exception
					update MODULES
					   set TAB_ORDER = TAB_ORDER - 1
					 where TAB_ORDER > @TAB_ORDER
					   and DELETED = 0;
				-- END Oracle Exception
			end -- if;
		end -- if;

		-- 04/21/2009 Paul.  Correct any ordering problems. 
		exec dbo.spMODULES_TAB_ORDER_Reorder @MODIFIED_USER_ID;
	end -- if;
  end
GO

Grant Execute on dbo.spMODULES_TAB_HideMobile to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spMODULES_TAB_ORDER_MoveDown' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spMODULES_TAB_ORDER_MoveDown;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/21/2009 Paul.  Correct any ordering problems before moving. 
Create Procedure dbo.spMODULES_TAB_ORDER_MoveDown
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID    uniqueidentifier;
	declare @TAB_ORDER  int;
	if exists(select * from MODULES where ID = @ID and DELETED = 0) begin -- then
		-- 04/21/2009 Paul.  Correct any ordering problems before moving. 
		exec dbo.spMODULES_TAB_ORDER_Reorder @MODIFIED_USER_ID;

		-- BEGIN Oracle Exception
			select @TAB_ORDER = TAB_ORDER
			  from MODULES
			 where ID          = @ID
			   and DELETED     = 0;
		-- END Oracle Exception
		
		-- Moving down actually means incrementing the order value. 
		-- BEGIN Oracle Exception
			select @SWAP_ID   = ID
			  from MODULES
			 where TAB_ORDER = @TAB_ORDER + 1
			   and DELETED    = 0;
		-- END Oracle Exception
		if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 begin -- then
			-- BEGIN Oracle Exception
				update MODULES
				   set TAB_ORDER       = TAB_ORDER + 1
				     , DATE_MODIFIED    = getdate()
				     , DATE_MODIFIED_UTC= getutcdate()
				     , MODIFIED_USER_ID = @MODIFIED_USER_ID
				 where ID               = @ID;
			-- END Oracle Exception
			-- BEGIN Oracle Exception
				update MODULES
				   set TAB_ORDER       = TAB_ORDER - 1
				     , DATE_MODIFIED    = getdate()
				     , DATE_MODIFIED_UTC= getutcdate()
				     , MODIFIED_USER_ID = @MODIFIED_USER_ID
				 where ID               = @SWAP_ID;
			-- END Oracle Exception
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spMODULES_TAB_ORDER_MoveDown to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spMODULES_TAB_ORDER_MoveItem' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spMODULES_TAB_ORDER_MoveItem;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spMODULES_TAB_ORDER_MoveItem
	( @MODIFIED_USER_ID uniqueidentifier
	, @OLD_INDEX        int
	, @NEW_INDEX        int
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID    uniqueidentifier;
	-- BEGIN Oracle Exception
		select @SWAP_ID   = ID
		  from MODULES
		 where TAB_ORDER  = @OLD_INDEX
		   and DELETED    = 0;
	-- END Oracle Exception

	if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 and (@OLD_INDEX > @NEW_INDEX or @OLD_INDEX < @NEW_INDEX) begin -- then
		if @OLD_INDEX < @NEW_INDEX begin -- then
			update MODULES
			   set TAB_ORDER         = TAB_ORDER - 1
			     , DATE_MODIFIED     = getdate()
			     , DATE_MODIFIED_UTC = getutcdate()
			     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
			 where TAB_ORDER        >= @OLD_INDEX
			   and TAB_ORDER        <= @NEW_INDEX
			   and DELETED           = 0;
		end else if @OLD_INDEX > @NEW_INDEX begin -- then
			update MODULES
			   set TAB_ORDER         = TAB_ORDER + 1
			     , DATE_MODIFIED     = getdate()
			     , DATE_MODIFIED_UTC = getutcdate()
			     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
			 where TAB_ORDER        >= @NEW_INDEX
			   and TAB_ORDER        <= @OLD_INDEX
			   and DELETED           = 0;
		end -- if;
		update MODULES
		   set TAB_ORDER         = @NEW_INDEX
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
		 where ID                = @SWAP_ID
		   and DELETED           = 0;
	end -- if;
  end
GO

Grant Execute on dbo.spMODULES_TAB_ORDER_MoveItem to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spMODULES_TAB_ORDER_MoveUp' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spMODULES_TAB_ORDER_MoveUp;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/21/2009 Paul.  Correct any ordering problems before moving. 
Create Procedure dbo.spMODULES_TAB_ORDER_MoveUp
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID    uniqueidentifier;
	declare @TAB_ORDER  int;
	if exists(select * from MODULES where ID = @ID and DELETED = 0) begin -- then
		-- 04/21/2009 Paul.  Correct any ordering problems before moving. 
		exec dbo.spMODULES_TAB_ORDER_Reorder @MODIFIED_USER_ID;

		-- BEGIN Oracle Exception
			select @TAB_ORDER = TAB_ORDER
			  from MODULES
			 where ID          = @ID
			   and DELETED     = 0;
		-- END Oracle Exception
		-- 01/04/2006 Paul.  TAB_ORDER 0 is reserved.  Don't allow decrease below 1. 
		if @TAB_ORDER > 1 begin -- then
			-- BEGIN Oracle Exception
				select @SWAP_ID   = ID
				  from MODULES
				 where TAB_ORDER = @TAB_ORDER - 1
				   and DELETED    = 0;
			-- END Oracle Exception
			-- Moving up actually means decrementing the order value. 
			if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 begin -- then
				-- BEGIN Oracle Exception
					update MODULES
					   set TAB_ORDER       = TAB_ORDER - 1
					     , DATE_MODIFIED    = getdate()
					     , DATE_MODIFIED_UTC= getutcdate()
					     , MODIFIED_USER_ID = @MODIFIED_USER_ID
					 where ID               = @ID;
				-- END Oracle Exception
				-- BEGIN Oracle Exception
					update MODULES
					   set TAB_ORDER       = TAB_ORDER + 1
					     , DATE_MODIFIED    = getdate()
					     , DATE_MODIFIED_UTC= getutcdate()
					     , MODIFIED_USER_ID = @MODIFIED_USER_ID
					 where ID               = @SWAP_ID;
				-- END Oracle Exception
			end -- if;
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spMODULES_TAB_ORDER_MoveUp to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spMODULES_TAB_Show' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spMODULES_TAB_Show;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/27/2007 Paul.  Update auditing records for primary module being modified only.
-- No sense in updating the auditing records for all modules as it would confuse the issue. 
-- 04/21/2009 Paul.  Correct any ordering problems. 
-- 09/13/2010 Paul.  If the data is bad, then the there may be more than one record with the tab order 
-- so make sure to only return one record. 
Create Procedure dbo.spMODULES_TAB_Show
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID    uniqueidentifier;
	declare @TAB_ORDER  int;
	if exists(select * from MODULES where ID = @ID and DELETED = 0) begin -- then
		-- 11/17/2007 Paul.  First enable the module, then adjust the tab order if necessary. 
		-- This is so that a hidden tab can still be ordered properly when displayed on a mobile browser. 
		-- BEGIN Oracle Exception
			update MODULES
			   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
			     , DATE_MODIFIED     =  getdate()        
			     , DATE_MODIFIED_UTC =  getutcdate()     
			     , TAB_ENABLED       = 1
			 where ID                = @ID
			   and DELETED           = 0;
		-- END Oracle Exception

		if exists(select * from MODULES where ID = @ID and TAB_ORDER = 0 and DELETED = 0) begin -- then
			-- 09/13/2010 Paul.  If the data is bad, then the there may be more than one record with the tab order 
			-- so make sure to only return one record. 
			-- BEGIN Oracle Exception
				select top 1 @SWAP_ID   = ID
				  from MODULES
				 where TAB_ORDER  = 1
				   and DELETED    = 0
				 order by TAB_ORDER;
			-- END Oracle Exception
			-- 01/04/2005 Paul.  If there is a module at 1, shift all modules so that this one can be 1. 
			if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 begin -- then
				-- 04/02/2006 Paul.  Catch the Oracle NO_DATA_FOUND exception. 
				-- BEGIN Oracle Exception
					update MODULES
					   set TAB_ORDER = TAB_ORDER + 1
					 where TAB_ORDER > 0
					   and DELETED = 0;
				-- END Oracle Exception
			end -- if;
			
			-- 01/04/2006 Paul.  Modules made visible start at tab 1. 
			-- BEGIN Oracle Exception
				update MODULES
				   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
				     , DATE_MODIFIED     =  getdate()        
				     , DATE_MODIFIED_UTC =  getutcdate()     
				     , TAB_ORDER         = 1
				 where ID                = @ID
				   and DELETED           = 0;
			-- END Oracle Exception
		end -- if;

		-- 04/21/2009 Paul.  Correct any ordering problems. 
		exec dbo.spMODULES_TAB_ORDER_Reorder @MODIFIED_USER_ID;
	end -- if;
  end
GO

Grant Execute on dbo.spMODULES_TAB_Show to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spMODULES_TAB_ShowMobile' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spMODULES_TAB_ShowMobile;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/21/2009 Paul.  Correct any ordering problems. 
-- 09/13/2010 Paul.  If the data is bad, then the there may be more than one record with the tab order 
-- so make sure to only return one record. 
Create Procedure dbo.spMODULES_TAB_ShowMobile
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID    uniqueidentifier;
	declare @TAB_ORDER  int;
	if exists(select * from MODULES where ID = @ID and DELETED = 0) begin -- then
		-- 11/17/2007 Paul.  First enable the module, then adjust the tab order if necessary. 
		-- BEGIN Oracle Exception
			update MODULES
			   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
			     , DATE_MODIFIED     =  getdate()        
			     , DATE_MODIFIED_UTC =  getutcdate()     
			     , MOBILE_ENABLED    = 1
			 where ID                = @ID
			   and DELETED           = 0;
		-- END Oracle Exception

		if exists(select * from MODULES where ID = @ID and TAB_ORDER = 0 and DELETED = 0) begin -- then
			-- 09/13/2010 Paul.  If the data is bad, then the there may be more than one record with the tab order 
			-- so make sure to only return one record. 
			-- BEGIN Oracle Exception
				select top 1 @SWAP_ID   = ID
				  from MODULES
				 where TAB_ORDER  = 1
				   and DELETED    = 0
				 order by TAB_ORDER;
			-- END Oracle Exception
			-- 01/04/2005 Paul.  If there is a module at 1, shift all modules so that this one can be 1. 
			if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 begin -- then
				-- 04/02/2006 Paul.  Catch the Oracle NO_DATA_FOUND exception. 
				-- BEGIN Oracle Exception
					update MODULES
					   set TAB_ORDER = TAB_ORDER + 1
					 where TAB_ORDER > 0
					   and DELETED = 0;
				-- END Oracle Exception
			end -- if;
			
			-- 01/04/2006 Paul.  Modules made visible start at tab 1. 
			-- BEGIN Oracle Exception
				update MODULES
				   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
				     , DATE_MODIFIED     =  getdate()        
				     , DATE_MODIFIED_UTC =  getutcdate()     
				     , TAB_ORDER         = 1
				 where ID                = @ID
				   and DELETED           = 0;
			-- END Oracle Exception
		end -- if;

		-- 04/21/2009 Paul.  Correct any ordering problems. 
		exec dbo.spMODULES_TAB_ORDER_Reorder @MODIFIED_USER_ID;
	end -- if;
  end
GO

Grant Execute on dbo.spMODULES_TAB_ShowMobile to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spOAUTH_TOKENS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spOAUTH_TOKENS_Delete;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spOAUTH_TOKENS_Delete
	( @MODIFIED_USER_ID uniqueidentifier
	, @ASSIGNED_USER_ID uniqueidentifier
	, @NAME             nvarchar(25)
	)
as
  begin
	set nocount on
	
	-- BEGIN Oracle Exception
		update OAUTH_TOKENS
		   set DELETED          = 1
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where ASSIGNED_USER_ID = @ASSIGNED_USER_ID
		   and NAME             = @NAME
		   and DELETED          = 0;
	-- END Oracle Exception
  end
GO

Grant Execute on dbo.spOAUTH_TOKENS_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spOUTBOUND_EMAILS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spOUTBOUND_EMAILS_Delete;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spOUTBOUND_EMAILS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	update OUTBOUND_EMAILS
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID = @ID;
  end
GO
 
Grant Execute on dbo.spOUTBOUND_EMAILS_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spOUTBOUND_EMAILS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spOUTBOUND_EMAILS_Update;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/16/2013 Paul.  spOUTBOUND_EMAILS_Update now returns the ID. 
-- 04/20/2016 Paul.  Add team management to Outbound Emails. 
-- 01/17/2017 Paul.  @MAIL_SMTPUSER will be null for Office 365 and other OAuth accounts. 
-- 01/17/2017 Paul.  Increase size of @MAIL_SENDTYPE to fit office365. 
-- 05/05/2021 Paul.  Must prevent multiple system-override records as there can be only, otherwise vwUSERS_Edit will return multiple records. 
Create Procedure dbo.spOUTBOUND_EMAILS_Update
	( @ID                 uniqueidentifier output
	, @MODIFIED_USER_ID   uniqueidentifier
	, @NAME               nvarchar(50)
	, @TYPE               nvarchar(15)
	, @USER_ID            uniqueidentifier
	, @MAIL_SENDTYPE      nvarchar(25)
	, @MAIL_SMTPTYPE      nvarchar(20)
	, @MAIL_SMTPSERVER    nvarchar(100)
	, @MAIL_SMTPPORT      int
	, @MAIL_SMTPUSER      nvarchar(100)
	, @MAIL_SMTPPASS      nvarchar(100)
	, @MAIL_SMTPAUTH_REQ  bit
	, @MAIL_SMTPSSL       int
	, @FROM_NAME          nvarchar(100) = null
	, @FROM_ADDR          nvarchar(100) = null
	, @TEAM_ID            uniqueidentifier = null
	, @TEAM_SET_LIST      varchar(8000) = null
	)
as
  begin
	set nocount on
	
	-- 04/20/2016 Paul.  Add team management to Outbound Emails. 
	declare @TEAM_SET_ID         uniqueidentifier;
	exec dbo.spTEAM_SETS_NormalizeSet @TEAM_SET_ID out, @MODIFIED_USER_ID, @TEAM_ID, @TEAM_SET_LIST;

	-- 05/05/2021 Paul.  Must prevent multiple system-override records as there can be only, otherwise vwUSERS_Edit will return multiple records. 
	-- The problem is likely that this procedure is called instead of spOUTBOUND_EMAILS_UpdateUser. 
	if @ID is null and @TYPE = N'system-override' begin -- then
		select @ID = ID
		  from OUTBOUND_EMAILS
		 where USER_ID = @USER_ID 
		   and TYPE    = N'system-override'
		   and DELETED = 0;
	end -- if;

	if not exists(select * from OUTBOUND_EMAILS where ID = @ID) begin -- then
		-- 07/09/2010 Paul.  Don't create the OUTBOUND_EMAILS record unless the SMTP User is specified. 
		-- 01/17/2017 Paul.  @MAIL_SMTPUSER will be null for Office 365 and other OAuth accounts. 
		-- 02/06/2017 Paul.  ASSIGNED_USER_ID could be the USER_ID or the OUTBOUND_EMAILS.ID. 
		if @MAIL_SMTPUSER is not null or exists(select * from OAUTH_TOKENS where (ASSIGNED_USER_ID = @USER_ID or ASSIGNED_USER_ID = @ID) and DELETED = 0) begin -- then
			-- 07/05/2018 Paul.  We need to prevent duplicate records when dealing with Office365. 
			if not exists(select * from OUTBOUND_EMAILS where USER_ID = @USER_ID and TYPE = N'system-override' and MAIL_SENDTYPE = @MAIL_SENDTYPE and DELETED = 0) begin -- then
				if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
					set @ID = newid();
				end -- if;
				insert into OUTBOUND_EMAILS
					( ID                
					, CREATED_BY        
					, DATE_ENTERED      
					, MODIFIED_USER_ID  
					, DATE_MODIFIED     
					, DATE_MODIFIED_UTC 
					, NAME              
					, TYPE              
					, USER_ID           
					, MAIL_SENDTYPE     
					, MAIL_SMTPTYPE     
					, MAIL_SMTPSERVER   
					, MAIL_SMTPPORT     
					, MAIL_SMTPUSER     
					, MAIL_SMTPPASS     
					, MAIL_SMTPAUTH_REQ 
					, MAIL_SMTPSSL      
					, FROM_NAME         
					, FROM_ADDR         
					, TEAM_ID           
					, TEAM_SET_ID       
					)
				values 	( @ID                
					, @MODIFIED_USER_ID  
					,  getdate()         
					, @MODIFIED_USER_ID  
					,  getdate()         
					,  getutcdate()      
					, @NAME              
					, @TYPE              
					, @USER_ID           
					, @MAIL_SENDTYPE     
					, @MAIL_SMTPTYPE     
					, @MAIL_SMTPSERVER   
					, @MAIL_SMTPPORT     
					, @MAIL_SMTPUSER     
					, @MAIL_SMTPPASS     
					, @MAIL_SMTPAUTH_REQ 
					, @MAIL_SMTPSSL      
					, @FROM_NAME         
					, @FROM_ADDR         
					, @TEAM_ID           
					, @TEAM_SET_ID       
					);
			end -- if;
		end -- if;
	end else begin
		update OUTBOUND_EMAILS
		   set MODIFIED_USER_ID   = @MODIFIED_USER_ID  
		     , DATE_MODIFIED      =  getdate()         
		     , DATE_MODIFIED_UTC  =  getutcdate()      
		     , NAME               = @NAME              
		     , TYPE               = @TYPE              
		     , USER_ID            = @USER_ID           
		     , MAIL_SENDTYPE      = @MAIL_SENDTYPE     
		     , MAIL_SMTPTYPE      = @MAIL_SMTPTYPE     
		     , MAIL_SMTPSERVER    = @MAIL_SMTPSERVER   
		     , MAIL_SMTPPORT      = @MAIL_SMTPPORT     
		     , MAIL_SMTPUSER      = @MAIL_SMTPUSER     
		     , MAIL_SMTPPASS      = @MAIL_SMTPPASS     
		     , MAIL_SMTPAUTH_REQ  = @MAIL_SMTPAUTH_REQ 
		     , MAIL_SMTPSSL       = @MAIL_SMTPSSL      
		     , FROM_NAME          = @FROM_NAME         
		     , FROM_ADDR          = @FROM_ADDR         
		     , TEAM_ID            = @TEAM_ID           
		     , TEAM_SET_ID        = @TEAM_SET_ID       
		 where ID                 = @ID                ;
	end -- if;
  end
GO

Grant Execute on dbo.spOUTBOUND_EMAILS_Update to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spOUTBOUND_SMS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spOUTBOUND_SMS_Delete;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spOUTBOUND_SMS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	-- BEGIN Oracle Exception
		update OUTBOUND_SMS
		   set DELETED           = 1
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
		 where ID               = @ID
		   and DELETED          = 0;
	-- END Oracle Exception
  end
GO

Grant Execute on dbo.spOUTBOUND_SMS_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spOUTBOUND_SMS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spOUTBOUND_SMS_Update;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spOUTBOUND_SMS_Update
	( @ID                 uniqueidentifier output
	, @MODIFIED_USER_ID   uniqueidentifier
	, @NAME               nvarchar(60)
	, @USER_ID            uniqueidentifier
	, @FROM_NUMBER        nvarchar(100)
	)
as
  begin
	set nocount on
	
	if not exists(select * from OUTBOUND_SMS where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into OUTBOUND_SMS
			( ID                
			, CREATED_BY        
			, DATE_ENTERED      
			, MODIFIED_USER_ID  
			, DATE_MODIFIED     
			, DATE_MODIFIED_UTC 
			, NAME              
			, USER_ID           
			, FROM_NUMBER       
			)
		values 	( @ID                
			, @MODIFIED_USER_ID        
			,  getdate()         
			, @MODIFIED_USER_ID  
			,  getdate()         
			,  getutcdate()      
			, @NAME              
			, @USER_ID           
			, @FROM_NUMBER       
			);
	end else begin
		update OUTBOUND_SMS
		   set MODIFIED_USER_ID   = @MODIFIED_USER_ID  
		     , DATE_MODIFIED      =  getdate()         
		     , DATE_MODIFIED_UTC  =  getutcdate()      
		     , NAME               = @NAME              
		     , USER_ID            = @USER_ID           
		     , FROM_NUMBER        = @FROM_NUMBER       
		 where ID                 = @ID                ;
	end -- if;
  end
GO

Grant Execute on dbo.spOUTBOUND_SMS_Update to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spREACT_CUSTOM_VIEWS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spREACT_CUSTOM_VIEWS_Delete;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spREACT_CUSTOM_VIEWS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	-- BEGIN Oracle Exception
		update REACT_CUSTOM_VIEWS
		   set DELETED           = 1
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
		 where ID                = @ID
		   and DELETED           = 0;
	-- END Oracle Exception
  end
GO

Grant Execute on dbo.spREACT_CUSTOM_VIEWS_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spREACT_CUSTOM_VIEWS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spREACT_CUSTOM_VIEWS_Update;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/06/2021 Paul.  spSUGARFAVORITES_UpdateName does not apply to REACT_CUSTOM_VIEWS. 
Create Procedure dbo.spREACT_CUSTOM_VIEWS_Update
	( @ID                 uniqueidentifier output
	, @MODIFIED_USER_ID   uniqueidentifier
	, @NAME               nvarchar(100)
	, @MODULE_NAME        nvarchar(50)
	, @CATEGORY           nvarchar(25)
	, @CONTENT            nvarchar(max)
	)
as
  begin
	set nocount on
	
	if exists(select * from REACT_CUSTOM_VIEWS where NAME = @NAME and MODULE_NAME = @MODULE_NAME and CATEGORY = @CATEGORY and (ID <> @ID or @ID is null)) begin -- then
		raiserror(N'spREACT_CUSTOM_VIEWS_Update: A custom view for module %s and category %s', 16, 1, @MODULE_NAME, @CATEGORY);
		return;
	end -- if;
	if not exists(select * from REACT_CUSTOM_VIEWS where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into REACT_CUSTOM_VIEWS
			( ID                
			, CREATED_BY        
			, DATE_ENTERED      
			, MODIFIED_USER_ID  
			, DATE_MODIFIED     
			, DATE_MODIFIED_UTC 
			, NAME              
			, MODULE_NAME       
			, CATEGORY          
			, CONTENT           
			)
		values 	( @ID                
			, @MODIFIED_USER_ID        
			,  getdate()         
			, @MODIFIED_USER_ID  
			,  getdate()         
			,  getutcdate()      
			, @NAME              
			, @MODULE_NAME       
			, @CATEGORY          
			, @CONTENT           
			);
	end else begin
		update REACT_CUSTOM_VIEWS
		   set MODIFIED_USER_ID   = @MODIFIED_USER_ID  
		     , DATE_MODIFIED      =  getdate()         
		     , DATE_MODIFIED_UTC  =  getutcdate()      
		     , NAME               = @NAME              
		     , MODULE_NAME        = @MODULE_NAME       
		     , CATEGORY           = @CATEGORY          
		     , CONTENT            = @CONTENT           
		 where ID                 = @ID                ;
		
		-- 12/06/2021 Paul.  spSUGARFAVORITES_UpdateName does not apply to REACT_CUSTOM_VIEWS. 
	end -- if;
  end
GO

Grant Execute on dbo.spREACT_CUSTOM_VIEWS_Update to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spRELATIONSHIPS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spRELATIONSHIPS_Delete;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spRELATIONSHIPS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	update RELATIONSHIPS
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID = @ID;
  end
GO
 
Grant Execute on dbo.spRELATIONSHIPS_Delete to public;
GO
 
 if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spRELATIONSHIPS_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spRELATIONSHIPS_InsertOnly;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/29/2006 Paul.  @RELATIONSHIP_ROLE_COLUMN_VALUE is too long for Oracle, so reduce globally. 
-- 06/20/2007 Paul.  Use not exists code to simplify conversion to Oracle. 
Create Procedure dbo.spRELATIONSHIPS_InsertOnly
	( @RELATIONSHIP_NAME               nvarchar(150)
	, @LHS_MODULE                      nvarchar(100)
	, @LHS_TABLE                       nvarchar(64)
	, @LHS_KEY                         nvarchar(64)
	, @RHS_MODULE                      nvarchar(100)
	, @RHS_TABLE                       nvarchar(64)
	, @RHS_KEY                         nvarchar(64)
	, @JOIN_TABLE                      nvarchar(64)
	, @JOIN_KEY_LHS                    nvarchar(64)
	, @JOIN_KEY_RHS                    nvarchar(64)
	, @RELATIONSHIP_TYPE               nvarchar(64)
	, @RELATIONSHIP_ROLE_COLUMN        nvarchar(64)
	, @RELATIONSHIP_ROLE_COL_VALUE     nvarchar(50)
	, @REVERSE                         bit
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	if not exists(select * from RELATIONSHIPS where RELATIONSHIP_NAME = @RELATIONSHIP_NAME and DELETED = 0) begin -- then
		set @ID = newid();
		insert into RELATIONSHIPS
			( ID                             
			, CREATED_BY                     
			, DATE_ENTERED                   
			, MODIFIED_USER_ID               
			, DATE_MODIFIED                  
			, RELATIONSHIP_NAME              
			, LHS_MODULE                     
			, LHS_TABLE                      
			, LHS_KEY                        
			, RHS_MODULE                     
			, RHS_TABLE                      
			, RHS_KEY                        
			, JOIN_TABLE                     
			, JOIN_KEY_LHS                   
			, JOIN_KEY_RHS                   
			, RELATIONSHIP_TYPE              
			, RELATIONSHIP_ROLE_COLUMN       
			, RELATIONSHIP_ROLE_COLUMN_VALUE 
			, REVERSE                        
			)
		values 	( @ID                             
			, null                                  
			,  getdate()                      
			, null                            
			,  getdate()                      
			, @RELATIONSHIP_NAME              
			, @LHS_MODULE                     
			, @LHS_TABLE                      
			, @LHS_KEY                        
			, @RHS_MODULE                     
			, @RHS_TABLE                      
			, @RHS_KEY                        
			, @JOIN_TABLE                     
			, @JOIN_KEY_LHS                   
			, @JOIN_KEY_RHS                   
			, @RELATIONSHIP_TYPE              
			, @RELATIONSHIP_ROLE_COLUMN       
			, @RELATIONSHIP_ROLE_COL_VALUE 
			, @REVERSE                        
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spRELATIONSHIPS_InsertOnly to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spRELATIONSHIPS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spRELATIONSHIPS_Update;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/29/2006 Paul.  @RELATIONSHIP_ROLE_COLUMN_VALUE is too long for Oracle, so reduce globally. 
Create Procedure dbo.spRELATIONSHIPS_Update
	( @ID                              uniqueidentifier output
	, @MODIFIED_USER_ID                uniqueidentifier
	, @RELATIONSHIP_NAME               nvarchar(150)
	, @LHS_MODULE                      nvarchar(100)
	, @LHS_TABLE                       nvarchar(64)
	, @LHS_KEY                         nvarchar(64)
	, @RHS_MODULE                      nvarchar(100)
	, @RHS_TABLE                       nvarchar(64)
	, @RHS_KEY                         nvarchar(64)
	, @JOIN_TABLE                      nvarchar(64)
	, @JOIN_KEY_LHS                    nvarchar(64)
	, @JOIN_KEY_RHS                    nvarchar(64)
	, @RELATIONSHIP_TYPE               nvarchar(64)
	, @RELATIONSHIP_ROLE_COLUMN        nvarchar(64)
	, @RELATIONSHIP_ROLE_COL_VALUE     nvarchar(50)
	, @REVERSE                         bit
	)
as
  begin
	set nocount on
	
	if not exists(select * from RELATIONSHIPS where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into RELATIONSHIPS
			( ID                             
			, CREATED_BY                     
			, DATE_ENTERED                   
			, MODIFIED_USER_ID               
			, DATE_MODIFIED                  
			, RELATIONSHIP_NAME              
			, LHS_MODULE                     
			, LHS_TABLE                      
			, LHS_KEY                        
			, RHS_MODULE                     
			, RHS_TABLE                      
			, RHS_KEY                        
			, JOIN_TABLE                     
			, JOIN_KEY_LHS                   
			, JOIN_KEY_RHS                   
			, RELATIONSHIP_TYPE              
			, RELATIONSHIP_ROLE_COLUMN       
			, RELATIONSHIP_ROLE_COLUMN_VALUE 
			, REVERSE                        
			)
		values 	( @ID                             
			, @MODIFIED_USER_ID                     
			,  getdate()                      
			, @MODIFIED_USER_ID               
			,  getdate()                      
			, @RELATIONSHIP_NAME              
			, @LHS_MODULE                     
			, @LHS_TABLE                      
			, @LHS_KEY                        
			, @RHS_MODULE                     
			, @RHS_TABLE                      
			, @RHS_KEY                        
			, @JOIN_TABLE                     
			, @JOIN_KEY_LHS                   
			, @JOIN_KEY_RHS                   
			, @RELATIONSHIP_TYPE              
			, @RELATIONSHIP_ROLE_COLUMN       
			, @RELATIONSHIP_ROLE_COL_VALUE 
			, @REVERSE                        
			);
	end else begin
		update RELATIONSHIPS
		   set MODIFIED_USER_ID                = @MODIFIED_USER_ID               
		     , DATE_MODIFIED                   =  getdate()                      
		     , DATE_MODIFIED_UTC               =  getutcdate()                   
		     , RELATIONSHIP_NAME               = @RELATIONSHIP_NAME              
		     , LHS_MODULE                      = @LHS_MODULE                     
		     , LHS_TABLE                       = @LHS_TABLE                      
		     , LHS_KEY                         = @LHS_KEY                        
		     , RHS_MODULE                      = @RHS_MODULE                     
		     , RHS_TABLE                       = @RHS_TABLE                      
		     , RHS_KEY                         = @RHS_KEY                        
		     , JOIN_TABLE                      = @JOIN_TABLE                     
		     , JOIN_KEY_LHS                    = @JOIN_KEY_LHS                   
		     , JOIN_KEY_RHS                    = @JOIN_KEY_RHS                   
		     , RELATIONSHIP_TYPE               = @RELATIONSHIP_TYPE              
		     , RELATIONSHIP_ROLE_COLUMN        = @RELATIONSHIP_ROLE_COLUMN       
		     , RELATIONSHIP_ROLE_COLUMN_VALUE  = @RELATIONSHIP_ROLE_COL_VALUE 
		     , REVERSE                         = @REVERSE                        
		 where ID                              = @ID                             ;
	end -- if;
  end
GO
 
Grant Execute on dbo.spRELATIONSHIPS_Update to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSAVED_SEARCH_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSAVED_SEARCH_Delete;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spSAVED_SEARCH_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	update SAVED_SEARCH
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID = @ID;
  end
GO

Grant Execute on dbo.spSAVED_SEARCH_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSAVED_SEARCH_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSAVED_SEARCH_Update;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/14/2007 Paul.  When updating, the NAME is only updated if not null.  Module is not updated. 
-- 12/17/2007 Paul.  There can only be one entry for the default of the module. 
-- 07/29/2008 Paul.  Don't updated ASSIGNED_USER_ID.  This will prevent global searches from being over-written. 
-- 12/16/2008 Paul.  When looking for the default view, we need to include the ASSIGNED_USER_ID. 
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
-- 09/01/2010 Paul.  Store a copy of the DEFAULT_SEARCH_ID in the table so that we don't need to read the XML in order to get the value. 
Create Procedure dbo.spSAVED_SEARCH_Update
	( @ID                uniqueidentifier output
	, @MODIFIED_USER_ID  uniqueidentifier
	, @ASSIGNED_USER_ID  uniqueidentifier
	, @NAME              nvarchar(150)
	, @SEARCH_MODULE     nvarchar(150)
	, @CONTENTS          nvarchar(max)
	, @DESCRIPTION       nvarchar(max)
	, @DEFAULT_SEARCH_ID uniqueidentifier = null
	)
as
  begin
	set nocount on

	if dbo.fnIsEmptyGuid(@ID) = 1 and @NAME is null begin -- then
		-- BEGIN Oracle Exception
			select @ID = ID
			  from SAVED_SEARCH
			 where SEARCH_MODULE    = @SEARCH_MODULE
			   and ASSIGNED_USER_ID = @ASSIGNED_USER_ID
			   and NAME             is null
			   and DELETED          = 0;
		-- END Oracle Exception
	end -- if;
	
	if not exists(select * from SAVED_SEARCH where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into SAVED_SEARCH
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, ASSIGNED_USER_ID 
			, DEFAULT_SEARCH_ID
			, NAME             
			, SEARCH_MODULE    
			, CONTENTS         
			, DESCRIPTION      
			)
		values 	( @ID               
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @ASSIGNED_USER_ID 
			, @DEFAULT_SEARCH_ID
			, @NAME             
			, @SEARCH_MODULE    
			, @CONTENTS         
			, @DESCRIPTION      
			);
	end else begin
		update SAVED_SEARCH
		   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
		     , DATE_MODIFIED     =  getdate()        
		     , DATE_MODIFIED_UTC =  getutcdate()     
-- 07/29/2008 Paul.  Don't updated ASSIGNED_USER_ID.  This will prevent global searches from being over-written. 
--		     , ASSIGNED_USER_ID  = @ASSIGNED_USER_ID 
		     , DEFAULT_SEARCH_ID = @DEFAULT_SEARCH_ID
		     , NAME              = isnull(@NAME, NAME)
		     , CONTENTS          = @CONTENTS         
		     , DESCRIPTION       = @DESCRIPTION      
		 where ID                = @ID               ;
	end -- if;
  end
GO

Grant Execute on dbo.spSAVED_SEARCH_Update to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSCHEDULERS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSCHEDULERS_Delete;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spSCHEDULERS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	update SCHEDULERS
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID = @ID;
  end
GO
 
Grant Execute on dbo.spSCHEDULERS_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSCHEDULERS_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSCHEDULERS_InsertOnly;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/31/2007 Paul.  Don't need to insert LAST_RUN. 
Create Procedure dbo.spSCHEDULERS_InsertOnly
	( @MODIFIED_USER_ID  uniqueidentifier
	, @NAME              nvarchar(255)
	, @JOB               nvarchar(255)
	, @DATE_TIME_START   datetime
	, @DATE_TIME_END     datetime
	, @JOB_INTERVAL      nvarchar(100)
	, @TIME_FROM         datetime
	, @TIME_TO           datetime
	, @STATUS            nvarchar(25)
	, @CATCH_UP          bit
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	

	-- BEGIN Oracle Exception
		select @ID = ID
		  from SCHEDULERS
		 where NAME    = @NAME
		   and DELETED = 0    ;
	-- END Oracle Exception
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into SCHEDULERS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, NAME             
			, JOB              
			, DATE_TIME_START  
			, DATE_TIME_END    
			, JOB_INTERVAL     
			, TIME_FROM        
			, TIME_TO          
			, STATUS           
			, CATCH_UP         
			)
		values 	( @ID               
			, @MODIFIED_USER_ID       
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @NAME             
			, @JOB              
			, @DATE_TIME_START  
			, @DATE_TIME_END    
			, @JOB_INTERVAL     
			, @TIME_FROM        
			, @TIME_TO          
			, @STATUS           
			, @CATCH_UP         
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spSCHEDULERS_InsertOnly to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSCHEDULERS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSCHEDULERS_Update;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/31/2007 Paul.  Don't need to insert LAST_RUN. 
Create Procedure dbo.spSCHEDULERS_Update
	( @ID                uniqueidentifier output
	, @MODIFIED_USER_ID  uniqueidentifier
	, @NAME              nvarchar(255)
	, @JOB               nvarchar(255)
	, @DATE_TIME_START   datetime
	, @DATE_TIME_END     datetime
	, @JOB_INTERVAL      nvarchar(100)
	, @TIME_FROM         datetime
	, @TIME_TO           datetime
	, @STATUS            nvarchar(25)
	, @CATCH_UP          bit
	)
as
  begin
	set nocount on

	declare @VALIDATE_CRON bit;
	-- 12/31/2007 Paul.  Only update the scheduler if the CRON can be validated. 
	set @VALIDATE_CRON = dbo.fnCronRun(@JOB_INTERVAL, getdate(), 5);
	if @@ERROR = 0 begin -- then
		if not exists(select * from SCHEDULERS where ID = @ID) begin -- then
			if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
				set @ID = newid();
			end -- if;
			insert into SCHEDULERS
				( ID               
				, CREATED_BY       
				, DATE_ENTERED     
				, MODIFIED_USER_ID 
				, DATE_MODIFIED    
				, NAME             
				, JOB              
				, DATE_TIME_START  
				, DATE_TIME_END    
				, JOB_INTERVAL     
				, TIME_FROM        
				, TIME_TO          
				, STATUS           
				, CATCH_UP         
				)
			values 	( @ID               
				, @MODIFIED_USER_ID       
				,  getdate()        
				, @MODIFIED_USER_ID 
				,  getdate()        
				, @NAME             
				, @JOB              
				, @DATE_TIME_START  
				, @DATE_TIME_END    
				, @JOB_INTERVAL     
				, @TIME_FROM        
				, @TIME_TO          
				, @STATUS           
				, @CATCH_UP         
				);
		end else begin
			update SCHEDULERS
			   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
			     , DATE_MODIFIED     =  getdate()        
			     , DATE_MODIFIED_UTC =  getutcdate()     
			     , NAME              = @NAME             
			     , JOB               = @JOB              
			     , DATE_TIME_START   = @DATE_TIME_START  
			     , DATE_TIME_END     = @DATE_TIME_END    
			     , JOB_INTERVAL      = @JOB_INTERVAL     
			     , TIME_FROM         = @TIME_FROM        
			     , TIME_TO           = @TIME_TO          
			     , STATUS            = @STATUS           
			     , CATCH_UP          = @CATCH_UP         
			 where ID                = @ID               ;
		end -- if;
	end -- if;
  end
GO
 
Grant Execute on dbo.spSCHEDULERS_Update to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSCHEDULERS_UpdateLastRun' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSCHEDULERS_UpdateLastRun;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/31/2007 Paul.  The LAST_RUN will likely be computed and rounded down to the 5 minute interval. 
Create Procedure dbo.spSCHEDULERS_UpdateLastRun
	( @ID                uniqueidentifier
	, @MODIFIED_USER_ID  uniqueidentifier
	, @LAST_RUN          datetime
	)
as
  begin
	set nocount on
	
	update SCHEDULERS
	   set LAST_RUN = @LAST_RUN
	 where ID      = @ID
	   and DELETED = 0;
  end
GO

Grant Execute on dbo.spSCHEDULERS_UpdateLastRun to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSCHEDULERS_UpdateStatus' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSCHEDULERS_UpdateStatus;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/24/2010 Paul.  Try and be more efficient by only updating the status if it changed. 
Create Procedure dbo.spSCHEDULERS_UpdateStatus
	( @MODIFIED_USER_ID  uniqueidentifier
	, @JOB               nvarchar(255)
	, @STATUS            nvarchar(25)
	)
as
  begin
	set nocount on
	
	update SCHEDULERS
	   set STATUS           = @STATUS
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID 
	     , DATE_MODIFIED    =  getdate()        
	     , DATE_MODIFIED_UTC=  getutcdate()     
	 where JOB              = @JOB  
	   and (STATUS <> @STATUS or STATUS is null)
	   and DELETED          = 0;
  end
GO

Grant Execute on dbo.spSCHEDULERS_UpdateStatus to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSHORTCUTS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSHORTCUTS_Delete;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spSHORTCUTS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	update SHORTCUTS
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID = @ID;
  end
GO
 
Grant Execute on dbo.spSHORTCUTS_Delete to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSHORTCUTS_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSHORTCUTS_InsertOnly;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/28/2006 Paul.  Added SHORTCUT_MODULE to help with ACL. 
-- 04/28/2006 Paul.  Added SHORTCUT_ACLTYPE to help with ACL. 
-- 07/24/2006 Paul.  Increase the DISPLAY_NAME to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 06/02/2012 Paul.  Auto-number the shortcut order. 
-- 09/28/2015 Paul.  Also allow -1 to indicate auto-number. 
Create Procedure dbo.spSHORTCUTS_InsertOnly
	( @MODIFIED_USER_ID  uniqueidentifier
	, @MODULE_NAME       nvarchar( 25)
	, @DISPLAY_NAME      nvarchar(150)
	, @RELATIVE_PATH     nvarchar(255)
	, @IMAGE_NAME        nvarchar( 50)
	, @SHORTCUT_ENABLED  bit
	, @SHORTCUT_ORDER    int
	, @SHORTCUT_MODULE   nvarchar( 25)
	, @SHORTCUT_ACLTYPE  nvarchar(100)
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	-- 09/28/2015 Paul.  Oracle typically has an issue with modifying input parameters. 
	declare @TEMP_SHORTCUT_ORDER    int;
	set @TEMP_SHORTCUT_ORDER = @SHORTCUT_ORDER;
	if @TEMP_SHORTCUT_ORDER is null or @TEMP_SHORTCUT_ORDER = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_SHORTCUT_ORDER = isnull(max(SHORTCUT_ORDER) + 1, 0)
			  from vwSHORTCUTS
			 where MODULE_NAME   = @MODULE_NAME  ;
		-- END Oracle Exception
	end -- if;
	
	-- BEGIN Oracle Exception
		select @ID = ID
		  from SHORTCUTS
		 where MODULE_NAME   = @MODULE_NAME  
		   and DISPLAY_NAME  = @DISPLAY_NAME 
		   and RELATIVE_PATH = @RELATIVE_PATH
		   and DELETED       = 0             ;
	-- END Oracle Exception
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into SHORTCUTS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, MODULE_NAME      
			, DISPLAY_NAME     
			, RELATIVE_PATH    
			, IMAGE_NAME       
			, SHORTCUT_ENABLED 
			, SHORTCUT_ORDER   
			, SHORTCUT_MODULE  
			, SHORTCUT_ACLTYPE 
			)
		values 
			( @ID               
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODULE_NAME      
			, @DISPLAY_NAME     
			, @RELATIVE_PATH    
			, @IMAGE_NAME       
			, @SHORTCUT_ENABLED 
			, @TEMP_SHORTCUT_ORDER
			, @SHORTCUT_MODULE  
			, @SHORTCUT_ACLTYPE 
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spSHORTCUTS_InsertOnly to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSHORTCUTS_ORDER_MoveDown' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSHORTCUTS_ORDER_MoveDown;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spSHORTCUTS_ORDER_MoveDown
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID            uniqueidentifier;
	declare @MODULE_NAME        nvarchar(50);
	declare @SHORTCUT_ORDER     int;
	if exists(select * from SHORTCUTS where ID = @ID and DELETED = 0) begin -- then
		-- BEGIN Oracle Exception
			select @MODULE_NAME        = MODULE_NAME
			     , @SHORTCUT_ORDER     = SHORTCUT_ORDER
			  from SHORTCUTS
			 where ID                  = @ID
			   and DELETED             = 0;
		-- END Oracle Exception
		
		-- Moving down actually means incrementing the order value. 
		-- BEGIN Oracle Exception
			select @SWAP_ID           = ID
			  from SHORTCUTS
			 where MODULE_NAME        = @MODULE_NAME
			   and SHORTCUT_ORDER     = @SHORTCUT_ORDER + 1
			   and DELETED            = 0;
		-- END Oracle Exception
		if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 begin -- then
			-- BEGIN Oracle Exception
				update SHORTCUTS
				   set SHORTCUT_ORDER     = SHORTCUT_ORDER + 1
				     , DATE_MODIFIED      = getdate()
				     , DATE_MODIFIED_UTC= getutcdate()
				     , MODIFIED_USER_ID   = @MODIFIED_USER_ID
				 where ID                 = @ID;
			-- END Oracle Exception
			-- BEGIN Oracle Exception
				update SHORTCUTS
				   set SHORTCUT_ORDER     = SHORTCUT_ORDER - 1
				     , DATE_MODIFIED      = getdate()
				     , DATE_MODIFIED_UTC= getutcdate()
				     , MODIFIED_USER_ID   = @MODIFIED_USER_ID
				 where ID                 = @SWAP_ID;
			-- END Oracle Exception
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spSHORTCUTS_ORDER_MoveDown to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSHORTCUTS_ORDER_MoveItem' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSHORTCUTS_ORDER_MoveItem;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spSHORTCUTS_ORDER_MoveItem
	( @MODIFIED_USER_ID uniqueidentifier
	, @MODULE_NAME      nvarchar(50)
	, @OLD_INDEX        int
	, @NEW_INDEX        int
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID    uniqueidentifier;
	-- BEGIN Oracle Exception
		select @SWAP_ID   = ID
		  from SHORTCUTS
		 where MODULE_NAME    = @MODULE_NAME
		   and SHORTCUT_ORDER = @OLD_INDEX
		   and DELETED        = 0;
	-- END Oracle Exception

	if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 and (@OLD_INDEX > @NEW_INDEX or @OLD_INDEX < @NEW_INDEX) begin -- then
		if @OLD_INDEX < @NEW_INDEX begin -- then
			update SHORTCUTS
			   set SHORTCUT_ORDER    = SHORTCUT_ORDER - 1
			     , DATE_MODIFIED     = getdate()
			     , DATE_MODIFIED_UTC = getutcdate()
			     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
			 where MODULE_NAME       = @MODULE_NAME
			   and SHORTCUT_ORDER   >= @OLD_INDEX
			   and SHORTCUT_ORDER   <= @NEW_INDEX
			   and DELETED           = 0;
		end else if @OLD_INDEX > @NEW_INDEX begin -- then
			update SHORTCUTS
			   set SHORTCUT_ORDER    = SHORTCUT_ORDER + 1
			     , DATE_MODIFIED     = getdate()
			     , DATE_MODIFIED_UTC = getutcdate()
			     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
			 where MODULE_NAME       = @MODULE_NAME
			   and SHORTCUT_ORDER   >= @NEW_INDEX
			   and SHORTCUT_ORDER   <= @OLD_INDEX
			   and DELETED           = 0;
		end -- if;
		update SHORTCUTS
		   set SHORTCUT_ORDER    = @NEW_INDEX
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
		 where ID                = @SWAP_ID
		   and DELETED           = 0;
	end -- if;
  end
GO

Grant Execute on dbo.spSHORTCUTS_ORDER_MoveItem to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSHORTCUTS_ORDER_MoveUp' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSHORTCUTS_ORDER_MoveUp;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spSHORTCUTS_ORDER_MoveUp
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID            uniqueidentifier;
	declare @MODULE_NAME        nvarchar(50);
	declare @SHORTCUT_ORDER     int;
	if exists(select * from SHORTCUTS where ID = @ID and DELETED = 0) begin -- then
		-- BEGIN Oracle Exception
			select @MODULE_NAME        = MODULE_NAME
			     , @SHORTCUT_ORDER     = SHORTCUT_ORDER
			  from SHORTCUTS
			 where ID                  = @ID
			   and DELETED             = 0;
		-- END Oracle Exception

		-- 12/13/2007 Paul.  SHORTCUT_ORDER 0 is reserved.  Don't allow decrease below 1. 
		if @SHORTCUT_ORDER is not null begin -- then
			-- BEGIN Oracle Exception
				select @SWAP_ID           = ID
				  from SHORTCUTS
				 where MODULE_NAME        = @MODULE_NAME
				   and SHORTCUT_ORDER     = @SHORTCUT_ORDER - 1
				   and DELETED            = 0;
			-- END Oracle Exception

			-- Moving up actually means decrementing the order value. 
			if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 begin -- then
				-- BEGIN Oracle Exception
					update SHORTCUTS
					   set SHORTCUT_ORDER     = SHORTCUT_ORDER - 1
					     , DATE_MODIFIED      = getdate()
					     , DATE_MODIFIED_UTC= getutcdate()
					     , MODIFIED_USER_ID   = @MODIFIED_USER_ID
					 where ID                 = @ID;
				-- END Oracle Exception
				-- BEGIN Oracle Exception
					update SHORTCUTS
					   set SHORTCUT_ORDER     = SHORTCUT_ORDER + 1
					     , DATE_MODIFIED      = getdate()
					     , DATE_MODIFIED_UTC= getutcdate()
					     , MODIFIED_USER_ID   = @MODIFIED_USER_ID
					 where ID                 = @SWAP_ID;
				-- END Oracle Exception
			end -- if;
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spSHORTCUTS_ORDER_MoveUp to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSHORTCUTS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSHORTCUTS_Update;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/28/2006 Paul.  Added SHORTCUT_MODULE to help with ACL. 
-- 04/28/2006 Paul.  Added SHORTCUT_ACLTYPE to help with ACL. 
-- 07/24/2006 Paul.  Increase the DISPLAY_NAME to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
Create Procedure dbo.spSHORTCUTS_Update
	( @ID                uniqueidentifier output
	, @MODIFIED_USER_ID  uniqueidentifier
	, @MODULE_NAME       nvarchar( 25)
	, @DISPLAY_NAME      nvarchar(150)
	, @RELATIVE_PATH     nvarchar(255)
	, @IMAGE_NAME        nvarchar( 50)
	, @SHORTCUT_ENABLED  bit
	, @SHORTCUT_ORDER    int
	, @SHORTCUT_MODULE   nvarchar( 25)
	, @SHORTCUT_ACLTYPE  nvarchar(100)
	)
as
  begin
	if not exists(select * from SHORTCUTS where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into SHORTCUTS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, MODULE_NAME      
			, DISPLAY_NAME     
			, RELATIVE_PATH    
			, IMAGE_NAME       
			, SHORTCUT_ENABLED 
			, SHORTCUT_ORDER   
			, SHORTCUT_MODULE  
			, SHORTCUT_ACLTYPE 
			)
		values 
			( @ID               
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODULE_NAME      
			, @DISPLAY_NAME     
			, @RELATIVE_PATH    
			, @IMAGE_NAME       
			, @SHORTCUT_ENABLED 
			, @SHORTCUT_ORDER   
			, @SHORTCUT_MODULE  
			, @SHORTCUT_ACLTYPE 
			);
	end else begin
		update SHORTCUTS
		   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
		     , DATE_MODIFIED     =  getdate()        
		     , DATE_MODIFIED_UTC =  getutcdate()     
		     , MODULE_NAME       = @MODULE_NAME      
		     , DISPLAY_NAME      = @DISPLAY_NAME     
		     , RELATIVE_PATH     = @RELATIVE_PATH    
		     , IMAGE_NAME        = @IMAGE_NAME       
		     , SHORTCUT_ENABLED  = @SHORTCUT_ENABLED 
		     , SHORTCUT_ORDER    = @SHORTCUT_ORDER   
		     , SHORTCUT_MODULE   = @SHORTCUT_MODULE  
		     , SHORTCUT_ACLTYPE  = @SHORTCUT_ACLTYPE 
		 where ID                = @ID               ;
	end -- if;
  end
GO
 
Grant Execute on dbo.spSHORTCUTS_Update to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSYSTEM_CURRENCY_LOG_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSYSTEM_CURRENCY_LOG_Delete;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spSYSTEM_CURRENCY_LOG_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	-- BEGIN Oracle Exception
		update SYSTEM_CURRENCY_LOG
		   set DELETED           = 1
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
		 where ID               = @ID
		   and DELETED          = 0;
	-- END Oracle Exception
  end
GO

Grant Execute on dbo.spSYSTEM_CURRENCY_LOG_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSYSTEM_CURRENCY_LOG_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSYSTEM_CURRENCY_LOG_InsertOnly;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spSYSTEM_CURRENCY_LOG_InsertOnly
	( @ID                   uniqueidentifier output
	, @MODIFIED_USER_ID     uniqueidentifier
	, @SERVICE_NAME         nvarchar(50)
	, @SOURCE_ISO4217       nvarchar(3)
	, @DESTINATION_ISO4217  nvarchar(3)
	, @CONVERSION_RATE      float(53)
	, @RAW_CONTENT          nvarchar(max)
	)
as
  begin
	set nocount on
	
	set @ID = newid();
	insert into SYSTEM_CURRENCY_LOG
		( ID                  
		, CREATED_BY          
		, DATE_ENTERED        
		, MODIFIED_USER_ID    
		, DATE_MODIFIED       
		, DATE_MODIFIED_UTC   
		, SERVICE_NAME        
		, SOURCE_ISO4217      
		, DESTINATION_ISO4217 
		, CONVERSION_RATE     
		, RAW_CONTENT         
		)
	values 	( @ID                  
		, @MODIFIED_USER_ID    
		,  getdate()           
		, @MODIFIED_USER_ID    
		,  getdate()           
		,  getutcdate()        
		, @SERVICE_NAME        
		, @SOURCE_ISO4217      
		, @DESTINATION_ISO4217 
		, @CONVERSION_RATE     
		, @RAW_CONTENT         
		);
  end
GO

Grant Execute on dbo.spSYSTEM_CURRENCY_LOG_InsertOnly to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSYSTEM_LOG_Cleanup' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSYSTEM_LOG_Cleanup;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spSYSTEM_LOG_Cleanup
as
  begin
	set nocount on
	
	-- 02/26/2010 Paul.  We want to be selective on the entries that we delete
	-- so that we don't delete useful bug tracking or auditing information. 
	-- 10/29/2013 Paul.  Cleanup timer events. Mostly Scheduler Job. 
	delete from SYSTEM_LOG
	 where DATE_ENTERED < dbo.fnDateAdd('month', -1, getdate())
	   and ERROR_TYPE = N'Warning'
	   and METHOD in ( N'Void OnTimer(System.Object)'
	                 , N'Void InitApp(System.Web.HttpContext)'
	                 , N'Void InitSchedulerManager()'
	                 , N'Void InitWorkflowManager()'
	                 , N'System.String Term(System.Web.HttpApplicationState, System.String, System.String)'
	                 , N'Void OnTimer(System.Object)'
	                 );

	-- 02/26/2010 Paul.  User logins are slightly more interesting, so keep for 2 months. 
	delete from SYSTEM_LOG
	 where DATE_ENTERED < dbo.fnDateAdd('month', -2, getdate())
	   and ERROR_TYPE = N'Warning'
	   and METHOD in ( N'Boolean LoginUser(System.String, System.String, System.String, System.String, System.String, Boolean)'  -- (~/_code/SplendidInit.cs) User login. 
	                 , N'System.Guid LoginUser(System.String ByRef, System.String, Boolean)'  -- (~/soap.asmx.cs) SOAP User login. 
	                 , N'System.Guid Login(System.String, System.String, System.String)'  -- (~/sync.asmx.cs) SyncUser login. 
	                 );

	-- 02/26/2010 Paul.  The unowned workflow error is not interesting as it typically occurs when the web site is restarted. 
	-- 10/29/2013 Paul.  We are seen a number of Exchange Notification errors. 
	delete from SYSTEM_LOG
	 where DATE_ENTERED < dbo.fnDateAdd('month', -1, getdate())
	   and ERROR_TYPE = N'Error'
	   and METHOD in ( N'Void ExceptionNotHandled(System.Object, System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs)'  -- This workflow is not owned by the WorkflowRuntime. 
	                 , N'Void SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity, Boolean)'
	                 , N'ExchangeNotificationService.SendNotificationResultType SendNotification(ExchangeNotificationService.SendNotificationResponseType)'
	                 );

	-- 08/07/2010 Paul.  The USERS_LOGINS table is getting very big. Lets keep 3 months of data. 
	-- 06/02/2020 Paul.  Increase to 6 months. 
	delete from USERS_LOGINS
	 where LOGIN_DATE < dbo.fnDateAdd('month', -6, getdate());

	-- 01/25/2015 Paul.  The SYSTEM_LOG table is getting very big. Lets keep 3 months of data. 
	delete from SYSTEM_LOG
	 where DATE_ENTERED < dbo.fnDateAdd('month', -3, getdate());
  end
GO

Grant Execute on dbo.spSYSTEM_LOG_Cleanup to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSYSTEM_LOG_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSYSTEM_LOG_Delete;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spSYSTEM_LOG_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	delete from SYSTEM_LOG
	 where ID = @ID;
  end
GO

Grant Execute on dbo.spSYSTEM_LOG_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSYSTEM_LOG_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSYSTEM_LOG_InsertOnly;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
Create Procedure dbo.spSYSTEM_LOG_InsertOnly
	( @MODIFIED_USER_ID  uniqueidentifier
	, @USER_ID           uniqueidentifier
	, @USER_NAME         nvarchar(255)
	, @MACHINE           nvarchar(60)
	, @ASPNET_SESSIONID  nvarchar(50)
	, @REMOTE_HOST       nvarchar(100)
	, @SERVER_HOST       nvarchar(100)
	, @TARGET            nvarchar(255)
	, @RELATIVE_PATH     nvarchar(255)
	, @PARAMETERS        nvarchar(2000)
	, @ERROR_TYPE        nvarchar(25)
	, @FILE_NAME         nvarchar(255)
	, @METHOD            nvarchar(450)
	, @LINE_NUMBER       int
	, @MESSAGE           nvarchar(max)
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	set @ID = newid();
	insert into SYSTEM_LOG
		( ID               
		, CREATED_BY       
		, DATE_ENTERED     
		, MODIFIED_USER_ID 
		, DATE_MODIFIED    
		, USER_ID          
		, USER_NAME        
		, MACHINE          
		, ASPNET_SESSIONID 
		, REMOTE_HOST      
		, SERVER_HOST      
		, TARGET           
		, RELATIVE_PATH    
		, PARAMETERS       
		, ERROR_TYPE       
		, FILE_NAME        
		, METHOD           
		, LINE_NUMBER      
		, MESSAGE          
		)
	values 	( @ID               
		, @MODIFIED_USER_ID       
		,  getdate()        
		, @MODIFIED_USER_ID 
		,  getdate()        
		, @USER_ID          
		, @USER_NAME        
		, @MACHINE          
		, @ASPNET_SESSIONID 
		, @REMOTE_HOST      
		, @SERVER_HOST      
		, @TARGET           
		, @RELATIVE_PATH    
		, @PARAMETERS       
		, @ERROR_TYPE       
		, @FILE_NAME        
		, @METHOD           
		, @LINE_NUMBER      
		, @MESSAGE          
		);
  end
GO

Grant Execute on dbo.spSYSTEM_LOG_InsertOnly to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSYSTEM_REST_TABLES_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSYSTEM_REST_TABLES_Delete;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 06/18/2011 Paul.  SYSTEM_REST_TABLES are nearly identical to SYSTEM_SYNC_TABLES,
-- but the Module tables typically refer to the base view instead of the raw table. 
Create Procedure dbo.spSYSTEM_REST_TABLES_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	update SYSTEM_REST_TABLES
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID = @ID;
  end
GO

Grant Execute on dbo.spSYSTEM_REST_TABLES_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSYSTEM_REST_TABLES_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSYSTEM_REST_TABLES_InsertOnly;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 06/18/2011 Paul.  SYSTEM_REST_TABLES are nearly identical to SYSTEM_SYNC_TABLES,
-- but the Module tables typically refer to the base view instead of the raw table. 
-- 08/02/2019 Paul.  The React Client will need access to views that require a filter, like CAMPAIGN_ID. 
Create Procedure dbo.spSYSTEM_REST_TABLES_InsertOnly
	( @MODIFIED_USER_ID     uniqueidentifier
	, @TABLE_NAME           nvarchar(50)
	, @VIEW_NAME            nvarchar(60)
	, @MODULE_NAME          nvarchar(25)
	, @MODULE_NAME_RELATED  nvarchar(25)
	, @MODULE_SPECIFIC      int
	, @MODULE_FIELD_NAME    nvarchar(50)
	, @IS_SYSTEM            bit
	, @IS_ASSIGNED          bit
	, @ASSIGNED_FIELD_NAME  nvarchar(50)
	, @IS_RELATIONSHIP      bit
	, @REQUIRED_FIELDS      nvarchar(150) = null
	)
as
  begin
	set nocount on
	
	declare @ID              uniqueidentifier;
	declare @DEPENDENT_LEVEL int;
	declare @HAS_CUSTOM      bit;
	set @DEPENDENT_LEVEL = dbo.fnSqlDependentLevel(@TABLE_NAME, 'U');
	set @HAS_CUSTOM      = 0;
	-- 01/11/2010 Paul.  Use vwSqlTables as it is portable to oracle. 
	-- 05/16/2014 Paul.  We were using the @VIEW_NAME when we should have used @TABLE_NAME. 
	if exists(select * from vwSqlTables where TABLE_NAME = @TABLE_NAME + '_CSTM') begin -- then
		set @HAS_CUSTOM = 1;
	end -- if;
	if not exists(select * from SYSTEM_REST_TABLES where TABLE_NAME = @TABLE_NAME and DELETED = 0) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into SYSTEM_REST_TABLES
			( ID                  
			, CREATED_BY          
			, DATE_ENTERED        
			, MODIFIED_USER_ID    
			, DATE_MODIFIED       
			, DATE_MODIFIED_UTC   
			, TABLE_NAME          
			, VIEW_NAME           
			, MODULE_NAME         
			, MODULE_NAME_RELATED 
			, MODULE_SPECIFIC     
			, MODULE_FIELD_NAME   
			, IS_SYSTEM           
			, IS_ASSIGNED         
			, ASSIGNED_FIELD_NAME 
			, IS_RELATIONSHIP     
			, HAS_CUSTOM          
			, DEPENDENT_LEVEL     
			, REQUIRED_FIELDS     
			)
		values 	( @ID                  
			, @MODIFIED_USER_ID    
			,  getdate()           
			, @MODIFIED_USER_ID    
			,  getdate()           
			,  getutcdate()        
			, @TABLE_NAME          
			, @VIEW_NAME           
			, @MODULE_NAME         
			, @MODULE_NAME_RELATED 
			, @MODULE_SPECIFIC     
			, @MODULE_FIELD_NAME   
			, @IS_SYSTEM           
			, @IS_ASSIGNED         
			, @ASSIGNED_FIELD_NAME 
			, @IS_RELATIONSHIP     
			, @HAS_CUSTOM          
			, @DEPENDENT_LEVEL     
			, @REQUIRED_FIELDS     
			);
		-- 11/26/2009 Paul.  Modules are not REST enabled by default, so we will enable modules as necessary. 
		if @MODULE_NAME is not null begin -- then
			if exists(select * from vwMODULES where MODULE_NAME = @MODULE_NAME and (REST_ENABLED = 0 or REST_ENABLED is null)) begin -- then
				update MODULES
				   set REST_ENABLED         = 1
				     , MODIFIED_USER_ID     = @MODIFIED_USER_ID    
				     , DATE_MODIFIED        =  getdate()           
				     , DATE_MODIFIED_UTC    =  getutcdate()        
				 where MODULE_NAME          = @MODULE_NAME
				   and DELETED              = 0;
			end -- if;
		end -- if;
		if @MODULE_NAME_RELATED is not null begin -- then
			if exists(select * from vwMODULES where MODULE_NAME = @MODULE_NAME_RELATED and (REST_ENABLED = 0 or REST_ENABLED is null)) begin -- then
				update MODULES
				   set REST_ENABLED         = 1
				     , MODIFIED_USER_ID     = @MODIFIED_USER_ID    
				     , DATE_MODIFIED        =  getdate()           
				     , DATE_MODIFIED_UTC    =  getutcdate()        
				 where MODULE_NAME          = @MODULE_NAME_RELATED
				   and DELETED              = 0;
			end -- if;
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spSYSTEM_REST_TABLES_InsertOnly to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSYSTEM_REST_TABLES_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSYSTEM_REST_TABLES_Update;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 06/18/2011 Paul.  SYSTEM_REST_TABLES are nearly identical to SYSTEM_SYNC_TABLES,
-- but the Module tables typically refer to the base view instead of the raw table. 
-- 08/02/2019 Paul.  The React Client will need access to views that require a filter, like CAMPAIGN_ID. 
Create Procedure dbo.spSYSTEM_REST_TABLES_Update
	( @ID                   uniqueidentifier output
	, @MODIFIED_USER_ID     uniqueidentifier
	, @TABLE_NAME           nvarchar(50)
	, @VIEW_NAME            nvarchar(60)
	, @MODULE_NAME          nvarchar(25)
	, @MODULE_NAME_RELATED  nvarchar(25)
	, @MODULE_SPECIFIC      int
	, @MODULE_FIELD_NAME    nvarchar(50)
	, @IS_SYSTEM            bit
	, @IS_ASSIGNED          bit
	, @ASSIGNED_FIELD_NAME  nvarchar(50)
	, @IS_RELATIONSHIP      bit
	, @REQUIRED_FIELDS      nvarchar(150) = null
	)
as
  begin
	set nocount on
	
	declare @DEPENDENT_LEVEL int;
	declare @HAS_CUSTOM      bit;
	set @DEPENDENT_LEVEL = dbo.fnSqlDependentLevel(@TABLE_NAME, 'U');
	set @HAS_CUSTOM      = 0;
	-- 01/11/2010 Paul.  Use vwSqlTables as it is portable to oracle. 
	if exists(select * from vwSqlTables where TABLE_NAME = @VIEW_NAME + '_CSTM') begin -- then
		set @HAS_CUSTOM = 1;
	end -- if;
	if not exists(select * from SYSTEM_REST_TABLES where TABLE_NAME = @TABLE_NAME and DELETED = 0) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into SYSTEM_REST_TABLES
			( ID                  
			, CREATED_BY          
			, DATE_ENTERED        
			, MODIFIED_USER_ID    
			, DATE_MODIFIED       
			, DATE_MODIFIED_UTC   
			, TABLE_NAME          
			, VIEW_NAME           
			, MODULE_NAME         
			, MODULE_NAME_RELATED 
			, MODULE_SPECIFIC     
			, MODULE_FIELD_NAME   
			, IS_SYSTEM           
			, IS_ASSIGNED         
			, ASSIGNED_FIELD_NAME 
			, IS_RELATIONSHIP     
			, HAS_CUSTOM          
			, DEPENDENT_LEVEL     
			, REQUIRED_FIELDS     
			)
		values 	( @ID                  
			, @MODIFIED_USER_ID    
			,  getdate()           
			, @MODIFIED_USER_ID    
			,  getdate()           
			,  getutcdate()        
			, @TABLE_NAME          
			, @VIEW_NAME           
			, @MODULE_NAME         
			, @MODULE_NAME_RELATED 
			, @MODULE_SPECIFIC     
			, @MODULE_FIELD_NAME   
			, @IS_SYSTEM           
			, @IS_ASSIGNED         
			, @ASSIGNED_FIELD_NAME 
			, @IS_RELATIONSHIP     
			, @HAS_CUSTOM          
			, @DEPENDENT_LEVEL     
			, @REQUIRED_FIELDS     
			);
		-- 11/26/2009 Paul.  Modules are not REST enabled by default, so we will enable modules as necessary. 
		if @MODULE_NAME is not null begin -- then
			if exists(select * from vwMODULES where MODULE_NAME = @MODULE_NAME and (REST_ENABLED = 0 or REST_ENABLED is null)) begin -- then
				update MODULES
				   set REST_ENABLED         = 1
				     , MODIFIED_USER_ID     = @MODIFIED_USER_ID    
				     , DATE_MODIFIED        =  getdate()           
				     , DATE_MODIFIED_UTC    =  getutcdate()        
				 where MODULE_NAME          = @MODULE_NAME
				   and DELETED              = 0;
			end -- if;
		end -- if;
		if @MODULE_NAME_RELATED is not null begin -- then
			if exists(select * from vwMODULES where MODULE_NAME = @MODULE_NAME_RELATED and (REST_ENABLED = 0 or REST_ENABLED is null)) begin -- then
				update MODULES
				   set REST_ENABLED         = 1
				     , MODIFIED_USER_ID     = @MODIFIED_USER_ID    
				     , DATE_MODIFIED        =  getdate()           
				     , DATE_MODIFIED_UTC    =  getutcdate()        
				 where MODULE_NAME          = @MODULE_NAME_RELATED
				   and DELETED              = 0;
			end -- if;
		end -- if;
	end else begin
		update SYSTEM_REST_TABLES
		   set MODIFIED_USER_ID     = @MODIFIED_USER_ID    
		     , DATE_MODIFIED        =  getdate()           
		     , DATE_MODIFIED_UTC    =  getutcdate()        
		     , TABLE_NAME           = @TABLE_NAME          
		     , VIEW_NAME            = @VIEW_NAME           
		     , MODULE_NAME          = @MODULE_NAME         
		     , MODULE_NAME_RELATED  = @MODULE_NAME_RELATED 
		     , MODULE_SPECIFIC      = @MODULE_SPECIFIC     
		     , MODULE_FIELD_NAME    = @MODULE_FIELD_NAME   
		     , IS_SYSTEM            = @IS_SYSTEM           
		     , IS_ASSIGNED          = @IS_ASSIGNED         
		     , ASSIGNED_FIELD_NAME  = @ASSIGNED_FIELD_NAME 
		     , IS_RELATIONSHIP      = @IS_RELATIONSHIP     
		     , HAS_CUSTOM           = @HAS_CUSTOM          
		     , DEPENDENT_LEVEL      = @DEPENDENT_LEVEL     
		     , REQUIRED_FIELDS      = @REQUIRED_FIELDS     
		 where ID                   = @ID                  ;
	end -- if;
  end
GO

Grant Execute on dbo.spSYSTEM_REST_TABLES_Update to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTEAMS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTEAMS_Delete;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/06/2012 Paul.  If the team changes, we need to update team set names. 
-- 01/30/2019 Paul.  Trigger audit record so delete workflow will have access to custom fields. 
Create Procedure dbo.spTEAMS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	-- BEGIN Oracle Exception
		update TEAMS
		   set DELETED          = 1
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where ID = @ID;

		-- 01/30/2019 Paul.  Trigger audit record so delete workflow will have access to custom fields. 
		update TEAMS_CSTM
		   set ID_C             = ID_C
		 where ID_C             = @ID;
	-- END Oracle Exception

	-- BEGIN Oracle Exception
		update TEAM_NOTICES
		   set DELETED          = 1
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where TEAM_ID = @ID;
	-- END Oracle Exception

	-- BEGIN Oracle Exception
		update TEAM_MEMBERSHIPS
		   set DELETED          = 1
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where TEAM_ID = @ID;
	-- END Oracle Exception

	-- 01/06/2012 Paul.  If the team name changes, we need to update team set names. 
	exec dbo.spTEAM_SETS_UpdateNames @MODIFIED_USER_ID, @ID;
  end
GO
 
Grant Execute on dbo.spTEAMS_Delete to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTEAMS_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTEAMS_InsertOnly;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/18/2006 Paul.  This procedure will be used to create the Global team which will have a hard-coded ID. 
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
-- 04/28/2016 Paul.  Make sure that the custom field table exists. 
-- 04/28/2016 Paul.  PRIVATE flag should not be null. 
-- 07/24/2019 Paul.  Prevent duplicates. 
Create Procedure dbo.spTEAMS_InsertOnly
	( @ID                uniqueidentifier
	, @NAME              nvarchar(128)
	, @DESCRIPTION       nvarchar(max)
	)
as
  begin
	set nocount on
	
	if dbo.fnTEAMS_IsValidName(@ID, @NAME) = 0 begin -- then
		raiserror(N'spTEAMS_InsertOnly: The name %s already exists.  Duplicate names are not allowed. ', 16, 1, @NAME);
	end else begin
		if not exists(select * from TEAMS where ID = @ID) begin -- then
			if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
				set @ID = newid();
			end -- if;
			insert into TEAMS
				( ID               
				, CREATED_BY       
				, DATE_ENTERED     
				, MODIFIED_USER_ID 
				, DATE_MODIFIED    
				, NAME             
				, DESCRIPTION      
				, PRIVATE          
				)
			values 	( @ID               
				, null       
				,  getdate()        
				, null 
				,  getdate()        
				, @NAME             
				, @DESCRIPTION      
				, 0                 
				);
			-- 04/28/2016 Paul.  Make sure that the custom field table exists. 
			if @@ERROR = 0 begin -- then
				if not exists(select * from TEAMS_CSTM where ID_C = @ID) begin -- then
					insert into TEAMS_CSTM ( ID_C ) values ( @ID );
				end -- if;
			end -- if;
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spTEAMS_InsertOnly to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTEAMS_InsertOnlyWithParent' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTEAMS_InsertOnlyWithParent;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2019 Paul.  Prevent duplicates. 
Create Procedure dbo.spTEAMS_InsertOnlyWithParent
	( @ID                uniqueidentifier
	, @NAME              nvarchar(128)
	, @DESCRIPTION       nvarchar(max)
	, @PARENT_ID         uniqueidentifier
	)
as
  begin
	set nocount on
	
	if dbo.fnTEAMS_IsValidName(@ID, @NAME) = 0 begin -- then
		raiserror(N'spTEAMS_InsertOnly: The name %s already exists.  Duplicate names are not allowed. ', 16, 1, @NAME);
	end else begin
		if not exists(select * from TEAMS where ID = @ID) begin -- then
			if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
				set @ID = newid();
			end -- if;
			insert into TEAMS
				( ID               
				, CREATED_BY       
				, DATE_ENTERED     
				, MODIFIED_USER_ID 
				, DATE_MODIFIED    
				, NAME             
				, DESCRIPTION      
				, PRIVATE          
				, PARENT_ID        
				)
			values 	( @ID               
				, null       
				,  getdate()        
				, null 
				,  getdate()        
				, @NAME             
				, @DESCRIPTION      
				, 0                 
				, @PARENT_ID        
				);
			if @@ERROR = 0 begin -- then
				if not exists(select * from TEAMS_CSTM where ID_C = @ID) begin -- then
					insert into TEAMS_CSTM ( ID_C ) values ( @ID );
				end -- if;
			end -- if;
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spTEAMS_InsertOnlyWithParent to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTEAMS_Undelete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTEAMS_Undelete;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spTEAMS_Undelete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	, @AUDIT_TOKEN      varchar(255)
	)
as
  begin
	set nocount on
	
	-- BEGIN Oracle Exception
		update TEAMS
		   set DELETED          = 0
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where ID               = @ID
		   and DELETED          = 1
		   and ID in (select ID from TEAMS_AUDIT where AUDIT_TOKEN = @AUDIT_TOKEN and ID = @ID);
	-- END Oracle Exception
	
  end
GO

Grant Execute on dbo.spTEAMS_Undelete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTEAMS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTEAMS_Update;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 10/14/2006 Paul.  The PRIVATE flag is not editable. 
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
-- 01/06/2012 Paul.  If the team name changes, we need to update team set names. 
-- 04/12/2016 Paul.  Add parent team and custom fields. 
-- 04/28/2016 Paul.  Rename parent to PARENT_ID. 
-- 07/24/2019 Paul.  Prevent duplicates. 
Create Procedure dbo.spTEAMS_Update
	( @ID                uniqueidentifier output
	, @MODIFIED_USER_ID  uniqueidentifier
	, @NAME              nvarchar(128)
	, @DESCRIPTION       nvarchar(max)
	, @PARENT_ID         uniqueidentifier = null
	)
as
  begin
	set nocount on
	
	declare @OLD_NAME nvarchar(128);

	if dbo.fnTEAMS_IsValidName(@ID, @NAME) = 0 begin -- then
		raiserror(N'spTEAMS_Update: The name %s already exists.  Duplicate names are not allowed. ', 16, 1, @NAME);
	end else begin
		if not exists(select * from TEAMS where ID = @ID) begin -- then
			if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
				set @ID = newid();
			end -- if;
			insert into TEAMS
				( ID               
				, CREATED_BY       
				, DATE_ENTERED     
				, MODIFIED_USER_ID 
				, DATE_MODIFIED    
				, NAME             
				, DESCRIPTION      
				, PARENT_ID   
				)
			values 	( @ID               
				, @MODIFIED_USER_ID 
				,  getdate()        
				, @MODIFIED_USER_ID 
				,  getdate()        
				, @NAME             
				, @DESCRIPTION      
				, @PARENT_ID        
				);
		end else begin
			select @OLD_NAME = NAME
			  from TEAMS
			 where ID = @ID;
			
			update TEAMS
			   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
			     , DATE_MODIFIED     =  getdate()        
			     , DATE_MODIFIED_UTC =  getutcdate()     
			     , NAME              = @NAME             
			     , DESCRIPTION       = @DESCRIPTION      
			     , PARENT_ID         = @PARENT_ID        
			 where ID                = @ID               ;
			
			-- 01/06/2012 Paul.  If the team name changes, we need to update team set names. 
			if @OLD_NAME <> @NAME begin -- then
				exec dbo.spTEAM_SETS_UpdateNames @MODIFIED_USER_ID, @ID;
			end -- if;
		end -- if;
		-- 04/18/2016 Paul.  Make sure that the custom field table exists. 
		if @@ERROR = 0 begin -- then
			if not exists(select * from TEAMS_CSTM where ID_C = @ID) begin -- then
				insert into TEAMS_CSTM ( ID_C ) values ( @ID );
			end -- if;
		end -- if;
	end -- if;
  end
GO
 
Grant Execute on dbo.spTEAMS_Update to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTEAM_MEMBERSHIPS_UpdateImplicit' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTEAM_MEMBERSHIPS_UpdateImplicit;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spTEAM_MEMBERSHIPS_UpdateImplicit
	( @MODIFIED_USER_ID  uniqueidentifier
	, @TEAM_ID           uniqueidentifier
	)
as
  begin
	set nocount on

	declare @ID              uniqueidentifier;
	declare @USER_ID         uniqueidentifier;
	declare @REPORTS_TO_ID   uniqueidentifier;
	declare @REPORTS_TO_KEY  varchar(37);
	declare @REPORTS_TO_LIST varchar(8000);

	declare member_cursor cursor for
	select USER_ID
	  from TEAM_MEMBERSHIPS
	 where TEAM_ID         = @TEAM_ID
	   and EXPLICIT_ASSIGN = 1
	   and DELETED         = 0
	 order by USER_ID;

/* -- #if IBM_DB2
	declare continue handler for not found
		set in_FETCH_STATUS = 1;
	set l_error ='00000';
-- #endif IBM_DB2 */
/* -- #if MySQL
	declare continue handler for not found
		set in_FETCH_STATUS = 1;
	set in_FETCH_STATUS = 0;
-- #endif MySQL */

	-- 11/18/2006 Paul.  First delete all implicity assigned users. 
	update TEAM_MEMBERSHIPS
	   set DELETED         = 1
	 where TEAM_ID         = @TEAM_ID
	   and EXPLICIT_ASSIGN = 0
	   and DELETED         = 0;

	open member_cursor;
	fetch next from member_cursor into @USER_ID;
	-- 11/18/2006 Paul.  For every explicity assigned user in the team, 
	-- determine who they report to, and explicity add them.  
	while @@FETCH_STATUS = 0 and @@ERROR = 0 begin -- do
		-- 12/15/2006 Paul.  Make sure only to use REPORTS_TO_ID if it points to a valid user. 
		select @REPORTS_TO_ID = USERS.REPORTS_TO_ID
		  from      USERS
		 inner join USERS                      USERS_REPORTS_TO
		         on USERS_REPORTS_TO.ID      = USERS.REPORTS_TO_ID
		        and USERS_REPORTS_TO.DELETED = 0
		 where USERS.ID      = @USER_ID
		   and USERS.DELETED = 0;
		
		-- 11/19/2006 Paul.  We need a way to prevent a recursive loop. 
		-- A temporary table would work, but we need a high-performance and cross-platform solution. 
		-- We will use a simple varchar field that can hold up to 200 levels.
		-- It is not likely that a company with 200 levels in their organization would use this product. 
		-- 11/19/2006 Paul.  Make sure to reset the temp list for each user. 
		set @REPORTS_TO_LIST = '';
		
		-- 11/18/2006 Paul.  Walk up the reports-to chain. 
		-- 11/19/2006 Paul.  A user is not allowed to report to himself. 
		while dbo.fnIsEmptyGuid(@REPORTS_TO_ID) = 0 and @REPORTS_TO_ID <> @USER_ID begin -- do
			set @REPORTS_TO_KEY = cast(@REPORTS_TO_ID as varchar(36)) + ',';
			if charindex(@REPORTS_TO_KEY, @REPORTS_TO_LIST, 1) = 0 begin -- then
				set @REPORTS_TO_LIST = @REPORTS_TO_LIST + @REPORTS_TO_KEY;
				set @ID = null;
				-- BEGIN Oracle Exception
					select @ID = ID
					  from TEAM_MEMBERSHIPS
					 where TEAM_ID = @TEAM_ID
					   and USER_ID = @REPORTS_TO_ID
					   and DELETED = 0;
				-- END Oracle Exception
				-- 11/18/2006 Paul.  If the manager is not already assigned, then implicitly assign them to the team. 
				if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
					set @ID = newid();
					-- print @REPORTS_TO_ID;
					insert into TEAM_MEMBERSHIPS
						( ID               
						, CREATED_BY       
						, DATE_ENTERED     
						, MODIFIED_USER_ID 
						, DATE_MODIFIED    
						, TEAM_ID          
						, USER_ID          
						, EXPLICIT_ASSIGN  
						, IMPLICIT_ASSIGN  
						)
					values
						( @ID               
						, @MODIFIED_USER_ID 
						,  getdate()        
						, @MODIFIED_USER_ID 
						,  getdate()        
						, @TEAM_ID          
						, @REPORTS_TO_ID          
						, 0  
						, 1
						);
				end -- if;
	
				select @REPORTS_TO_ID = REPORTS_TO_ID
				  from USERS
				 where ID      = @REPORTS_TO_ID
				   and DELETED = 0;
			end else begin
				-- 11/19/2006 Paul.  When recursion is found, just exit the loop. 
				-- Don't throw an exception as it will prevent the user from saving. 
				-- raiserror(N'Recursive reports-to relationship discovered in user table.', 16, 1);
				-- break;
				-- 01/07/2007 Paul.  DB2 does not support break.  Setting @REPORTS_TO_ID to null should accomplish the same. 
				set @REPORTS_TO_ID = null;
			end -- if;
		end -- while;
		fetch next from member_cursor into @USER_ID;
	end -- while;
	close member_cursor;

	deallocate member_cursor;
  end
GO
 
Grant Execute on dbo.spTEAM_MEMBERSHIPS_UpdateImplicit to public;
GO
 

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTEAM_SETS_InitAllModules' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTEAM_SETS_InitAllModules;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spTEAM_SETS_InitAllModules
as
  begin
	set nocount on
	
  end
GO
 
Grant Execute on dbo.spTEAM_SETS_InitAllModules to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTERMINOLOGY_ALIASES_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTERMINOLOGY_ALIASES_Delete;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spTERMINOLOGY_ALIASES_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	update TERMINOLOGY_ALIASES
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID = @ID;
  end
GO

Grant Execute on dbo.spTERMINOLOGY_ALIASES_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTERMINOLOGY_ALIASES_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTERMINOLOGY_ALIASES_InsertOnly;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the MODULE_NAME to 25 to match the size in the MODULES table.
Create Procedure dbo.spTERMINOLOGY_ALIASES_InsertOnly
	( @MODIFIED_USER_ID   uniqueidentifier
	, @ALIAS_NAME         nvarchar(50)
	, @ALIAS_MODULE_NAME  nvarchar(25)
	, @ALIAS_LIST_NAME    nvarchar(50)
	, @NAME               nvarchar(50)
	, @MODULE_NAME        nvarchar(25)
	, @LIST_NAME          nvarchar(50)
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	-- BEGIN Oracle Exception
		select @ID = ID
		  from TERMINOLOGY_ALIASES
		 where  ALIAS_NAME        = @ALIAS_NAME
		   and (ALIAS_MODULE_NAME = @ALIAS_MODULE_NAME or ALIAS_MODULE_NAME is null and @ALIAS_MODULE_NAME is null)
		   and (ALIAS_LIST_NAME   = @ALIAS_LIST_NAME   or ALIAS_LIST_NAME   is null and @ALIAS_LIST_NAME   is null)
		   and  DELETED           = 0;
	-- END Oracle Exception
	
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into TERMINOLOGY_ALIASES
			( ID                
			, CREATED_BY        
			, DATE_ENTERED      
			, MODIFIED_USER_ID  
			, DATE_MODIFIED     
			, ALIAS_NAME        
			, ALIAS_MODULE_NAME 
			, ALIAS_LIST_NAME   
			, NAME              
			, MODULE_NAME       
			, LIST_NAME         
			)
		values 	( @ID                
			, @MODIFIED_USER_ID        
			,  getdate()         
			, @MODIFIED_USER_ID  
			,  getdate()         
			, @ALIAS_NAME        
			, @ALIAS_MODULE_NAME 
			, @ALIAS_LIST_NAME   
			, @NAME              
			, @MODULE_NAME       
			, @LIST_NAME         
			);
	end -- if;
  end
GO

Grant Execute on dbo.spTERMINOLOGY_ALIASES_InsertOnly to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTERMINOLOGY_ALIASES_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTERMINOLOGY_ALIASES_Update;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the MODULE_NAME to 25 to match the size in the MODULES table.
Create Procedure dbo.spTERMINOLOGY_ALIASES_Update
	( @ID                 uniqueidentifier output
	, @MODIFIED_USER_ID   uniqueidentifier
	, @ALIAS_NAME         nvarchar(50)
	, @ALIAS_MODULE_NAME  nvarchar(25)
	, @ALIAS_LIST_NAME    nvarchar(50)
	, @NAME               nvarchar(50)
	, @MODULE_NAME        nvarchar(25)
	, @LIST_NAME          nvarchar(50)
	)
as
  begin
	set nocount on
	
	if not exists(select * from TERMINOLOGY_ALIASES where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into TERMINOLOGY_ALIASES
			( ID                
			, CREATED_BY        
			, DATE_ENTERED      
			, MODIFIED_USER_ID  
			, DATE_MODIFIED     
			, ALIAS_NAME        
			, ALIAS_MODULE_NAME 
			, ALIAS_LIST_NAME   
			, NAME              
			, MODULE_NAME       
			, LIST_NAME         
			)
		values 	( @ID                
			, @MODIFIED_USER_ID        
			,  getdate()         
			, @MODIFIED_USER_ID  
			,  getdate()         
			, @ALIAS_NAME        
			, @ALIAS_MODULE_NAME 
			, @ALIAS_LIST_NAME   
			, @NAME              
			, @MODULE_NAME       
			, @LIST_NAME         
			);
	end else begin
		update TERMINOLOGY_ALIASES
		   set MODIFIED_USER_ID   = @MODIFIED_USER_ID  
		     , DATE_MODIFIED      =  getdate()        
		     , DATE_MODIFIED_UTC =  getutcdate()     
		     , ALIAS_NAME         = @ALIAS_NAME        
		     , ALIAS_MODULE_NAME  = @ALIAS_MODULE_NAME 
		     , ALIAS_LIST_NAME    = @ALIAS_LIST_NAME   
		     , NAME               = @NAME              
		     , MODULE_NAME        = @MODULE_NAME       
		     , LIST_NAME          = @LIST_NAME         
		 where ID                 = @ID                ;
	end -- if;
  end
GO

Grant Execute on dbo.spTERMINOLOGY_ALIASES_Update to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTERMINOLOGY_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTERMINOLOGY_Delete;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spTERMINOLOGY_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	update TERMINOLOGY
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID               = @ID;
  end
GO

Grant Execute on dbo.spTERMINOLOGY_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTERMINOLOGY_DeleteAll' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTERMINOLOGY_DeleteAll;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spTERMINOLOGY_DeleteAll
	( @LANG              nvarchar(10)
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	/*
	update TERMINOLOGY
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where LANG             = @LANG
	   and DELETED          = 0;
	*/
	-- 01/12/2006 Paul.  Just delete the records for now.  We don't need to recover this data. 
	delete from TERMINOLOGY
	 where LANG             = @LANG;
  end
GO

Grant Execute on dbo.spTERMINOLOGY_DeleteAll to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTERMINOLOGY_DeleteList' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTERMINOLOGY_DeleteList;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spTERMINOLOGY_DeleteList
	( @LIST_NAME         nvarchar(50)
	)
as
  begin
	set nocount on
	
	if exists(select * from TERMINOLOGY where LIST_NAME = @LIST_NAME) begin -- then	
		delete from TERMINOLOGY
		 where LIST_NAME = @LIST_NAME;
	end -- if;
  end
GO

Grant Execute on dbo.spTERMINOLOGY_DeleteList to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTERMINOLOGY_DeleteModule' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTERMINOLOGY_DeleteModule;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spTERMINOLOGY_DeleteModule
	( @MODULE_NAME       nvarchar(25)
	)
as
  begin
	set nocount on
	
	if exists(select * from TERMINOLOGY where MODULE_NAME = @MODULE_NAME) begin -- then	
		delete from TERMINOLOGY
		 where MODULE_NAME = @MODULE_NAME;
	end -- if;
  end
GO

Grant Execute on dbo.spTERMINOLOGY_DeleteModule to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTERMINOLOGY_DeleteTerm' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTERMINOLOGY_DeleteTerm;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spTERMINOLOGY_DeleteTerm
	( @TERM              nvarchar(100)
	)
as
  begin
	set nocount on

	if exists(select * from TERMINOLOGY where isnull(MODULE_NAME, N'') + N'.' + isnull(NAME, N'') = @TERM) begin -- then	
		delete from TERMINOLOGY
		 where isnull(MODULE_NAME, N'') + N'.' + isnull(NAME, N'') = @TERM
		  and LIST_NAME is null;
	end -- if;
  end
GO

Grant Execute on dbo.spTERMINOLOGY_DeleteTerm to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTERMINOLOGY_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTERMINOLOGY_InsertOnly;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the MODULE_NAME to 25 to match the size in the MODULES table.
-- 08/27/2008 Paul.  PostgreSQL does not allow modifying input parameters.  Use a local temp variable. 
-- 02/02/2009 Paul.  Need to treat empty strings as NULL to be consistent.
-- 04/16/2010 Paul.  The Exists function does not include DELETED items.  
-- We want to allow users to delete items and not have them inserted back during an upgrade. 
-- 03/06/2012 Paul.  Increase size of the NAME field so that it can include a date formula. 
Create Procedure dbo.spTERMINOLOGY_InsertOnly
	( @NAME              nvarchar(150)
	, @LANG              nvarchar(10)
	, @MODULE_NAME       nvarchar(25)
	, @LIST_NAME         nvarchar(50)
	, @LIST_ORDER        int
	, @DISPLAY_NAME      nvarchar(max)
	)
as
  begin
	set nocount on
	
	declare @ID              uniqueidentifier;
	declare @TEMP_LIST_ORDER int;
	declare @TEMP_NAME       nvarchar(150);
	declare @TermExist       bit;
	set @TEMP_LIST_ORDER = @LIST_ORDER;
	-- 11/21/2005 Paul.  LIST_ORDER is not used if LIST_NAME is null. 
	if @LIST_NAME is null begin -- then
		set @TEMP_LIST_ORDER = null;
	end -- if;
	-- 01/12/2006 Paul.  0 is not valid for list order. 
	if @TEMP_LIST_ORDER = 0 begin -- then
		set @TEMP_LIST_ORDER = null;
	end -- if;
	-- 02/02/2009 Paul.  Need to treat empty strings as NULL to be consistent.
	set @TEMP_NAME = @NAME;
	if @TEMP_NAME = N'' begin -- then
		set @TEMP_NAME = null;
	end -- if;

	-- 04/16/2010 Paul.  The Exists function does not include DELETED items.  
	-- We want to allow users to delete items and not have them inserted back during an upgrade. 
	-- set @TermExist = dbo.fnTERMINOLOGY_Exists(@TEMP_NAME, @LANG, @MODULE_NAME, @LIST_NAME, @TEMP_LIST_ORDER);
	set @TermExist = 0;
	if exists(select *
	            from TERMINOLOGY
	           where (NAME        = @NAME        or (NAME        is null and @NAME        is null))
	             and (LANG        = @LANG        or (LANG        is null and @LANG        is null))
	             and (MODULE_NAME = @MODULE_NAME or (MODULE_NAME is null and @MODULE_NAME is null))
	             and (LIST_NAME   = @LIST_NAME   or (LIST_NAME   is null and @LIST_NAME   is null))
	         ) begin -- then
		set @TermExist = 1;
	end -- if;
	if @TermExist = 0 begin -- then
		set @ID = newid();
		insert into TERMINOLOGY
			( ID               
			, DATE_ENTERED     
			, DATE_MODIFIED    
			, NAME             
			, LANG             
			, MODULE_NAME      
			, LIST_NAME        
			, LIST_ORDER       
			, DISPLAY_NAME     
			)
		values
			( @ID               
			,  getdate()        
			,  getdate()        
			, @TEMP_NAME        
			, @LANG             
			, @MODULE_NAME      
			, @LIST_NAME        
			, @TEMP_LIST_ORDER       
			, @DISPLAY_NAME     
			);
	end -- if;
  end
GO

Grant Execute on dbo.spTERMINOLOGY_InsertOnly to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTERMINOLOGY_LIST_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTERMINOLOGY_LIST_Delete;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spTERMINOLOGY_LIST_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @LANG        nvarchar(10);
	declare @MODULE_NAME nvarchar(20);
	declare @LIST_NAME   nvarchar(50);
	declare @LIST_ORDER  int;

	if exists(select * from TERMINOLOGY where ID = @ID and DELETED = 0) begin -- then
		select @LANG        = LANG
		     , @MODULE_NAME = MODULE_NAME
		     , @LIST_NAME   = LIST_NAME
		     , @LIST_ORDER  = LIST_ORDER
		  from TERMINOLOGY
		 where ID           = @ID;

			-- 04/02/2006 Paul.  Catch the Oracle NO_DATA_FOUND exception. 
		-- BEGIN Oracle Exception
			update TERMINOLOGY
			   set DELETED          = 1
			     , DATE_MODIFIED    = getdate()
			     , DATE_MODIFIED_UTC= getutcdate()
			     , MODIFIED_USER_ID = @MODIFIED_USER_ID
			 where ID               = @ID
			   and DELETED          = 0;
		-- END Oracle Exception
		
		-- BEGIN Oracle Exception
			update TERMINOLOGY
			   set LIST_ORDER       = LIST_ORDER - 1
			     , DATE_MODIFIED    = getdate()
			     , DATE_MODIFIED_UTC= getutcdate()
			     , MODIFIED_USER_ID = @MODIFIED_USER_ID
			 where LANG             = @LANG
			   and (MODULE_NAME = @MODULE_NAME or (MODULE_NAME is null and @MODULE_NAME is null))
			   and LIST_NAME        = @LIST_NAME
			   and LIST_ORDER       > @LIST_ORDER
			   and DELETED          = 0;
		-- END Oracle Exception
	end -- if;
  end
GO

Grant Execute on dbo.spTERMINOLOGY_LIST_Delete to public;
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTERMINOLOGY_LIST_Insert' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTERMINOLOGY_LIST_Insert;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the MODULE_NAME to 25 to match the size in the MODULES table.
-- 05/26/2007 Paul.  Truncate NAME to 25 characters as all lists have this maximum.
-- 08/27/2008 Paul.  PostgreSQL does not allow modifying input parameters.  Use a local temp variable. 
-- 03/06/2012 Paul.  Increase size of the NAME field so that it can include a date formula. 
Create Procedure dbo.spTERMINOLOGY_LIST_Insert
	( @ID                uniqueidentifier output
	, @MODIFIED_USER_ID  uniqueidentifier
	, @NAME              nvarchar(150)
	, @LANG              nvarchar(10)
	, @MODULE_NAME       nvarchar(25)
	, @LIST_NAME         nvarchar(50)
	, @LIST_ORDER        int
	, @DISPLAY_NAME      nvarchar(max)
	)
as
  begin
	set nocount on
	
	declare @TEMP_LIST_ORDER int;
	set @TEMP_LIST_ORDER = @LIST_ORDER;
	-- First look for an existing key, if found, then overwrite. Duplicates are not allowed. 
	-- BEGIN Oracle Exception
		select @ID = ID
		  from TERMINOLOGY
		 where NAME        = @NAME
		   and LANG        = @LANG
		   and (MODULE_NAME = @MODULE_NAME or (MODULE_NAME is null and @MODULE_NAME is null))
		   and LIST_NAME   = @LIST_NAME
		   and DELETED     = 0;
	-- END Oracle Exception
	if dbo.fnIsEmptyGuid(@ID) = 0 begin -- then
		update TERMINOLOGY
		   set DISPLAY_NAME     = @DISPLAY_NAME
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where ID               = @ID;
	end else begin
		-- LIST_ORDER -1 means add to end. 
		if @TEMP_LIST_ORDER = -1 begin -- then
			-- BEGIN Oracle Exception
				select @TEMP_LIST_ORDER = max(LIST_ORDER) + 1
				  from TERMINOLOGY
				 where LANG        = @LANG
				   and (MODULE_NAME = @MODULE_NAME or (MODULE_NAME is null and @MODULE_NAME is null))
				   and LIST_NAME   = @LIST_NAME
				   and DELETED     = 0;
			-- END Oracle Exception
		end -- if;
			-- 04/02/2006 Paul.  Catch the Oracle NO_DATA_FOUND exception. 
		-- BEGIN Oracle Exception
			update TERMINOLOGY
			   set LIST_ORDER       = LIST_ORDER + 1
			     , DATE_MODIFIED    = getdate()
			     , DATE_MODIFIED_UTC= getutcdate()
			     , MODIFIED_USER_ID = @MODIFIED_USER_ID
			 where LANG             = @LANG
			   and (MODULE_NAME = @MODULE_NAME or (MODULE_NAME is null and @MODULE_NAME is null))
			   and LIST_NAME        = @LIST_NAME
			   and LIST_ORDER      >= @TEMP_LIST_ORDER
			   and DELETED          = 0;
		-- END Oracle Exception

		set @ID = newid();
		insert into TERMINOLOGY
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, NAME             
			, LANG             
			, MODULE_NAME      
			, LIST_NAME        
			, LIST_ORDER       
			, DISPLAY_NAME     
			)
		values
			( @ID               
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @NAME             
			, @LANG             
			, @MODULE_NAME      
			, @LIST_NAME        
			, @TEMP_LIST_ORDER       
			, @DISPLAY_NAME     
			);
	end -- if;
  end
GO

Grant Execute on dbo.spTERMINOLOGY_LIST_Insert to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTERMINOLOGY_LIST_MoveDown' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTERMINOLOGY_LIST_MoveDown;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spTERMINOLOGY_LIST_MoveDown
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID    uniqueidentifier;
	declare @LIST_NAME  nvarchar(50);
	declare @LIST_ORDER int;
	if exists(select * from TERMINOLOGY where ID = @ID and DELETED = 0) begin -- then
		-- BEGIN Oracle Exception
			select @LIST_NAME  = LIST_NAME
			     , @LIST_ORDER = LIST_ORDER
			  from TERMINOLOGY
			 where ID          = @ID
			   and DELETED     = 0;
		-- END Oracle Exception
		
		-- Moving down actually means incrementing the order value. 
		-- BEGIN Oracle Exception
			select @SWAP_ID   = ID
			  from TERMINOLOGY
			 where LIST_NAME  = @LIST_NAME
			   and LIST_ORDER = @LIST_ORDER + 1
			   and DELETED    = 0;
		-- END Oracle Exception
		if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 begin -- then
			-- BEGIN Oracle Exception
				update TERMINOLOGY
				   set LIST_ORDER       = LIST_ORDER + 1
				     , DATE_MODIFIED    = getdate()
				     , DATE_MODIFIED_UTC= getutcdate()
				     , MODIFIED_USER_ID = @MODIFIED_USER_ID
				 where ID               = @ID
				   and DELETED          = 0;
			-- END Oracle Exception
			-- BEGIN Oracle Exception
				update TERMINOLOGY
				   set LIST_ORDER       = LIST_ORDER - 1
				     , DATE_MODIFIED    = getdate()
				     , DATE_MODIFIED_UTC= getutcdate()
				     , MODIFIED_USER_ID = @MODIFIED_USER_ID
				 where ID               = @SWAP_ID
				   and DELETED          = 0;
			-- END Oracle Exception
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spTERMINOLOGY_LIST_MoveDown to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTERMINOLOGY_LIST_MoveItem' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTERMINOLOGY_LIST_MoveItem;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spTERMINOLOGY_LIST_MoveItem
	( @MODIFIED_USER_ID uniqueidentifier
	, @LANG             nvarchar(10)
	, @LIST_NAME        nvarchar(50)
	, @OLD_INDEX        int
	, @NEW_INDEX        int
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID    uniqueidentifier;
	-- BEGIN Oracle Exception
		select @SWAP_ID   = ID
		  from TERMINOLOGY
		 where LIST_NAME  = @LIST_NAME
		   and LANG       = @LANG
		   and LIST_ORDER = @OLD_INDEX
		   and DELETED    = 0;
	-- END Oracle Exception

	if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 and (@OLD_INDEX > @NEW_INDEX or @OLD_INDEX < @NEW_INDEX) begin -- then
		if @OLD_INDEX < @NEW_INDEX begin -- then
			update TERMINOLOGY
			   set LIST_ORDER        = LIST_ORDER - 1
			     , DATE_MODIFIED     = getdate()
			     , DATE_MODIFIED_UTC = getutcdate()
			     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
			 where LIST_NAME         = @LIST_NAME
			   and LANG              = @LANG
			   and LIST_ORDER       >= @OLD_INDEX
			   and LIST_ORDER       <= @NEW_INDEX
			   and DELETED           = 0;
		end else if @OLD_INDEX > @NEW_INDEX begin -- then
			update TERMINOLOGY
			   set LIST_ORDER        = LIST_ORDER + 1
			     , DATE_MODIFIED     = getdate()
			     , DATE_MODIFIED_UTC = getutcdate()
			     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
			 where LIST_NAME         = @LIST_NAME
			   and LANG              = @LANG
			   and LIST_ORDER       >= @NEW_INDEX
			   and LIST_ORDER       <= @OLD_INDEX
			   and DELETED           = 0;
		end -- if;
		update TERMINOLOGY
		   set LIST_ORDER        = @NEW_INDEX
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
		 where ID                = @SWAP_ID
		   and DELETED           = 0;
	end -- if;
  end
GO

Grant Execute on dbo.spTERMINOLOGY_LIST_MoveItem to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTERMINOLOGY_LIST_MoveUp' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTERMINOLOGY_LIST_MoveUp;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spTERMINOLOGY_LIST_MoveUp
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @SWAP_ID    uniqueidentifier;
	declare @LIST_NAME  nvarchar(50);
	declare @LIST_ORDER int;
	if exists(select * from TERMINOLOGY where ID = @ID and DELETED = 0) begin -- then
		-- BEGIN Oracle Exception
			select @LIST_NAME  = LIST_NAME
			     , @LIST_ORDER = LIST_ORDER
			  from TERMINOLOGY
			 where ID          = @ID
			   and DELETED     = 0;
		-- END Oracle Exception
		
		-- Moving up actually means decrementing the order value. 
		-- BEGIN Oracle Exception
			select @SWAP_ID   = ID
			  from TERMINOLOGY
			 where LIST_NAME  = @LIST_NAME
			   and LIST_ORDER = @LIST_ORDER - 1
			   and DELETED    = 0;
		-- END Oracle Exception
		if dbo.fnIsEmptyGuid(@SWAP_ID) = 0 begin -- then
			-- BEGIN Oracle Exception
				update TERMINOLOGY
				   set LIST_ORDER       = LIST_ORDER - 1
				     , DATE_MODIFIED    = getdate()
				     , DATE_MODIFIED_UTC= getutcdate()
				     , MODIFIED_USER_ID = @MODIFIED_USER_ID
				 where ID               = @ID
				   and DELETED          = 0;
			-- END Oracle Exception
			-- BEGIN Oracle Exception
				update TERMINOLOGY
				   set LIST_ORDER       = LIST_ORDER + 1
				     , DATE_MODIFIED    = getdate()
				     , DATE_MODIFIED_UTC= getutcdate()
				     , MODIFIED_USER_ID = @MODIFIED_USER_ID
				 where ID               = @SWAP_ID
				   and DELETED          = 0;
			-- END Oracle Exception
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spTERMINOLOGY_LIST_MoveUp to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTERMINOLOGY_LIST_ReorderAll' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTERMINOLOGY_LIST_ReorderAll;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/24/2008 Paul.  The extension of this procedure is zero so that we do not have to rename any other procedures. 
-- The intent is to call this procedure any time the list order changes to ensure that there are not gaps or overlaps. 
Create Procedure dbo.spTERMINOLOGY_LIST_ReorderAll
	( @MODIFIED_USER_ID  uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @ID             uniqueidentifier;
	declare @LANG           nvarchar(10);
	declare @LIST_NAME      nvarchar(50);

-- #if SQL_Server /*
	declare list_cursor cursor for
	select vwTERMINOLOGY.LANG
	     , vwTERMINOLOGY.LIST_NAME
	  from      vwTERMINOLOGY
	 inner join vwLANGUAGES
	         on vwLANGUAGES.NAME   = vwTERMINOLOGY.LANG
	        and vwLANGUAGES.ACTIVE = 1
	 where vwTERMINOLOGY.LIST_NAME is not null
	 group by vwTERMINOLOGY.LANG, vwTERMINOLOGY.LIST_NAME
	 order by vwTERMINOLOGY.LANG, vwTERMINOLOGY.LIST_NAME;
-- #endif SQL_Server */

/* -- #if IBM_DB2
	declare continue handler for not found
		set in_FETCH_STATUS = 1;
-- #endif IBM_DB2 */
/* -- #if MySQL
	declare continue handler for not found
		set in_FETCH_STATUS = 1;
	set in_FETCH_STATUS = 0;
-- #endif MySQL */

	open list_cursor;
	fetch next from list_cursor into @LANG, @LIST_NAME;
	while @@FETCH_STATUS = 0 begin -- do
		--print @LANG + N'.' + @LIST_NAME;
		exec dbo.spTERMINOLOGY_LIST_Reorder @MODIFIED_USER_ID, @LANG, @LIST_NAME;
		fetch next from list_cursor into @LANG, @LIST_NAME;
/* -- #if Oracle
		IF list_cursor%NOTFOUND THEN
			StoO_sqlstatus := 2;
			StoO_fetchstatus := -1;
		ELSE
			StoO_sqlstatus := 0;
			StoO_fetchstatus := 0;
		END IF;
-- #endif Oracle */
	end -- while;
	close list_cursor;

	deallocate list_cursor;
  end
GO
 
-- exec dbo.spTERMINOLOGY_LIST_ReorderAll null;

Grant Execute on dbo.spTERMINOLOGY_LIST_ReorderAll to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTERMINOLOGY_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTERMINOLOGY_Update;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the MODULE_NAME to 25 to match the size in the MODULES table.
-- 08/27/2008 Paul.  PostgreSQL does not allow modifying input parameters.  Use a local temp variable. 
-- 02/02/2009 Paul.  Need to treat empty strings as NULL to be consistent.
-- 03/06/2012 Paul.  Increase size of the NAME field so that it can include a date formula. 
Create Procedure dbo.spTERMINOLOGY_Update
	( @NAME              nvarchar(150)
	, @LANG              nvarchar(10)
	, @MODULE_NAME       nvarchar(25)
	, @LIST_NAME         nvarchar(50)
	, @LIST_ORDER        int
	, @DISPLAY_NAME      nvarchar(max)
	)
as
  begin
	set nocount on
	
	declare @ID              uniqueidentifier;
	declare @TEMP_LANG       nvarchar(10);
	declare @TEMP_LIST_ORDER int;
	declare @TEMP_NAME       nvarchar(150);
	set @TEMP_LANG       = @LANG;
	set @TEMP_LIST_ORDER = @LIST_ORDER;
	-- 11/21/2005 Paul.  LIST_ORDER is not used if LIST_NAME is null. 
	if @LIST_NAME is null begin -- then
		set @TEMP_LIST_ORDER = null;
	end -- if;
	-- 01/12/2006 Paul.  0 is not valid for list order. 
	if @TEMP_LIST_ORDER = 0 begin -- then
		set @TEMP_LIST_ORDER = null;
	end -- if;
	-- 08/22/2007 Paul.  SugarCRM still has not fixed their German language pack. Convert ge-GE to de-DE.
	if @TEMP_LANG = lower(N'ge-GE') begin -- then
		set @TEMP_LANG = N'de-DE';
	end -- if;
	-- 02/02/2009 Paul.  Need to treat empty strings as NULL to be consistent.
	set @TEMP_NAME = @NAME;
	if @TEMP_NAME = N'' begin -- then
		set @TEMP_NAME = null;
	end -- if;
	if dbo.fnTERMINOLOGY_Exists(@TEMP_NAME, @TEMP_LANG, @MODULE_NAME, @LIST_NAME, @TEMP_LIST_ORDER) = 0 begin -- then
		set @ID = newid();
		insert into TERMINOLOGY
			( ID               
			, DATE_ENTERED     
			, DATE_MODIFIED    
			, NAME             
			, LANG             
			, MODULE_NAME      
			, LIST_NAME        
			, LIST_ORDER       
			, DISPLAY_NAME     
			)
		values
			( @ID               
			,  getdate()        
			,  getdate()        
			, @TEMP_NAME        
			, @TEMP_LANG        
			, @MODULE_NAME      
			, @LIST_NAME        
			, @TEMP_LIST_ORDER       
			, @DISPLAY_NAME     
			);
	end else begin
		-- 10/09/2005 Paul.  Only update the term if it has changed. 
		-- 01/16/2006 Paul.  Function returns 1 when changed. 
		if dbo.fnTERMINOLOGY_Changed(@TEMP_NAME, @TEMP_LANG, @MODULE_NAME, @LIST_NAME, @TEMP_LIST_ORDER, @DISPLAY_NAME) = 1 begin -- then
			update TERMINOLOGY
			   set DATE_MODIFIED     =  getdate()        
			     , DATE_MODIFIED_UTC =  getutcdate()     
			     , DISPLAY_NAME      = @DISPLAY_NAME     
			 where DELETED = 0
			   and (NAME        = @TEMP_NAME   or (NAME        is null and @TEMP_NAME   is null))
			   and (LANG        = @TEMP_LANG   or (LANG        is null and @TEMP_LANG   is null))
			   and (MODULE_NAME = @MODULE_NAME or (MODULE_NAME is null and @MODULE_NAME is null))
			   and (LIST_NAME   = @LIST_NAME   or (LIST_NAME   is null and @LIST_NAME   is null))
			   and isnull(LIST_ORDER, 0) = isnull(@TEMP_LIST_ORDER, 0);  -- 01/16/2006 Paul.  @TEMP_LIST_ORDER may be zero. 
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spTERMINOLOGY_Update to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTIMEZONES_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTIMEZONES_Delete;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spTIMEZONES_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	update TIMEZONES
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID               = @ID;
  end
GO
 
Grant Execute on dbo.spTIMEZONES_Delete to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTIMEZONES_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTIMEZONES_InsertOnly;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/02/2012 Paul.  Add iCal TZID. 
-- 03/26/2013 Paul.  iCloud uses linked_timezone values from http://tzinfo.rubyforge.org/doc/. 
Create Procedure dbo.spTIMEZONES_InsertOnly
	( @ID                     uniqueidentifier
	, @MODIFIED_USER_ID       uniqueidentifier
	, @NAME                   nvarchar(100)
	, @STANDARD_NAME          nvarchar(100)
	, @STANDARD_ABBREVIATION  nvarchar(10)
	, @DAYLIGHT_NAME          nvarchar(100)
	, @DAYLIGHT_ABBREVIATION  nvarchar(10)
	, @BIAS                   int
	, @STANDARD_BIAS          int
	, @DAYLIGHT_BIAS          int
	, @STANDARD_YEAR          int
	, @STANDARD_MONTH         int
	, @STANDARD_WEEK          int
	, @STANDARD_DAYOFWEEK     int
	, @STANDARD_HOUR          int
	, @STANDARD_MINUTE        int
	, @DAYLIGHT_YEAR          int
	, @DAYLIGHT_MONTH         int
	, @DAYLIGHT_WEEK          int
	, @DAYLIGHT_DAYOFWEEK     int
	, @DAYLIGHT_HOUR          int
	, @DAYLIGHT_MINUTE        int
	, @TZID                   nvarchar(50) = null
	, @LINKED_TIMEZONE        nvarchar(50) = null
	)
as
  begin
	set nocount on
	
	if not exists(select * from TIMEZONES where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into TIMEZONES
			( ID                    
			, CREATED_BY            
			, DATE_ENTERED          
			, MODIFIED_USER_ID      
			, DATE_MODIFIED         
			, NAME                  
			, STANDARD_NAME         
			, STANDARD_ABBREVIATION 
			, DAYLIGHT_NAME         
			, DAYLIGHT_ABBREVIATION 
			, BIAS                  
			, STANDARD_BIAS         
			, DAYLIGHT_BIAS         
			, STANDARD_YEAR         
			, STANDARD_MONTH        
			, STANDARD_WEEK         
			, STANDARD_DAYOFWEEK    
			, STANDARD_HOUR         
			, STANDARD_MINUTE       
			, DAYLIGHT_YEAR         
			, DAYLIGHT_MONTH        
			, DAYLIGHT_WEEK         
			, DAYLIGHT_DAYOFWEEK    
			, DAYLIGHT_HOUR         
			, DAYLIGHT_MINUTE       
			, TZID                  
			, LINKED_TIMEZONE       
			)
		values
			( @ID                    
			, @MODIFIED_USER_ID      
			,  getdate()             
			, @MODIFIED_USER_ID      
			,  getdate()             
			, @NAME                  
			, @STANDARD_NAME         
			, @STANDARD_ABBREVIATION 
			, @DAYLIGHT_NAME         
			, @DAYLIGHT_ABBREVIATION 
			, @BIAS                  
			, @STANDARD_BIAS         
			, @DAYLIGHT_BIAS         
			, @STANDARD_YEAR         
			, @STANDARD_MONTH        
			, @STANDARD_WEEK         
			, @STANDARD_DAYOFWEEK    
			, @STANDARD_HOUR         
			, @STANDARD_MINUTE       
			, @DAYLIGHT_YEAR         
			, @DAYLIGHT_MONTH        
			, @DAYLIGHT_WEEK         
			, @DAYLIGHT_DAYOFWEEK    
			, @DAYLIGHT_HOUR         
			, @DAYLIGHT_MINUTE       
			, @TZID                  
			, @LINKED_TIMEZONE       
			);
	end else begin
		-- 01/01/2012 Paul.  We want to use the same InsertOnly data to update the TZID. 
		update TIMEZONES
		   set MODIFIED_USER_ID       = @MODIFIED_USER_ID      
		     , DATE_MODIFIED          =  getdate()             
		     , DATE_MODIFIED_UTC      =  getutcdate()          
		     , TZID                   = @TZID                  
		     , LINKED_TIMEZONE        = @LINKED_TIMEZONE       
		 where ID                     = @ID                    
		   and (   TZID            is null and @TZID            is not null
		        or LINKED_TIMEZONE is null and @LINKED_TIMEZONE is not null
		       );
	end -- if;
  end
GO
 
Grant Execute on dbo.spTIMEZONES_InsertOnly to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTIMEZONES_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTIMEZONES_Update;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/02/2012 Paul.  Add iCal TZID. 
-- 03/26/2013 Paul.  iCloud uses linked_timezone values from http://tzinfo.rubyforge.org/doc/. 
Create Procedure dbo.spTIMEZONES_Update
	( @ID                     uniqueidentifier output
	, @MODIFIED_USER_ID       uniqueidentifier
	, @NAME                   nvarchar(100)
	, @STANDARD_NAME          nvarchar(100)
	, @STANDARD_ABBREVIATION  nvarchar(10)
	, @DAYLIGHT_NAME          nvarchar(100)
	, @DAYLIGHT_ABBREVIATION  nvarchar(10)
	, @BIAS                   int
	, @STANDARD_BIAS          int
	, @DAYLIGHT_BIAS          int
	, @STANDARD_YEAR          int
	, @STANDARD_MONTH         int
	, @STANDARD_WEEK          int
	, @STANDARD_DAYOFWEEK     int
	, @STANDARD_HOUR          int
	, @STANDARD_MINUTE        int
	, @DAYLIGHT_YEAR          int
	, @DAYLIGHT_MONTH         int
	, @DAYLIGHT_WEEK          int
	, @DAYLIGHT_DAYOFWEEK     int
	, @DAYLIGHT_HOUR          int
	, @DAYLIGHT_MINUTE        int
	, @TZID                   nvarchar(50) = null
	, @LINKED_TIMEZONE        nvarchar(50) = null
	)
as
  begin
	set nocount on
	
	if not exists(select * from TIMEZONES where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into TIMEZONES
			( ID                    
			, CREATED_BY            
			, DATE_ENTERED          
			, MODIFIED_USER_ID      
			, DATE_MODIFIED         
			, NAME                  
			, STANDARD_NAME         
			, STANDARD_ABBREVIATION 
			, DAYLIGHT_NAME         
			, DAYLIGHT_ABBREVIATION 
			, BIAS                  
			, STANDARD_BIAS         
			, DAYLIGHT_BIAS         
			, STANDARD_YEAR         
			, STANDARD_MONTH        
			, STANDARD_WEEK         
			, STANDARD_DAYOFWEEK    
			, STANDARD_HOUR         
			, STANDARD_MINUTE       
			, DAYLIGHT_YEAR         
			, DAYLIGHT_MONTH        
			, DAYLIGHT_WEEK         
			, DAYLIGHT_DAYOFWEEK    
			, DAYLIGHT_HOUR         
			, DAYLIGHT_MINUTE       
			, TZID                  
			, LINKED_TIMEZONE       
			)
		values
			( @ID                    
			, @MODIFIED_USER_ID      
			,  getdate()             
			, @MODIFIED_USER_ID      
			,  getdate()             
			, @NAME                  
			, @STANDARD_NAME         
			, @STANDARD_ABBREVIATION 
			, @DAYLIGHT_NAME         
			, @DAYLIGHT_ABBREVIATION 
			, @BIAS                  
			, @STANDARD_BIAS         
			, @DAYLIGHT_BIAS         
			, @STANDARD_YEAR         
			, @STANDARD_MONTH        
			, @STANDARD_WEEK         
			, @STANDARD_DAYOFWEEK    
			, @STANDARD_HOUR         
			, @STANDARD_MINUTE       
			, @DAYLIGHT_YEAR         
			, @DAYLIGHT_MONTH        
			, @DAYLIGHT_WEEK         
			, @DAYLIGHT_DAYOFWEEK    
			, @DAYLIGHT_HOUR         
			, @DAYLIGHT_MINUTE       
			, @TZID                  
			, @LINKED_TIMEZONE       
			);
	end else begin
		update TIMEZONES
		   set MODIFIED_USER_ID       = @MODIFIED_USER_ID      
		     , DATE_MODIFIED          =  getdate()             
		     , DATE_MODIFIED_UTC      =  getutcdate()          
		     , NAME                   = @NAME                  
		     , STANDARD_NAME          = @STANDARD_NAME         
		     , STANDARD_ABBREVIATION  = @STANDARD_ABBREVIATION 
		     , DAYLIGHT_NAME          = @DAYLIGHT_NAME         
		     , DAYLIGHT_ABBREVIATION  = @DAYLIGHT_ABBREVIATION 
		     , BIAS                   = @BIAS                  
		     , STANDARD_BIAS          = @STANDARD_BIAS         
		     , DAYLIGHT_BIAS          = @DAYLIGHT_BIAS         
		     , STANDARD_YEAR          = @STANDARD_YEAR         
		     , STANDARD_MONTH         = @STANDARD_MONTH        
		     , STANDARD_WEEK          = @STANDARD_WEEK         
		     , STANDARD_DAYOFWEEK     = @STANDARD_DAYOFWEEK    
		     , STANDARD_HOUR          = @STANDARD_HOUR         
		     , STANDARD_MINUTE        = @STANDARD_MINUTE       
		     , DAYLIGHT_YEAR          = @DAYLIGHT_YEAR         
		     , DAYLIGHT_MONTH         = @DAYLIGHT_MONTH        
		     , DAYLIGHT_WEEK          = @DAYLIGHT_WEEK         
		     , DAYLIGHT_DAYOFWEEK     = @DAYLIGHT_DAYOFWEEK    
		     , DAYLIGHT_HOUR          = @DAYLIGHT_HOUR         
		     , DAYLIGHT_MINUTE        = @DAYLIGHT_MINUTE       
		     , TZID                   = @TZID                  
		     , LINKED_TIMEZONE        = @LINKED_TIMEZONE       
		 where ID                     = @ID                    ;
	end -- if;
  end
GO
 
Grant Execute on dbo.spTIMEZONES_Update to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTIMEZONES_UpdateByName' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTIMEZONES_UpdateByName;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 02/22/2007 Paul.  Only update timezone data if it has changed. This is so that we can verify the expected changes. 
-- 04/08/2010 Paul.  Only update the abbreviation if it is provided. 
Create Procedure dbo.spTIMEZONES_UpdateByName
	( @MODIFIED_USER_ID       uniqueidentifier
	, @NAME                   nvarchar(100)
	, @STANDARD_NAME          nvarchar(100)
	, @STANDARD_ABBREVIATION  nvarchar(10)
	, @DAYLIGHT_NAME          nvarchar(100)
	, @DAYLIGHT_ABBREVIATION  nvarchar(10)
	, @BIAS                   int
	, @STANDARD_BIAS          int
	, @DAYLIGHT_BIAS          int
	, @STANDARD_YEAR          int
	, @STANDARD_MONTH         int
	, @STANDARD_WEEK          int
	, @STANDARD_DAYOFWEEK     int
	, @STANDARD_HOUR          int
	, @STANDARD_MINUTE        int
	, @DAYLIGHT_YEAR          int
	, @DAYLIGHT_MONTH         int
	, @DAYLIGHT_WEEK          int
	, @DAYLIGHT_DAYOFWEEK     int
	, @DAYLIGHT_HOUR          int
	, @DAYLIGHT_MINUTE        int
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	-- BEGIN Oracle Exception
		select @ID = ID
		  from TIMEZONES
		 where NAME    = @NAME
		   and DELETED = 0;
	-- END Oracle Exception
	
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		print N'Inserting Time Zone: ' + @NAME;
		set @ID = newid();
		insert into TIMEZONES
			( ID                    
			, CREATED_BY            
			, DATE_ENTERED          
			, MODIFIED_USER_ID      
			, DATE_MODIFIED         
			, NAME                  
			, STANDARD_NAME         
			, STANDARD_ABBREVIATION 
			, DAYLIGHT_NAME         
			, DAYLIGHT_ABBREVIATION 
			, BIAS                  
			, STANDARD_BIAS         
			, DAYLIGHT_BIAS         
			, STANDARD_YEAR         
			, STANDARD_MONTH        
			, STANDARD_WEEK         
			, STANDARD_DAYOFWEEK    
			, STANDARD_HOUR         
			, STANDARD_MINUTE       
			, DAYLIGHT_YEAR         
			, DAYLIGHT_MONTH        
			, DAYLIGHT_WEEK         
			, DAYLIGHT_DAYOFWEEK    
			, DAYLIGHT_HOUR         
			, DAYLIGHT_MINUTE       
			)
		values
			( @ID                    
			, @MODIFIED_USER_ID      
			,  getdate()             
			, @MODIFIED_USER_ID      
			,  getdate()             
			, @NAME                  
			, @STANDARD_NAME         
			, @STANDARD_ABBREVIATION 
			, @DAYLIGHT_NAME         
			, @DAYLIGHT_ABBREVIATION 
			, @BIAS                  
			, @STANDARD_BIAS         
			, @DAYLIGHT_BIAS         
			, @STANDARD_YEAR         
			, @STANDARD_MONTH        
			, @STANDARD_WEEK         
			, @STANDARD_DAYOFWEEK    
			, @STANDARD_HOUR         
			, @STANDARD_MINUTE       
			, @DAYLIGHT_YEAR         
			, @DAYLIGHT_MONTH        
			, @DAYLIGHT_WEEK         
			, @DAYLIGHT_DAYOFWEEK    
			, @DAYLIGHT_HOUR         
			, @DAYLIGHT_MINUTE       
			);
	end else begin
		set @ID = null;
		-- BEGIN Oracle Exception
			select @ID = ID
			  from TIMEZONES
			 where NAME    = @NAME
			   and DELETED = 0
			   and (   1 = 0
			        or STANDARD_NAME          <> @STANDARD_NAME          
			--        or STANDARD_ABBREVIATION  <> @STANDARD_ABBREVIATION  
			        or DAYLIGHT_NAME          <> @DAYLIGHT_NAME          
			--        or DAYLIGHT_ABBREVIATION  <> @DAYLIGHT_ABBREVIATION  
			        or BIAS                   <> @BIAS                   
			        or STANDARD_BIAS          <> @STANDARD_BIAS          
			        or DAYLIGHT_BIAS          <> @DAYLIGHT_BIAS          
			        or STANDARD_YEAR          <> @STANDARD_YEAR          
			        or STANDARD_MONTH         <> @STANDARD_MONTH         
			        or STANDARD_WEEK          <> @STANDARD_WEEK          
			        or STANDARD_DAYOFWEEK     <> @STANDARD_DAYOFWEEK     
			        or STANDARD_HOUR          <> @STANDARD_HOUR          
			        or STANDARD_MINUTE        <> @STANDARD_MINUTE        
			        or DAYLIGHT_YEAR          <> @DAYLIGHT_YEAR          
			        or DAYLIGHT_MONTH         <> @DAYLIGHT_MONTH         
			        or DAYLIGHT_WEEK          <> @DAYLIGHT_WEEK          
			        or DAYLIGHT_DAYOFWEEK     <> @DAYLIGHT_DAYOFWEEK     
			        or DAYLIGHT_HOUR          <> @DAYLIGHT_HOUR          
			        or DAYLIGHT_MINUTE        <> @DAYLIGHT_MINUTE        
			       );
		-- END Oracle Exception
		if dbo.fnIsEmptyGuid(@ID) = 0 begin -- then
			print N'Updating Time Zone: ' + @NAME;
			-- 04/08/2010 Paul.  Only update the abbreviation if it is provided. 
			update TIMEZONES
			   set MODIFIED_USER_ID       = @MODIFIED_USER_ID      
			     , DATE_MODIFIED          =  getdate()             
			     , DATE_MODIFIED_UTC      =  getutcdate()          
	--		     , NAME                   = @NAME                  
			     , STANDARD_NAME          = @STANDARD_NAME         
			     , STANDARD_ABBREVIATION  = isnull(@STANDARD_ABBREVIATION, STANDARD_ABBREVIATION)
			     , DAYLIGHT_NAME          = @DAYLIGHT_NAME         
			     , DAYLIGHT_ABBREVIATION  = isnull(@DAYLIGHT_ABBREVIATION, DAYLIGHT_ABBREVIATION)
			     , BIAS                   = @BIAS                  
			     , STANDARD_BIAS          = @STANDARD_BIAS         
			     , DAYLIGHT_BIAS          = @DAYLIGHT_BIAS         
			     , STANDARD_YEAR          = @STANDARD_YEAR         
			     , STANDARD_MONTH         = @STANDARD_MONTH        
			     , STANDARD_WEEK          = @STANDARD_WEEK         
			     , STANDARD_DAYOFWEEK     = @STANDARD_DAYOFWEEK    
			     , STANDARD_HOUR          = @STANDARD_HOUR         
			     , STANDARD_MINUTE        = @STANDARD_MINUTE       
			     , DAYLIGHT_YEAR          = @DAYLIGHT_YEAR         
			     , DAYLIGHT_MONTH         = @DAYLIGHT_MONTH        
			     , DAYLIGHT_WEEK          = @DAYLIGHT_WEEK         
			     , DAYLIGHT_DAYOFWEEK     = @DAYLIGHT_DAYOFWEEK    
			     , DAYLIGHT_HOUR          = @DAYLIGHT_HOUR         
			     , DAYLIGHT_MINUTE        = @DAYLIGHT_MINUTE       
			 where ID                     = @ID                    ;
		end -- if;
	end -- if;
  end
GO
 
Grant Execute on dbo.spTIMEZONES_UpdateByName to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTRACKER_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTRACKER_Delete;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spTRACKER_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	delete from TRACKER
	 where ID = @ID;
  end
GO

Grant Execute on dbo.spTRACKER_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTRACKER_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTRACKER_Update;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/14/2007 Paul.  Add support for DB2.
-- 05/07/2010 Paul.  Instead of trying to group the entries and limit by module,
-- 08/26/2010 Paul.  Restore max on a per-module basis. 
-- 03/08/2012 Paul.  Add ACTION to the tracker table so that we can create quick user activity reports. 
-- 05/05/2013 Paul.  Must include the ACTION in the oldest query. 
Create Procedure dbo.spTRACKER_Update
	( @MODIFIED_USER_ID  uniqueidentifier
	, @USER_ID           uniqueidentifier
	, @MODULE_NAME       nvarchar(25)
	, @ITEM_ID           uniqueidentifier
	, @ITEM_SUMMARY      nvarchar(255)
	, @ACTION            nvarchar(25) = null
	)
as
  begin
	set nocount on
	
	declare @HistoryMax   int;
	declare @HistoryCount int;
	declare @OLDEST_ID    uniqueidentifier;

	-- 07/16/2005 Paul. SugarCRM only keeps one entry per USER_ID/ITEM_ID
	if @ACTION = N'detailview' begin -- then
		-- BEGIN Oracle Exception
			delete from TRACKER
			 where USER_ID = @USER_ID
			   and ITEM_ID = @ITEM_ID
			   and ACTION  = @ACTION
			   and DELETED = 0;
		-- END Oracle Exception
	end -- if;
	
	insert into TRACKER
		( ID               
		, CREATED_BY       
		, DATE_ENTERED     
		, MODIFIED_USER_ID 
		, DATE_MODIFIED    
		, USER_ID          
		, ACTION           
		, MODULE_NAME      
		, ITEM_ID          
		, ITEM_SUMMARY     
		)
	values
		(  newid()          
		, @MODIFIED_USER_ID 
		,  getdate()        
		, @MODIFIED_USER_ID 
		,  getdate()        
		, @USER_ID          
		, @ACTION           
		, @MODULE_NAME      
		, @ITEM_ID          
		, @ITEM_SUMMARY     
		);

	-- Prune any excess tracker items. 
	set @HistoryMax = dbo.fnCONFIG_Int(N'history_max_viewed');
	if @HistoryMax is null or @HistoryMax = 0 begin -- then
		set @HistoryMax = 10;
	end -- if;
	-- 05/07/2010 Paul.  Instead of trying to group the entries and limit by module,
	-- we are simply going to limit the total to 100 and expect it to cover the most popular modules. 
	-- 08/26/2010 Paul.  Restore max on a per-module basis. 
	-- set @HistoryMax = 100;
	
-- #if SQL_Server /*
	if @ACTION = N'detailview' begin -- then
		select @HistoryCount = count(*)
		  from TRACKER
		 where USER_ID     = @USER_ID
		   and MODULE_NAME = @MODULE_NAME
		   and ACTION      = @ACTION
		   and DELETED     = 0;
	
		while @HistoryCount > @HistoryMax begin -- do
			-- 05/05/2013 Paul.  Must include the ACTION in the oldest query. 
			select top 1 @OLDEST_ID = ID
			  from TRACKER
			 where USER_ID     = @USER_ID
			   and MODULE_NAME = @MODULE_NAME
			   and ACTION      = @ACTION
			 order by DATE_ENTERED;
			
			delete from TRACKER
			  where ID = @OLDEST_ID;
			
			select @HistoryCount = count(*)
			  from TRACKER
			 where USER_ID     = @USER_ID
			   and MODULE_NAME = @MODULE_NAME
			   and ACTION      = @ACTION
			   and DELETED     = 0;
		end -- while;
	end -- if;
-- #endif SQL_Server */




  end
GO

Grant Execute on dbo.spTRACKER_Update to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSERS_LAST_IMPORT_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSERS_LAST_IMPORT_Delete;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spUSERS_LAST_IMPORT_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	update USERS_LAST_IMPORT
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID               = @ID;
  end
GO

Grant Execute on dbo.spUSERS_LAST_IMPORT_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSERS_LAST_IMPORT_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSERS_LAST_IMPORT_Update;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spUSERS_LAST_IMPORT_Update
	( @ID                uniqueidentifier output
	, @MODIFIED_USER_ID  uniqueidentifier
	, @ASSIGNED_USER_ID  uniqueidentifier
	, @BEAN_TYPE         nvarchar(25)
	, @BEAN_ID           uniqueidentifier
	)
as
  begin
	set nocount on
	
	if not exists(select * from USERS_LAST_IMPORT where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into USERS_LAST_IMPORT
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, ASSIGNED_USER_ID 
			, BEAN_TYPE        
			, BEAN_ID          
			)
		values
			( @ID               
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @ASSIGNED_USER_ID 
			, @BEAN_TYPE        
			, @BEAN_ID          
			);
	end else begin
		update USERS_LAST_IMPORT
		   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
		     , DATE_MODIFIED     =  getdate()        
		     , DATE_MODIFIED_UTC =  getutcdate()     
		     , ASSIGNED_USER_ID  = @ASSIGNED_USER_ID 
		     , BEAN_TYPE         = @BEAN_TYPE        
		     , BEAN_ID           = @BEAN_ID          
		 where ID                = @ID               ;
	end -- if;
  end
GO

Grant Execute on dbo.spUSERS_LAST_IMPORT_Update to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSERS_LOGINS_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSERS_LOGINS_InsertOnly;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/27/2008 Paul.  PostgreSQL does not allow modifying input parameters.  Use a local temp variable. 
Create Procedure dbo.spUSERS_LOGINS_InsertOnly
	( @ID                uniqueidentifier output
	, @MODIFIED_USER_ID  uniqueidentifier
	, @USER_ID           uniqueidentifier
	, @USER_NAME         nvarchar(60)
	, @LOGIN_TYPE        nvarchar(25)
	, @LOGIN_STATUS      nvarchar(25)
	, @ASPNET_SESSIONID  nvarchar(50)
	, @REMOTE_HOST       nvarchar(100)
	, @SERVER_HOST       nvarchar(100)
	, @TARGET            nvarchar(255)
	, @RELATIVE_PATH     nvarchar(255)
	, @USER_AGENT        nvarchar(255)
	)
as
  begin
	set nocount on
	
	declare @TEMP_USER_ID uniqueidentifier;
	set @TEMP_USER_ID = @USER_ID;
	-- 03/02/2008 Paul.  Even though the login has failed, 
	-- try and find the user that attempted the login. 
	if dbo.fnIsEmptyGuid(@TEMP_USER_ID) = 1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_USER_ID = ID
			  from vwUSERS_Login
			 where lower(USER_NAME) = lower(@USER_NAME);
		-- END Oracle Exception
	end -- if;

	set @ID = newid();
	insert into USERS_LOGINS
		( ID               
		, CREATED_BY       
		, DATE_ENTERED     
		, MODIFIED_USER_ID 
		, DATE_MODIFIED    
		, USER_ID          
		, USER_NAME        
		, LOGIN_TYPE       
		, LOGIN_DATE       
		, LOGIN_STATUS     
		, ASPNET_SESSIONID 
		, REMOTE_HOST      
		, SERVER_HOST      
		, TARGET           
		, RELATIVE_PATH    
		, USER_AGENT       
		)
	values 	( @ID               
		, @MODIFIED_USER_ID       
		,  getdate()        
		, @MODIFIED_USER_ID 
		,  getdate()        
		, @TEMP_USER_ID     
		, @USER_NAME        
		, @LOGIN_TYPE       
		,  getdate()        
		, @LOGIN_STATUS     
		, @ASPNET_SESSIONID 
		, @REMOTE_HOST      
		, @SERVER_HOST      
		, @TARGET           
		, @RELATIVE_PATH    
		, @USER_AGENT       
		);
  end
GO

Grant Execute on dbo.spUSERS_LOGINS_InsertOnly to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSERS_LOGINS_Logout' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSERS_LOGINS_Logout;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spUSERS_LOGINS_Logout
	( @ID                uniqueidentifier
	, @MODIFIED_USER_ID  uniqueidentifier
	)
as
  begin
	set nocount on
	
	-- BEGIN Oracle Exception
		update USERS_LOGINS
		   set MODIFIED_USER_ID = @MODIFIED_USER_ID
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , LOGOUT_DATE      = getdate()
		 where ID               = @ID
		   and LOGOUT_DATE is null;
	-- END Oracle Exception
  end
GO

Grant Execute on dbo.spUSERS_LOGINS_Logout to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSERS_PasswordUpdate' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSERS_PasswordUpdate;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 05/12/2010 Paul.  SYSTEM_GENERATED_PASSWORD and PWD_LAST_CHANGED are new to help manage forgotten passwrod. 
-- 02/20/2011 Paul.  Log old passwords in the password history table. 
Create Procedure dbo.spUSERS_PasswordUpdate
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	, @USER_HASH        nvarchar(32)
	)
as
  begin
	set nocount on
	
	update USERS
	   set USER_HASH                 = @USER_HASH
	     , PWD_LAST_CHANGED          = getdate()
	     , SYSTEM_GENERATED_PASSWORD = 0
	     , DATE_MODIFIED             = getdate()
	     , DATE_MODIFIED_UTC         = getutcdate()
	     , MODIFIED_USER_ID          = @MODIFIED_USER_ID
	 where ID                        = @ID
	   and DELETED                   = 0;

	exec dbo.spUSERS_PASSWORD_HISTORY_InsertOnly @MODIFIED_USER_ID, @ID, @USER_HASH;
  end
GO
 
Grant Execute on dbo.spUSERS_PasswordUpdate to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSERS_PASSWORD_LINK_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSERS_PASSWORD_LINK_Delete;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spUSERS_PASSWORD_LINK_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	update USERS_PASSWORD_LINK
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID = @ID;
  end
GO

Grant Execute on dbo.spUSERS_PASSWORD_LINK_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSERS_PASSWORD_LINK_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSERS_PASSWORD_LINK_InsertOnly;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spUSERS_PASSWORD_LINK_InsertOnly
	( @ID                 uniqueidentifier output
	, @MODIFIED_USER_ID   uniqueidentifier
	, @USER_NAME          nvarchar(60)
	)
as
  begin
	set nocount on
	
	set @ID = newid();
	insert into USERS_PASSWORD_LINK
		( ID                
		, CREATED_BY        
		, DATE_ENTERED      
		, MODIFIED_USER_ID  
		, DATE_MODIFIED     
		, DATE_MODIFIED_UTC 
		, USER_NAME         
		)
	values 	( @ID                
		, @MODIFIED_USER_ID        
		,  getdate()         
		, @MODIFIED_USER_ID  
		,  getdate()         
		,  getutcdate()      
		, @USER_NAME         
		);
  end
GO

Grant Execute on dbo.spUSERS_PASSWORD_LINK_InsertOnly to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSERS_PreferencesUpdate' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSERS_PreferencesUpdate;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
Create Procedure dbo.spUSERS_PreferencesUpdate
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	, @USER_PREFERENCES nvarchar(max)
	)
as
  begin
	set nocount on
	
	update USERS
	   set USER_PREFERENCES = @USER_PREFERENCES
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID               = @ID
	   and DELETED          = 0;
  end
GO

Grant Execute on dbo.spUSERS_PreferencesUpdate to public;
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSERS_TimeZoneUpdate' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSERS_TimeZoneUpdate;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/15/2012 Paul.  Move USER_PREFERENCES to separate fields for easier access on Surface RT. 
Create Procedure dbo.spUSERS_TimeZoneUpdate
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	, @TIMEZONE_ID      uniqueidentifier
	)
as
  begin
	set nocount on

	update USERS
	   set TIMEZONE_ID      = @TIMEZONE_ID              
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID               = @ID
	   and DELETED          = 0;
  end
GO

Grant Execute on dbo.spUSERS_TimeZoneUpdate to public;
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSERS_Undelete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSERS_Undelete;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spUSERS_Undelete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	, @AUDIT_TOKEN      varchar(255)
	)
as
  begin
	set nocount on
	
	-- BEGIN Oracle Exception
		update PROSPECT_LISTS_PROSPECTS
		   set DELETED          = 0
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where RELATED_ID       = @ID
		   and DELETED          = 1
		   and ID in (select ID from PROSPECT_LISTS_PROSPECTS_AUDIT where AUDIT_TOKEN = @AUDIT_TOKEN and RELATED_ID = @ID);
	-- END Oracle Exception
	
	-- BEGIN Oracle Exception
		update CALLS_USERS
		   set DELETED          = 0
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where USER_ID          = @ID
		   and DELETED          = 1
		   and ID in (select ID from CALLS_USERS_AUDIT where AUDIT_TOKEN = @AUDIT_TOKEN and USER_ID = @ID);
	-- END Oracle Exception
	
	-- BEGIN Oracle Exception
		update CONTACTS_USERS
		   set DELETED          = 0
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where USER_ID          = @ID
		   and DELETED          = 1
		   and ID in (select ID from CONTACTS_USERS_AUDIT where AUDIT_TOKEN = @AUDIT_TOKEN and USER_ID = @ID);
	-- END Oracle Exception
	
	/*
	-- BEGIN Oracle Exception
		-- 11/13/2005 Paul.  Not sure if it makes sense to delete email relationships as they amount to a log.
		update EMAILMAN
		   set DELETED          = 0
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where USER_ID          = @ID
		   and DELETED          = 1
		   and ID in (select ID from EMAILMAN_AUDIT where AUDIT_TOKEN = @AUDIT_TOKEN and USER_ID = @ID);
	-- END Oracle Exception
	
	-- BEGIN Oracle Exception
		update EMAILMAN_SENT
		   set DELETED          = 0
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where USER_ID          = @ID
		   and DELETED          = 1
		   and ID in (select ID from EMAILMAN_SENT_AUDIT where AUDIT_TOKEN = @AUDIT_TOKEN and USER_ID = @ID);
	-- END Oracle Exception
	
	-- BEGIN Oracle Exception
		update EMAILS_USERS
		   set DELETED          = 0
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where USER_ID          = @ID
		   and DELETED          = 1
		   and ID in (select ID from EMAILS_USERS_AUDIT where AUDIT_TOKEN = @AUDIT_TOKEN and USER_ID = @ID);
	-- END Oracle Exception
	*/
	-- BEGIN Oracle Exception
		update MEETINGS_USERS
		   set DELETED          = 0
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where USER_ID          = @ID
		   and DELETED          = 1
		   and ID in (select ID from MEETINGS_USERS_AUDIT where AUDIT_TOKEN = @AUDIT_TOKEN and USER_ID = @ID);
	-- END Oracle Exception
	
	-- 08/08/2013 Paul.  USERS_FEEDS is not audited. 
	/*
	-- BEGIN Oracle Exception
		update USERS_FEEDS
		   set DELETED          = 0
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where USER_ID          = @ID
		   and DELETED          = 1
		   and ID in (select ID from USERS_FEEDS_AUDIT where AUDIT_TOKEN = @AUDIT_TOKEN and USER_ID = @ID);
	-- END Oracle Exception
	*/
	
	exec dbo.spPARENT_Undelete @ID, @MODIFIED_USER_ID, @AUDIT_TOKEN, N'Users';

	-- 08/07/2013 Paul.  Team Memberships are not audited, so we cannot undelete them. 
	-- This should not be an issue as we do not allow users to be deleted from the Admin panel 
	-- so there will be little need to undelete a user. 
	/*
	if dbo.fnCONFIG_Boolean(N'enable_team_management') = 1 begin -- then
		-- BEGIN Oracle Exception
			update TEAM_MEMBERSHIPS
			   set DELETED          = 0
			     , DATE_MODIFIED    = getdate()
			     , DATE_MODIFIED_UTC= getutcdate()
			     , MODIFIED_USER_ID = @MODIFIED_USER_ID
			 where USER_ID          = @ID
			   and DELETED          = 1
			   and ID in (select ID from TEAM_MEMBERSHIPS_AUDIT where AUDIT_TOKEN = @AUDIT_TOKEN and USER_ID = @ID);
		-- END Oracle Exception
	end -- if;
	*/
	
	-- BEGIN Oracle Exception
		-- 01/30/2019 Paul.  We should be creating the matching custom audit record. 
		update USERS_CSTM
		   set ID_C             = ID_C
		 where ID_C in 
			(select ID
			   from USERS
			 where ID               = @ID
			   and DELETED          = 1
			   and ID in (select ID from USERS_AUDIT where AUDIT_TOKEN = @AUDIT_TOKEN and ID = @ID)
			);
		update USERS
		   set DELETED          = 0
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where ID               = @ID
		   and DELETED          = 1
		   and ID in (select ID from USERS_AUDIT where AUDIT_TOKEN = @AUDIT_TOKEN and ID = @ID);
	-- END Oracle Exception
  end
GO
 
Grant Execute on dbo.spUSERS_Undelete to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSERS_UpdatePrimaryRole' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSERS_UpdatePrimaryRole;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spUSERS_UpdatePrimaryRole
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	, @ROLE_ID          uniqueidentifier
	)
as
  begin
	set nocount on

	update USERS
	   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
	     , DATE_MODIFIED     =  getdate()        
	     , DATE_MODIFIED_UTC =  getutcdate()     
	     , PRIMARY_ROLE_ID   = @ROLE_ID
	 where ID                = @ID
	   and DELETED           = 0;
  end
GO
 
Grant Execute on dbo.spUSERS_UpdatePrimaryRole to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSERS_UpdateStatus' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSERS_UpdateStatus;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spUSERS_UpdateStatus
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	, @STATUS           nvarchar(25)
	)
as
  begin
	set nocount on

	update USERS
	   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
	     , DATE_MODIFIED     =  getdate()        
	     , DATE_MODIFIED_UTC =  getutcdate()     
	     , STATUS            = @STATUS
	 where ID                = @ID
	   and DELETED           = 0;
  end
GO
 
Grant Execute on dbo.spUSERS_UpdateStatus to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSERS_WizardUpdate' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSERS_WizardUpdate;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/15/2012 Paul.  Move USER_PREFERENCES to separate fields for easier access on Surface RT. 
Create Procedure dbo.spUSERS_WizardUpdate
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	, @DATE_FORMAT      nvarchar(25)
	, @TIME_FORMAT      nvarchar(25)
	, @LANG             nvarchar(10)
	, @CURRENCY_ID      uniqueidentifier
	, @TIMEZONE_ID      uniqueidentifier
	)
as
  begin
	set nocount on

	update USERS
	   set DATE_FORMAT      = @DATE_FORMAT              
	     , TIME_FORMAT      = @TIME_FORMAT              
	     , LANG             = @LANG                     
	     , CURRENCY_ID      = @CURRENCY_ID              
	     , TIMEZONE_ID      = @TIMEZONE_ID              
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID               = @ID
	   and DELETED          = 0;
  end
GO

Grant Execute on dbo.spUSERS_WizardUpdate to public;
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSER_PREFERENCES_CONTENT_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSER_PREFERENCES_CONTENT_Update;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/15/2009 Paul.  Convert data type to varbinary(max) to support Azure. 
Create Procedure dbo.spUSER_PREFERENCES_CONTENT_Update
	( @ID                   uniqueidentifier
	, @CONTENT              varbinary(max)
	)
as
  begin
	set nocount on

	update USER_PREFERENCES
	   set CONTENT = @CONTENT
	 where ID      = @ID;	
  end
GO
 
Grant Execute on dbo.spUSER_PREFERENCES_CONTENT_Update to public;
GO



if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSER_PREFERENCES_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSER_PREFERENCES_Delete;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spUSER_PREFERENCES_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	update USER_PREFERENCES
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID               = @ID;
  end
GO

Grant Execute on dbo.spUSER_PREFERENCES_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSER_PREFERENCES_DeleteByUser' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSER_PREFERENCES_DeleteByUser;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/27/2008 Paul.  PostgreSQL does not allow modifying input parameters.  Use a local temp variable. 
-- 10/21/2008 Paul.  Increase USER_NAME to 60 to match table. 
Create Procedure dbo.spUSER_PREFERENCES_DeleteByUser
	( @USER_NAME         nvarchar(60)
	, @CATEGORY          nvarchar(255)
	, @MODIFIED_USER_ID  uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @ID             uniqueidentifier;
	declare @TEMP_USER_NAME nvarchar(60);
	declare @TEMP_CATEGORY  nvarchar(255);
	-- 01/25/2007 Paul.  Convert to lowercase to support Oracle. 	
	set @TEMP_CATEGORY  = lower(@CATEGORY );
	set @TEMP_USER_NAME = lower(@USER_NAME);
	-- BEGIN Oracle Exception
		select @ID = ID
		  from vwUSER_PREFERENCES
		 where CATEGORY           = @TEMP_CATEGORY
		   and ASSIGNED_USER_NAME = @TEMP_USER_NAME;
	-- END Oracle Exception
	
	if dbo.fnIsEmptyGuid(@ID) = 0 begin -- then
		update USER_PREFERENCES
		   set DELETED          = 1
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where ID               = @ID;
	end -- if;
  end
GO

Grant Execute on dbo.spUSER_PREFERENCES_DeleteByUser to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSER_PREFERENCES_InitPointer' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSER_PREFERENCES_InitPointer;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/15/2009 Paul.  updatetext, readtext and textptr() have been deprecated in SQL Server and are not supported in Azure. 
-- http://msdn.microsoft.com/en-us/library/ms143729.aspx
Create Procedure dbo.spUSER_PREFERENCES_InitPointer
	( @ID                uniqueidentifier
	, @MODIFIED_USER_ID  uniqueidentifier
	, @FILE_POINTER      binary(16) output
	)
as
  begin
	set nocount on
	
	-- 10/20/2005 Paul.  Truncate the content column so that future write operations can simply append data. 
-- #if SQL_Server /*
	raiserror(N'updatetext, readtext and textptr() have been deprecated. ', 16, 1);
	-- update USER_PREFERENCES
	--    set CONTENT          = ''                
	--      , MODIFIED_USER_ID = @MODIFIED_USER_ID 
	--      , DATE_MODIFIED    =  getdate()        
	--      , DATE_MODIFIED_UTC=  getutcdate()     
	--  where ID               = @ID              ;
	
	-- 10/20/2005 Paul.  in_FILE_POINTER is not used in MySQL. 
	-- select @FILE_POINTER = textptr(CONTENT)
	--   from USER_PREFERENCES
	--  where ID               = @ID;
-- #endif SQL_Server */



  end
GO
 
Grant Execute on dbo.spUSER_PREFERENCES_InitPointer to public;
GO



if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSER_PREFERENCES_Insert' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSER_PREFERENCES_Insert;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/27/2008 Paul.  PostgreSQL does not allow modifying input parameters.  Use a local temp variable. 
Create Procedure dbo.spUSER_PREFERENCES_Insert
	( @ID                uniqueidentifier output
	, @MODIFIED_USER_ID  uniqueidentifier
	, @ASSIGNED_USER_ID  uniqueidentifier
	, @CATEGORY          nvarchar(255)
	)
as
  begin
	set nocount on

	declare @TEMP_CATEGORY nvarchar(255);
	-- 01/25/2007 Paul.  Convert to lowercase to support Oracle. 	
	set @TEMP_CATEGORY = lower(@CATEGORY);
	-- BEGIN Oracle Exception
		select @ID = ID
		  from USER_PREFERENCES
		 where  CATEGORY         = @TEMP_CATEGORY
		   and (ASSIGNED_USER_ID = @ASSIGNED_USER_ID or ASSIGNED_USER_ID is null and @ASSIGNED_USER_ID is null)
		   and  DELETED          = 0;
	-- END Oracle Exception
	
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into USER_PREFERENCES
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, CATEGORY         
			, ASSIGNED_USER_ID 
			)
		values
			( @ID               
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @CATEGORY         
			, @ASSIGNED_USER_ID 
			);
	end -- if;
  end
GO

Grant Execute on dbo.spUSER_PREFERENCES_Insert to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSER_PREFERENCES_ReadOffset' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSER_PREFERENCES_ReadOffset;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/15/2009 Paul.  Convert data type to varbinary(max) to support Azure. 
-- 09/15/2009 Paul.  updatetext, readtext and textptr() have been deprecated in SQL Server and are not supported in Azure. 
-- http://msdn.microsoft.com/en-us/library/ms143729.aspx
Create Procedure dbo.spUSER_PREFERENCES_ReadOffset
	( @ID                   uniqueidentifier
	, @FILE_OFFSET          int
	, @READ_SIZE            int
	, @BYTES                varbinary(max) output
	)
as
  begin
	set nocount on
	
	-- 08/12/2005 Paul.  Oracle returns its data in the @BYTES field. 
	-- 10/22/2005 Paul.  MySQL can also return data in @BYTES, but using a recordset has fewer limitations. 
	-- 01/25/2007 Paul.  Protect against a read error by ensuring that the file size is zero if no content. 
-- #if SQL_Server /*
	raiserror(N'updatetext, readtext and textptr() have been deprecated. ', 16, 1);
	-- declare @FILE_SIZE    bigint;
	-- declare @FILE_POINTER binary(16);
	-- select @FILE_SIZE    = isnull(datalength(CONTENT), 0)
	--      , @FILE_POINTER = textptr(CONTENT)
	--   from USER_PREFERENCES
	--  where ID            = @ID;
	-- if @FILE_OFFSET + @READ_SIZE > @FILE_SIZE begin -- then
	-- 	set @READ_SIZE = @FILE_SIZE - @FILE_OFFSET;
	-- end -- if;
	-- if @READ_SIZE > 0 begin -- then
	-- 	readtext USER_PREFERENCES.CONTENT @FILE_POINTER @FILE_OFFSET @READ_SIZE;
	-- end -- if;
-- #endif SQL_Server */



  end
GO
 
Grant Execute on dbo.spUSER_PREFERENCES_ReadOffset to public;
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSER_PREFERENCES_WriteOffset' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSER_PREFERENCES_WriteOffset;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/15/2009 Paul.  Convert data type to varbinary(max) to support Azure. 
-- 09/15/2009 Paul.  updatetext, readtext and textptr() have been deprecated in SQL Server and are not supported in Azure. 
-- http://msdn.microsoft.com/en-us/library/ms143729.aspx
Create Procedure dbo.spUSER_PREFERENCES_WriteOffset
	( @ID                   uniqueidentifier
	, @FILE_POINTER         binary(16)
	, @MODIFIED_USER_ID     uniqueidentifier
	, @FILE_OFFSET          int
	, @BYTES                varbinary(max)
	)
as
  begin
	set nocount on
	
	-- 10/22/2005 Paul.  @ID is used in Oracle and MySQL. 
-- #if SQL_Server /*
	raiserror(N'updatetext, readtext and textptr() have been deprecated. ', 16, 1);
	-- updatetext USER_PREFERENCES.CONTENT
	--            @FILE_POINTER
	--            @FILE_OFFSET
	--            null -- 0 deletes no data, null deletes all data from insertion point. 
	--            @BYTES;
-- #endif SQL_Server */



  end
GO
 
Grant Execute on dbo.spUSER_PREFERENCES_WriteOffset to public;
GO



if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spVERSIONS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spVERSIONS_Delete;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spVERSIONS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	update VERSIONS
	   set DELETED          = 1
	     , DATE_MODIFIED    = getdate()
	     , DATE_MODIFIED_UTC= getutcdate()
	     , MODIFIED_USER_ID = @MODIFIED_USER_ID
	 where ID               = @ID;
  end
GO

Grant Execute on dbo.spVERSIONS_Delete to public;
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spVERSIONS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spVERSIONS_Update;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spVERSIONS_Update
	( @ID                uniqueidentifier output
	, @MODIFIED_USER_ID  uniqueidentifier
	, @NAME              nvarchar(255)
	, @FILE_VERSION      nvarchar(255)
	, @DB_VERSION        nvarchar(255)
	)
as
  begin
	set nocount on
	
	if not exists(select * from VERSIONS where ID = @ID) begin -- then
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
		end -- if;
		insert into VERSIONS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, NAME             
			, FILE_VERSION     
			, DB_VERSION       
			)
		values
			( @ID               
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @NAME             
			, @FILE_VERSION     
			, @DB_VERSION       
			);
	end else begin
		update VERSIONS
		   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
		     , DATE_MODIFIED     =  getdate()        
		     , DATE_MODIFIED_UTC =  getutcdate()     
		     , NAME              = @NAME             
		     , FILE_VERSION      = @FILE_VERSION     
		     , DB_VERSION        = @DB_VERSION       
		 where ID                = @ID               ;
	end -- if;
  end
GO

Grant Execute on dbo.spVERSIONS_Update to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spWORKFLOW_EVENTS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spWORKFLOW_EVENTS_Delete;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/27/2008 Paul.  PostgreSQL requires delete from clause. 
Create Procedure dbo.spWORKFLOW_EVENTS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	delete from WORKFLOW_EVENTS
	 where ID = @ID;
  end
GO

Grant Execute on dbo.spWORKFLOW_EVENTS_Delete to public;
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spACL_ACTIONS_Initialize' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spACL_ACTIONS_Initialize;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 05/02/2005 Paul.  DB2 requires that we use nvarchar to prevent any conversions.
-- 09/26/2017 Paul.  Add Archive access right. 
Create Procedure dbo.spACL_ACTIONS_Initialize
as
  begin
	set nocount on
	
	declare @MODULE_NAME nvarchar(100);

	declare module_cursor cursor for
	select distinct MODULE_NAME
	  from vwACL_ACCESS_ByModule
	  left outer join ACL_ACTIONS
	               on ACL_ACTIONS.CATEGORY = vwACL_ACCESS_ByModule.MODULE_NAME
	 where ACL_ACTIONS.ID is null
	 order by MODULE_NAME;

	declare archive_cursor cursor for
	select MODULE_NAME
	  from vwACL_ACCESS_ByModule
	  left outer join ACL_ACTIONS
	               on ACL_ACTIONS.CATEGORY = vwACL_ACCESS_ByModule.MODULE_NAME
	              and ACL_ACTIONS.NAME     = N'archive'
	 where ACL_ACTIONS.ID is null
	 order by MODULE_NAME;

/* -- #if IBM_DB2
	declare continue handler for not found
		set in_FETCH_STATUS = 1;
-- #endif IBM_DB2 */
/* -- #if MySQL
	declare continue handler for not found
		set in_FETCH_STATUS = 1;
	set in_FETCH_STATUS = 0;
-- #endif MySQL */

	open module_cursor;
	fetch next from module_cursor into @MODULE_NAME;
	while @@FETCH_STATUS = 0 begin -- do
		exec dbo.spACL_ACTIONS_InsertOnly N'admin' , @MODULE_NAME, N'module',  1;
		exec dbo.spACL_ACTIONS_InsertOnly N'access', @MODULE_NAME, N'module', 89;
		exec dbo.spACL_ACTIONS_InsertOnly N'view'  , @MODULE_NAME, N'module', 90;
		exec dbo.spACL_ACTIONS_InsertOnly N'list'  , @MODULE_NAME, N'module', 90;
		exec dbo.spACL_ACTIONS_InsertOnly N'edit'  , @MODULE_NAME, N'module', 90;
		exec dbo.spACL_ACTIONS_InsertOnly N'delete', @MODULE_NAME, N'module', 90;
		exec dbo.spACL_ACTIONS_InsertOnly N'import', @MODULE_NAME, N'module', 90;
		exec dbo.spACL_ACTIONS_InsertOnly N'export', @MODULE_NAME, N'module', 90;
		-- 09/26/2017 Paul.  Add Archive access right. 
		exec dbo.spACL_ACTIONS_InsertOnly N'archive', @MODULE_NAME, N'module', 90;
		fetch next from module_cursor into @MODULE_NAME;
	end -- while;
	close module_cursor;
	deallocate module_cursor;

	-- 09/26/2017 Paul.  Add Archive access right. 
	open archive_cursor;
	fetch next from archive_cursor into @MODULE_NAME;
	while @@FETCH_STATUS = 0 begin -- do
		exec dbo.spACL_ACTIONS_InsertOnly N'archive', @MODULE_NAME, N'module', 90;
		fetch next from archive_cursor into @MODULE_NAME;
	end -- while;
	close archive_cursor;
	deallocate archive_cursor;
  end
GO
 
Grant Execute on dbo.spACL_ACTIONS_Initialize to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spACL_ROLES_MassDelete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spACL_ROLES_MassDelete;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spACL_ROLES_MassDelete
	( @ID_LIST          varchar(8000)
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @ID           uniqueidentifier;
	declare @CurrentPosR  int;
	declare @NextPosR     int;
	set @CurrentPosR = 1;
	while @CurrentPosR <= len(@ID_LIST) begin -- do
		-- 10/04/2006 Paul.  charindex should not use unicode parameters as it will limit all inputs to 4000 characters. 
		set @NextPosR = charindex(',', @ID_LIST,  @CurrentPosR);
		if @NextPosR = 0 or @NextPosR is null begin -- then
			set @NextPosR = len(@ID_LIST) + 1;
		end -- if;
		set @ID = cast(rtrim(ltrim(substring(@ID_LIST, @CurrentPosR, @NextPosR - @CurrentPosR))) as uniqueidentifier);
		set @CurrentPosR = @NextPosR+1;
		exec dbo.spACL_ROLES_Delete @ID, @MODIFIED_USER_ID;
	end -- while;
  end
GO
 
Grant Execute on dbo.spACL_ROLES_MassDelete to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spACL_ROLES_USERS_MassUpdate' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spACL_ROLES_USERS_MassUpdate;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spACL_ROLES_USERS_MassUpdate
	( @ROLE_ID           uniqueidentifier
	, @MODIFIED_USER_ID  uniqueidentifier
	, @ID_LIST           varchar(8000)
	)
as
  begin
	set nocount on
	
	declare @USER_ID      uniqueidentifier;
	declare @CurrentPosR  int;
	declare @NextPosR     int;
	set @CurrentPosR = 1;
	while @CurrentPosR <= len(@ID_LIST) begin -- do
		-- 10/04/2006 Paul.  charindex should not use unicode parameters as it will limit all inputs to 4000 characters. 
		set @NextPosR = charindex(',', @ID_LIST,  @CurrentPosR);
		if @NextPosR = 0 or @NextPosR is null begin -- then
			set @NextPosR = len(@ID_LIST) + 1;
		end -- if;
		set @USER_ID = cast(rtrim(ltrim(substring(@ID_LIST, @CurrentPosR, @NextPosR - @CurrentPosR))) as uniqueidentifier);
		set @CurrentPosR = @NextPosR+1;

		exec dbo.spACL_ROLES_USERS_Update @MODIFIED_USER_ID, @ROLE_ID, @USER_ID;
	end -- while;
  end
GO
 
Grant Execute on dbo.spACL_ROLES_USERS_MassUpdate to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spCONFIG_MassDelete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spCONFIG_MassDelete;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spCONFIG_MassDelete
	( @ID_LIST          varchar(8000)
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @ID           uniqueidentifier;
	declare @CurrentPosR  int;
	declare @NextPosR     int;
	set @CurrentPosR = 1;
	while @CurrentPosR <= len(@ID_LIST) begin -- do
		-- 10/04/2006 Paul.  charindex should not use unicode parameters as it will limit all inputs to 4000 characters. 
		set @NextPosR = charindex(',', @ID_LIST,  @CurrentPosR);
		if @NextPosR = 0 or @NextPosR is null begin -- then
			set @NextPosR = len(@ID_LIST) + 1;
		end -- if;
		set @ID = cast(rtrim(ltrim(substring(@ID_LIST, @CurrentPosR, @NextPosR - @CurrentPosR))) as uniqueidentifier);
		set @CurrentPosR = @NextPosR+1;
		exec dbo.spCONFIG_Delete @ID, @MODIFIED_USER_ID;
	end -- while;
  end
GO
 
Grant Execute on dbo.spCONFIG_MassDelete to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spCURRENCIES_MassUpdate' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spCURRENCIES_MassUpdate;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 03/22/2017 Paul.  Update the custom field table so that the audit view will have matching custom field values. 
Create Procedure dbo.spCURRENCIES_MassUpdate
	( @ID_LIST           varchar(8000)
	, @MODIFIED_USER_ID  uniqueidentifier
	, @STATUS            nvarchar(25)
	)
as
  begin
	set nocount on
	
	declare @ID           uniqueidentifier;
	declare @CurrentPosR  int;
	declare @NextPosR     int;
	set @CurrentPosR = 1;
	while @CurrentPosR <= len(@ID_LIST) begin -- do
		set @NextPosR = charindex(',', @ID_LIST,  @CurrentPosR);
		if @NextPosR = 0 or @NextPosR is null begin -- then
			set @NextPosR = len(@ID_LIST) + 1;
		end -- if;
		set @ID = cast(rtrim(ltrim(substring(@ID_LIST, @CurrentPosR, @NextPosR - @CurrentPosR))) as uniqueidentifier);
		set @CurrentPosR = @NextPosR+1;

		-- BEGIN Oracle Exception
			update CURRENCIES
			   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
			     , DATE_MODIFIED     =  getdate()        
			     , DATE_MODIFIED_UTC =  getutcdate()     
			     , STATUS            = isnull(@STATUS, STATUS)
			 where ID                = @ID
			   and DELETED           = 0;
		-- END Oracle Exception
		-- 03/22/2017 Paul.  Update the custom field table so that the audit view will have matching custom field values. 
		-- BEGIN Oracle Exception
			update CURRENCIES_CSTM
			   set ID_C              = ID_C
			 where ID_C              = @ID;
		-- END Oracle Exception
	end -- while;
  end
GO

Grant Execute on dbo.spCURRENCIES_MassUpdate to public;
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDASHBOARDS_PANELS_AddReport' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDASHBOARDS_PANELS_AddReport;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDASHBOARDS_PANELS_AddReport
	( @MODIFIED_USER_ID   uniqueidentifier
	, @ASSIGNED_USER_ID   uniqueidentifier
	, @TEAM_ID            uniqueidentifier
	, @DASHBOARD_ID       uniqueidentifier
	, @DASHBOARD_CATEGORY nvarchar(50)
	, @REPORT_ID          uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @ID                  uniqueidentifier;
	declare @TEAM_SET_ID         uniqueidentifier;
	declare @TEAM_SET_LIST       varchar(8000);
	declare @DASHBOARD_APP_ID    uniqueidentifier;
	declare @NAME                nvarchar(150);
	declare @CATEGORY            nvarchar( 25);
	declare @MODULE_NAME         nvarchar( 50);
	declare @TITLE               nvarchar(100);
	declare @SETTINGS_EDITVIEW   nvarchar( 50);
	declare @SCRIPT_URL          nvarchar(2083);
	declare @DEFAULT_SETTINGS    nvarchar(max);
	declare @PANEL_ORDER         int;
	declare @ROW_INDEX           int;
	declare @COLUMN_WIDTH        int;

	set @NAME              = N'Report: ' + cast(@REPORT_ID as char(36));
	set @CATEGORY          = N'Report';
	set @MODULE_NAME       = N'Reports';
	set @TITLE             = null;
	set @SETTINGS_EDITVIEW = null;
	set @SCRIPT_URL        = N'~/html5/Dashlets/ReportViewerFrame.js';
	set @DEFAULT_SETTINGS  = N'REPORT_ID=' + cast(@REPORT_ID as char(36));

	select @TITLE = substring(NAME, 1, 100)
	  from REPORTS
	 where ID     = @REPORT_ID;

	set @DASHBOARD_APP_ID = newid();
	insert into DASHBOARD_APPS
		( ID                 
		, CREATED_BY         
		, DATE_ENTERED       
		, MODIFIED_USER_ID   
		, DATE_MODIFIED      
		, NAME               
		, CATEGORY           
		, MODULE_NAME        
		, TITLE              
		, SETTINGS_EDITVIEW  
		, SCRIPT_URL         
		, IS_ADMIN           
		, APP_ENABLED        
		, DEFAULT_SETTINGS   
		)
	values 
		( @DASHBOARD_APP_ID   
		,  null               
		,  getdate()          
		,  null               
		,  getdate()          
		, @NAME               
		, @CATEGORY           
		, @MODULE_NAME        
		, @TITLE              
		, @SETTINGS_EDITVIEW  
		, @SCRIPT_URL         
		, 0                   
		, 1                   
		, @DEFAULT_SETTINGS   
		);

	if not exists(select * from DASHBOARDS where ID = @DASHBOARD_ID and DELETED = 0) begin -- then
		exec dbo.spTEAM_SETS_NormalizeSet @TEAM_SET_ID out, @MODIFIED_USER_ID, @TEAM_ID, @TEAM_SET_LIST;
		set @DASHBOARD_ID = newid();
		insert into DASHBOARDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, ASSIGNED_USER_ID 
			, TEAM_ID          
			, TEAM_SET_ID      
			, NAME             
			, CATEGORY         
			, DESCRIPTION      
			, CONTENT          
			)
		values 	( @DASHBOARD_ID     
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @ASSIGNED_USER_ID 
			, @TEAM_ID          
			, @TEAM_SET_ID      
			, @TITLE            
			, @DASHBOARD_CATEGORY
			, null              
			, null              
			);
	end -- if;

	set @COLUMN_WIDTH = 12;
	select @PANEL_ORDER = isnull(max(PANEL_ORDER), 0) + 1
	     , @ROW_INDEX   = isnull(max(ROW_INDEX  ), 0) + 1
	  from DASHBOARDS_PANELS
	 where DASHBOARD_ID = @DASHBOARD_ID
	   and DELETED      = 0;

	set @ID = newid();
	insert into DASHBOARDS_PANELS
		( ID                
		, CREATED_BY        
		, DATE_ENTERED      
		, MODIFIED_USER_ID  
		, DATE_MODIFIED     
		, DATE_MODIFIED_UTC 
		, DASHBOARD_ID      
		, DASHBOARD_APP_ID  
		, PANEL_ORDER       
		, ROW_INDEX         
		, COLUMN_WIDTH      
		)
	values 	( @ID                
		, @MODIFIED_USER_ID  
		,  getdate()         
		, @MODIFIED_USER_ID  
		,  getdate()         
		,  getutcdate()      
		, @DASHBOARD_ID      
		, @DASHBOARD_APP_ID  
		, @PANEL_ORDER       
		, @ROW_INDEX         
		, @COLUMN_WIDTH      
		);
  end
GO

Grant Execute on dbo.spDASHBOARDS_PANELS_AddReport to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDASHLETS_USERS_Init' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDASHLETS_USERS_Init;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDASHLETS_USERS_Init
	( @MODIFIED_USER_ID uniqueidentifier
	, @ASSIGNED_USER_ID uniqueidentifier
	, @DETAIL_NAME      nvarchar(50)
	)
as
  begin
	set nocount on

	-- 07/10/2009 Paul.  If there are no relationships, then copy the default relationships. 	
	-- 08/01/2009 Paul.  Make sure to ignore deleted records. 
	if not exists(select * from DASHLETS_USERS where ASSIGNED_USER_ID = @ASSIGNED_USER_ID and DETAIL_NAME = @DETAIL_NAME and DELETED = 0) begin -- then
		insert into DASHLETS_USERS
			( CREATED_BY          
			, DATE_ENTERED        
			, MODIFIED_USER_ID    
			, DATE_MODIFIED       
			, ASSIGNED_USER_ID    
			, DETAIL_NAME         
			, MODULE_NAME         
			, CONTROL_NAME        
			, DASHLET_ORDER       
			, DASHLET_ENABLED     
			, TITLE               
			)
		select	  MODIFIED_USER_ID    
			, DATE_MODIFIED       
			, @MODIFIED_USER_ID   
			, getdate()           
			, @ASSIGNED_USER_ID   
			, DETAIL_NAME         
			, MODULE_NAME         
			, CONTROL_NAME        
			, RELATIONSHIP_ORDER  
			, RELATIONSHIP_ENABLED
			, TITLE               
		  from DETAILVIEWS_RELATIONSHIPS
		 where DETAIL_NAME = @DETAIL_NAME
		   and DELETED     = 0;
	end -- if;

	exec dbo.spDASHLETS_USERS_Reorder @MODIFIED_USER_ID, @ASSIGNED_USER_ID, @DETAIL_NAME;
  end
GO

Grant Execute on dbo.spDASHLETS_USERS_Init to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDASHLETS_USERS_MassUpdate' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDASHLETS_USERS_MassUpdate;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/24/2009 Paul.  The new Silverlight charts exceeded the control name length of 50. 
-- 01/24/2010 Paul.  Allow multiple. 
Create Procedure dbo.spDASHLETS_USERS_MassUpdate
	( @ID_LIST          varchar(8000)
	, @MODIFIED_USER_ID uniqueidentifier
	, @ASSIGNED_USER_ID uniqueidentifier
	, @DETAIL_NAME      nvarchar(50)
	)
as
  begin
	set nocount on
	
	declare @ID             uniqueidentifier;
	declare @CurrentPosR    int;
	declare @NextPosR       int;
	declare @MODULE_NAME    nvarchar(50);
	declare @CONTROL_NAME   nvarchar(100);
	declare @DASHLET_ORDER  int;
	declare @TITLE          nvarchar(100);
	declare @ALLOW_MULTIPLE bit;

	set @CurrentPosR = 1;
	while @CurrentPosR <= len(@ID_LIST) begin -- do
		set @NextPosR = charindex(',', @ID_LIST,  @CurrentPosR);
		if @NextPosR = 0 or @NextPosR is null begin -- then
			set @NextPosR = len(@ID_LIST) + 1;
		end -- if;
		set @ID = cast(rtrim(ltrim(substring(@ID_LIST, @CurrentPosR, @NextPosR - @CurrentPosR))) as uniqueidentifier);
		set @CurrentPosR = @NextPosR+1;
		
		select @MODULE_NAME    = MODULE_NAME
		     , @CONTROL_NAME   = CONTROL_NAME
		     , @TITLE          = TITLE
		     , @ALLOW_MULTIPLE = ALLOW_MULTIPLE
		  from DASHLETS
		 where ID              = @ID
		   and DELETED         = 0;

		if @CONTROL_NAME is not null begin -- then		
			-- 07/28/2009 Paul.  Make sure to check the DELETED flag. 
			-- 01/24/2010 Paul.  We only need the filter if Allow Multiple is false. 
			if not exists(select * from DASHLETS_USERS where @ALLOW_MULTIPLE = 0 and ASSIGNED_USER_ID = @ASSIGNED_USER_ID and DETAIL_NAME = @DETAIL_NAME and CONTROL_NAME = @CONTROL_NAME and DELETED = 0) begin -- then
				select @DASHLET_ORDER = max(DASHLET_ORDER) + 1
				  from DASHLETS_USERS
				 where ASSIGNED_USER_ID = @ASSIGNED_USER_ID 
				   and DETAIL_NAME      = @DETAIL_NAME      
				   and DELETED          = 0;
				-- 09/29/2009 Paul.  If the list is empty, the order will be zero. 
				if @DASHLET_ORDER is null begin -- then
					set @DASHLET_ORDER = 0;
				end -- if;
				insert into DASHLETS_USERS
					( CREATED_BY          
					, DATE_ENTERED        
					, MODIFIED_USER_ID    
					, DATE_MODIFIED       
					, ASSIGNED_USER_ID    
					, DETAIL_NAME         
					, MODULE_NAME         
					, CONTROL_NAME        
					, DASHLET_ORDER  
					, DASHLET_ENABLED
					, TITLE               
					)
				values	( @MODIFIED_USER_ID   
					, getdate()           
					, @MODIFIED_USER_ID   
					, getdate()           
					, @ASSIGNED_USER_ID   
					, @DETAIL_NAME         
					, @MODULE_NAME         
					, @CONTROL_NAME        
					, @DASHLET_ORDER  
					, 1
					, @TITLE               
					);
			end -- if;
		end -- if;
	end -- while;
  end
GO

Grant Execute on dbo.spDASHLETS_USERS_MassUpdate to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_FIELDS_InsBlank' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_FIELDS_InsBlank;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 02/02/2006 Paul.  @COLSPAN should be an int. 
-- 11/24/2006 Paul.  Blank should be of national character type. 
-- 02/21/2017 Paul.  Allow a field to be added to the end using an index of -1. 
Create Procedure dbo.spDETAILVIEWS_FIELDS_InsBlank
	( @DETAIL_NAME       nvarchar(50)
	, @FIELD_INDEX       int
	, @COLSPAN           int
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into DETAILVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, DETAIL_NAME      
			, FIELD_INDEX      
			, FIELD_TYPE       
			, COLSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @DETAIL_NAME      
			, @TEMP_FIELD_INDEX 
			, N'Blank'          
			, @COLSPAN          
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spDETAILVIEWS_FIELDS_InsBlank to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_FIELDS_InsBound' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_FIELDS_InsBound;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the DATA_LABEL to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 11/24/2006 Paul.  FIELD_TYPE should be of national character type. 
-- 02/24/2010 Paul.  Allow a field to be added to the end using an index of -1. 
-- 11/23/2012 Paul.  Make sure to only add the field if it does not already exist when using -1. 
-- 02/25/2015 Paul.  Increase size of DATA_FIELD and DATA_FORMAT for OfficeAddin. 
Create Procedure dbo.spDETAILVIEWS_FIELDS_InsBound
	( @DETAIL_NAME       nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(1000)
	, @DATA_FORMAT       nvarchar(max)
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DATA_FIELD   = @DATA_FIELD
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into DETAILVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, DETAIL_NAME      
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_FORMAT      
			, COLSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @DETAIL_NAME      
			, @TEMP_FIELD_INDEX 
			, N'String'         
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_FORMAT      
			, @COLSPAN          
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spDETAILVIEWS_FIELDS_InsBound to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_FIELDS_InsBoundList' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_FIELDS_InsBoundList;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the DATA_LABEL to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 11/24/2006 Paul.  FIELD_TYPE should be of national character type. 
-- 02/25/2015 Paul.  Increase size of DATA_FIELD and DATA_FORMAT for OfficeAddin. 
-- 02/21/2017 Paul.  Allow a field to be added to the end using an index of -1. 
Create Procedure dbo.spDETAILVIEWS_FIELDS_InsBoundList
	( @DETAIL_NAME       nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(1000)
	, @DATA_FORMAT       nvarchar(max)
	, @LIST_NAME         nvarchar( 50)
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DATA_FIELD   = @DATA_FIELD
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into DETAILVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, DETAIL_NAME      
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_FORMAT      
			, LIST_NAME        
			, COLSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @DETAIL_NAME      
			, @TEMP_FIELD_INDEX 
			, N'String'         
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_FORMAT      
			, @LIST_NAME        
			, @COLSPAN          
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spDETAILVIEWS_FIELDS_InsBoundList to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_FIELDS_InsButton' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_FIELDS_InsButton;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the DATA_LABEL to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 11/24/2006 Paul.  FIELD_TYPE should be of national character type. 
-- 02/25/2015 Paul.  Increase size of DATA_FIELD and DATA_FORMAT for OfficeAddin. 
-- 02/21/2017 Paul.  Allow a field to be added to the end using an index of -1. 
Create Procedure dbo.spDETAILVIEWS_FIELDS_InsButton
	( @DETAIL_NAME       nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(1000)
	, @DATA_FORMAT       nvarchar(max)
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DATA_FIELD   = @DATA_FIELD
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into DETAILVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, DETAIL_NAME      
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_FORMAT      
			, COLSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @DETAIL_NAME      
			, @TEMP_FIELD_INDEX 
			, N'Button'         
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_FORMAT      
			, @COLSPAN          
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spDETAILVIEWS_FIELDS_InsButton to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_FIELDS_InsCheckBox' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_FIELDS_InsCheckBox;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the DATA_LABEL to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 11/24/2006 Paul.  FIELD_TYPE should be of national character type. 
-- 02/25/2015 Paul.  Increase size of DATA_FIELD and DATA_FORMAT for OfficeAddin. 
-- 02/21/2017 Paul.  Allow a field to be added to the end using an index of -1. 
Create Procedure dbo.spDETAILVIEWS_FIELDS_InsCheckBox
	( @DETAIL_NAME       nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(1000)
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DATA_FIELD   = @DATA_FIELD
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into DETAILVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, DETAIL_NAME      
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, COLSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @DETAIL_NAME      
			, @TEMP_FIELD_INDEX 
			, N'CheckBox'       
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @COLSPAN          
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spDETAILVIEWS_FIELDS_InsCheckBox to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_FIELDS_InsDependList' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_FIELDS_InsDependList;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the DATA_LABEL to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 11/24/2006 Paul.  FIELD_TYPE should be of national character type. 
-- 10/09/2010 Paul.  Add PARENT_FIELD so that we can establish dependent listboxes. 
-- 02/25/2015 Paul.  Increase size of DATA_FIELD and DATA_FORMAT for OfficeAddin. 
-- 02/21/2017 Paul.  Allow a field to be added to the end using an index of -1. 
Create Procedure dbo.spDETAILVIEWS_FIELDS_InsDependList
	( @DETAIL_NAME       nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(1000)
	, @DATA_FORMAT       nvarchar(max)
	, @PARENT_FIELD      nvarchar( 30)
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DATA_FIELD   = @DATA_FIELD
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into DETAILVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, DETAIL_NAME      
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_FORMAT      
			, PARENT_FIELD     
			, COLSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @DETAIL_NAME      
			, @TEMP_FIELD_INDEX 
			, N'String'         
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_FORMAT      
			, @PARENT_FIELD     
			, @COLSPAN          
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spDETAILVIEWS_FIELDS_InsDependList to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_FIELDS_InsHyperLink' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_FIELDS_InsHyperLink;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the DATA_LABEL to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 11/24/2006 Paul.  FIELD_TYPE should be of national character type. 
-- 06/16/2010 Paul.  Increase the size of the URL_FIELD and URL_FORMAT so that we can create an IFrame to a Google map. 
-- 02/10/2013 Paul.  Allow a field to be added to the end using an index of -1. 
-- 10/30/2013 Paul.  Increase size of URL_TARGET. 
-- 02/25/2015 Paul.  Increase size of DATA_FIELD and DATA_FORMAT for OfficeAddin. 
Create Procedure dbo.spDETAILVIEWS_FIELDS_InsHyperLink
	( @DETAIL_NAME       nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(1000)
	, @DATA_FORMAT       nvarchar(max)
	, @URL_FIELD         nvarchar(max)
	, @URL_FORMAT        nvarchar(max)
	, @URL_TARGET        nvarchar( 60)
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DATA_FIELD   = @DATA_FIELD
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into DETAILVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, DETAIL_NAME      
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_FORMAT      
			, URL_FIELD        
			, URL_FORMAT       
			, URL_TARGET       
			, COLSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @DETAIL_NAME      
			, @TEMP_FIELD_INDEX 
			, N'HyperLink'      
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_FORMAT      
			, @URL_FIELD        
			, @URL_FORMAT       
			, @URL_TARGET       
			, @COLSPAN          
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spDETAILVIEWS_FIELDS_InsHyperLink to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_FIELDS_InsJavaScript' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_FIELDS_InsJavaScript;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/02/2010 Paul.  Increase the size of the URL_FIELD and URL_FORMAT so that we can add a javascript info column. 
-- 10/30/2013 Paul.  Increase size of URL_TARGET. 
-- 02/25/2015 Paul.  Increase size of DATA_FIELD and DATA_FORMAT for OfficeAddin. 
-- 02/21/2017 Paul.  Allow a field to be added to the end using an index of -1. 
Create Procedure dbo.spDETAILVIEWS_FIELDS_InsJavaScript
	( @DETAIL_NAME       nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(1000)
	, @URL_FIELD         nvarchar(max)
	, @URL_FORMAT        nvarchar(max)
	, @URL_TARGET        nvarchar( 60)
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DATA_FIELD   = @DATA_FIELD
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into DETAILVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, DETAIL_NAME      
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, URL_FIELD        
			, URL_FORMAT       
			, URL_TARGET       
			, COLSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @DETAIL_NAME      
			, @TEMP_FIELD_INDEX 
			, N'JavaScript'     
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @URL_FIELD        
			, @URL_FORMAT       
			, @URL_TARGET       
			, @COLSPAN          
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spDETAILVIEWS_FIELDS_InsJavaScript to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_FIELDS_InsModule' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_FIELDS_InsModule;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 02/25/2015 Paul.  Increase size of DATA_FIELD and DATA_FORMAT for OfficeAddin. 
-- 02/21/2017 Paul.  Allow a field to be added to the end using an index of -1. 
Create Procedure dbo.spDETAILVIEWS_FIELDS_InsModule
	( @DETAIL_NAME       nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(1000)
	, @DATA_FORMAT       nvarchar(max)
	, @MODULE_TYPE       nvarchar( 25)
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DATA_FIELD   = @DATA_FIELD
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into DETAILVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, DETAIL_NAME      
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_FORMAT      
			, MODULE_TYPE      
			, COLSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @DETAIL_NAME      
			, @TEMP_FIELD_INDEX 
			, N'String'         
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_FORMAT      
			, @MODULE_TYPE      
			, @COLSPAN          
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spDETAILVIEWS_FIELDS_InsModule to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_FIELDS_InsModuleLink' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_FIELDS_InsModuleLink;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/04/2010 Paul.  Add URL fields. 
-- 10/30/2013 Paul.  Increase size of URL_TARGET. 
-- 02/25/2015 Paul.  Increase size of DATA_FIELD and DATA_FORMAT for OfficeAddin. 
-- 02/21/2017 Paul.  Allow a field to be added to the end using an index of -1. 
Create Procedure dbo.spDETAILVIEWS_FIELDS_InsModuleLink
	( @DETAIL_NAME       nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(1000)
	, @DATA_FORMAT       nvarchar(max)
	, @URL_FORMAT        nvarchar(max)
	, @URL_TARGET        nvarchar( 60)
	, @MODULE_TYPE       nvarchar( 25)
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DATA_FIELD   = @DATA_FIELD
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into DETAILVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, DETAIL_NAME      
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_FORMAT      
			, URL_FORMAT       
			, URL_TARGET       
			, MODULE_TYPE      
			, COLSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @DETAIL_NAME      
			, @TEMP_FIELD_INDEX 
			, N'ModuleLink'     
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_FORMAT      
			, @URL_FORMAT       
			, @URL_TARGET       
			, @MODULE_TYPE      
			, @COLSPAN          
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spDETAILVIEWS_FIELDS_InsModuleLink to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_RELATIONSHIPS_UpdateInsight' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_RELATIONSHIPS_UpdateInsight;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDETAILVIEWS_RELATIONSHIPS_UpdateInsight
	( @MODIFIED_USER_ID     uniqueidentifier
	, @DETAIL_NAME          nvarchar(50)
	, @CONTROL_NAME         nvarchar(100)
	, @INSIGHT_LABEL        nvarchar(100)
	, @INSIGHT_VIEW         nvarchar(50)
	, @INSIGHT_OPERATOR     nvarchar(2000)
	)
as
  begin
	set nocount on

	if exists(select * from DETAILVIEWS_RELATIONSHIPS where DETAIL_NAME = @DETAIL_NAME and CONTROL_NAME = @CONTROL_NAME and DELETED = 0) begin -- then	
		-- BEGIN Oracle Exception
			update DETAILVIEWS_RELATIONSHIPS
			   set MODIFIED_USER_ID     = @MODIFIED_USER_ID 
			     , DATE_MODIFIED        =  getdate()        
			     , DATE_MODIFIED_UTC    =  getutcdate()     
			     , INSIGHT_LABEL        = @INSIGHT_LABEL
			     , INSIGHT_VIEW         = @INSIGHT_VIEW
			     , INSIGHT_OPERATOR     = @INSIGHT_OPERATOR
			 where DETAIL_NAME          = @DETAIL_NAME
			   and CONTROL_NAME         = @CONTROL_NAME
			   and DELETED              = 0;
		-- END Oracle Exception
	end -- if;
  end
GO

Grant Execute on dbo.spDETAILVIEWS_RELATIONSHIPS_UpdateInsight to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDYNAMIC_BUTTONS_InsButton' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDYNAMIC_BUTTONS_InsButton;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/12/2010 Paul.  Add default parameter EXCLUDE_MOBILE to ease migration to EffiProz. 
-- 03/14/2014 Paul.  Allow hidden buttons to be created. 
-- 09/10/2015 Paul.  ChatMessages buttons use -1, so we need to support auto numbering. 
-- 03/06/2018 Paul.  CONTROL_TEXT is a better uniqueness indicator than ONCLICK_SCRIPT.  Fixes problem with MailMerge button not getting created. 
Create Procedure dbo.spDYNAMIC_BUTTONS_InsButton
	( @VIEW_NAME           nvarchar(50)
	, @CONTROL_INDEX       int
	, @MODULE_NAME         nvarchar(25)
	, @MODULE_ACCESS_TYPE  nvarchar(100)
	, @TARGET_NAME         nvarchar(25)
	, @TARGET_ACCESS_TYPE  nvarchar(100)
	, @COMMAND_NAME        nvarchar(50)
	, @ARGUMENT_FIELD      nvarchar(200)
	, @CONTROL_TEXT        nvarchar(150)
	, @CONTROL_TOOLTIP     nvarchar(150)
	, @CONTROL_ACCESSKEY   nvarchar(150)
	, @ONCLICK_SCRIPT      nvarchar(255)
	, @MOBILE_ONLY         bit
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	
	declare @TEMP_CONTROL_INDEX int;	
	set @TEMP_CONTROL_INDEX = @CONTROL_INDEX;
	if @CONTROL_INDEX is null or @CONTROL_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_CONTROL_INDEX = isnull(max(CONTROL_INDEX), 0) + 1
			  from DYNAMIC_BUTTONS
			 where VIEW_NAME    = @VIEW_NAME   
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- BEGIN Oracle Exception
			select top 1 @ID = ID
			  from DYNAMIC_BUTTONS
			 where VIEW_NAME    = @VIEW_NAME   
			   and (COMMAND_NAME = @COMMAND_NAME or CONTROL_TEXT = @CONTROL_TEXT)
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select top 1 @ID = ID
			  from DYNAMIC_BUTTONS
			 where VIEW_NAME     = @VIEW_NAME    
			   and CONTROL_INDEX = @CONTROL_INDEX
			   and DELETED       = 0             
			   and DEFAULT_VIEW  = 0             ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		exec dbo.spDYNAMIC_BUTTONS_Update
			  @ID out
			, null                 -- MODIFIED_USER_ID    
			, @VIEW_NAME           
			, @TEMP_CONTROL_INDEX       
			, N'Button'            -- CONTROL_TYPE
			, @MODULE_NAME         
			, @MODULE_ACCESS_TYPE  
			, @TARGET_NAME         
			, @TARGET_ACCESS_TYPE  
			, @CONTROL_TEXT        
			, @CONTROL_TOOLTIP     
			, @CONTROL_ACCESSKEY   
			, N'button'            -- CONTROL_CSSCLASS
			, null                 -- TEXT_FIELD          
			, @ARGUMENT_FIELD      
			, @COMMAND_NAME        
			, null                 -- URL_FORMAT
			, null                 -- URL_TARGET
			, @ONCLICK_SCRIPT      
			, @MOBILE_ONLY         
			, 0                    -- ADMIN_ONLY          
			, null                 -- EXCLUDE_MOBILE      
			, null                 -- HIDDEN              
			;
	end -- if;
  end
GO

Grant Execute on dbo.spDYNAMIC_BUTTONS_InsButton to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDYNAMIC_BUTTONS_InsButtonLink' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDYNAMIC_BUTTONS_InsButtonLink;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/24/2008 Paul.  URL Target is used when rendering to PDF. 
-- 08/22/2010 Paul.  Add ONCLICK_SCRIPT. 
-- 09/12/2010 Paul.  Add default parameter EXCLUDE_MOBILE to ease migration to EffiProz. 
-- 03/14/2014 Paul.  Allow hidden buttons to be created. 
-- 09/10/2015 Paul.  ChatMessages buttons use -1, so we need to support auto numbering. 
Create Procedure dbo.spDYNAMIC_BUTTONS_InsButtonLink
	( @VIEW_NAME           nvarchar(50)
	, @CONTROL_INDEX       int
	, @MODULE_NAME         nvarchar(25)
	, @MODULE_ACCESS_TYPE  nvarchar(100)
	, @TARGET_NAME         nvarchar(25)
	, @TARGET_ACCESS_TYPE  nvarchar(100)
	, @COMMAND_NAME        nvarchar(50)
	, @URL_FORMAT          nvarchar(255)
	, @TEXT_FIELD          nvarchar(200)
	, @CONTROL_TEXT        nvarchar(150)
	, @CONTROL_TOOLTIP     nvarchar(150)
	, @CONTROL_ACCESSKEY   nvarchar(150)
	, @URL_TARGET          nvarchar(20)
	, @MOBILE_ONLY         bit
	, @ONCLICK_SCRIPT      nvarchar(255) = null
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	
	declare @TEMP_CONTROL_INDEX int;	
	set @TEMP_CONTROL_INDEX = @CONTROL_INDEX;
	if @CONTROL_INDEX is null or @CONTROL_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_CONTROL_INDEX = isnull(max(CONTROL_INDEX), 0) + 1
			  from DYNAMIC_BUTTONS
			 where VIEW_NAME    = @VIEW_NAME   
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- BEGIN Oracle Exception
			select top 1 @ID = ID
			  from DYNAMIC_BUTTONS
			 where VIEW_NAME    = @VIEW_NAME   
			   and URL_FORMAT   = @URL_FORMAT  
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select top 1 @ID = ID
			  from DYNAMIC_BUTTONS
			 where VIEW_NAME     = @VIEW_NAME    
			   and CONTROL_INDEX = @CONTROL_INDEX
			   and DELETED       = 0             
			   and DEFAULT_VIEW  = 0             ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		exec dbo.spDYNAMIC_BUTTONS_Update
			  @ID out
			, null                 -- MODIFIED_USER_ID    
			, @VIEW_NAME           
			, @TEMP_CONTROL_INDEX       
			, N'ButtonLink'        -- CONTROL_TYPE
			, @MODULE_NAME         
			, @MODULE_ACCESS_TYPE  
			, @TARGET_NAME         
			, @TARGET_ACCESS_TYPE  
			, @CONTROL_TEXT        
			, @CONTROL_TOOLTIP     
			, @CONTROL_ACCESSKEY   
			, N'button'            -- CONTROL_CSSCLASS
			, @TEXT_FIELD          
			, null                 -- ARGUMENT_FIELD
			, @COMMAND_NAME        
			, @URL_FORMAT          
			, @URL_TARGET          
			, @ONCLICK_SCRIPT      
			, @MOBILE_ONLY         
			, 0                    -- ADMIN_ONLY          
			, null                 -- EXCLUDE_MOBILE      
			, null                 -- HIDDEN              
			;
	end -- if;
  end
GO

Grant Execute on dbo.spDYNAMIC_BUTTONS_InsButtonLink to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDYNAMIC_BUTTONS_InsertOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDYNAMIC_BUTTONS_InsertOnly;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/12/2010 Paul.  Add default parameter EXCLUDE_MOBILE to ease migration to EffiProz. 
-- 03/14/2014 Paul.  Allow hidden buttons to be created. 
-- 09/26/2017 Paul.  Support auto numbering. 
Create Procedure dbo.spDYNAMIC_BUTTONS_InsertOnly
	( @VIEW_NAME           nvarchar(50)
	, @CONTROL_INDEX       int
	, @CONTROL_TYPE        nvarchar(25)
	, @MODULE_NAME         nvarchar(25)
	, @MODULE_ACCESS_TYPE  nvarchar(100)
	, @TARGET_NAME         nvarchar(25)
	, @TARGET_ACCESS_TYPE  nvarchar(100)
	, @CONTROL_TEXT        nvarchar(150)
	, @CONTROL_TOOLTIP     nvarchar(150)
	, @CONTROL_ACCESSKEY   nvarchar(150)
	, @CONTROL_CSSCLASS    nvarchar(50)
	, @TEXT_FIELD          nvarchar(200)
	, @ARGUMENT_FIELD      nvarchar(200)
	, @COMMAND_NAME        nvarchar(50)
	, @URL_FORMAT          nvarchar(255)
	, @URL_TARGET          nvarchar(20)
	, @ONCLICK_SCRIPT      nvarchar(255)
	, @MOBILE_ONLY         bit
	, @ADMIN_ONLY          bit
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	
	declare @TEMP_CONTROL_INDEX int;	
	set @TEMP_CONTROL_INDEX = @CONTROL_INDEX;
	if @CONTROL_INDEX is null or @CONTROL_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_CONTROL_INDEX = isnull(max(CONTROL_INDEX), 0) + 1
			  from DYNAMIC_BUTTONS
			 where VIEW_NAME    = @VIEW_NAME   
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- BEGIN Oracle Exception
			select top 1 @ID = ID
			  from DYNAMIC_BUTTONS
			 where VIEW_NAME    = @VIEW_NAME   
			   and (isnull(COMMAND_NAME, '') = isnull(@COMMAND_NAME, '') and isnull(ONCLICK_SCRIPT, '') = isnull(@ONCLICK_SCRIPT, ''))
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DYNAMIC_BUTTONS
			 where VIEW_NAME     = @VIEW_NAME    
			   and CONTROL_INDEX = @CONTROL_INDEX
			   and DELETED       = 0             
			   and DEFAULT_VIEW  = 0             ;
		-- END Oracle Exception
	end -- if;
	if not exists(select * from DYNAMIC_BUTTONS where ID = @ID) begin -- then
		exec dbo.spDYNAMIC_BUTTONS_Update
			  @ID out
			, null                 -- MODIFIED_USER_ID    
			, @VIEW_NAME           
			, @TEMP_CONTROL_INDEX       
			, @CONTROL_TYPE        
			, @MODULE_NAME         
			, @MODULE_ACCESS_TYPE  
			, @TARGET_NAME         
			, @TARGET_ACCESS_TYPE  
			, @CONTROL_TEXT        
			, @CONTROL_TOOLTIP     
			, @CONTROL_ACCESSKEY   
			, @CONTROL_CSSCLASS    
			, @TEXT_FIELD          
			, @ARGUMENT_FIELD      
			, @COMMAND_NAME        
			, @URL_FORMAT          
			, @URL_TARGET          
			, @ONCLICK_SCRIPT      
			, @MOBILE_ONLY         
			, @ADMIN_ONLY          
			, null                 -- EXCLUDE_MOBILE      
			, null                 -- HIDDEN              
			;
	end -- if;
  end
GO

Grant Execute on dbo.spDYNAMIC_BUTTONS_InsertOnly to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDYNAMIC_BUTTONS_InsHyperLink' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDYNAMIC_BUTTONS_InsHyperLink;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/12/2010 Paul.  Add default parameter EXCLUDE_MOBILE to ease migration to EffiProz. 
-- 03/14/2014 Paul.  Allow hidden buttons to be created. 
Create Procedure dbo.spDYNAMIC_BUTTONS_InsHyperLink
	( @VIEW_NAME           nvarchar(50)
	, @CONTROL_INDEX       int
	, @MODULE_NAME         nvarchar(25)
	, @MODULE_ACCESS_TYPE  nvarchar(100)
	, @TARGET_NAME         nvarchar(25)
	, @TARGET_ACCESS_TYPE  nvarchar(100)
	, @URL_FORMAT          nvarchar(255)
	, @TEXT_FIELD          nvarchar(200)
	, @CONTROL_TEXT        nvarchar(150)
	, @CONTROL_TOOLTIP     nvarchar(150)
	, @CONTROL_ACCESSKEY   nvarchar(150)
	, @ONCLICK_SCRIPT      nvarchar(255)
	, @URL_TARGET          nvarchar( 20)
	, @MOBILE_ONLY         bit
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	
	-- BEGIN Oracle Exception
		select @ID = ID
		  from DYNAMIC_BUTTONS
		 where VIEW_NAME     = @VIEW_NAME    
		   and CONTROL_INDEX = @CONTROL_INDEX
		   and DELETED       = 0             
		   and DEFAULT_VIEW  = 0             ;
	-- END Oracle Exception
	if not exists(select * from DYNAMIC_BUTTONS where ID = @ID) begin -- then
		exec dbo.spDYNAMIC_BUTTONS_Update
			  @ID out
			, null                 -- MODIFIED_USER_ID    
			, @VIEW_NAME           
			, @CONTROL_INDEX       
			, N'HyperLink'         -- CONTROL_TYPE
			, @MODULE_NAME         
			, @MODULE_ACCESS_TYPE  
			, @TARGET_NAME         
			, @TARGET_ACCESS_TYPE  
			, @CONTROL_TEXT        
			, @CONTROL_TOOLTIP     
			, @CONTROL_ACCESSKEY   
			, N'listViewTdLinkS1'  -- CONTROL_CSSCLASS
			, @TEXT_FIELD          
			, null                 -- @ARGUMENT_FIELD
			, null                 -- COMMAND_NAME        
			, @URL_FORMAT          
			, @URL_TARGET          
			, @ONCLICK_SCRIPT      
			, @MOBILE_ONLY         
			, 0                    -- ADMIN_ONLY          
			, null                 -- EXCLUDE_MOBILE      
			, null                 -- HIDDEN      
			;
	end -- if;
  end
GO

Grant Execute on dbo.spDYNAMIC_BUTTONS_InsHyperLink to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDYNAMIC_BUTTONS_InsPopup' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDYNAMIC_BUTTONS_InsPopup;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/27/2008 Paul.  PostgreSQL does not allow modifying input parameters.  Use a local temp variable. 
-- 09/12/2010 Paul.  Add default parameter EXCLUDE_MOBILE to ease migration to EffiProz. 
-- 03/14/2014 Paul.  Allow hidden buttons to be created. 
Create Procedure dbo.spDYNAMIC_BUTTONS_InsPopup
	( @VIEW_NAME           nvarchar(50)
	, @CONTROL_INDEX       int
	, @MODULE_NAME         nvarchar(25)
	, @MODULE_ACCESS_TYPE  nvarchar(100)
	, @TARGET_NAME         nvarchar(25)
	, @TARGET_ACCESS_TYPE  nvarchar(100)
	, @ONCLICK_SCRIPT      nvarchar(255)
	, @TEXT_FIELD          nvarchar(200)
	, @CONTROL_TEXT        nvarchar(150)
	, @CONTROL_TOOLTIP     nvarchar(150)
	, @CONTROL_ACCESSKEY   nvarchar(150)
	, @ARGUMENT_FIELD      nvarchar(200)
	, @MOBILE_ONLY         bit
	)
as
  begin
	set nocount on
	
	declare @ID                  uniqueidentifier;
	declare @TEMP_ONCLICK_SCRIPT nvarchar(255);
	set @TEMP_ONCLICK_SCRIPT = @ONCLICK_SCRIPT;
	
	-- BEGIN Oracle Exception
		select @ID = ID
		  from DYNAMIC_BUTTONS
		 where VIEW_NAME     = @VIEW_NAME    
		   and CONTROL_INDEX = @CONTROL_INDEX
		   and DELETED       = 0             
		   and DEFAULT_VIEW  = 0             ;
	-- END Oracle Exception

	-- 04/28/2008 Paul.  Popups should return false so that the button does not actually submit the form. 
	-- 05/09/2008 Paul.  There should always be a return false in a popup. 
	if charindex('return ', @TEMP_ONCLICK_SCRIPT,  1) = 0 begin -- then
		set @TEMP_ONCLICK_SCRIPT = @TEMP_ONCLICK_SCRIPT + N'return false;';
	end -- if;
	if not exists(select * from DYNAMIC_BUTTONS where ID = @ID) begin -- then
		exec dbo.spDYNAMIC_BUTTONS_Update
			  @ID out
			, null                 -- MODIFIED_USER_ID    
			, @VIEW_NAME           
			, @CONTROL_INDEX       
			, N'Button'            -- CONTROL_TYPE
			, @MODULE_NAME         
			, @MODULE_ACCESS_TYPE  
			, @TARGET_NAME         
			, @TARGET_ACCESS_TYPE  
			, @CONTROL_TEXT        
			, @CONTROL_TOOLTIP     
			, @CONTROL_ACCESSKEY   
			, N'button'            -- CONTROL_CSSCLASS
			, @TEXT_FIELD          
			, @ARGUMENT_FIELD      
			, null                 -- COMMAND_NAME        
			, null                 -- URL_FORMAT
			, null                 -- URL_TARGET
			, @TEMP_ONCLICK_SCRIPT      
			, @MOBILE_ONLY         
			, 0                    -- ADMIN_ONLY          
			, null                 -- EXCLUDE_MOBILE      
			, null                 -- HIDDEN              
			;
	end -- if;
  end
GO

Grant Execute on dbo.spDYNAMIC_BUTTONS_InsPopup to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDYNAMIC_BUTTONS_InsSaveConcurrency' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDYNAMIC_BUTTONS_InsSaveConcurrency;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDYNAMIC_BUTTONS_InsSaveConcurrency
	( @VIEW_NAME           nvarchar(50)
	, @CONTROL_INDEX       int
	, @MODULE_NAME         nvarchar(25)
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	declare @TEMP_CONTROL_INDEX int;	
	set @TEMP_CONTROL_INDEX = @CONTROL_INDEX;
	
	if @CONTROL_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DYNAMIC_BUTTONS
			 where VIEW_NAME     = @VIEW_NAME    
			   and COMMAND_NAME  = N'SaveConcurrency'
			   and DELETED       = 0             
			   and DEFAULT_VIEW  = 0             ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DYNAMIC_BUTTONS
			 where VIEW_NAME     = @VIEW_NAME    
			   and CONTROL_INDEX = @CONTROL_INDEX
			   and DELETED       = 0             
			   and DEFAULT_VIEW  = 0             ;
		-- END Oracle Exception
	end -- if;
	if not exists(select * from DYNAMIC_BUTTONS where ID = @ID) begin -- then
		exec dbo.spDYNAMIC_BUTTONS_Update
			  @ID out
			, null                         -- MODIFIED_USER_ID    
			, @VIEW_NAME                   
			, @TEMP_CONTROL_INDEX          
			, N'Button'                    -- CONTROL_TYPE
			, @MODULE_NAME                 
			, N'edit'                      -- MODULE_ACCESS_TYPE
			, null                         -- TARGET_NAME         
			, null                         -- TARGET_ACCESS_TYPE  
			, N'.LBL_SAVE_CONCURRENCY_LABEL' -- CONTROL_TEXT        
			, N'.LBL_SAVE_CONCURRENCY_TITLE' -- CONTROL_TOOLTIP     
			, null                         -- CONTROL_ACCESSKEY   
			, N'button'                    -- CONTROL_CSSCLASS
			, null                         -- TEXT_FIELD          
			, null                         -- ARGUMENT_FIELD      
			, N'SaveConcurrency'           -- COMMAND_NAME        
			, null                         -- URL_FORMAT
			, null                         -- URL_TARGET
			, null                         -- ONCLICK_SCRIPT      
			, null                         -- MOBILE_ONLY         
			, 0                            -- ADMIN_ONLY          
			, null                         -- EXCLUDE_MOBILE      
			, 1                            -- HIDDEN              
			;
	end -- if;
  end
GO

Grant Execute on dbo.spDYNAMIC_BUTTONS_InsSaveConcurrency to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDYNAMIC_BUTTONS_InsSaveDuplicate' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDYNAMIC_BUTTONS_InsSaveDuplicate;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDYNAMIC_BUTTONS_InsSaveDuplicate
	( @VIEW_NAME           nvarchar(50)
	, @CONTROL_INDEX       int
	, @MODULE_NAME         nvarchar(25)
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	declare @TEMP_CONTROL_INDEX int;	
	set @TEMP_CONTROL_INDEX = @CONTROL_INDEX;
	
	if @CONTROL_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DYNAMIC_BUTTONS
			 where VIEW_NAME     = @VIEW_NAME    
			   and COMMAND_NAME  = N'SaveDuplicate'
			   and DELETED       = 0             
			   and DEFAULT_VIEW  = 0             ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DYNAMIC_BUTTONS
			 where VIEW_NAME     = @VIEW_NAME    
			   and CONTROL_INDEX = @CONTROL_INDEX
			   and DELETED       = 0             
			   and DEFAULT_VIEW  = 0             ;
		-- END Oracle Exception
	end -- if;
	if not exists(select * from DYNAMIC_BUTTONS where ID = @ID) begin -- then
		exec dbo.spDYNAMIC_BUTTONS_Update
			  @ID out
			, null                         -- MODIFIED_USER_ID    
			, @VIEW_NAME                   
			, @TEMP_CONTROL_INDEX          
			, N'Button'                    -- CONTROL_TYPE
			, @MODULE_NAME                 
			, N'edit'                      -- MODULE_ACCESS_TYPE
			, null                         -- TARGET_NAME         
			, null                         -- TARGET_ACCESS_TYPE  
			, N'.LBL_SAVE_DUPLICATE_LABEL' -- CONTROL_TEXT        
			, N'.LBL_SAVE_DUPLICATE_TITLE' -- CONTROL_TOOLTIP     
			, null                         -- CONTROL_ACCESSKEY   
			, N'button'                    -- CONTROL_CSSCLASS
			, null                         -- TEXT_FIELD          
			, null                         -- ARGUMENT_FIELD      
			, N'SaveDuplicate'             -- COMMAND_NAME        
			, null                         -- URL_FORMAT
			, null                         -- URL_TARGET
			, null                         -- ONCLICK_SCRIPT      
			, null                         -- MOBILE_ONLY         
			, 0                            -- ADMIN_ONLY          
			, null                         -- EXCLUDE_MOBILE      
			, 1                            -- HIDDEN              
			;
	end -- if;
  end
GO

Grant Execute on dbo.spDYNAMIC_BUTTONS_InsSaveDuplicate to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDYNAMIC_BUTTONS_InsViewLog' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDYNAMIC_BUTTONS_InsViewLog;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 03/14/2014 Paul.  Allow hidden buttons to be created. 
Create Procedure dbo.spDYNAMIC_BUTTONS_InsViewLog
	( @VIEW_NAME           nvarchar(50)
	, @CONTROL_INDEX       int
	, @MODULE_NAME         nvarchar(25)
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	
	-- BEGIN Oracle Exception
		select @ID = ID
		  from DYNAMIC_BUTTONS
		 where VIEW_NAME     = @VIEW_NAME    
		   and COMMAND_NAME  = N'ViewLog'    
		   and DELETED       = 0             
		   and DEFAULT_VIEW  = 0             ;
	-- END Oracle Exception
	if not exists(select * from DYNAMIC_BUTTONS where ID = @ID) begin -- then
		exec dbo.spDYNAMIC_BUTTONS_Update
			  @ID out
			, null                    -- MODIFIED_USER_ID    
			, @VIEW_NAME           
			, @CONTROL_INDEX       
			, N'Button'               -- CONTROL_TYPE
			, @MODULE_NAME         
			, N'view'                 -- MODULE_ACCESS_TYPE  
			, null                    -- TARGET_NAME         
			, null                    -- TARGET_ACCESS_TYPE  
			, N'.LNK_VIEW_CHANGE_LOG' -- CONTROL_TEXT        
			, N'.LNK_VIEW_CHANGE_LOG' -- CONTROL_TOOLTIP     
			, null                    -- CONTROL_ACCESSKEY   
			, N'button'               -- CONTROL_CSSCLASS
			, null                    -- TEXT_FIELD          
			, null                    -- ARGUMENT_FIELD      
			, N'ViewLog'              -- COMMAND_NAME        
			, null                    -- URL_FORMAT
			, null                    -- URL_TARGET
			, N'return PopupAudit();' -- ONCLICK_SCRIPT      
			, 0                       -- MOBILE_ONLY         
			, 0                       -- ADMIN_ONLY          
			, 1                       -- EXCLUDE_MOBILE
			, null                    -- HIDDEN              
			;
	end -- if;
  end
GO

Grant Execute on dbo.spDYNAMIC_BUTTONS_InsViewLog to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsAutoComplete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsAutoComplete;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/03/2010 Paul.  Allow a field to be added to the end using an index of -1. 
Create Procedure dbo.spEDITVIEWS_FIELDS_InsAutoComplete
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @FORMAT_MAX_LENGTH int
	, @FORMAT_SIZE       int
	, @MODULE_TYPE       nvarchar(25)
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, FORMAT_TAB_INDEX 
			, FORMAT_MAX_LENGTH
			, FORMAT_SIZE      
			, MODULE_TYPE      
			, COLSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, N'ModuleAutoComplete'
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_REQUIRED    
			, @DATA_REQUIRED    
			, @FORMAT_TAB_INDEX 
			, @FORMAT_MAX_LENGTH
			, @FORMAT_SIZE      
			, @MODULE_TYPE      
			, @COLSPAN          
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_InsAutoComplete to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsBlank' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsBlank;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/24/2006 Paul.  Blank should be of national character type. 
-- 02/21/2017 Paul.  Allow a field to be added to the end using an index of -1. 
Create Procedure dbo.spEDITVIEWS_FIELDS_InsBlank
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, COLSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, N'Blank'          
			, @COLSPAN          
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_InsBlank to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsBound' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsBound;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the DATA_LABEL to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 11/24/2006 Paul.  FIELD_TYPE should be of national character type. 
-- 02/24/2010 Paul.  Allow a field to be added to the end using an index of -1. 
-- 11/23/2012 Paul.  Make sure to only add the field if it does not already exist when using -1. 
Create Procedure dbo.spEDITVIEWS_FIELDS_InsBound
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @FORMAT_MAX_LENGTH int
	, @FORMAT_SIZE       int
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DATA_FIELD   = @DATA_FIELD
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, FORMAT_TAB_INDEX 
			, FORMAT_MAX_LENGTH
			, FORMAT_SIZE      
			, COLSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, N'TextBox'        
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_REQUIRED    
			, @DATA_REQUIRED    
			, @FORMAT_TAB_INDEX 
			, @FORMAT_MAX_LENGTH
			, @FORMAT_SIZE      
			, @COLSPAN          
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_InsBound to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsBoundList' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsBoundList;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the DATA_LABEL to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 11/24/2006 Paul.  FIELD_TYPE should be of national character type. 
-- 12/02/2007 Paul.  If format rows > 0 then this is a list box and not a drop down list. 
-- 04/03/2010 Paul.  Allow a field to be added to the end using an index of -1. 
-- 01/06/2018 Paul.  Add DATA_FORMAT to ListBox support multi-select CSV. 
Create Procedure dbo.spEDITVIEWS_FIELDS_InsBoundList
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @CACHE_NAME        nvarchar( 50)
	, @COLSPAN           int
	, @FORMAT_ROWS       int = null
	, @DATA_FORMAT       nvarchar(100) = null
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, CACHE_NAME       
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, FORMAT_TAB_INDEX 
			, COLSPAN          
			, FORMAT_ROWS      
			, DATA_FORMAT      
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, N'ListBox'        
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @CACHE_NAME       
			, @DATA_REQUIRED    
			, @DATA_REQUIRED    
			, @FORMAT_TAB_INDEX 
			, @COLSPAN          
			, @FORMAT_ROWS      
			, @DATA_FORMAT      
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_InsBoundList to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsButton' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsButton;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_FIELDS_InsButton
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(1000)
	, @DATA_FORMAT       nvarchar(max)
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DATA_FIELD   = @DATA_FIELD
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_FORMAT      
			, COLSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, N'Button'         
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_FORMAT      
			, @COLSPAN          
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_InsButton to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsChange' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsChange;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the DATA_LABEL to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 11/24/2006 Paul.  FIELD_TYPE should be of national character type. 
-- 04/03/2010 Paul.  Allow a field to be added to the end using an index of -1. 
-- 09/16/2012 Paul.  Increase ONCLICK_SCRIPT to nvarchar(max). 
Create Procedure dbo.spEDITVIEWS_FIELDS_InsChange
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @DISPLAY_FIELD     nvarchar(100)
	, @ONCLICK_SCRIPT    nvarchar(max)
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DISPLAY_FIELD    
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, ONCLICK_SCRIPT   
			, FORMAT_TAB_INDEX 
			, COLSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, N'ChangeButton'   
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DISPLAY_FIELD    
			, @DATA_REQUIRED    
			, @DATA_REQUIRED    
			, @ONCLICK_SCRIPT   
			, @FORMAT_TAB_INDEX 
			, @COLSPAN          
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_InsChange to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsCheckBox' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsCheckBox;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_FIELDS_InsCheckBox
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @ONCLICK_SCRIPT    nvarchar(max)
	, @COLSPAN           int
	, @ROWSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @TEMP_FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, ONCLICK_SCRIPT   
			, FORMAT_TAB_INDEX 
			, COLSPAN          
			, ROWSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, N'CheckBox'       
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_REQUIRED    
			, @DATA_REQUIRED    
			, @ONCLICK_SCRIPT   
			, @FORMAT_TAB_INDEX 
			, @COLSPAN          
			, @ROWSPAN          
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_InsCheckBox to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsCheckLst' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsCheckLst;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_FIELDS_InsCheckLst
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @CACHE_NAME        nvarchar( 50)
	, @DATA_FORMAT       nvarchar(100)
	, @COLSPAN           int
	, @ROWSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @TEMP_FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, CACHE_NAME       
			, DATA_FORMAT      
			, FORMAT_TAB_INDEX 
			, COLSPAN          
			, ROWSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, N'CheckBoxList'       
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_REQUIRED    
			, @DATA_REQUIRED    
			, @CACHE_NAME       
			, @DATA_FORMAT      
			, @FORMAT_TAB_INDEX 
			, @COLSPAN          
			, @ROWSPAN          
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_InsCheckLst to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsControl' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsControl;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the DATA_LABEL to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 04/03/2010 Paul.  Allow a field to be added to the end using an index of -1. 
-- 09/16/2012 Paul.  Increase ONCLICK_SCRIPT to nvarchar(max). 
Create Procedure dbo.spEDITVIEWS_FIELDS_InsControl
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @FIELD_TYPE        nvarchar( 50)
	, @ONCLICK_SCRIPT    nvarchar(max)
	, @COLSPAN           int
	, @ROWSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @TEMP_FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, ONCLICK_SCRIPT   
			, FORMAT_TAB_INDEX 
			, COLSPAN          
			, ROWSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, @FIELD_TYPE       
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_REQUIRED    
			, @DATA_REQUIRED    
			, @ONCLICK_SCRIPT   
			, @FORMAT_TAB_INDEX 
			, @COLSPAN          
			, @ROWSPAN          
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_InsControl to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsDatePick' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsDatePick;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/31/2019 Paul.  Ease conversion to Oracle. 
Create Procedure dbo.spEDITVIEWS_FIELDS_InsDatePick
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @COLSPAN           int
	, @ROWSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @FIELD_TYPE       nvarchar( 50);
	declare @ONCLICK_SCRIPT   nvarchar(max);
	declare @TEMP_FIELD_INDEX int;
	set @FIELD_TYPE       = N'DatePicker';
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @TEMP_FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, ONCLICK_SCRIPT   
			, FORMAT_TAB_INDEX 
			, COLSPAN          
			, ROWSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, @FIELD_TYPE       
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_REQUIRED    
			, @DATA_REQUIRED    
			, @ONCLICK_SCRIPT   
			, @FORMAT_TAB_INDEX 
			, @COLSPAN          
			, @ROWSPAN          
			);
	end -- if;
  end
GO

Grant Execute on dbo.spEDITVIEWS_FIELDS_InsDatePick to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsDateRng' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsDateRng;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/31/2019 Paul.  Ease conversion to Oracle. 
Create Procedure dbo.spEDITVIEWS_FIELDS_InsDateRng
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @COLSPAN           int
	, @ROWSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @FIELD_TYPE       nvarchar( 50);
	declare @ONCLICK_SCRIPT   nvarchar(max);
	declare @TEMP_FIELD_INDEX int;
	set @FIELD_TYPE       = N'DateRange';
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @TEMP_FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, ONCLICK_SCRIPT   
			, FORMAT_TAB_INDEX 
			, COLSPAN          
			, ROWSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, @FIELD_TYPE       
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_REQUIRED    
			, @DATA_REQUIRED    
			, @ONCLICK_SCRIPT   
			, @FORMAT_TAB_INDEX 
			, @COLSPAN          
			, @ROWSPAN          
			);
	end -- if;
  end
GO

Grant Execute on dbo.spEDITVIEWS_FIELDS_InsDateRng to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsDependList' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsDependList;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the DATA_LABEL to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 11/24/2006 Paul.  FIELD_TYPE should be of national character type. 
-- 12/02/2007 Paul.  If format rows > 0 then this is a list box and not a drop down list. 
-- 04/03/2010 Paul.  Allow a field to be added to the end using an index of -1. 
-- 10/09/2010 Paul.  Add PARENT_FIELD so that we can establish dependent listboxes. 
Create Procedure dbo.spEDITVIEWS_FIELDS_InsDependList
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @PARENT_FIELD      nvarchar( 30)
	, @COLSPAN           int
	, @FORMAT_ROWS       int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, FORMAT_TAB_INDEX 
			, COLSPAN          
			, FORMAT_ROWS      
			, PARENT_FIELD     
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, N'ListBox'        
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_REQUIRED    
			, @DATA_REQUIRED    
			, @FORMAT_TAB_INDEX 
			, @COLSPAN          
			, @FORMAT_ROWS      
			, @PARENT_FIELD     
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_InsDependList to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsFile' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsFile;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the DATA_LABEL to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 11/24/2006 Paul.  FIELD_TYPE should be of national character type. 
-- 04/03/2010 Paul.  Allow a field to be added to the end using an index of -1. 
Create Procedure dbo.spEDITVIEWS_FIELDS_InsFile
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @FORMAT_MAX_LENGTH int
	, @FORMAT_SIZE       int
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, FORMAT_TAB_INDEX 
			, FORMAT_MAX_LENGTH
			, FORMAT_SIZE      
			, COLSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, N'File'           
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_REQUIRED    
			, @DATA_REQUIRED    
			, @FORMAT_TAB_INDEX 
			, @FORMAT_MAX_LENGTH
			, @FORMAT_SIZE      
			, @COLSPAN          
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_InsFile to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsHeader' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsHeader;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/15/2022 Paul.  Add support for Pacific layout tabs. 
Create Procedure dbo.spEDITVIEWS_FIELDS_InsHeader
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @COLSPAN           int
	, @DATA_FORMAT       nvarchar(max) = null
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, ONCLICK_SCRIPT   
			, FORMAT_TAB_INDEX 
			, COLSPAN          
			, ROWSPAN          
			, DATA_FORMAT      
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, N'Header'         
			, @DATA_LABEL       
			, null              
			, null              
			, null              
			, null              
			, null              
			, @COLSPAN          
			, null              
			, @DATA_FORMAT      
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_InsHeader to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsHidden' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsHidden;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_FIELDS_InsHidden
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_FIELD        nvarchar(100)
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, ONCLICK_SCRIPT   
			, FORMAT_TAB_INDEX 
			, COLSPAN          
			, ROWSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, N'Hidden'         
			, null              
			, @DATA_FIELD       
			, null              
			, null              
			, null              
			, null              
			, null              
			, null              
			);
	end -- if;
  end
GO

Grant Execute on dbo.spEDITVIEWS_FIELDS_InsHidden to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsHtmlEditor' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsHtmlEditor;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/03/2010 Paul.  Allow a field to be added to the end using an index of -1. 
Create Procedure dbo.spEDITVIEWS_FIELDS_InsHtmlEditor
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @FORMAT_ROWS       int
	, @FORMAT_COLUMNS    int
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, FORMAT_TAB_INDEX 
			, FORMAT_ROWS      
			, FORMAT_COLUMNS   
			, COLSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, N'HtmlEditor'        
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_REQUIRED    
			, @DATA_REQUIRED    
			, @FORMAT_TAB_INDEX 
			, @FORMAT_ROWS      
			, @FORMAT_COLUMNS   
			, @COLSPAN          
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_InsHtmlEditor to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsLabel' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsLabel;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the DATA_LABEL to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 04/03/2010 Paul.  Allow a field to be added to the end using an index of -1. 
Create Procedure dbo.spEDITVIEWS_FIELDS_InsLabel
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, ONCLICK_SCRIPT   
			, FORMAT_TAB_INDEX 
			, COLSPAN          
			, ROWSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, N'Label'          
			, @DATA_LABEL       
			, @DATA_FIELD       
			, null              
			, null              
			, null              
			, null              
			, @COLSPAN          
			, null              
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_InsLabel to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsModulePopup' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsModulePopup;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 02/24/2010 Paul.  Allow a field to be added to the end using an index of -1. 
Create Procedure dbo.spEDITVIEWS_FIELDS_InsModulePopup
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @DISPLAY_FIELD     nvarchar(100)
	, @MODULE_TYPE       nvarchar(25)
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;

	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DISPLAY_FIELD    
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, MODULE_TYPE      
			, FORMAT_TAB_INDEX 
			, COLSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, N'ModulePopup'    
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DISPLAY_FIELD    
			, @DATA_REQUIRED    
			, @DATA_REQUIRED    
			, @MODULE_TYPE      
			, @FORMAT_TAB_INDEX 
			, @COLSPAN          
			);
	end -- if;
  end
GO

Grant Execute on dbo.spEDITVIEWS_FIELDS_InsModulePopup to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsMultiLine' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsMultiLine;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/24/2006 Paul.  Increase the DATA_LABEL to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 11/24/2006 Paul.  FIELD_TYPE should be of national character type. 
-- 04/03/2010 Paul.  Allow a field to be added to the end using an index of -1. 
Create Procedure dbo.spEDITVIEWS_FIELDS_InsMultiLine
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @FORMAT_ROWS       int
	, @FORMAT_COLUMNS    int
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, FORMAT_TAB_INDEX 
			, FORMAT_ROWS      
			, FORMAT_COLUMNS   
			, COLSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, N'TextBox'        
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_REQUIRED    
			, @DATA_REQUIRED    
			, @FORMAT_TAB_INDEX 
			, @FORMAT_ROWS      
			, @FORMAT_COLUMNS   
			, @COLSPAN          
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_InsMultiLine to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsNaicsSelect' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsNaicsSelect;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_FIELDS_InsNaicsSelect
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @FORMAT_TAB_INDEX  int
	, @COLSPAN           int
	)
as
  begin
	declare @ID                uniqueidentifier;
	declare @DATA_LABEL        nvarchar(150);
	declare @DATA_FIELD        nvarchar(100);
	declare @DATA_REQUIRED     bit;
	declare @DISPLAY_FIELD     nvarchar(100);
	declare @MODULE_TYPE       nvarchar(25);
	
	set @DATA_LABEL  = N'NAICSCodes.LBL_NAICS_SET_NAME';
	set @DATA_FIELD  = N'NAICS_SET_NAME';
	set @MODULE_TYPE = N'NAICSCodes';

	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DISPLAY_FIELD    
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, MODULE_TYPE      
			, FORMAT_TAB_INDEX 
			, COLSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, N'NAICSCodeSelect'      
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DISPLAY_FIELD    
			, @DATA_REQUIRED    
			, @DATA_REQUIRED    
			, @MODULE_TYPE      
			, @FORMAT_TAB_INDEX 
			, @COLSPAN          
			);
	end -- if;
  end
GO

Grant Execute on dbo.spEDITVIEWS_FIELDS_InsNaicsSelect to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsPassword' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsPassword;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/29/2007 Paul.  spEDITVIEWS_FIELDS_Update does not work well in Oracle inside the Data.sql, so create a separate password procedure. 
-- 04/03/2010 Paul.  Allow a field to be added to the end using an index of -1. 
Create Procedure dbo.spEDITVIEWS_FIELDS_InsPassword
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @FORMAT_MAX_LENGTH int
	, @FORMAT_SIZE       int
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, FORMAT_TAB_INDEX 
			, FORMAT_MAX_LENGTH
			, FORMAT_SIZE      
			, COLSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, N'Password'       
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_REQUIRED    
			, @DATA_REQUIRED    
			, @FORMAT_TAB_INDEX 
			, @FORMAT_MAX_LENGTH
			, @FORMAT_SIZE      
			, @COLSPAN          
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_InsPassword to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsPopup' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsPopup;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/03/2010 Paul.  Allow a field to be added to the end using an index of -1. 
-- 09/16/2012 Paul.  Increase ONCLICK_SCRIPT to nvarchar(max). 
Create Procedure dbo.spEDITVIEWS_FIELDS_InsPopup
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @DISPLAY_FIELD     nvarchar(100)
	, @MODULE_TYPE       nvarchar( 25)
	, @ONCLICK_SCRIPT    nvarchar(max)
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DISPLAY_FIELD    
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, ONCLICK_SCRIPT   
			, FORMAT_TAB_INDEX 
			, COLSPAN          
			, MODULE_TYPE      
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, N'ChangeButton'   
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DISPLAY_FIELD    
			, @DATA_REQUIRED    
			, @DATA_REQUIRED    
			, @ONCLICK_SCRIPT   
			, @FORMAT_TAB_INDEX 
			, @COLSPAN          
			, @MODULE_TYPE      
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_InsPopup to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsRadio' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsRadio;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_FIELDS_InsRadio
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @CACHE_NAME        nvarchar( 50)
	, @COLSPAN           int
	, @FORMAT_ROWS       int = null
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, CACHE_NAME       
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, FORMAT_TAB_INDEX 
			, COLSPAN          
			, FORMAT_ROWS      
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, N'Radio'          
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @CACHE_NAME       
			, @DATA_REQUIRED    
			, @DATA_REQUIRED    
			, @FORMAT_TAB_INDEX 
			, @COLSPAN          
			, @FORMAT_ROWS      
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_InsRadio to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsSeparator' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsSeparator;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 02/21/2017 Paul.  Allow a field to be added to the end using an index of -1. 
Create Procedure dbo.spEDITVIEWS_FIELDS_InsSeparator
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, N'Separator'      
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_InsSeparator to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsTagSelect' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsTagSelect;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_FIELDS_InsTagSelect
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @FORMAT_TAB_INDEX  int
	, @COLSPAN           int
	)
as
  begin
	declare @ID                uniqueidentifier;
	declare @DATA_LABEL        nvarchar(150);
	declare @DATA_FIELD        nvarchar(100);
	declare @DATA_REQUIRED     bit;
	declare @DISPLAY_FIELD     nvarchar(100);
	declare @MODULE_TYPE       nvarchar(25);
	
	set @DATA_LABEL  = N'.LBL_TAG_SET_NAME';
	set @DATA_FIELD  = N'TAG_SET_NAME';
	set @MODULE_TYPE = N'Tags';

	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DISPLAY_FIELD    
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, MODULE_TYPE      
			, FORMAT_TAB_INDEX 
			, COLSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, N'TagSelect'      
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DISPLAY_FIELD    
			, @DATA_REQUIRED    
			, @DATA_REQUIRED    
			, @MODULE_TYPE      
			, @FORMAT_TAB_INDEX 
			, @COLSPAN          
			);
	end -- if;
  end
GO

Grant Execute on dbo.spEDITVIEWS_FIELDS_InsTagSelect to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsTimeEdit' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsTimeEdit;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 02/01/2019 Paul.  Ease conversion to Oracle. 
Create Procedure dbo.spEDITVIEWS_FIELDS_InsTimeEdit
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @COLSPAN           int
	, @ROWSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @FIELD_TYPE       nvarchar( 50);
	declare @ONCLICK_SCRIPT   nvarchar(max);
	declare @TEMP_FIELD_INDEX int;
	set @FIELD_TYPE       = N'DateTimeEdit';
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @TEMP_FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, ONCLICK_SCRIPT   
			, FORMAT_TAB_INDEX 
			, COLSPAN          
			, ROWSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, @FIELD_TYPE       
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_REQUIRED    
			, @DATA_REQUIRED    
			, @ONCLICK_SCRIPT   
			, @FORMAT_TAB_INDEX 
			, @COLSPAN          
			, @ROWSPAN          
			);
	end -- if;
  end
GO

Grant Execute on dbo.spEDITVIEWS_FIELDS_InsTimeEdit to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsTimeNew' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsTimeNew;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 02/01/2019 Paul.  Ease conversion to Oracle. 
Create Procedure dbo.spEDITVIEWS_FIELDS_InsTimeNew
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @COLSPAN           int
	, @ROWSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @FIELD_TYPE       nvarchar( 50);
	declare @ONCLICK_SCRIPT   nvarchar(max);
	declare @TEMP_FIELD_INDEX int;
	set @FIELD_TYPE       = N'DateTimeNewRecord';
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @TEMP_FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, ONCLICK_SCRIPT   
			, FORMAT_TAB_INDEX 
			, COLSPAN          
			, ROWSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, @FIELD_TYPE       
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_REQUIRED    
			, @DATA_REQUIRED    
			, @ONCLICK_SCRIPT   
			, @FORMAT_TAB_INDEX 
			, @COLSPAN          
			, @ROWSPAN          
			);
	end -- if;
  end
GO

Grant Execute on dbo.spEDITVIEWS_FIELDS_InsTimeNew to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsTimePick' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsTimePick;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 02/01/2019 Paul.  Ease conversion to Oracle. 
Create Procedure dbo.spEDITVIEWS_FIELDS_InsTimePick
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @COLSPAN           int
	, @ROWSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @FIELD_TYPE       nvarchar( 50);
	declare @ONCLICK_SCRIPT   nvarchar(max);
	declare @TEMP_FIELD_INDEX int;
	set @FIELD_TYPE       = N'DateTimePicker';
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @TEMP_FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, ONCLICK_SCRIPT   
			, FORMAT_TAB_INDEX 
			, COLSPAN          
			, ROWSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, @FIELD_TYPE       
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_REQUIRED    
			, @DATA_REQUIRED    
			, @ONCLICK_SCRIPT   
			, @FORMAT_TAB_INDEX 
			, @COLSPAN          
			, @ROWSPAN          
			);
	end -- if;
  end
GO

Grant Execute on dbo.spEDITVIEWS_FIELDS_InsTimePick to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_InsZipCode' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_InsZipCode;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_FIELDS_InsZipCode
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @FORMAT_MAX_LENGTH int
	, @FORMAT_SIZE       int
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	declare @TEMP_FIELD_INDEX int;	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	if @FIELD_INDEX is null or @FIELD_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_FIELD_INDEX = isnull(max(FIELD_INDEX), 0) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DATA_FIELD   = @DATA_FIELD
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into EDITVIEWS_FIELDS
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, EDIT_NAME        
			, FIELD_INDEX      
			, FIELD_TYPE       
			, DATA_LABEL       
			, DATA_FIELD       
			, DATA_REQUIRED    
			, UI_REQUIRED      
			, FORMAT_TAB_INDEX 
			, FORMAT_MAX_LENGTH
			, FORMAT_SIZE      
			, COLSPAN          
			)
		values 
			( @ID               
			, null              
			,  getdate()        
			, null              
			,  getdate()        
			, @EDIT_NAME        
			, @TEMP_FIELD_INDEX 
			, N'ZipCodePopup'   
			, @DATA_LABEL       
			, @DATA_FIELD       
			, @DATA_REQUIRED    
			, @DATA_REQUIRED    
			, @FORMAT_TAB_INDEX 
			, @FORMAT_MAX_LENGTH
			, @FORMAT_SIZE      
			, @COLSPAN          
			);
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_InsZipCode to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spFIELDS_META_DATA_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spFIELDS_META_DATA_Delete;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/02/2008 Paul.  Make sure to remove the column from the triggers. 
-- 11/17/2008 Paul.  We need to update the audit views for the workflow engine. 
-- 08/07/2013 Paul.  Add Oracle Exception. 
-- 04/18/2016 Paul.  Allow disable recompile so that we can do in the background. 
-- 02/25/2017 Paul.  We need to refresh Stream views. 
-- 11/18/2017 Paul.  Correct to use @TABLE_NAME instead of @CUSTOM_TABLE. 
-- 12/18/2017 Paul.  Add Archive access right. 
-- 07/27/2018 Paul.  We need to update the Custom table not the main table. 
Create Procedure dbo.spFIELDS_META_DATA_Delete
	( @ID                uniqueidentifier
	, @MODIFIED_USER_ID  uniqueidentifier
	, @DISABLE_RECOMPILE bit = null
	)
as
  begin
	set nocount on
	
	declare @CUSTOM_MODULE      nvarchar(255);
	declare @CUSTOM_TABLE       nvarchar(255);
	-- 12/18/2017 Paul.  Add Archive access right. 
	declare @ARCHIVE_TABLE      nvarchar(255);
	declare @ARCHIVE_DATABASE   nvarchar(50);
	declare @EXISTS             bit;
	declare @NAME               nvarchar(255);
	declare @TABLE_NAME         nvarchar(255);

	if exists(select * from FIELDS_META_DATA where ID = @ID and DELETED = 0) begin -- then
		-- BEGIN Oracle Exception
			select @CUSTOM_MODULE = CUSTOM_MODULE
			     , @NAME          = NAME
			  from FIELDS_META_DATA
			 where ID             = @ID
			   and DELETED        = 0;
		-- END Oracle Exception

			
		set @CUSTOM_TABLE = dbo.fnCustomTableName(@CUSTOM_MODULE);
		-- 01/06/2006 Paul.  Try and drop the column first as it is more likely to fail than the update statement. 
		exec dbo.spSqlTableDropColumn @CUSTOM_TABLE, @NAME;
	
		if @@ERROR = 0 begin -- then
		-- BEGIN Oracle Exception
			update FIELDS_META_DATA
			   set DELETED          = 1
			     , DATE_MODIFIED    = getdate()
			     , DATE_MODIFIED_UTC= getutcdate()
			     , MODIFIED_USER_ID = @MODIFIED_USER_ID
			 where ID               = @ID
			   and DELETED          = 0;
		-- END Oracle Exception
		end -- if;
	
		-- 01/06/2006 Paul.  If successful deleting a field, then refresh all views. 
		if @@ERROR = 0 begin -- then
			-- 01/02/2008 Paul.  Make sure to remove the column from the triggers. 
			if exists(select * from vwSqlTablesAudited where TABLE_NAME = @CUSTOM_TABLE) begin -- then
				--exec dbo.spSqlBuildAuditTable   @CUSTOM_TABLE;
				exec dbo.spSqlBuildAuditTrigger @CUSTOM_TABLE;

			end -- if;
			-- 11/17/2008 Paul.  We need to update the audit views for the workflow engine. 
			-- BEGIN Oracle Exception
				select @TABLE_NAME = TABLE_NAME
				  from vwMODULES
				 where MODULE_NAME = @CUSTOM_MODULE;
			-- END Oracle Exception
			if @TABLE_NAME is not null begin -- then
				if exists(select * from vwSqlTablesAudited where TABLE_NAME = @TABLE_NAME) begin -- then
					exec dbo.spSqlBuildAuditView @TABLE_NAME;
				end -- if;
				
				-- 02/25/2017 Paul.  We need to refresh Stream views. 
				-- 11/18/2017 Paul.  Correct to use @TABLE_NAME instead of @CUSTOM_TABLE. 
				if exists(select * from vwSqlTablesStreamed where TABLE_NAME = @TABLE_NAME) begin -- then
					if exists(select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fn' + @TABLE_NAME + '_AUDIT_Columns') begin -- then
						exec dbo.spSqlBuildStreamFunction @TABLE_NAME;
					end -- if;
					if exists(select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'vw' + @TABLE_NAME + '_STREAM') begin -- then
						exec dbo.spSqlBuildStreamView @TABLE_NAME;
					end -- if;
				end -- if;
				
				-- 12/18/2017 Paul.  Add Archive access right. 
				set @ARCHIVE_TABLE = @TABLE_NAME + '_ARCHIVE';
				set @ARCHIVE_DATABASE = dbo.fnCONFIG_String('Archive.Database');
				exec dbo.spSqlTableExists @EXISTS out, @ARCHIVE_TABLE, @ARCHIVE_DATABASE;
				if @EXISTS = 1 begin -- then
					-- 07/27/2018 Paul.  We need to update the Custom table not the main table. 
					exec dbo.spSqlBuildArchiveTable @CUSTOM_TABLE, @ARCHIVE_DATABASE;
					exec dbo.spSqlBuildArchiveView  @TABLE_NAME, @ARCHIVE_DATABASE;
				end -- if;
			end -- if;
			-- 04/18/2016 Paul.  Allow disable recompile so that we can do in the background. 
			if isnull(@DISABLE_RECOMPILE, 0) = 0 begin -- then
				exec dbo.spSqlRefreshAllViews ;
			end -- if;
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spFIELDS_META_DATA_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spFIELDS_META_DATA_Insert' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spFIELDS_META_DATA_Insert;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/21/2006 Paul.  MASS_UPDATE was added in SugarCRM 4.0.
-- 12/16/2006 Paul.  Only add the column if the column does not exist. 
-- 12/16/2006 Paul.  Only add the meta data record if it does not already exist. 
-- 01/02/2008 Paul.  Make sure to add the column to the audit table and to add the triggers. 
-- 08/27/2008 Paul.  PostgreSQL does not allow modifying input parameters.  Use a local temp variable. 
-- 11/17/2008 Paul.  We need to create the audit views for the workflow engine. 
-- 03/11/2016 Paul.  Allow disable recompile so that we can do in the background. 
-- 07/27/2018 Paul.  We need to update the Custom table not the main table. 
Create Procedure dbo.spFIELDS_META_DATA_Insert
	( @ID                uniqueidentifier output
	, @MODIFIED_USER_ID  uniqueidentifier
	, @NAME              nvarchar(255)
	, @LABEL             nvarchar(255)
	, @LABEL_TERM        nvarchar(255)
	, @CUSTOM_MODULE     nvarchar(255)
	, @DATA_TYPE         nvarchar(255)
	, @MAX_SIZE          int
	, @REQUIRED          bit
	, @AUDITED           bit
	, @DEFAULT_VALUE     nvarchar(255)
	, @DROPDOWN_LIST     nvarchar(50)
	, @MASS_UPDATE       bit
	, @DISABLE_RECOMPILE bit = null
	)
as
  begin
	set nocount on
	
	declare @CUSTOM_TABLE       nvarchar(255);
	-- 09/26/2017 Paul.  Add Archive access right. 
	declare @ARCHIVE_TABLE      nvarchar(255);
	declare @ARCHIVE_DATABASE   nvarchar(50);
	declare @EXISTS             bit;
	declare @CUSTOM_COLUMN      nvarchar(255);
	declare @REQUIRED_OPTION    nvarchar(255);
	declare @TEMP_NAME          nvarchar(255);
	declare @TEMP_LABEL_TERM    nvarchar(255);
	declare @TEMP_MAX_SIZE      int;
	declare @TEMP_DROPDOWN_LIST nvarchar(50);
	declare @TABLE_NAME         nvarchar(255);

	set @TEMP_NAME          = @NAME;
	set @TEMP_LABEL_TERM    = @LABEL_TERM;
	set @TEMP_MAX_SIZE      = @MAX_SIZE;
	set @TEMP_DROPDOWN_LIST = @DROPDOWN_LIST;
	if @REQUIRED = 1 begin -- then
		set @REQUIRED_OPTION = 'required';
	end else begin
		set @REQUIRED_OPTION = 'optional';
	end -- if;
	if @DATA_TYPE = 'varchar' begin -- then
		if @TEMP_MAX_SIZE = 0 begin -- then
			set @TEMP_MAX_SIZE = 255;  -- 01/06/2006 Paul.  SugarCRM 4.0 Default size is 255. 
		end else if @TEMP_MAX_SIZE > 4000 begin -- then
			set @TEMP_MAX_SIZE = 4000;
		end -- if;
	end else if @DATA_TYPE = 'enum' begin -- then
		set @TEMP_MAX_SIZE = 50;  -- 02/02/2006 Paul.  Should be integer.  Caught when converting to DB2.
	end else begin
		set @TEMP_MAX_SIZE = null;
	end -- if;
	if @DATA_TYPE <> 'enum' begin -- then
		set @TEMP_DROPDOWN_LIST = null;
	end -- if;


	-- 01/06/2006 Paul.  Append _C to the end of custom column names. 
	set @TEMP_NAME       = dbo.fnCustomFieldName(@TEMP_NAME );
	-- 01/11/2006 Paul.  Append _C to the end of the term label. 
	-- 04/05/2006 Paul.  Bug fix, append to @TEMP_LABEL_TERM and not @LABEL. 
	-- set @TEMP_LABEL_TERM    = dbo.fnCustomFieldName(@TEMP_LABEL_TERM);
	-- 04/23/2007 Paul.  The term name needs to be derived from the field name with LBL_ prepended, otherwise the Reporting system will not be able to find the term. 
	set @TEMP_LABEL_TERM = dbo.fnCustomLabelName(@TEMP_NAME);
	set @CUSTOM_TABLE    = dbo.fnCustomTableName(@CUSTOM_MODULE);
	-- 01/06/2006 Paul.  I like all column names to be upper case. 
	set @CUSTOM_COLUMN   = upper(@TEMP_NAME);
	-- 01/06/2006 Paul.  Try and add the column first as it is more likely to fail than the insert statement. 
	-- 12/16/2006 Paul.  Only add the column if the column does not exist. 
	if not exists(select * from vwSqlColumns where ObjectName = @CUSTOM_TABLE and ColumnName = @CUSTOM_COLUMN) begin -- then
		exec dbo.spSqlTableAddColumn @CUSTOM_TABLE, @CUSTOM_COLUMN, @DATA_TYPE, @TEMP_MAX_SIZE, @REQUIRED, @DEFAULT_VALUE;
	end -- if;

	if @@ERROR = 0 begin -- then
		-- BEGIN Oracle Exception
			select @ID = ID
			  from FIELDS_META_DATA
			 where NAME          = @TEMP_NAME         
			   and CUSTOM_MODULE = @CUSTOM_MODULE
			   and DELETED       = 0             ;
		-- END Oracle Exception

		-- 12/16/2006 Paul.  Only add the meta data record if it does not already exist. 
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			set @ID = newid();
			insert into FIELDS_META_DATA
				( ID               
				, CREATED_BY       
				, DATE_ENTERED     
				, MODIFIED_USER_ID 
				, DATE_MODIFIED    
				, NAME             
				, LABEL            
				, CUSTOM_MODULE    
				, DATA_TYPE        
				, MAX_SIZE         
				, REQUIRED_OPTION  
				, AUDITED          
				, DEFAULT_VALUE    
				, EXT1             
				, MASS_UPDATE      
				)
			values
				( @ID               
				, @MODIFIED_USER_ID 
				,  getdate()        
				, @MODIFIED_USER_ID 
				,  getdate()        
				, @TEMP_NAME             
				, @LABEL            
				, @CUSTOM_MODULE    
				, @DATA_TYPE        
				, @TEMP_MAX_SIZE         
				, @REQUIRED_OPTION  
				, @AUDITED          
				, @DEFAULT_VALUE    
				, @TEMP_DROPDOWN_LIST    
				, @MASS_UPDATE      
				);
		end -- if;
	end -- if;

	if @@ERROR = 0 begin -- then
		-- 01/11/2006 Paul.  Always default to english. 
		exec dbo.spTERMINOLOGY_InsertOnly @TEMP_LABEL_TERM, 'en-US', @CUSTOM_MODULE, null, null, @LABEL;
	end -- if;


	-- 01/06/2006 Paul.  If successful adding a field, then refresh all views. 
	if @@ERROR = 0 begin -- then

		-- 01/02/2008 Paul.  Make sure to add the column to the audit table and to add the triggers. 
		if exists(select * from vwSqlTablesAudited where TABLE_NAME = @CUSTOM_TABLE) begin -- then
			exec dbo.spSqlBuildAuditTable   @CUSTOM_TABLE;
			exec dbo.spSqlBuildAuditTrigger @CUSTOM_TABLE;

			-- 11/17/2008 Paul.  We need to create the audit views for the workflow engine. 
			-- BEGIN Oracle Exception
				select @TABLE_NAME = TABLE_NAME
				  from vwMODULES
				 where MODULE_NAME = @CUSTOM_MODULE;
			-- END Oracle Exception
			if @TABLE_NAME is not null begin -- then
				if exists(select * from vwSqlTablesAudited where TABLE_NAME = @TABLE_NAME) begin -- then
					exec dbo.spSqlBuildAuditView @TABLE_NAME;
				end -- if;
				
				-- 12/18/2017 Paul.  We need to refresh Stream views. 
				if exists(select * from vwSqlTablesStreamed where TABLE_NAME = @TABLE_NAME) begin -- then
					if exists(select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fn' + @TABLE_NAME + '_AUDIT_Columns') begin -- then
						exec dbo.spSqlBuildStreamFunction @TABLE_NAME;
					end -- if;
					if exists(select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'vw' + @TABLE_NAME + '_STREAM') begin -- then
						exec dbo.spSqlBuildStreamView @TABLE_NAME;
					end -- if;
				end -- if;
				
				-- 09/26/2017 Paul.  Add Archive access right. 
				set @ARCHIVE_TABLE = @TABLE_NAME + '_ARCHIVE';
				set @ARCHIVE_DATABASE = dbo.fnCONFIG_String('Archive.Database');
				exec dbo.spSqlTableExists @EXISTS out, @ARCHIVE_TABLE, @ARCHIVE_DATABASE;
				if @EXISTS = 1 begin -- then
					-- 07/27/2018 Paul.  We need to update the Custom table not the main table. 
					exec dbo.spSqlBuildArchiveTable @CUSTOM_TABLE, @ARCHIVE_DATABASE;
					exec dbo.spSqlBuildArchiveView  @TABLE_NAME, @ARCHIVE_DATABASE;
				end -- if;
			end -- if;
		end -- if;
		-- 03/11/2016 Paul.  Allow disable recompile so that we can do in the background. 
		if isnull(@DISABLE_RECOMPILE, 0) = 0 begin -- then
			exec dbo.spSqlRefreshAllViews ;
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spFIELDS_META_DATA_Insert to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spFIELDS_META_DATA_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spFIELDS_META_DATA_Update;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/21/2006 Paul.  MASS_UPDATE was added in SugarCRM 4.0.
-- 01/10/2007 Paul.  DROPDOWN_LIST was added as it can be modified.
-- 01/02/2008 Paul.  Make sure to add the column to the audit table and to add the triggers. 
-- 08/27/2008 Paul.  PostgreSQL does not allow modifying input parameters.  Use a local temp variable. 
-- 11/17/2008 Paul.  We need to update the audit views for the workflow engine. 
-- 04/18/2016 Paul.  Allow disable recompile so that we can do in the background. 
-- 12/18/2017 Paul.  Add Archive access right. 
-- 07/27/2018 Paul.  We need to update the Custom table not the main table. 
Create Procedure dbo.spFIELDS_META_DATA_Update
	( @ID                uniqueidentifier
	, @MODIFIED_USER_ID  uniqueidentifier
	, @MAX_SIZE          int
	, @REQUIRED          bit
	, @AUDITED           bit
	, @DEFAULT_VALUE     nvarchar(255)
	, @DROPDOWN_LIST     nvarchar(50)
	, @MASS_UPDATE       bit
	, @DISABLE_RECOMPILE bit = null
	)
as
  begin
	set nocount on
	
	declare @CUSTOM_MODULE      nvarchar(255);
	declare @CUSTOM_TABLE       nvarchar(255);
	-- 12/18/2017 Paul.  Add Archive access right. 
	declare @ARCHIVE_TABLE      nvarchar(255);
	declare @ARCHIVE_DATABASE   nvarchar(50);
	declare @EXISTS             bit;
	declare @NAME               nvarchar(255);
	declare @DATA_TYPE          nvarchar(255);
	declare @REQUIRED_OPTION    nvarchar(255);
	declare @TEMP_MAX_SIZE      int;
	declare @TEMP_DROPDOWN_LIST nvarchar(50);
	declare @TABLE_NAME         nvarchar(255);

	set @TEMP_MAX_SIZE      = @MAX_SIZE;
	set @TEMP_DROPDOWN_LIST = @DROPDOWN_LIST;
	if @REQUIRED = 1 begin -- then
		set @REQUIRED_OPTION = 'required';
	end else begin
		set @REQUIRED_OPTION = 'optional';
	end -- if;

	-- BEGIN Oracle Exception
		select @CUSTOM_MODULE = CUSTOM_MODULE
		     , @NAME          = NAME
		     , @DATA_TYPE     = DATA_TYPE
		  from FIELDS_META_DATA
		 where ID             = @ID
		   and DELETED        = 0;
	-- END Oracle Exception

	-- 07/15/2009 Paul.  We can't clear the dropdown until after we have loaded the data type. 
	if @DATA_TYPE <> 'enum' begin -- then
		set @TEMP_DROPDOWN_LIST = null;
	end -- if;

	if @CUSTOM_MODULE is not null and @NAME is not null begin -- then
		if @DATA_TYPE = 'varchar' begin -- then
			if @TEMP_MAX_SIZE = 0 begin -- then
				set @TEMP_MAX_SIZE = 0;
			end else if @TEMP_MAX_SIZE > 4000 begin -- then
				set @TEMP_MAX_SIZE = 4000;
			end -- if;
		end else begin
			set @TEMP_MAX_SIZE = null;
		end -- if;
	
		
		set @CUSTOM_TABLE = dbo.fnCustomTableName(@CUSTOM_MODULE);
		-- 01/06/2006 Paul.  Try and add the column first as it is more likely to fail than the insert statement. 
		exec dbo.spSqlTableAlterColumn @CUSTOM_TABLE, @NAME, @DATA_TYPE, @TEMP_MAX_SIZE, @REQUIRED, @DEFAULT_VALUE;
	
		-- 04/02/2006 Paul.  Catch the Oracle NO_DATA_FOUND exception. 
		-- BEGIN Oracle Exception
			update FIELDS_META_DATA
			   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
			     , DATE_MODIFIED     =  getdate()        
			     , DATE_MODIFIED_UTC =  getutcdate()     
			     , MAX_SIZE          = @TEMP_MAX_SIZE    
			     , REQUIRED_OPTION   = @REQUIRED_OPTION  
			     , AUDITED           = @AUDITED          
			     , DEFAULT_VALUE     = @DEFAULT_VALUE    
			     , EXT1              = @TEMP_DROPDOWN_LIST    
			     , MASS_UPDATE       = @MASS_UPDATE      
			 where ID                = @ID               ;
		-- END Oracle Exception
	
		-- 01/06/2006 Paul.  If successful altering a field, then refresh all views. 
		if @@ERROR = 0 begin -- then
			-- 01/02/2008 Paul.  Make sure to add the column to the audit table and to add the triggers. 
			if exists(select * from vwSqlTablesAudited where TABLE_NAME = @CUSTOM_TABLE) begin -- then
				exec dbo.spSqlBuildAuditTable   @CUSTOM_TABLE;
				exec dbo.spSqlBuildAuditTrigger @CUSTOM_TABLE;

				-- 11/17/2008 Paul.  We need to update the audit views for the workflow engine. 
				-- BEGIN Oracle Exception
					select @TABLE_NAME = TABLE_NAME
					  from vwMODULES
					 where MODULE_NAME = @CUSTOM_MODULE;
				-- END Oracle Exception
				if @TABLE_NAME is not null begin -- then
					if exists(select * from vwSqlTablesAudited where TABLE_NAME = @TABLE_NAME) begin -- then
						exec dbo.spSqlBuildAuditView @TABLE_NAME;
					end -- if;
					
					-- 12/18/2017 Paul.  We need to refresh Stream views. 
					if exists(select * from vwSqlTablesStreamed where TABLE_NAME = @TABLE_NAME) begin -- then
						if exists(select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'fn' + @TABLE_NAME + '_AUDIT_Columns') begin -- then
							exec dbo.spSqlBuildStreamFunction @TABLE_NAME;
						end -- if;
						if exists(select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'vw' + @TABLE_NAME + '_STREAM') begin -- then
							exec dbo.spSqlBuildStreamView @TABLE_NAME;
						end -- if;
					end -- if;
					
					-- 12/18/2017 Paul.  Add Archive access right. 
					set @ARCHIVE_TABLE = @TABLE_NAME + '_ARCHIVE';
					set @ARCHIVE_DATABASE = dbo.fnCONFIG_String('Archive.Database');
					exec dbo.spSqlTableExists @EXISTS out, @ARCHIVE_TABLE, @ARCHIVE_DATABASE;
					if @EXISTS = 1 begin -- then
						-- 07/27/2018 Paul.  We need to update the Custom table not the main table. 
						exec dbo.spSqlBuildArchiveTable @CUSTOM_TABLE, @ARCHIVE_DATABASE;
						exec dbo.spSqlBuildArchiveView  @TABLE_NAME, @ARCHIVE_DATABASE;
					end -- if;
				end -- if;
			end -- if;
			-- 04/18/2016 Paul.  Allow disable recompile so that we can do in the background. 
			if isnull(@DISABLE_RECOMPILE, 0) = 0 begin -- then
				exec dbo.spSqlRefreshAllViews ;
			end -- if;
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spFIELDS_META_DATA_Update to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spGRIDVIEWS_COLUMNS_InsBound' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spGRIDVIEWS_COLUMNS_InsBound;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/28/2006 Paul.  Added URL_MODULE.
-- 05/02/2006 Paul.  Add URL_ASSIGNED_FIELD to support ACL. 
-- 07/24/2006 Paul.  Increase the HEADER_TEXT to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 11/24/2006 Paul.  COLUMN_TYPE should be of national character type. 
-- 02/24/2010 Paul.  Allow a field to be added to the end using an index of -1. 
-- 09/12/2010 Paul.  Add default parameter MODULE_TYPE to ease migration to EffiProz. 
-- 10/09/2010 Paul.  Add PARENT_FIELD so that we can establish dependent listboxes. 
-- 11/23/2012 Paul.  Make sure to only add the field if it does not already exist when using -1. 
Create Procedure dbo.spGRIDVIEWS_COLUMNS_InsBound
	( @GRID_NAME                   nvarchar( 50)
	, @COLUMN_INDEX                int
	, @HEADER_TEXT                 nvarchar(150)
	, @DATA_FIELD                  nvarchar( 50)
	, @SORT_EXPRESSION             nvarchar( 50)
	, @ITEMSTYLE_WIDTH             nvarchar( 10)
	)
as
  begin

	declare @ID        uniqueidentifier;
	declare @COLUMN_ID uniqueidentifier;
	
	declare @TEMP_COLUMN_INDEX int;	
	set @TEMP_COLUMN_INDEX = @COLUMN_INDEX;
	if @COLUMN_INDEX is null or @COLUMN_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_COLUMN_INDEX = isnull(max(COLUMN_INDEX), 0) + 1
			  from GRIDVIEWS_COLUMNS
			 where GRID_NAME    = @GRID_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- BEGIN Oracle Exception
			select @ID = ID
			  from GRIDVIEWS_COLUMNS
			 where GRID_NAME    = @GRID_NAME
			   and DATA_FIELD   = @DATA_FIELD
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from GRIDVIEWS_COLUMNS
			 where GRID_NAME    = @GRID_NAME
			   and COLUMN_INDEX = @COLUMN_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if not exists(select * from GRIDVIEWS_COLUMNS where ID = @ID) begin -- then
		-- GRID_NAME, COLUMN_INDEX, COLUMN_TYPE, HEADER_TEXT, DATA_FIELD, SORT_EXPRESSION, ITEMSTYLE_WIDTH
		exec dbo.spGRIDVIEWS_COLUMNS_Update
			  @COLUMN_ID out
			, null
			, @GRID_NAME
			, @TEMP_COLUMN_INDEX
			, N'BoundColumn'
			, @HEADER_TEXT
			, @SORT_EXPRESSION
			, @ITEMSTYLE_WIDTH
			, null
			, null
			, null
			, null
			, @DATA_FIELD
			, null             -- DATA_FORMAT       
			, null             -- URL_FIELD         
			, null             -- URL_FORMAT        
			, null             -- URL_TARGET        
			, null             -- LIST_NAME         
			, null             -- URL_MODULE        
			, null             -- URL_ASSIGNED_FIELD
			, null             -- MODULE_TYPE       
			, null             -- PARENT_FIELD      
			;
	end -- if;
  end
GO
 
Grant Execute on dbo.spGRIDVIEWS_COLUMNS_InsBound to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spGRIDVIEWS_COLUMNS_InsBoundDate' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spGRIDVIEWS_COLUMNS_InsBoundDate;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/28/2006 Paul.  Added URL_MODULE.
-- 05/02/2006 Paul.  Add URL_ASSIGNED_FIELD to support ACL. 
-- 07/24/2006 Paul.  Increase the HEADER_TEXT to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 11/24/2006 Paul.  COLUMN_TYPE should be of national character type. 
-- 09/12/2010 Paul.  Add default parameter MODULE_TYPE to ease migration to EffiProz. 
-- 10/09/2010 Paul.  Add PARENT_FIELD so that we can establish dependent listboxes. 
-- 03/01/2014 Paul.  Increase size of DATA_FORMAT. 
-- 02/24/2022 Paul.  Allow a field to be added to the end using an index of -1. 
Create Procedure dbo.spGRIDVIEWS_COLUMNS_InsBoundDate
	( @GRID_NAME                   nvarchar( 50)
	, @COLUMN_INDEX                int
	, @HEADER_TEXT                 nvarchar(150)
	, @DATA_FIELD                  nvarchar( 50)
	, @SORT_EXPRESSION             nvarchar( 50)
	, @ITEMSTYLE_WIDTH             nvarchar( 10)
	, @DATA_FORMAT                 nvarchar( 25)
	)
as
  begin

	declare @ID        uniqueidentifier;
	declare @COLUMN_ID uniqueidentifier;
	
	-- 02/24/2022 Paul.  Allow a field to be added to the end using an index of -1. 
	declare @TEMP_COLUMN_INDEX int;	
	set @TEMP_COLUMN_INDEX = @COLUMN_INDEX;
	if @COLUMN_INDEX is null or @COLUMN_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_COLUMN_INDEX = isnull(max(COLUMN_INDEX), 0) + 1
			  from GRIDVIEWS_COLUMNS
			 where GRID_NAME    = @GRID_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- BEGIN Oracle Exception
			select @ID = ID
			  from GRIDVIEWS_COLUMNS
			 where GRID_NAME    = @GRID_NAME
			   and DATA_FIELD   = @DATA_FIELD
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from GRIDVIEWS_COLUMNS
			 where GRID_NAME    = @GRID_NAME
			   and COLUMN_INDEX = @COLUMN_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if not exists(select * from GRIDVIEWS_COLUMNS where ID = @ID) begin -- then
		-- GRID_NAME, COLUMN_INDEX, COLUMN_TYPE, HEADER_TEXT, DATA_FIELD, SORT_EXPRESSION, ITEMSTYLE_WIDTH
		exec dbo.spGRIDVIEWS_COLUMNS_Update
			  @COLUMN_ID out
			, null
			, @GRID_NAME
			, @TEMP_COLUMN_INDEX
			, N'TemplateColumn'
			, @HEADER_TEXT
			, @SORT_EXPRESSION
			, @ITEMSTYLE_WIDTH
			, null
			, null
			, null
			, null
			, @DATA_FIELD
			, @DATA_FORMAT
			, null             -- URL_FIELD         
			, null             -- URL_FORMAT        
			, null             -- URL_TARGET        
			, null             -- LIST_NAME         
			, null             -- URL_MODULE        
			, null             -- URL_ASSIGNED_FIELD
			, null             -- MODULE_TYPE       
			, null             -- PARENT_FIELD      
			;
	end -- if;
  end
GO
 
Grant Execute on dbo.spGRIDVIEWS_COLUMNS_InsBoundDate to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spGRIDVIEWS_COLUMNS_InsBoundList' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spGRIDVIEWS_COLUMNS_InsBoundList;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/28/2006 Paul.  Added URL_MODULE.
-- 05/02/2006 Paul.  Add URL_ASSIGNED_FIELD to support ACL. 
-- 07/24/2006 Paul.  Increase the HEADER_TEXT to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 11/24/2006 Paul.  COLUMN_TYPE should be of national character type. 
-- 09/12/2010 Paul.  Add default parameter MODULE_TYPE to ease migration to EffiProz. 
-- 10/09/2010 Paul.  Add PARENT_FIELD so that we can establish dependent listboxes. 
-- 02/24/2022 Paul.  Allow a field to be added to the end using an index of -1. 
Create Procedure dbo.spGRIDVIEWS_COLUMNS_InsBoundList
	( @GRID_NAME                   nvarchar( 50)
	, @COLUMN_INDEX                int
	, @HEADER_TEXT                 nvarchar(150)
	, @DATA_FIELD                  nvarchar( 50)
	, @SORT_EXPRESSION             nvarchar( 50)
	, @ITEMSTYLE_WIDTH             nvarchar( 10)
	, @LIST_NAME                   nvarchar( 50)
	)
as
  begin

	declare @ID        uniqueidentifier;
	declare @COLUMN_ID uniqueidentifier;
	
	-- 02/24/2022 Paul.  Allow a field to be added to the end using an index of -1. 
	declare @TEMP_COLUMN_INDEX int;	
	set @TEMP_COLUMN_INDEX = @COLUMN_INDEX;
	if @COLUMN_INDEX is null or @COLUMN_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_COLUMN_INDEX = isnull(max(COLUMN_INDEX), 0) + 1
			  from GRIDVIEWS_COLUMNS
			 where GRID_NAME    = @GRID_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- BEGIN Oracle Exception
			select @ID = ID
			  from GRIDVIEWS_COLUMNS
			 where GRID_NAME    = @GRID_NAME
			   and DATA_FIELD   = @DATA_FIELD
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from GRIDVIEWS_COLUMNS
			 where GRID_NAME    = @GRID_NAME
			   and COLUMN_INDEX = @COLUMN_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if not exists(select * from GRIDVIEWS_COLUMNS where ID = @ID) begin -- then
		-- GRID_NAME, COLUMN_INDEX, COLUMN_TYPE, HEADER_TEXT, DATA_FIELD, SORT_EXPRESSION, ITEMSTYLE_WIDTH
		exec dbo.spGRIDVIEWS_COLUMNS_Update
			  @COLUMN_ID out
			, null
			, @GRID_NAME
			, @TEMP_COLUMN_INDEX
			, N'BoundColumn'
			, @HEADER_TEXT
			, @SORT_EXPRESSION
			, @ITEMSTYLE_WIDTH
			, null
			, null
			, null
			, null
			, @DATA_FIELD
			, null
			, null
			, null
			, null
			, @LIST_NAME
			, null             -- URL_MODULE        
			, null             -- URL_ASSIGNED_FIELD
			, null             -- MODULE_TYPE       
			, null             -- PARENT_FIELD      
			;
	end -- if;
  end
GO
 
Grant Execute on dbo.spGRIDVIEWS_COLUMNS_InsBoundList to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spGRIDVIEWS_COLUMNS_InsDependList' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spGRIDVIEWS_COLUMNS_InsDependList;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/28/2006 Paul.  Added URL_MODULE.
-- 05/02/2006 Paul.  Add URL_ASSIGNED_FIELD to support ACL. 
-- 07/24/2006 Paul.  Increase the HEADER_TEXT to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 11/24/2006 Paul.  COLUMN_TYPE should be of national character type. 
-- 09/12/2010 Paul.  Add default parameter MODULE_TYPE to ease migration to EffiProz. 
-- 10/09/2010 Paul.  Add PARENT_FIELD so that we can establish dependent listboxes. 
Create Procedure dbo.spGRIDVIEWS_COLUMNS_InsDependList
	( @GRID_NAME                   nvarchar( 50)
	, @COLUMN_INDEX                int
	, @HEADER_TEXT                 nvarchar(150)
	, @DATA_FIELD                  nvarchar( 50)
	, @SORT_EXPRESSION             nvarchar( 50)
	, @ITEMSTYLE_WIDTH             nvarchar( 10)
	, @PARENT_FIELD                nvarchar( 30)
	)
as
  begin

	declare @ID        uniqueidentifier;
	declare @COLUMN_ID uniqueidentifier;
	
	-- BEGIN Oracle Exception
		select @ID = ID
		  from GRIDVIEWS_COLUMNS
		 where GRID_NAME    = @GRID_NAME
		   and COLUMN_INDEX = @COLUMN_INDEX
		   and DELETED      = 0            
		   and DEFAULT_VIEW = 0            ;
	-- END Oracle Exception
	if not exists(select * from GRIDVIEWS_COLUMNS where ID = @ID) begin -- then
		-- GRID_NAME, COLUMN_INDEX, COLUMN_TYPE, HEADER_TEXT, DATA_FIELD, SORT_EXPRESSION, ITEMSTYLE_WIDTH
		exec dbo.spGRIDVIEWS_COLUMNS_Update
			  @COLUMN_ID out
			, null
			, @GRID_NAME
			, @COLUMN_INDEX
			, N'BoundColumn'
			, @HEADER_TEXT
			, @SORT_EXPRESSION
			, @ITEMSTYLE_WIDTH
			, null
			, null
			, null
			, null
			, @DATA_FIELD
			, null
			, null
			, null
			, null
			, null             -- LIST_NAME
			, null             -- URL_MODULE        
			, null             -- URL_ASSIGNED_FIELD
			, null             -- MODULE_TYPE       
			, @PARENT_FIELD
			;
	end -- if;
  end
GO
 
Grant Execute on dbo.spGRIDVIEWS_COLUMNS_InsDependList to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spGRIDVIEWS_COLUMNS_InsField' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spGRIDVIEWS_COLUMNS_InsField;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/12/2010 Paul.  Add default parameter MODULE_TYPE to ease migration to EffiProz. 
-- 10/09/2010 Paul.  Add PARENT_FIELD so that we can establish dependent listboxes. 
Create Procedure dbo.spGRIDVIEWS_COLUMNS_InsField
	( @GRID_NAME                   nvarchar( 50)
	, @COLUMN_INDEX                int
	, @HEADER_TEXT                 nvarchar(150)
	, @DATA_FIELD                  nvarchar( 50)
	, @SORT_EXPRESSION             nvarchar( 50)
	, @ITEMSTYLE_WIDTH             nvarchar( 10)
	)
as
  begin

	declare @ID uniqueidentifier;
	
	-- BEGIN Oracle Exception
		select @ID = ID
		  from GRIDVIEWS_COLUMNS
		 where GRID_NAME    = @GRID_NAME 
		   and DATA_FIELD   = @DATA_FIELD
		   and DELETED      = 0          
		   and DEFAULT_VIEW = 0          ;
	-- END Oracle Exception
	if not exists(select * from GRIDVIEWS_COLUMNS where ID = @ID) begin -- then
		set @ID = null;
		-- GRID_NAME, COLUMN_INDEX, COLUMN_TYPE, HEADER_TEXT, DATA_FIELD, SORT_EXPRESSION, ITEMSTYLE_WIDTH
		exec dbo.spGRIDVIEWS_COLUMNS_Update
			  @ID out
			, null
			, @GRID_NAME
			, @COLUMN_INDEX
			, 'BoundColumn'
			, @HEADER_TEXT
			, @SORT_EXPRESSION
			, @ITEMSTYLE_WIDTH
			, null
			, null
			, null
			, null
			, @DATA_FIELD
			, null             -- DATA_FORMAT       
			, null             -- URL_FIELD         
			, null             -- URL_FORMAT        
			, null             -- URL_TARGET        
			, null             -- LIST_NAME         
			, null             -- URL_MODULE        
			, null             -- URL_ASSIGNED_FIELD
			, null             -- MODULE_TYPE       
			, null             -- PARENT_FIELD      
			;
	end -- if;
  end
GO
 
Grant Execute on dbo.spGRIDVIEWS_COLUMNS_InsField to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spGRIDVIEWS_COLUMNS_InsHidden' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spGRIDVIEWS_COLUMNS_InsHidden;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spGRIDVIEWS_COLUMNS_InsHidden
	( @GRID_NAME                   nvarchar( 50)
	, @DATA_FIELD                  nvarchar( 50)
	)
as
  begin
	declare @ID                uniqueidentifier;
	declare @COLUMN_INDEX      int;
	
	-- 08/20/2016 Paul.  We only need one record for the hidden field, so the index is not important. 
	-- BEGIN Oracle Exception
		select @ID = ID
		  from GRIDVIEWS_COLUMNS
		 where GRID_NAME    = @GRID_NAME
		   and DATA_FIELD   = @DATA_FIELD
		   and DELETED      = 0            
		   and DEFAULT_VIEW = 0            ;
	-- END Oracle Exception
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		-- BEGIN Oracle Exception
			select @COLUMN_INDEX = isnull(max(COLUMN_INDEX), 0) + 1
			  from GRIDVIEWS_COLUMNS
			 where GRID_NAME    = @GRID_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception

		exec dbo.spGRIDVIEWS_COLUMNS_Update
			  @ID out
			, null               -- MODIFIED_USER_ID
			, @GRID_NAME         -- GRID_NAME
			, @COLUMN_INDEX      -- COLUMN_INDEX
			, N'TemplateColumn'  -- COLUMN_TYPE
			, null               -- HEADER_TEXT
			, null               -- SORT_EXPRESSION
			, null               -- ITEMSTYLE_WIDTH
			, null               -- ITEMSTYLE_CSSCLASS
			, null               -- ITEMSTYLE_HORIZONTAL_ALIGN
			, null               -- ITEMSTYLE_VERTICAL_ALIGN
			, null               -- ITEMSTYLE_WRAP    
			, @DATA_FIELD        -- DATA_FIELD        
			, N'Hidden'          -- DATA_FORMAT       
			, null               -- URL_FIELD         
			, null               -- URL_FORMAT        
			, null               -- URL_TARGET        
			, null               -- LIST_NAME         
			, null               -- URL_MODULE        
			, null               -- URL_ASSIGNED_FIELD
			, null               -- MODULE_TYPE       
			, null               -- PARENT_FIELD      
			;
	end -- if;
  end
GO

Grant Execute on dbo.spGRIDVIEWS_COLUMNS_InsHidden to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spGRIDVIEWS_COLUMNS_InsHover' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spGRIDVIEWS_COLUMNS_InsHover;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/12/2010 Paul.  Add default parameter MODULE_TYPE to ease migration to EffiProz. 
-- 10/09/2010 Paul.  Add PARENT_FIELD so that we can establish dependent listboxes. 
-- 10/30/2013 Paul.  Increase size of URL_TARGET. 
Create Procedure dbo.spGRIDVIEWS_COLUMNS_InsHover
	( @GRID_NAME                   nvarchar( 50)
	, @COLUMN_INDEX                int
	, @HEADER_TEXT                 nvarchar(150)
	, @DATA_FIELD                  nvarchar( 50)
	, @ITEMSTYLE_WIDTH             nvarchar( 10)
	, @URL_FIELD                   nvarchar(max)
	, @URL_FORMAT                  nvarchar(max)
	, @URL_TARGET                  nvarchar( 60)
	)
as
  begin
	declare @ID        uniqueidentifier;
	declare @COLUMN_ID uniqueidentifier;
	
	-- BEGIN Oracle Exception
		select @ID = ID
		  from GRIDVIEWS_COLUMNS
		 where GRID_NAME    = @GRID_NAME
		   and COLUMN_INDEX = @COLUMN_INDEX
		   and DELETED      = 0            
		   and DEFAULT_VIEW = 0            ;
	-- END Oracle Exception
	if not exists(select * from GRIDVIEWS_COLUMNS where ID = @ID) begin -- then
		-- GRID_NAME, COLUMN_INDEX, COLUMN_TYPE, HEADER_TEXT, DATA_FIELD, SORT_EXPRESSION, ITEMSTYLE_WIDTH, ITEMSTYLE-CSSCLASS, URL_FIELD, URL_FORMAT, URL_MODULE, URL_ASSIGNED_FIELD
		exec dbo.spGRIDVIEWS_COLUMNS_Update
			  @COLUMN_ID out
			, null
			, @GRID_NAME
			, @COLUMN_INDEX
			, N'TemplateColumn'
			, @HEADER_TEXT
			, null
			, @ITEMSTYLE_WIDTH
			, null
			, null
			, null
			, null
			, @DATA_FIELD
			, N'Hover'
			, @URL_FIELD
			, @URL_FORMAT
			, @URL_TARGET
			, null             -- LIST_NAME         
			, null             -- URL_MODULE        
			, null             -- URL_ASSIGNED_FIELD
			, null             -- MODULE_TYPE       
			, null             -- PARENT_FIELD      
			;
	end -- if;
  end
GO
 
Grant Execute on dbo.spGRIDVIEWS_COLUMNS_InsHover to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spGRIDVIEWS_COLUMNS_InsHyperLink' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spGRIDVIEWS_COLUMNS_InsHyperLink;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/28/2006 Paul.  Added URL_MODULE.
-- 05/02/2006 Paul.  Add URL_ASSIGNED_FIELD to support ACL. 
-- 07/24/2006 Paul.  Increase the HEADER_TEXT to 150 to allow a fully-qualified (NAME+MODULE_NAME+LIST_NAME) TERMINOLOGY name. 
-- 11/24/2006 Paul.  COLUMN_TYPE should be of national character type. 
-- 09/12/2010 Paul.  Add default parameter MODULE_TYPE to ease migration to EffiProz. 
-- 10/09/2010 Paul.  Add PARENT_FIELD so that we can establish dependent listboxes. 
-- 05/02/2013 Paul.  Allow a field to be added to the end using an index of -1. 
-- 10/30/2013 Paul.  Increase size of URL_TARGET. 
Create Procedure dbo.spGRIDVIEWS_COLUMNS_InsHyperLink
	( @GRID_NAME                   nvarchar( 50)
	, @COLUMN_INDEX                int
	, @HEADER_TEXT                 nvarchar(150)
	, @DATA_FIELD                  nvarchar( 50)
	, @SORT_EXPRESSION             nvarchar( 50)
	, @ITEMSTYLE_WIDTH             nvarchar( 10)
	, @ITEMSTYLE_CSSCLASS          nvarchar( 50)
	, @URL_FIELD                   nvarchar(max)
	, @URL_FORMAT                  nvarchar(max)
	, @URL_TARGET                  nvarchar( 60)
	, @URL_MODULE                  nvarchar( 25)
	, @URL_ASSIGNED_FIELD          nvarchar( 30)
	)
as
  begin
	declare @ID        uniqueidentifier;
	declare @COLUMN_ID uniqueidentifier;
	
	-- 05/02/2013 Paul.  Allow a field to be added to the end using an index of -1. 
	declare @TEMP_COLUMN_INDEX int;	
	set @TEMP_COLUMN_INDEX = @COLUMN_INDEX;
	if @COLUMN_INDEX is null or @COLUMN_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_COLUMN_INDEX = isnull(max(COLUMN_INDEX), 0) + 1
			  from GRIDVIEWS_COLUMNS
			 where GRID_NAME    = @GRID_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- BEGIN Oracle Exception
			select @ID = ID
			  from GRIDVIEWS_COLUMNS
			 where GRID_NAME    = @GRID_NAME
			   and DATA_FIELD   = @DATA_FIELD
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from GRIDVIEWS_COLUMNS
			 where GRID_NAME    = @GRID_NAME
			   and COLUMN_INDEX = @COLUMN_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if not exists(select * from GRIDVIEWS_COLUMNS where ID = @ID) begin -- then
		-- GRID_NAME, COLUMN_INDEX, COLUMN_TYPE, HEADER_TEXT, DATA_FIELD, SORT_EXPRESSION, ITEMSTYLE_WIDTH, ITEMSTYLE-CSSCLASS, URL_FIELD, URL_FORMAT, URL_MODULE, URL_ASSIGNED_FIELD
		exec dbo.spGRIDVIEWS_COLUMNS_Update
			  @COLUMN_ID out
			, null
			, @GRID_NAME
			, @TEMP_COLUMN_INDEX
			, N'TemplateColumn'
			, @HEADER_TEXT
			, @SORT_EXPRESSION
			, @ITEMSTYLE_WIDTH
			, @ITEMSTYLE_CSSCLASS
			, null
			, null
			, null
			, @DATA_FIELD
			, N'HyperLink'
			, @URL_FIELD
			, @URL_FORMAT
			, @URL_TARGET
			, null
			, @URL_MODULE
			, @URL_ASSIGNED_FIELD
			, null             -- MODULE_TYPE       
			, null             -- PARENT_FIELD      
			;
	end -- if;
  end
GO
 
Grant Execute on dbo.spGRIDVIEWS_COLUMNS_InsHyperLink to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spGRIDVIEWS_COLUMNS_InsImageButton' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spGRIDVIEWS_COLUMNS_InsImageButton;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spGRIDVIEWS_COLUMNS_InsImageButton
	( @GRID_NAME                   nvarchar( 50)
	, @COLUMN_INDEX                int
	, @HEADER_TEXT                 nvarchar(150)
	, @ITEMSTYLE_WIDTH             nvarchar( 10)
	, @URL_FIELD                   nvarchar(max)
	, @URL_FORMAT                  nvarchar(max)
	, @URL_TARGET                  nvarchar( 60)
	)
as
  begin
	declare @ID        uniqueidentifier;
	declare @COLUMN_ID uniqueidentifier;
	
	declare @TEMP_COLUMN_INDEX int;	
	set @TEMP_COLUMN_INDEX = @COLUMN_INDEX;
	if @COLUMN_INDEX is null or @COLUMN_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_COLUMN_INDEX = isnull(max(COLUMN_INDEX), 0) + 1
			  from GRIDVIEWS_COLUMNS
			 where GRID_NAME    = @GRID_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- BEGIN Oracle Exception
			select @ID = ID
			  from GRIDVIEWS_COLUMNS
			 where GRID_NAME    = @GRID_NAME
			   and URL_FORMAT   = @URL_FORMAT
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from GRIDVIEWS_COLUMNS
			 where GRID_NAME    = @GRID_NAME
			   and COLUMN_INDEX = @COLUMN_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if not exists(select * from GRIDVIEWS_COLUMNS where ID = @ID) begin -- then
		-- GRID_NAME, COLUMN_INDEX, COLUMN_TYPE, HEADER_TEXT, DATA_FIELD, SORT_EXPRESSION, ITEMSTYLE_WIDTH, ITEMSTYLE-CSSCLASS, URL_FIELD, URL_FORMAT, URL_MODULE, URL_ASSIGNED_FIELD
		exec dbo.spGRIDVIEWS_COLUMNS_Update
			  @COLUMN_ID out
			, null
			, @GRID_NAME
			, @TEMP_COLUMN_INDEX
			, N'TemplateColumn'
			, @HEADER_TEXT
			, null
			, @ITEMSTYLE_WIDTH
			, N'listViewTdToolsS1'  -- ITEMSTYLE_CSSCLASS
			, null
			, null
			, null
			, null             -- DATA_FIELD
			, N'ImageButton'
			, @URL_FIELD
			, @URL_FORMAT
			, @URL_TARGET
			, null             -- LIST_NAME         
			, null             -- URL_MODULE        
			, null             -- URL_ASSIGNED_FIELD
			, null             -- MODULE_TYPE       
			, null             -- PARENT_FIELD      
			;
	end -- if;
  end
GO
 
Grant Execute on dbo.spGRIDVIEWS_COLUMNS_InsImageButton to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spGRIDVIEWS_COLUMNS_InsJavaImage' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spGRIDVIEWS_COLUMNS_InsJavaImage;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spGRIDVIEWS_COLUMNS_InsJavaImage
	( @GRID_NAME                   nvarchar( 50)
	, @COLUMN_INDEX                int
	, @HEADER_TEXT                 nvarchar(150)
	, @ITEMSTYLE_WIDTH             nvarchar( 10)
	, @URL_FIELD                   nvarchar(max)
	, @URL_FORMAT                  nvarchar(max)
	, @URL_TARGET                  nvarchar( 60)
	)
as
  begin
	declare @ID        uniqueidentifier;
	declare @COLUMN_ID uniqueidentifier;
	
	declare @TEMP_COLUMN_INDEX int;	
	set @TEMP_COLUMN_INDEX = @COLUMN_INDEX;
	if @COLUMN_INDEX is null or @COLUMN_INDEX = -1 begin -- then
		-- BEGIN Oracle Exception
			select @TEMP_COLUMN_INDEX = isnull(max(COLUMN_INDEX), 0) + 1
			  from GRIDVIEWS_COLUMNS
			 where GRID_NAME    = @GRID_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- BEGIN Oracle Exception
			select @ID = ID
			  from GRIDVIEWS_COLUMNS
			 where GRID_NAME    = @GRID_NAME
			   and URL_FORMAT   = @URL_FORMAT
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end else begin
		-- BEGIN Oracle Exception
			select @ID = ID
			  from GRIDVIEWS_COLUMNS
			 where GRID_NAME    = @GRID_NAME
			   and COLUMN_INDEX = @COLUMN_INDEX
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
	end -- if;
	if not exists(select * from GRIDVIEWS_COLUMNS where ID = @ID) begin -- then
		-- GRID_NAME, COLUMN_INDEX, COLUMN_TYPE, HEADER_TEXT, DATA_FIELD, SORT_EXPRESSION, ITEMSTYLE_WIDTH, ITEMSTYLE-CSSCLASS, URL_FIELD, URL_FORMAT, URL_MODULE, URL_ASSIGNED_FIELD
		exec dbo.spGRIDVIEWS_COLUMNS_Update
			  @COLUMN_ID out
			, null
			, @GRID_NAME
			, @TEMP_COLUMN_INDEX
			, N'TemplateColumn'
			, @HEADER_TEXT
			, null
			, @ITEMSTYLE_WIDTH
			, null
			, null
			, null
			, null
			, null             -- DATA_FIELD
			, N'JavaImage'
			, @URL_FIELD
			, @URL_FORMAT
			, @URL_TARGET
			, null             -- LIST_NAME         
			, null             -- URL_MODULE        
			, null             -- URL_ASSIGNED_FIELD
			, null             -- MODULE_TYPE       
			, null             -- PARENT_FIELD      
			;
	end -- if;
  end
GO
 
Grant Execute on dbo.spGRIDVIEWS_COLUMNS_InsJavaImage to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spGRIDVIEWS_COLUMNS_InsJavaScript' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spGRIDVIEWS_COLUMNS_InsJavaScript;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/02/2010 Paul.  Increase the size of the URL_FIELD and URL_FORMAT so that we can add a javascript info column. 
-- 09/12/2010 Paul.  Add default parameter MODULE_TYPE to ease migration to EffiProz. 
-- 10/09/2010 Paul.  Add PARENT_FIELD so that we can establish dependent listboxes. 
-- 10/30/2013 Paul.  Increase size of URL_TARGET. 
Create Procedure dbo.spGRIDVIEWS_COLUMNS_InsJavaScript
	( @GRID_NAME                   nvarchar( 50)
	, @COLUMN_INDEX                int
	, @HEADER_TEXT                 nvarchar(150)
	, @DATA_FIELD                  nvarchar( 50)
	, @ITEMSTYLE_WIDTH             nvarchar( 10)
	, @URL_FIELD                   nvarchar(max)
	, @URL_FORMAT                  nvarchar(max)
	, @URL_TARGET                  nvarchar( 60)
	)
as
  begin
	declare @ID        uniqueidentifier;
	declare @COLUMN_ID uniqueidentifier;
	
	-- BEGIN Oracle Exception
		select @ID = ID
		  from GRIDVIEWS_COLUMNS
		 where GRID_NAME    = @GRID_NAME
		   and COLUMN_INDEX = @COLUMN_INDEX
		   and DELETED      = 0            
		   and DEFAULT_VIEW = 0            ;
	-- END Oracle Exception
	if not exists(select * from GRIDVIEWS_COLUMNS where ID = @ID) begin -- then
		-- GRID_NAME, COLUMN_INDEX, COLUMN_TYPE, HEADER_TEXT, DATA_FIELD, SORT_EXPRESSION, ITEMSTYLE_WIDTH, ITEMSTYLE-CSSCLASS, URL_FIELD, URL_FORMAT, URL_MODULE, URL_ASSIGNED_FIELD
		exec dbo.spGRIDVIEWS_COLUMNS_Update
			  @COLUMN_ID out
			, null
			, @GRID_NAME
			, @COLUMN_INDEX
			, N'TemplateColumn'
			, @HEADER_TEXT
			, null
			, @ITEMSTYLE_WIDTH
			, null
			, null
			, null
			, null
			, @DATA_FIELD
			, N'JavaScript'
			, @URL_FIELD
			, @URL_FORMAT
			, @URL_TARGET
			, null             -- LIST_NAME         
			, null             -- URL_MODULE        
			, null             -- URL_ASSIGNED_FIELD
			, null             -- MODULE_TYPE       
			, null             -- PARENT_FIELD      
			;
	end -- if;
  end
GO
 
Grant Execute on dbo.spGRIDVIEWS_COLUMNS_InsJavaScript to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spGRIDVIEWS_COLUMNS_InsModule' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spGRIDVIEWS_COLUMNS_InsModule;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/02/2010 Paul.  Inserting a module should be very similar to inserting a HyperLink. 
-- 10/09/2010 Paul.  Add PARENT_FIELD so that we can establish dependent listboxes. 
-- 10/30/2013 Paul.  Increase size of URL_TARGET. 
Create Procedure dbo.spGRIDVIEWS_COLUMNS_InsModule
	( @GRID_NAME                   nvarchar( 50)
	, @COLUMN_INDEX                int
	, @HEADER_TEXT                 nvarchar(150)
	, @DATA_FIELD                  nvarchar( 50)
	, @SORT_EXPRESSION             nvarchar( 50)
	, @ITEMSTYLE_WIDTH             nvarchar( 10)
	, @ITEMSTYLE_CSSCLASS          nvarchar( 50)
	, @URL_FIELD                   nvarchar(max)
	, @URL_FORMAT                  nvarchar(max)
	, @URL_TARGET                  nvarchar( 60)
	, @URL_MODULE                  nvarchar( 25)
	, @URL_ASSIGNED_FIELD          nvarchar( 30)
	)
as
  begin

	declare @ID        uniqueidentifier;
	declare @COLUMN_ID uniqueidentifier;
	
	-- BEGIN Oracle Exception
		select @ID = ID
		  from GRIDVIEWS_COLUMNS
		 where GRID_NAME    = @GRID_NAME
		   and COLUMN_INDEX = @COLUMN_INDEX
		   and DELETED      = 0            
		   and DEFAULT_VIEW = 0            ;
	-- END Oracle Exception
	if not exists(select * from GRIDVIEWS_COLUMNS where ID = @ID) begin -- then
		-- GRID_NAME, COLUMN_INDEX, COLUMN_TYPE, HEADER_TEXT, DATA_FIELD, SORT_EXPRESSION, ITEMSTYLE_WIDTH
		exec dbo.spGRIDVIEWS_COLUMNS_Update
			  @COLUMN_ID out
			, null
			, @GRID_NAME
			, @COLUMN_INDEX
			, N'TemplateColumn'
			, @HEADER_TEXT
			, @SORT_EXPRESSION
			, @ITEMSTYLE_WIDTH
			, @ITEMSTYLE_CSSCLASS
			, null
			, null
			, null
			, @DATA_FIELD
			, N'HyperLink'
			, @URL_FIELD
			, @URL_FORMAT
			, @URL_TARGET
			, null
			, @URL_MODULE
			, @URL_ASSIGNED_FIELD
			, @URL_MODULE
			, null             -- PARENT_FIELD      
			;
	end -- if;
  end
GO
 
Grant Execute on dbo.spGRIDVIEWS_COLUMNS_InsModule to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spGRIDVIEWS_COLUMNS_InsTagSelect' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spGRIDVIEWS_COLUMNS_InsTagSelect;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spGRIDVIEWS_COLUMNS_InsTagSelect
	( @GRID_NAME                   nvarchar( 50)
	, @COLUMN_INDEX                int
	, @ITEMSTYLE_WIDTH             nvarchar( 10)
	)
as
  begin
	declare @ID                uniqueidentifier;
	declare @HEADER_TEXT       nvarchar(150);
	declare @DATA_FIELD        nvarchar( 50);
	declare @SORT_EXPRESSION   nvarchar( 50);
	
	set @HEADER_TEXT     = N'.LBL_LIST_TAG_SET_NAME';
	set @DATA_FIELD      = N'TAG_SET_NAME';
	set @SORT_EXPRESSION = N'TAG_SET_NAME';

	-- 08/20/2016 Paul.  Insert only means that the grid and index is unique. 
	-- BEGIN Oracle Exception
		select @ID = ID
		  from GRIDVIEWS_COLUMNS
		 where GRID_NAME    = @GRID_NAME
		   and COLUMN_INDEX = @COLUMN_INDEX
		   and DELETED      = 0            
		   and DEFAULT_VIEW = 0            ;
	-- END Oracle Exception
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		exec dbo.spGRIDVIEWS_COLUMNS_Update
			  @ID out
			, null               -- MODIFIED_USER_ID
			, @GRID_NAME         -- GRID_NAME
			, @COLUMN_INDEX      -- COLUMN_INDEX
			, N'TemplateColumn'  -- COLUMN_TYPE
			, @HEADER_TEXT       -- HEADER_TEXT
			, @SORT_EXPRESSION   -- SORT_EXPRESSION
			, @ITEMSTYLE_WIDTH   -- ITEMSTYLE_WIDTH
			, null               -- ITEMSTYLE_CSSCLASS
			, null               -- ITEMSTYLE_HORIZONTAL_ALIGN
			, null               -- ITEMSTYLE_VERTICAL_ALIGN
			, null               -- ITEMSTYLE_WRAP    
			, @DATA_FIELD        -- DATA_FIELD        
			, N'Tags'            -- DATA_FORMAT       
			, null               -- URL_FIELD         
			, null               -- URL_FORMAT        
			, null               -- URL_TARGET        
			, null               -- LIST_NAME         
			, null               -- URL_MODULE        
			, null               -- URL_ASSIGNED_FIELD
			, null               -- MODULE_TYPE       
			, null               -- PARENT_FIELD      
			;
	end -- if;
  end
GO

Grant Execute on dbo.spGRIDVIEWS_COLUMNS_InsTagSelect to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spMODULES_Disable' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spMODULES_Disable;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spMODULES_Disable
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	if exists(select * from MODULES where ID = @ID and DELETED = 0) begin -- then
		-- BEGIN Oracle Exception
			update MODULES
			   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
			     , DATE_MODIFIED     =  getdate()        
			     , DATE_MODIFIED_UTC =  getutcdate()     
			     , MODULE_ENABLED    = 0
			 where ID                = @ID
			   and DELETED           = 0;
		-- END Oracle Exception
		-- 08/27/2007 Paul.  When disabling, hide it as a tab. 
		exec dbo.spMODULES_TAB_Hide @ID, @MODIFIED_USER_ID;
	end -- if;
  end
GO

Grant Execute on dbo.spMODULES_Disable to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spMODULES_Enable' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spMODULES_Enable;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spMODULES_Enable
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	if exists(select * from MODULES where ID = @ID and DELETED = 0) begin -- then
		-- BEGIN Oracle Exception
			update MODULES
			   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
			     , DATE_MODIFIED     =  getdate()        
			     , DATE_MODIFIED_UTC =  getutcdate()     
			     , MODULE_ENABLED    = 1
			 where ID                = @ID
			   and DELETED           = 0;
		-- END Oracle Exception
		-- 08/27/2007 Paul.  When enabling, require a separate action to show the tab. 
	end -- if;
  end
GO

Grant Execute on dbo.spMODULES_Enable to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spMODULES_TAB_Rename' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spMODULES_TAB_Rename;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spMODULES_TAB_Rename
	( @ID                uniqueidentifier
	, @MODIFIED_USER_ID  uniqueidentifier
	, @NAME              nvarchar(50)
	, @LANG              nvarchar(10)
	, @DISPLAY_NAME      nvarchar(2000)
	)
as
  begin
	set nocount on
	
	declare @LIST_NAME   nvarchar(50);
	set @LIST_NAME = N'moduleList';
	exec dbo.spTERMINOLOGY_LIST_Insert @ID out, @MODIFIED_USER_ID, @NAME, @LANG, null, @LIST_NAME, 1, @DISPLAY_NAME;
  end
GO

Grant Execute on dbo.spMODULES_TAB_Rename to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spMODULES_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spMODULES_Update;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/24/2006 Paul.  Add IS_ADMIN to simplify ACL management. 
-- 04/24/2006 Paul.  When a module is inserted, also make sure to add the ACL_ACTIONS. 
-- 05/02/2006 Paul.  Add TABLE_NAME as direct table queries are required by SOAP and we need a mapping. 
-- 05/20/2006 Paul.  Add REPORT_ENABLED if the module can be the basis of a report. ACL rules will still apply. 
-- 09/08/2009 Paul.  Custom Paging can be enabled /disabled per module. 
-- 12/02/2009 Paul.  Add the ability to disable Mass Updates. 
-- 01/13/2010 Paul.  Allow default search to be disabled. 
-- 04/01/2010 Paul.  Add Exchange Sync flag. 
-- 04/04/2010 Paul.  Add Exchange Folders flag. 
-- 04/05/2010 Paul.  Add Exchange Create Parent flag. Need to be able to disable Account creation. 
-- 06/18/2011 Paul.  REST_ENABLED provides a way to enable/disable a module in the REST API. 
-- 03/14/2014 Paul.  DUPLICATE_CHECHING_ENABLED enables duplicate checking. 
-- 11/01/2017 Paul.  Use a module-based flag so that Record Level Security is only enabled when needed. 
Create Procedure dbo.spMODULES_Update
	( @ID                uniqueidentifier output
	, @MODIFIED_USER_ID  uniqueidentifier
	, @MODULE_NAME       nvarchar(25)
	, @DISPLAY_NAME      nvarchar(50)
	, @RELATIVE_PATH     nvarchar(50)
	, @MODULE_ENABLED    bit
	, @TAB_ENABLED       bit
	, @MOBILE_ENABLED    bit
	, @TAB_ORDER         int
	, @PORTAL_ENABLED    bit
	, @CUSTOM_ENABLED    bit
	, @REPORT_ENABLED    bit
	, @IMPORT_ENABLED    bit
	, @SYNC_ENABLED      bit
	, @IS_ADMIN          bit
	, @CUSTOM_PAGING     bit
	, @TABLE_NAME        nvarchar(30)
	, @MASS_UPDATE_ENABLED           bit = null
	, @DEFAULT_SEARCH_ENABLED        bit = null
	, @EXCHANGE_SYNC                 bit = null
	, @EXCHANGE_FOLDERS              bit = null
	, @EXCHANGE_CREATE_PARENT        bit = null
	, @REST_ENABLED                  bit = null
	, @DUPLICATE_CHECHING_ENABLED    bit = null
	, @RECORD_LEVEL_SECURITY_ENABLED bit = null
	)
as
  begin

	-- BEGIN Oracle Exception
		select @ID = ID
		  from MODULES
		 where MODULE_NAME = @MODULE_NAME
		   and DELETED      = 0          ;
	-- END Oracle Exception
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into MODULES
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, MODULE_NAME      
			, DISPLAY_NAME     
			, RELATIVE_PATH    
			, MODULE_ENABLED   
			, TAB_ENABLED      
			, MOBILE_ENABLED   
			, TAB_ORDER        
			, PORTAL_ENABLED   
			, CUSTOM_ENABLED   
			, REPORT_ENABLED   
			, IMPORT_ENABLED   
			, SYNC_ENABLED     
			, REST_ENABLED     
			, IS_ADMIN         
			, CUSTOM_PAGING    
			, TABLE_NAME       
			, MASS_UPDATE_ENABLED
			, DEFAULT_SEARCH_ENABLED
			, EXCHANGE_SYNC    
			, EXCHANGE_FOLDERS 
			, EXCHANGE_CREATE_PARENT
			, DUPLICATE_CHECHING_ENABLED
			, RECORD_LEVEL_SECURITY_ENABLED
			)
		values 
			( @ID               
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODULE_NAME      
			, @DISPLAY_NAME     
			, @RELATIVE_PATH    
			, @MODULE_ENABLED   
			, @TAB_ENABLED      
			, @MOBILE_ENABLED   
			, @TAB_ORDER        
			, @PORTAL_ENABLED   
			, @CUSTOM_ENABLED   
			, @REPORT_ENABLED   
			, @IMPORT_ENABLED   
			, @SYNC_ENABLED     
			, @REST_ENABLED     
			, @IS_ADMIN         
			, @CUSTOM_PAGING    
			, @TABLE_NAME       
			, @MASS_UPDATE_ENABLED
			, @DEFAULT_SEARCH_ENABLED
			, @EXCHANGE_SYNC    
			, @EXCHANGE_FOLDERS 
			, @EXCHANGE_CREATE_PARENT
			, @DUPLICATE_CHECHING_ENABLED
			, @RECORD_LEVEL_SECURITY_ENABLED
			);
		exec dbo.spACL_ACTIONS_InsertOnly 'admin' , @MODULE_NAME, 'module',  1;
		exec dbo.spACL_ACTIONS_InsertOnly 'access', @MODULE_NAME, 'module', 89;
		exec dbo.spACL_ACTIONS_InsertOnly 'view'  , @MODULE_NAME, 'module', 90;
		exec dbo.spACL_ACTIONS_InsertOnly 'list'  , @MODULE_NAME, 'module', 90;
		exec dbo.spACL_ACTIONS_InsertOnly 'edit'  , @MODULE_NAME, 'module', 90;
		exec dbo.spACL_ACTIONS_InsertOnly 'delete', @MODULE_NAME, 'module', 90;
		exec dbo.spACL_ACTIONS_InsertOnly 'import', @MODULE_NAME, 'module', 90;
		exec dbo.spACL_ACTIONS_InsertOnly 'export', @MODULE_NAME, 'module', 90;
	end else begin
		update MODULES
		   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
		     , DATE_MODIFIED     =  getdate()        
		     , DATE_MODIFIED_UTC =  getutcdate()     
		     , DISPLAY_NAME      = @DISPLAY_NAME     
		     , RELATIVE_PATH     = @RELATIVE_PATH    
		     , MODULE_ENABLED    = @MODULE_ENABLED   
		     , TAB_ENABLED       = @TAB_ENABLED      
		     , MOBILE_ENABLED    = @MOBILE_ENABLED   
		     , TAB_ORDER         = @TAB_ORDER        
		     , PORTAL_ENABLED    = @PORTAL_ENABLED   
		     , CUSTOM_ENABLED    = @CUSTOM_ENABLED   
		     , REPORT_ENABLED    = @REPORT_ENABLED   
		     , IMPORT_ENABLED    = @IMPORT_ENABLED   
		     , SYNC_ENABLED      = @SYNC_ENABLED     
		     , REST_ENABLED      = @REST_ENABLED     
		     , IS_ADMIN          = @IS_ADMIN         
		     , CUSTOM_PAGING     = @CUSTOM_PAGING    
		     , TABLE_NAME        = @TABLE_NAME       
		     , MASS_UPDATE_ENABLED           = @MASS_UPDATE_ENABLED
		     , DEFAULT_SEARCH_ENABLED        = isnull(@DEFAULT_SEARCH_ENABLED       , 1)
		     , EXCHANGE_SYNC                 = isnull(@EXCHANGE_SYNC                , 0)
		     , EXCHANGE_FOLDERS              = isnull(@EXCHANGE_FOLDERS             , 0)
		     , EXCHANGE_CREATE_PARENT        = isnull(@EXCHANGE_CREATE_PARENT       , 0)
		     , DUPLICATE_CHECHING_ENABLED    = isnull(@DUPLICATE_CHECHING_ENABLED   , 0)
		     , RECORD_LEVEL_SECURITY_ENABLED = isnull(@RECORD_LEVEL_SECURITY_ENABLED, 0)
		 where ID                            = @ID;
	end -- if;

	-- 09/09/2009 Paul.  Correct any ordering problems. 
	exec dbo.spMODULES_TAB_ORDER_Reorder @MODIFIED_USER_ID;
  end
GO
 
Grant Execute on dbo.spMODULES_Update to public;
GO
 

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spMODULES_UpdateRelativePath' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spMODULES_UpdateRelativePath;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spMODULES_UpdateRelativePath
	( @MODULE_NAME      nvarchar(25)
	, @MODIFIED_USER_ID uniqueidentifier
	, @RELATIVE_PATH    nvarchar(50)
	)
as
  begin
	set nocount on
	
	-- BEGIN Oracle Exception
		update MODULES
		   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
		     , DATE_MODIFIED     =  getdate()        
		     , DATE_MODIFIED_UTC =  getutcdate()     
		     , RELATIVE_PATH     = @RELATIVE_PATH
		 where MODULE_NAME       = @MODULE_NAME
		   and DELETED           = 0;
	-- END Oracle Exception
  end
GO

Grant Execute on dbo.spMODULES_UpdateRelativePath to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spOAUTHKEYS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spOAUTHKEYS_Delete;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spOAUTHKEYS_Delete
	( @MODIFIED_USER_ID uniqueidentifier
	, @ASSIGNED_USER_ID uniqueidentifier
	, @NAME             nvarchar(25)
	)
as
  begin
	set nocount on
	
	-- 04/08/2012 Paul.  When the OAuth key is deleted, the access tokens become invalid, so delete them. 
	exec dbo.spOAUTH_TOKENS_Delete @MODIFIED_USER_ID, @ASSIGNED_USER_ID, @NAME;
	
	-- BEGIN Oracle Exception
		update OAUTHKEYS
		   set DELETED          = 1
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where ASSIGNED_USER_ID = @ASSIGNED_USER_ID
		   and NAME             = @NAME
		   and DELETED          = 0;
	-- END Oracle Exception
  end
GO

Grant Execute on dbo.spOAUTHKEYS_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spOAUTH_TOKENS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spOAUTH_TOKENS_Update;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/13/2012 Paul.  Facebook has a 111 character access token. 
-- 09/05/2015 Paul.  Google now uses OAuth 2.0. 
-- 01/19/2017 Paul.  The Microsoft OAuth token can be large, but less than 2000 bytes. 
-- 12/02/2020 Paul.  The Microsoft OAuth token is now about 2400, so increase to 4000 characters.
Create Procedure dbo.spOAUTH_TOKENS_Update
	( @MODIFIED_USER_ID   uniqueidentifier
	, @ASSIGNED_USER_ID   uniqueidentifier
	, @NAME               nvarchar(50)
	, @TOKEN              nvarchar(4000)
	, @SECRET             nvarchar(50)
	, @TOKEN_EXPIRES_AT   datetime = null
	, @REFRESH_TOKEN      nvarchar(4000) = null
	)
as
  begin
	set nocount on

	declare @ID uniqueidentifier;
	
	exec dbo.spOAUTH_TOKENS_Delete @MODIFIED_USER_ID, @ASSIGNED_USER_ID, @NAME;
	
	set @ID = newid();
	insert into OAUTH_TOKENS
		( ID                
		, CREATED_BY        
		, DATE_ENTERED      
		, MODIFIED_USER_ID  
		, DATE_MODIFIED     
		, DATE_MODIFIED_UTC 
		, ASSIGNED_USER_ID  
		, NAME              
		, TOKEN             
		, SECRET            
		, TOKEN_EXPIRES_AT  
		, REFRESH_TOKEN     
		)
	values 	( @ID                
		, @MODIFIED_USER_ID  
		,  getdate()         
		, @MODIFIED_USER_ID  
		,  getdate()         
		,  getutcdate()      
		, @ASSIGNED_USER_ID  
		, @NAME              
		, @TOKEN             
		, @SECRET            
		, @TOKEN_EXPIRES_AT  
		, @REFRESH_TOKEN     
		);
  end
GO

Grant Execute on dbo.spOAUTH_TOKENS_Update to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spOUTBOUND_EMAILS_UpdateUser' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spOUTBOUND_EMAILS_UpdateUser;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 07/16/2013 Paul.  spOUTBOUND_EMAILS_Update now returns the ID. 
-- 04/20/2016 Paul.  Provide a way to allow each user to have their own SMTP server. 
-- 02/01/2017 Paul.  Add support for Exchange using Username/Password. 
Create Procedure dbo.spOUTBOUND_EMAILS_UpdateUser
	( @MODIFIED_USER_ID   uniqueidentifier
	, @USER_ID            uniqueidentifier
	, @MAIL_SMTPUSER      nvarchar(100)
	, @MAIL_SMTPPASS      nvarchar(100)
	, @MAIL_SMTPSERVER    nvarchar(100) = null
	, @MAIL_SMTPPORT      int = null
	, @MAIL_SMTPAUTH_REQ  bit = null
	, @MAIL_SMTPSSL       int = null
	, @MAIL_SENDTYPE      nvarchar(25) = null
	)
as
  begin
	set nocount on
	
	-- 07/11/2010 Paul.  Make sure to call the base Update procedure. 
	declare @ID uniqueidentifier;
	-- BEGIN Oracle Exception
		select @ID = ID
		  from OUTBOUND_EMAILS
		 where USER_ID = @USER_ID 
		   and TYPE    = N'system-override'
		   and DELETED = 0;
	-- END Oracle Exception
	exec dbo.spOUTBOUND_EMAILS_Update @ID out, @MODIFIED_USER_ID, N'system', N'system-override', @USER_ID, @MAIL_SENDTYPE, null, @MAIL_SMTPSERVER, @MAIL_SMTPPORT, @MAIL_SMTPUSER, @MAIL_SMTPPASS, @MAIL_SMTPAUTH_REQ, @MAIL_SMTPSSL, null, null, null, null;
  end
GO

Grant Execute on dbo.spOUTBOUND_EMAILS_UpdateUser to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spOUTBOUND_SMS_UpdateUser' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spOUTBOUND_SMS_UpdateUser;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spOUTBOUND_SMS_UpdateUser
	( @MODIFIED_USER_ID   uniqueidentifier
	, @USER_ID            uniqueidentifier
	, @USER_NAME          nvarchar(60)
	, @FROM_NUMBER        nvarchar(100)
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	-- BEGIN Oracle Exception
		select @ID = ID
		  from OUTBOUND_EMAILS
		 where USER_ID = @USER_ID 
		   and DELETED = 0;
	-- END Oracle Exception
	exec dbo.spOUTBOUND_SMS_Update @ID out, @MODIFIED_USER_ID, @USER_NAME, @USER_ID, @FROM_NUMBER;
  end
GO

Grant Execute on dbo.spOUTBOUND_SMS_UpdateUser to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSYSTEM_EVENTS_ProcessAll' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSYSTEM_EVENTS_ProcessAll;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spSYSTEM_EVENTS_ProcessAll
as
  begin
	set nocount on

	-- 10/13/2008 Paul.  Delete all events older than 24 hours. 
	-- The system events are primarily used to keep servers in sync, 
	-- so we do not need to worry about old events. 
	delete from SYSTEM_EVENTS
	 where DATE_ENTERED < dbo.fnDateAdd_Hours(-24, getdate());
  end
GO

Grant Execute on dbo.spSYSTEM_EVENTS_ProcessAll to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spSYSTEM_LOG_MessageOnly' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spSYSTEM_LOG_MessageOnly;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
Create Procedure dbo.spSYSTEM_LOG_MessageOnly
	( @MODIFIED_USER_ID  uniqueidentifier
	, @ERROR_TYPE        nvarchar(25)
	, @MESSAGE           nvarchar(max)
	)
as
  begin
	exec dbo.spSYSTEM_LOG_InsertOnly @MODIFIED_USER_ID, null, null, null, null, null, null, null, null, null, @ERROR_TYPE, null, null, null, @MESSAGE;
  end
GO

Grant Execute on dbo.spSYSTEM_LOG_MessageOnly to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTEAMS_MassDelete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTEAMS_MassDelete;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spTEAMS_MassDelete
	( @ID_LIST          varchar(8000)
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @ID           uniqueidentifier;
	declare @CurrentPosR  int;
	declare @NextPosR     int;
	set @CurrentPosR = 1;
	while @CurrentPosR <= len(@ID_LIST) begin -- do
		-- 10/04/2006 Paul.  charindex should not use unicode parameters as it will limit all inputs to 4000 characters. 
		set @NextPosR = charindex(',', @ID_LIST,  @CurrentPosR);
		if @NextPosR = 0 or @NextPosR is null begin -- then
			set @NextPosR = len(@ID_LIST) + 1;
		end -- if;
		set @ID = cast(rtrim(ltrim(substring(@ID_LIST, @CurrentPosR, @NextPosR - @CurrentPosR))) as uniqueidentifier);
		set @CurrentPosR = @NextPosR+1;
		exec dbo.spTEAMS_Delete @ID, @MODIFIED_USER_ID;
	end -- while;
  end
GO
 
Grant Execute on dbo.spTEAMS_MassDelete to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTEAM_MEMBERSHIPS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTEAM_MEMBERSHIPS_Delete;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/07/2013 Paul.  Add Oracle Exception. 
-- 02/22/2015 Paul.  When removing a user from a team, also remove default team for that user if it is the same team. 
Create Procedure dbo.spTEAM_MEMBERSHIPS_Delete
	( @MODIFIED_USER_ID uniqueidentifier
	, @TEAM_ID          uniqueidentifier
	, @USER_ID          uniqueidentifier
	)
as
  begin
	set nocount on
	
	-- BEGIN Oracle Exception
		update TEAM_MEMBERSHIPS
		   set DELETED          = 1
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where TEAM_ID          = @TEAM_ID
		   and USER_ID          = @USER_ID
		   and DELETED          = 0;
	-- END Oracle Exception

	-- 11/18/2006 Paul.  Refresh all the implicit assignments any time a member is removed. 
	-- Just make sure not to use spTEAM_MEMBERSHIPS_Delete inside spTEAM_MEMBERSHIPS_UpdateImplicit. 
	exec dbo.spTEAM_MEMBERSHIPS_UpdateImplicit @MODIFIED_USER_ID, @TEAM_ID;

	-- 02/22/2015 Paul.  When removing a user from a team, also remove default team for that user if it is the same team. 
	-- This will prevent records created by this user from being accessed by this same user. 
	if exists(select * from USERS where ID = @USER_ID and DELETED = 0 and DEFAULT_TEAM = @TEAM_ID) begin -- then
		update USERS
		   set DEFAULT_TEAM      = null
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = @MODIFIED_USER_ID
		 where ID                = @USER_ID
		   and DEFAULT_TEAM      = @TEAM_ID
		   and DELETED           = 0;
	end -- if;
  end
GO

Grant Execute on dbo.spTEAM_MEMBERSHIPS_Delete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTEAM_MEMBERSHIPS_DeleteUser' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTEAM_MEMBERSHIPS_DeleteUser;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/23/2008 Paul.  This procedure as been stubbed-out as it is usedin spEMAILS_Update. 
Create Procedure dbo.spTEAM_MEMBERSHIPS_DeleteUser
	( @MODIFIED_USER_ID  uniqueidentifier
	, @USER_ID           uniqueidentifier
	)
as
  begin
	set nocount on

  end
GO
 
Grant Execute on dbo.spTEAM_MEMBERSHIPS_DeleteUser to public;
GO
 

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTEAM_MEMBERSHIPS_RefreshAll' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTEAM_MEMBERSHIPS_RefreshAll;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spTEAM_MEMBERSHIPS_RefreshAll
	( @MODIFIED_USER_ID  uniqueidentifier
	)
as
  begin
	set nocount on

	declare @TEAM_ID uniqueidentifier;

	declare team_cursor cursor for
	select ID
	  from TEAMS
	 where DELETED = 0;

/* -- #if IBM_DB2
	declare continue handler for not found
		set in_FETCH_STATUS = 1;
-- #endif IBM_DB2 */
/* -- #if MySQL
	declare continue handler for not found
		set in_FETCH_STATUS = 1;
	set in_FETCH_STATUS = 0;
-- #endif MySQL */

	open team_cursor;
	fetch next from team_cursor into @TEAM_ID;
	-- 11/19/2006 Paul.  Stop if an error is found. 
	while @@FETCH_STATUS = 0 and @@ERROR = 0 begin -- do
		exec dbo.spTEAM_MEMBERSHIPS_UpdateImplicit @MODIFIED_USER_ID, @TEAM_ID;
		fetch next from team_cursor into @TEAM_ID;
	end -- while;
	close team_cursor;

	deallocate team_cursor;
  end
GO
 
Grant Execute on dbo.spTEAM_MEMBERSHIPS_RefreshAll to public;
GO
 

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTEAM_MEMBERSHIPS_RefreshUser' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTEAM_MEMBERSHIPS_RefreshUser;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/23/2008 Paul.  This procedure as been stubbed-out as it is usedin spEMAILS_Update. 
Create Procedure dbo.spTEAM_MEMBERSHIPS_RefreshUser
	( @MODIFIED_USER_ID  uniqueidentifier
	, @USER_ID           uniqueidentifier
	)
as
  begin
	set nocount on

  end
GO
 
Grant Execute on dbo.spTEAM_MEMBERSHIPS_RefreshUser to public;
GO
 

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTEAM_MEMBERSHIPS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTEAM_MEMBERSHIPS_Update;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/23/2008 Paul.  This procedure as been stubbed-out as it is usedin spEMAILS_Update. 
Create Procedure dbo.spTEAM_MEMBERSHIPS_Update
	( @MODIFIED_USER_ID  uniqueidentifier
	, @TEAM_ID           uniqueidentifier
	, @USER_ID           uniqueidentifier
	, @EXPLICIT_ASSIGN   bit
	)
as
  begin
	set nocount on
	
  end
GO
 
Grant Execute on dbo.spTEAM_MEMBERSHIPS_Update to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTERMINOLOGY_MassDelete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTERMINOLOGY_MassDelete;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spTERMINOLOGY_MassDelete
	( @ID_LIST          varchar(8000)
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @ID           uniqueidentifier;
	declare @CurrentPosR  int;
	declare @NextPosR     int;
	set @CurrentPosR = 1;
	while @CurrentPosR <= len(@ID_LIST) begin -- do
		-- 10/04/2006 Paul.  charindex should not use unicode parameters as it will limit all inputs to 4000 characters. 
		set @NextPosR = charindex(',', @ID_LIST,  @CurrentPosR);
		if @NextPosR = 0 or @NextPosR is null begin -- then
			set @NextPosR = len(@ID_LIST) + 1;
		end -- if;
		set @ID = cast(rtrim(ltrim(substring(@ID_LIST, @CurrentPosR, @NextPosR - @CurrentPosR))) as uniqueidentifier);
		set @CurrentPosR = @NextPosR+1;
		exec dbo.spTERMINOLOGY_Delete @ID, @MODIFIED_USER_ID;
	end -- while;
  end
GO
 
Grant Execute on dbo.spTERMINOLOGY_MassDelete to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSERS_ACL_ROLES_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSERS_ACL_ROLES_Delete;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 05/28/2020 Paul.  Wrapper to simplify support for React Client. 
Create Procedure dbo.spUSERS_ACL_ROLES_Delete
	( @MODIFIED_USER_ID  uniqueidentifier
	, @USER_ID           uniqueidentifier
	, @ACL_ROLE_ID       uniqueidentifier
	)
as
  begin
	set nocount on

	exec dbo.spACL_ROLES_USERS_Delete @MODIFIED_USER_ID, @ACL_ROLE_ID, @USER_ID;
  end
GO
 
Grant Execute on dbo.spUSERS_ACL_ROLES_Delete to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSERS_ACL_ROLES_MassUpdate' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSERS_ACL_ROLES_MassUpdate;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spUSERS_ACL_ROLES_MassUpdate
	( @USER_ID           uniqueidentifier
	, @MODIFIED_USER_ID  uniqueidentifier
	, @ID_LIST           varchar(8000)
	)
as
  begin
	set nocount on
	
	declare @ROLE_ID      uniqueidentifier;
	declare @CurrentPosR  int;
	declare @NextPosR     int;
	set @CurrentPosR = 1;
	while @CurrentPosR <= len(@ID_LIST) begin -- do
		-- 10/04/2006 Paul.  charindex should not use unicode parameters as it will limit all inputs to 4000 characters. 
		set @NextPosR = charindex(',', @ID_LIST,  @CurrentPosR);
		if @NextPosR = 0 or @NextPosR is null begin -- then
			set @NextPosR = len(@ID_LIST) + 1;
		end -- if;
		set @ROLE_ID = cast(rtrim(ltrim(substring(@ID_LIST, @CurrentPosR, @NextPosR - @CurrentPosR))) as uniqueidentifier);
		set @CurrentPosR = @NextPosR+1;

		exec dbo.spACL_ROLES_USERS_Update @MODIFIED_USER_ID, @ROLE_ID, @USER_ID;
	end -- while;
  end
GO
 
Grant Execute on dbo.spUSERS_ACL_ROLES_MassUpdate to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSERS_ACL_ROLES_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSERS_ACL_ROLES_Update;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 05/28/2020 Paul.  Wrapper to simplify support for React Client. 
Create Procedure dbo.spUSERS_ACL_ROLES_Update
	( @MODIFIED_USER_ID  uniqueidentifier
	, @USER_ID           uniqueidentifier
	, @ACL_ROLE_ID       uniqueidentifier
	)
as
  begin
	set nocount on

	exec dbo.spACL_ROLES_USERS_Update @MODIFIED_USER_ID, @ACL_ROLE_ID, @USER_ID;
  end
GO
 
Grant Execute on dbo.spUSERS_ACL_ROLES_Update to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSER_PREFERENCES_InsertByUser' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSER_PREFERENCES_InsertByUser;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/27/2008 Paul.  PostgreSQL does not allow modifying input parameters.  Use a local temp variable. 
-- 10/21/2008 Paul.  Increase USER_NAME to 60 to match table. 
Create Procedure dbo.spUSER_PREFERENCES_InsertByUser
	( @ID                uniqueidentifier output
	, @MODIFIED_USER_ID  uniqueidentifier
	, @USER_NAME         nvarchar(60)
	, @CATEGORY          nvarchar(255)
	)
as
  begin
	set nocount on

	declare @ASSIGNED_USER_ID uniqueidentifier;
	declare @TEMP_USER_NAME   nvarchar(60);
	declare @TEMP_CATEGORY    nvarchar(255);
	-- 01/25/2007 Paul.  Convert to lowercase to support Oracle. 	
	set @TEMP_CATEGORY  = lower(@CATEGORY );
	set @TEMP_USER_NAME = lower(@USER_NAME);

	-- BEGIN Oracle Exception
		select @ASSIGNED_USER_ID = ID
		  from USERS
		 where lower(USER_NAME) = @TEMP_USER_NAME
		   and DELETED          = 0;
	-- END Oracle Exception

	exec dbo.spUSER_PREFERENCES_Insert @ID out, @MODIFIED_USER_ID, @ASSIGNED_USER_ID, @TEMP_CATEGORY;
  end
GO

Grant Execute on dbo.spUSER_PREFERENCES_InsertByUser to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spWORKFLOW_EVENTS_ProcessAll' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spWORKFLOW_EVENTS_ProcessAll;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 12/30/2007 Paul.  We are not ready to do any workflow processing, so just delete the records. 	
-- 01/18/2008 Paul.  Oracle requires from keyword. 
Create Procedure dbo.spWORKFLOW_EVENTS_ProcessAll
as
  begin
	set nocount on
	
	delete from WORKFLOW_EVENTS;
  end
GO

Grant Execute on dbo.spWORKFLOW_EVENTS_ProcessAll to public;
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDASHLETS_USERS_InitDisable' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDASHLETS_USERS_InitDisable;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/24/2009 Paul.  The new Silverlight charts exceeded the control name length of 50. 
Create Procedure dbo.spDASHLETS_USERS_InitDisable
	( @MODIFIED_USER_ID uniqueidentifier
	, @ASSIGNED_USER_ID uniqueidentifier
	, @DETAIL_NAME      nvarchar(50)
	, @MODULE_NAME      nvarchar(50)
	, @CONTROL_NAME     nvarchar(100)
	)
as
  begin
	set nocount on

	declare @ID uniqueidentifier;
	exec dbo.spDASHLETS_USERS_Init @MODIFIED_USER_ID, @ASSIGNED_USER_ID, @DETAIL_NAME;

	-- BEGIN Oracle Exception
		select @ID = ID
		  from DASHLETS_USERS
		 where ASSIGNED_USER_ID     = @ASSIGNED_USER_ID 
		   and DETAIL_NAME          = @DETAIL_NAME      
		   and MODULE_NAME          = @MODULE_NAME      
		   and CONTROL_NAME         = @CONTROL_NAME     
		   and DELETED              = 0                 ;
	-- END Oracle Exception

	exec dbo.spDASHLETS_USERS_Disable @ID, @MODIFIED_USER_ID;
  end
GO

Grant Execute on dbo.spDASHLETS_USERS_InitDisable to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_FIELDS_CnvBound' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_FIELDS_CnvBound;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/24/2006 Paul.  Create a procedure to convert a Blank to a Bound. 
-- 08/27/2008 Paul.  PostgreSQL does not allow modifying input parameters.  Use a local temp variable. 
-- 02/25/2015 Paul.  Increase size of DATA_FIELD and DATA_FORMAT for OfficeAddin. 
Create Procedure dbo.spDETAILVIEWS_FIELDS_CnvBound
	( @DETAIL_NAME       nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(1000)
	, @DATA_FORMAT       nvarchar(max)
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	declare @TEMP_FIELD_INDEX int;
	
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	-- 11/24/2006 Paul.  First make sure that the data field does not already exist. 
	-- BEGIN Oracle Exception
		select @ID = ID
		  from DETAILVIEWS_FIELDS
		 where DETAIL_NAME  = @DETAIL_NAME
		   and DATA_FIELD   = @DATA_FIELD
		   and DELETED      = 0            
		   and DEFAULT_VIEW = 0            ;
	-- END Oracle Exception
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		-- 11/24/2006 Paul.  Search for a Blank record at the specified index position. 
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and FIELD_INDEX  = @TEMP_FIELD_INDEX
			   and FIELD_TYPE   = N'Blank'     
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- 11/24/2006 Paul.  If blank was not found at the expected position, try and locate the first blank. 
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			-- BEGIN Oracle Exception
				select @ID = ID
				  from DETAILVIEWS_FIELDS
				 where DETAIL_NAME  = @DETAIL_NAME
				   and FIELD_INDEX  = (select min(FIELD_INDEX)
				                         from DETAILVIEWS_FIELDS
				                        where DETAIL_NAME  = @DETAIL_NAME
				                          and FIELD_TYPE   = N'Blank'
				                          and DELETED      = 0
				                          and DEFAULT_VIEW = 0)
				   and FIELD_TYPE   = N'Blank'     
				   and DELETED      = 0            
				   and DEFAULT_VIEW = 0            ;
			-- END Oracle Exception
		end -- if;

		if dbo.fnIsEmptyGuid(@ID) = 0 begin -- then
			update DETAILVIEWS_FIELDS
			   set MODIFIED_USER_ID = null              
			     , DATE_MODIFIED    = getdate()
			     , DATE_MODIFIED_UTC= getutcdate()
			     , FIELD_TYPE       = N'String'         
			     , DATA_LABEL       = @DATA_LABEL       
			     , DATA_FIELD       = @DATA_FIELD       
			     , DATA_FORMAT      = @DATA_FORMAT      
			     , COLSPAN          = @COLSPAN          
			 where ID = @ID;
		end else begin
			-- 11/24/2006 Paul.  If a blank cannot be found at the expected location, just insert a new record. 
			-- 11/25/2006 Paul.  In order to force the insert, make sure to specify a unique FIELD_INDEX. 
			select @TEMP_FIELD_INDEX = max(FIELD_INDEX) + 1
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
			exec dbo.spDETAILVIEWS_FIELDS_InsBound @DETAIL_NAME, @TEMP_FIELD_INDEX, @DATA_LABEL, @DATA_FIELD, @DATA_FORMAT, @COLSPAN;
		end -- if;
	end -- if;
  end
GO
 
Grant Execute on dbo.spDETAILVIEWS_FIELDS_CnvBound to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDETAILVIEWS_FIELDS_CnvTags' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDETAILVIEWS_FIELDS_CnvTags;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDETAILVIEWS_FIELDS_CnvTags
	( @DETAIL_NAME       nvarchar( 50)
	, @FIELD_INDEX       int
	, @COLSPAN           int
	)
as
  begin
	declare @TEMP_FIELD_INDEX int;
	declare @ID               uniqueidentifier;
	declare @DATA_LABEL       nvarchar(150);
	declare @DATA_FIELD       nvarchar(1000);
	declare @DATA_FORMAT      nvarchar(max);
	
	set @DATA_LABEL       = N'.LBL_TAG_SET_NAME';
	set @DATA_FIELD       = N'TAG_SET_NAME';
	set @DATA_FORMAT      = N'{0}';
	set @TEMP_FIELD_INDEX = @FIELD_INDEX;
	-- 11/24/2006 Paul.  First make sure that the data field does not already exist. 
	-- BEGIN Oracle Exception
		select @ID = ID
		  from DETAILVIEWS_FIELDS
		 where DETAIL_NAME  = @DETAIL_NAME
		   and DATA_FIELD   = @DATA_FIELD
		   and DELETED      = 0            
		   and DEFAULT_VIEW = 0            ;
	-- END Oracle Exception
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		-- 11/24/2006 Paul.  Search for a Blank record at the specified index position. 
		-- BEGIN Oracle Exception
			select @ID = ID
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and FIELD_INDEX  = @TEMP_FIELD_INDEX
			   and FIELD_TYPE   = N'Blank'     
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- 11/24/2006 Paul.  If blank was not found at the expected position, try and locate the first blank. 
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			-- BEGIN Oracle Exception
				select @ID = ID
				  from DETAILVIEWS_FIELDS
				 where DETAIL_NAME  = @DETAIL_NAME
				   and FIELD_INDEX  = (select min(FIELD_INDEX)
				                         from DETAILVIEWS_FIELDS
				                        where DETAIL_NAME  = @DETAIL_NAME
				                          and FIELD_TYPE   = N'Blank'
				                          and DELETED      = 0
				                          and DEFAULT_VIEW = 0)
				   and FIELD_TYPE   = N'Blank'     
				   and DELETED      = 0            
				   and DEFAULT_VIEW = 0            ;
			-- END Oracle Exception
		end -- if;

		if dbo.fnIsEmptyGuid(@ID) = 0 begin -- then
			update DETAILVIEWS_FIELDS
			   set MODIFIED_USER_ID = null              
			     , DATE_MODIFIED    = getdate()
			     , DATE_MODIFIED_UTC= getutcdate()
			     , FIELD_TYPE       = N'Tags'           
			     , DATA_LABEL       = @DATA_LABEL       
			     , DATA_FIELD       = @DATA_FIELD       
			     , DATA_FORMAT      = @DATA_FORMAT      
			     , COLSPAN          = @COLSPAN          
			 where ID = @ID;
		end else begin
			select @TEMP_FIELD_INDEX = max(FIELD_INDEX) + 1
			  from DETAILVIEWS_FIELDS
			 where DETAIL_NAME  = @DETAIL_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
			exec dbo.spDETAILVIEWS_FIELDS_InsTags @DETAIL_NAME, @TEMP_FIELD_INDEX, @COLSPAN;
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spDETAILVIEWS_FIELDS_CnvTags to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDYNAMIC_BUTTONS_InsCancel' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDYNAMIC_BUTTONS_InsCancel;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/12/2010 Paul.  Add default parameter ONCLICK_SCRIPT to ease migration to EffiProz. 
Create Procedure dbo.spDYNAMIC_BUTTONS_InsCancel
	( @VIEW_NAME           nvarchar(50)
	, @CONTROL_INDEX       int
	, @MODULE_NAME         nvarchar(25)
	, @MOBILE_ONLY         bit
	)
as
  begin
	set nocount on
	
	exec dbo.spDYNAMIC_BUTTONS_InsButtonLink 
		  @VIEW_NAME
		, @CONTROL_INDEX
		, @MODULE_NAME
		, null
		, null
		, null
		, N'Cancel'
		, N'default.aspx'
		, N'ID'
		, N'.LBL_CANCEL_BUTTON_LABEL'
		, N'.LBL_CANCEL_BUTTON_TITLE'
		, N'.LBL_CANCEL_BUTTON_KEY'
		, null
		, @MOBILE_ONLY
		, null          -- ONCLICK_SCRIPT
		;
  end
GO

Grant Execute on dbo.spDYNAMIC_BUTTONS_InsCancel to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDYNAMIC_BUTTONS_InsCancelEdit' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDYNAMIC_BUTTONS_InsCancelEdit;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDYNAMIC_BUTTONS_InsCancelEdit
	( @VIEW_NAME           nvarchar(50)
	, @CONTROL_INDEX       int
	, @MODULE_NAME         nvarchar(25)
	)
as
  begin
	set nocount on
	
	exec dbo.spDYNAMIC_BUTTONS_InsButton @VIEW_NAME, @CONTROL_INDEX, @MODULE_NAME, null, null, null, 'Cancel'     , null, '.LBL_CANCEL_BUTTON_LABEL'     , '.LBL_CANCEL_BUTTON_TITLE'     , '.LBL_CANCEL_BUTTON_KEY'     , null, null;
  end
GO

Grant Execute on dbo.spDYNAMIC_BUTTONS_InsCancelEdit to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDYNAMIC_BUTTONS_InsDelete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDYNAMIC_BUTTONS_InsDelete;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDYNAMIC_BUTTONS_InsDelete
	( @VIEW_NAME           nvarchar(50)
	, @CONTROL_INDEX       int
	, @MODULE_NAME         nvarchar(25)
	)
as
  begin
	set nocount on
	
	exec dbo.spDYNAMIC_BUTTONS_InsButton @VIEW_NAME, @CONTROL_INDEX, @MODULE_NAME, 'delete', null, null, 'Delete'   , null, '.LBL_DELETE_BUTTON_LABEL'   , '.LBL_DELETE_BUTTON_TITLE'   , '.LBL_DELETE_BUTTON_KEY'   , 'return ConfirmDelete();', null;
  end
GO

Grant Execute on dbo.spDYNAMIC_BUTTONS_InsDelete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDYNAMIC_BUTTONS_InsDuplicate' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDYNAMIC_BUTTONS_InsDuplicate;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/12/2010 Paul.  Add default parameter ONCLICK_SCRIPT to ease migration to EffiProz. 
Create Procedure dbo.spDYNAMIC_BUTTONS_InsDuplicate
	( @VIEW_NAME           nvarchar(50)
	, @CONTROL_INDEX       int
	, @MODULE_NAME         nvarchar(25)
	)
as
  begin
	set nocount on
	
	exec dbo.spDYNAMIC_BUTTONS_InsButtonLink
		  @VIEW_NAME
		, @CONTROL_INDEX
		, @MODULE_NAME
		, N'edit'
		, null
		, null
		, N'Duplicate'
		, N'edit.aspx?DuplicateID={0}'
		, N'ID'
		, N'.LBL_DUPLICATE_BUTTON_LABEL'
		, N'.LBL_DUPLICATE_BUTTON_TITLE'
		, N'.LBL_DUPLICATE_BUTTON_KEY'
		, null
		, null
		, null          -- ONCLICK_SCRIPT
		;
  end
GO

Grant Execute on dbo.spDYNAMIC_BUTTONS_InsDuplicate to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDYNAMIC_BUTTONS_InsEdit' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDYNAMIC_BUTTONS_InsEdit;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/12/2010 Paul.  Add default parameter ONCLICK_SCRIPT to ease migration to EffiProz. 
Create Procedure dbo.spDYNAMIC_BUTTONS_InsEdit
	( @VIEW_NAME           nvarchar(50)
	, @CONTROL_INDEX       int
	, @MODULE_NAME         nvarchar(25)
	)
as
  begin
	set nocount on
	
	exec dbo.spDYNAMIC_BUTTONS_InsButtonLink
		  @VIEW_NAME
		, @CONTROL_INDEX
		, @MODULE_NAME
		, N'edit'
		, null
		, null
		, N'Edit'
		, N'edit.aspx?ID={0}'
		, N'ID'
		, N'.LBL_EDIT_BUTTON_LABEL'
		, N'.LBL_EDIT_BUTTON_TITLE'
		, N'.LBL_EDIT_BUTTON_KEY'
		, null
		, null
		, null          -- ONCLICK_SCRIPT
		;

  end
GO

Grant Execute on dbo.spDYNAMIC_BUTTONS_InsEdit to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDYNAMIC_BUTTONS_InsPopupCancel' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDYNAMIC_BUTTONS_InsPopupCancel;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/12/2010 Paul.  Add default parameter EXCLUDE_MOBILE to ease migration to EffiProz. 
-- 03/14/2014 Paul.  Allow hidden buttons to be created. 
Create Procedure dbo.spDYNAMIC_BUTTONS_InsPopupCancel
	( @VIEW_NAME           nvarchar(50)
	, @CONTROL_INDEX       int
	, @MODULE_NAME         nvarchar(25)
	, @MODULE_ACCESS_TYPE  nvarchar(100)
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	declare @TARGET_NAME         nvarchar(25);
	declare @TARGET_ACCESS_TYPE  nvarchar(100);
	declare @ONCLICK_SCRIPT      nvarchar(255);
	declare @TEXT_FIELD          nvarchar(200);
	declare @CONTROL_TEXT        nvarchar(150);
	declare @CONTROL_TOOLTIP     nvarchar(150);
	declare @CONTROL_ACCESSKEY   nvarchar(150);
	declare @ARGUMENT_FIELD      nvarchar(200);
	declare @COMMAND_NAME        varchar(50);
	declare @MOBILE_ONLY         bit;

	-- BEGIN Oracle Exception
		select @ID = ID
		  from DYNAMIC_BUTTONS
		 where VIEW_NAME     = @VIEW_NAME    
		   and CONTROL_INDEX = @CONTROL_INDEX
		   and DELETED       = 0             
		   and DEFAULT_VIEW  = 0             ;
	-- END Oracle Exception

	-- 04/29/2008 Paul.  Popups should return false so that the button does not actually submit the form. 
	set @ONCLICK_SCRIPT    = N'Cancel(); return false;';
	set @CONTROL_TEXT      = N'.LBL_CANCEL_BUTTON_LABEL';
	set @CONTROL_TOOLTIP   = N'.LBL_CANCEL_BUTTON_TITLE';
	set @CONTROL_ACCESSKEY = N'.LBL_CANCEL_BUTTON_KEY'  ;
	set @COMMAND_NAME      = N'Cancel';

	if not exists(select * from DYNAMIC_BUTTONS where ID = @ID) begin -- then
		exec dbo.spDYNAMIC_BUTTONS_Update
			  @ID out
			, null                 -- MODIFIED_USER_ID    
			, @VIEW_NAME           
			, @CONTROL_INDEX       
			, N'Button'            -- CONTROL_TYPE
			, @MODULE_NAME         
			, @MODULE_ACCESS_TYPE  
			, @TARGET_NAME         
			, @TARGET_ACCESS_TYPE  
			, @CONTROL_TEXT        
			, @CONTROL_TOOLTIP     
			, @CONTROL_ACCESSKEY   
			, N'button'            -- CONTROL_CSSCLASS
			, @TEXT_FIELD          
			, @ARGUMENT_FIELD      
			, @COMMAND_NAME        
			, null                 -- URL_FORMAT
			, null                 -- URL_TARGET
			, @ONCLICK_SCRIPT      
			, @MOBILE_ONLY         
			, 0                    -- ADMIN_ONLY          
			, null                 -- EXCLUDE_MOBILE      
			, null                 -- HIDDEN              
			;
	end -- if;
  end
GO

Grant Execute on dbo.spDYNAMIC_BUTTONS_InsPopupCancel to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDYNAMIC_BUTTONS_InsPopupClear' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDYNAMIC_BUTTONS_InsPopupClear;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/12/2010 Paul.  Add default parameter EXCLUDE_MOBILE to ease migration to EffiProz. 
-- 03/14/2014 Paul.  Allow hidden buttons to be created. 
Create Procedure dbo.spDYNAMIC_BUTTONS_InsPopupClear
	( @VIEW_NAME           nvarchar(50)
	, @CONTROL_INDEX       int
	, @MODULE_NAME         nvarchar(25)
	, @MODULE_ACCESS_TYPE  nvarchar(100)
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	declare @TARGET_NAME         nvarchar(25);
	declare @TARGET_ACCESS_TYPE  nvarchar(100);
	declare @ONCLICK_SCRIPT      nvarchar(255);
	declare @TEXT_FIELD          nvarchar(200);
	declare @CONTROL_TEXT        nvarchar(150);
	declare @CONTROL_TOOLTIP     nvarchar(150);
	declare @CONTROL_ACCESSKEY   nvarchar(150);
	declare @ARGUMENT_FIELD      nvarchar(200);
	declare @COMMAND_NAME        varchar(50);
	declare @MOBILE_ONLY         bit;

	-- BEGIN Oracle Exception
		select @ID = ID
		  from DYNAMIC_BUTTONS
		 where VIEW_NAME     = @VIEW_NAME    
		   and CONTROL_INDEX = @CONTROL_INDEX
		   and DELETED       = 0             
		   and DEFAULT_VIEW  = 0             ;
	-- END Oracle Exception

	-- 04/29/2008 Paul.  Popups should return false so that the button does not actually submit the form. 
	set @ONCLICK_SCRIPT    = N'Clear(); return false;';
	set @CONTROL_TEXT      = N'.LBL_CLEAR_BUTTON_LABEL';
	set @CONTROL_TOOLTIP   = N'.LBL_CLEAR_BUTTON_TITLE';
	set @CONTROL_ACCESSKEY = N'.LBL_CLEAR_BUTTON_KEY'  ;
	set @COMMAND_NAME      = N'Clear';

	if not exists(select * from DYNAMIC_BUTTONS where ID = @ID) begin -- then
		exec dbo.spDYNAMIC_BUTTONS_Update
			  @ID out
			, null                 -- MODIFIED_USER_ID    
			, @VIEW_NAME           
			, @CONTROL_INDEX       
			, N'Button'            -- CONTROL_TYPE
			, @MODULE_NAME         
			, @MODULE_ACCESS_TYPE  
			, @TARGET_NAME         
			, @TARGET_ACCESS_TYPE  
			, @CONTROL_TEXT        
			, @CONTROL_TOOLTIP     
			, @CONTROL_ACCESSKEY   
			, N'button'            -- CONTROL_CSSCLASS
			, @TEXT_FIELD          
			, @ARGUMENT_FIELD      
			, @COMMAND_NAME        
			, null                 -- URL_FORMAT
			, null                 -- URL_TARGET
			, @ONCLICK_SCRIPT      
			, @MOBILE_ONLY         
			, 0                    -- ADMIN_ONLY          
			, null                 -- EXCLUDE_MOBILE      
			, null                 -- HIDDEN              
			;
	end -- if;
  end
GO

Grant Execute on dbo.spDYNAMIC_BUTTONS_InsPopupClear to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDYNAMIC_BUTTONS_InsSave' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDYNAMIC_BUTTONS_InsSave;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDYNAMIC_BUTTONS_InsSave
	( @VIEW_NAME           nvarchar(50)
	, @CONTROL_INDEX       int
	, @MODULE_NAME         nvarchar(25)
	)
as
  begin
	set nocount on
	
	exec dbo.spDYNAMIC_BUTTONS_InsButton @VIEW_NAME, @CONTROL_INDEX, @MODULE_NAME, 'edit'  , null, null, 'Save'     , null, '.LBL_SAVE_BUTTON_LABEL'     , '.LBL_SAVE_BUTTON_TITLE'     , '.LBL_SAVE_BUTTON_KEY'     , null, null;
  end
GO

Grant Execute on dbo.spDYNAMIC_BUTTONS_InsSave to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spDYNAMIC_BUTTONS_InsSaveNew' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spDYNAMIC_BUTTONS_InsSaveNew;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spDYNAMIC_BUTTONS_InsSaveNew
	( @VIEW_NAME           nvarchar(50)
	, @CONTROL_INDEX       int
	, @MODULE_NAME         nvarchar(25)
	)
as
  begin
	set nocount on
	
	exec dbo.spDYNAMIC_BUTTONS_InsButton @VIEW_NAME, @CONTROL_INDEX, @MODULE_NAME, 'edit'  , null, null, 'SaveNew'  , null, '.LBL_SAVE_NEW_BUTTON_LABEL' , '.LBL_SAVE_NEW_BUTTON_TITLE' , '.LBL_SAVE_NEW_BUTTON_KEY' , null, null;
  end
GO

Grant Execute on dbo.spDYNAMIC_BUTTONS_InsSaveNew to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_CnvAutoComplete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_CnvAutoComplete;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_FIELDS_CnvAutoComplete
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @FORMAT_MAX_LENGTH int
	, @FORMAT_SIZE       int
	, @MODULE_TYPE       nvarchar(25)
	, @COLSPAN           int
	)
as
  begin
	-- 08/26/2009 Paul.  We are going to ignore the following fields for now. 
	-- Keeping them in the method will make it easy to duplicate the InsModulePopup call. 
	-- @DATA_REQUIRED     bit
	-- @FORMAT_TAB_INDEX  int
	-- @FORMAT_MAX_LENGTH int
	-- @FORMAT_SIZE       int
	-- @COLSPAN           int

	if exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = @EDIT_NAME and DATA_FIELD = @DATA_FIELD and FIELD_TYPE = N'TextBox' and DELETED = 0) begin -- then
		-- 08/27/2009 Paul.  The update will take care of the main record and the default view record. 
		update EDITVIEWS_FIELDS
		   set FIELD_TYPE        = N'ModuleAutoComplete'
		     , MODULE_TYPE       = @MODULE_TYPE
		     , DISPLAY_FIELD     = null
		     , ONCLICK_SCRIPT    = null
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID  = null
		 where EDIT_NAME         = @EDIT_NAME
		   and DATA_FIELD        = @DATA_FIELD
		   and FIELD_TYPE        = N'TextBox'
		   and DELETED           = 0;
	end -- if;
	-- 09/10/2009 Paul.  Allow conversion from ModulePopup, where data field matches display field. 
	if exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = @EDIT_NAME and DISPLAY_FIELD = @DATA_FIELD and FIELD_TYPE = N'ModulePopup' and DELETED = 0) begin -- then
		-- 08/27/2009 Paul.  The update will take care of the main record and the default view record. 
		update EDITVIEWS_FIELDS
		   set FIELD_TYPE        = N'ModuleAutoComplete'
		     , MODULE_TYPE       = @MODULE_TYPE
		     , DATA_FIELD        = @DATA_FIELD
		     , DISPLAY_FIELD     = null
		     , ONCLICK_SCRIPT    = null
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID  = null
		 where EDIT_NAME         = @EDIT_NAME
		   and DISPLAY_FIELD     = @DATA_FIELD
		   and FIELD_TYPE        = N'ModulePopup'
		   and DELETED           = 0;
	end -- if;
  end
GO

Grant Execute on dbo.spEDITVIEWS_FIELDS_CnvAutoComplete to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_CnvBound' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_CnvBound;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_FIELDS_CnvBound
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @FORMAT_MAX_LENGTH int
	, @FORMAT_SIZE       int
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	-- 11/24/2006 Paul.  First make sure that the data field does not already exist. 
	-- BEGIN Oracle Exception
		select @ID = ID
		  from EDITVIEWS_FIELDS
		 where EDIT_NAME    = @EDIT_NAME
		   and DATA_FIELD   = @DATA_FIELD
		   and DELETED      = 0            
		   and DEFAULT_VIEW = 0            ;
	-- END Oracle Exception
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		-- 11/24/2006 Paul.  Search for a Blank record at the specified index position. 
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and FIELD_TYPE   = N'Blank'     
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- 11/24/2006 Paul.  If blank was not found at the expected position, try and locate the first blank. 
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			-- BEGIN Oracle Exception
				select @ID = ID
				  from EDITVIEWS_FIELDS
				 where EDIT_NAME    = @EDIT_NAME
				   and FIELD_INDEX  = (select min(FIELD_INDEX)
				                         from EDITVIEWS_FIELDS
				                        where EDIT_NAME    = @EDIT_NAME
				                          and FIELD_TYPE   = N'Blank'
				                          and DELETED      = 0
				                          and DEFAULT_VIEW = 0)
				   and FIELD_TYPE   = N'Blank'     
				   and DELETED      = 0            
				   and DEFAULT_VIEW = 0            ;
			-- END Oracle Exception
		end -- if;
		if dbo.fnIsEmptyGuid(@ID) = 0 begin -- then
			update EDITVIEWS_FIELDS
			   set MODIFIED_USER_ID  =  null             
			     , DATE_MODIFIED     =  getdate()        
			     , DATE_MODIFIED_UTC =  getutcdate()     
			     , FORMAT_MAX_LENGTH = @FORMAT_MAX_LENGTH
			     , FIELD_TYPE        = N'TextBox'        
			     , DATA_LABEL        = @DATA_LABEL       
			     , DATA_FIELD        = @DATA_FIELD       
			     , DATA_REQUIRED     = @DATA_REQUIRED    
			     , UI_REQUIRED       = @DATA_REQUIRED    
			     , FORMAT_SIZE       = @FORMAT_SIZE      
			     , FORMAT_TAB_INDEX  = @FORMAT_TAB_INDEX 
			     , COLSPAN           = @COLSPAN          
			 where ID = @ID;
		end else begin
			-- 11/24/2006 Paul.  If a blank cannot be found at the expected location, just insert a new record. 
			-- 11/25/2006 Paul.  In order to force the insert, make sure to specify a unique FIELD_INDEX. 
			select @FIELD_INDEX = max(FIELD_INDEX) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
			exec dbo.spEDITVIEWS_FIELDS_InsBound @EDIT_NAME, @FIELD_INDEX, @DATA_LABEL, @DATA_FIELD, @DATA_REQUIRED, @FORMAT_TAB_INDEX, @FORMAT_MAX_LENGTH, @FORMAT_SIZE, @COLSPAN;
		end -- if;
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_CnvBound to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_CnvBoundLst' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_CnvBoundLst;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_FIELDS_CnvBoundLst
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @CACHE_NAME        nvarchar( 50)
	, @COLSPAN           int
	, @FORMAT_ROWS       int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	-- 11/24/2006 Paul.  First make sure that the data field does not already exist. 
	-- BEGIN Oracle Exception
		select @ID = ID
		  from EDITVIEWS_FIELDS
		 where EDIT_NAME    = @EDIT_NAME
		   and DATA_FIELD   = @DATA_FIELD
		   and DELETED      = 0            
		   and DEFAULT_VIEW = 0            ;
	-- END Oracle Exception
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		-- 11/24/2006 Paul.  Search for a Blank record at the specified index position. 
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and FIELD_TYPE   = N'Blank'     
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- 11/24/2006 Paul.  If blank was not found at the expected position, try and locate the first blank. 
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			-- BEGIN Oracle Exception
				select @ID = ID
				  from EDITVIEWS_FIELDS
				 where EDIT_NAME    = @EDIT_NAME
				   and FIELD_INDEX  = (select min(FIELD_INDEX)
				                         from EDITVIEWS_FIELDS
				                        where EDIT_NAME    = @EDIT_NAME
				                          and FIELD_TYPE   = N'Blank'
				                          and DELETED      = 0
				                          and DEFAULT_VIEW = 0)
				   and FIELD_TYPE   = N'Blank'     
				   and DELETED      = 0            
				   and DEFAULT_VIEW = 0            ;
			-- END Oracle Exception
		end -- if;
		if dbo.fnIsEmptyGuid(@ID) = 0 begin -- then
			update EDITVIEWS_FIELDS
			   set MODIFIED_USER_ID  =  null             
			     , DATE_MODIFIED     =  getdate()        
			     , DATE_MODIFIED_UTC =  getutcdate()     
			     , FIELD_TYPE        = N'ListBox'        
			     , DATA_LABEL        = @DATA_LABEL       
			     , DATA_FIELD        = @DATA_FIELD       
			     , CACHE_NAME        = @CACHE_NAME       
			     , DATA_REQUIRED     = @DATA_REQUIRED    
			     , UI_REQUIRED       = @DATA_REQUIRED    
			     , FORMAT_TAB_INDEX  = @FORMAT_TAB_INDEX 
			     , COLSPAN           = @COLSPAN          
			     , FORMAT_ROWS       = @FORMAT_ROWS      
			 where ID = @ID;
		end else begin
			-- 11/24/2006 Paul.  If a blank cannot be found at the expected location, just insert a new record. 
			-- 11/25/2006 Paul.  In order to force the insert, make sure to specify a unique FIELD_INDEX. 
			select @FIELD_INDEX = max(FIELD_INDEX) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
			exec dbo.spEDITVIEWS_FIELDS_InsBoundList @EDIT_NAME, @FIELD_INDEX, @DATA_LABEL, @DATA_FIELD, @DATA_REQUIRED, @FORMAT_TAB_INDEX, @CACHE_NAME, @COLSPAN, @FORMAT_ROWS;
		end -- if;
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_CnvBoundLst to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_CnvChange' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_CnvChange;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/24/2006 Paul.  Create a procedure to convert a Blank to a change. 
-- 09/16/2012 Paul.  Increase ONCLICK_SCRIPT to nvarchar(max). 
Create Procedure dbo.spEDITVIEWS_FIELDS_CnvChange
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @DISPLAY_FIELD     nvarchar(100)
	, @ONCLICK_SCRIPT    nvarchar(max)
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	-- 11/24/2006 Paul.  First make sure that the data field does not already exist. 
	-- BEGIN Oracle Exception
		select @ID = ID
		  from EDITVIEWS_FIELDS
		 where EDIT_NAME    = @EDIT_NAME
		   and DATA_FIELD   = @DATA_FIELD
		   and DELETED      = 0            
		   and DEFAULT_VIEW = 0            ;
	-- END Oracle Exception
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		-- 11/24/2006 Paul.  Search for a Blank record at the specified index position. 
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and FIELD_TYPE   = N'Blank'     
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- 11/24/2006 Paul.  If blank was not found at the expected position, try and locate the first blank. 
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			-- BEGIN Oracle Exception
				select @ID = ID
				  from EDITVIEWS_FIELDS
				 where EDIT_NAME    = @EDIT_NAME
				   and FIELD_INDEX  = (select min(FIELD_INDEX)
				                         from EDITVIEWS_FIELDS
				                        where EDIT_NAME    = @EDIT_NAME
				                          and FIELD_TYPE   = N'Blank'
				                          and DELETED      = 0
				                          and DEFAULT_VIEW = 0)
				   and FIELD_TYPE   = N'Blank'     
				   and DELETED      = 0            
				   and DEFAULT_VIEW = 0            ;
			-- END Oracle Exception
		end -- if;
		if dbo.fnIsEmptyGuid(@ID) = 0 begin -- then
			update EDITVIEWS_FIELDS
			   set MODIFIED_USER_ID =  null             
			     , DATE_MODIFIED    =  getdate()        
			     , DATE_MODIFIED_UTC=  getutcdate()     
			     , FIELD_TYPE       = N'ChangeButton'   
			     , DATA_LABEL       = @DATA_LABEL       
			     , DATA_FIELD       = @DATA_FIELD       
			     , DISPLAY_FIELD    = @DISPLAY_FIELD    
			     , DATA_REQUIRED    = @DATA_REQUIRED    
			     , UI_REQUIRED      = @DATA_REQUIRED    
			     , ONCLICK_SCRIPT   = @ONCLICK_SCRIPT   
			     , FORMAT_TAB_INDEX = @FORMAT_TAB_INDEX 
			     , COLSPAN          = @COLSPAN          
			 where ID = @ID;
		end else begin
			-- 11/24/2006 Paul.  If a blank cannot be found at the expected location, just insert a new record. 
			-- 11/25/2006 Paul.  In order to force the insert, make sure to specify a unique FIELD_INDEX. 
			select @FIELD_INDEX = max(FIELD_INDEX) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
			exec dbo.spEDITVIEWS_FIELDS_InsChange @EDIT_NAME, @FIELD_INDEX, @DATA_LABEL, @DATA_FIELD, @DATA_REQUIRED, @FORMAT_TAB_INDEX, @DISPLAY_FIELD, @ONCLICK_SCRIPT, @COLSPAN;
		end -- if;
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_CnvChange to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_CnvControl' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_CnvControl;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/16/2012 Paul.  Increase ONCLICK_SCRIPT to nvarchar(max). 
Create Procedure dbo.spEDITVIEWS_FIELDS_CnvControl
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @FIELD_TYPE        nvarchar( 50)
	, @ONCLICK_SCRIPT    nvarchar(max)
	, @COLSPAN           int
	, @ROWSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	-- 11/24/2006 Paul.  First make sure that the data field does not already exist. 
	-- BEGIN Oracle Exception
		select @ID = ID
		  from EDITVIEWS_FIELDS
		 where EDIT_NAME    = @EDIT_NAME
		   and DATA_FIELD   = @DATA_FIELD
		   and DELETED      = 0            
		   and DEFAULT_VIEW = 0            ;
	-- END Oracle Exception
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		-- 11/24/2006 Paul.  Search for a Blank record at the specified index position. 
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and FIELD_TYPE   = N'Blank'     
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- 11/24/2006 Paul.  If blank was not found at the expected position, try and locate the first blank. 
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			-- BEGIN Oracle Exception
				select @ID = ID
				  from EDITVIEWS_FIELDS
				 where EDIT_NAME    = @EDIT_NAME
				   and FIELD_INDEX  = (select min(FIELD_INDEX)
				                         from EDITVIEWS_FIELDS
				                        where EDIT_NAME    = @EDIT_NAME
				                          and FIELD_TYPE   = N'Blank'
				                          and DELETED      = 0
				                          and DEFAULT_VIEW = 0)
				   and FIELD_TYPE   = N'Blank'     
				   and DELETED      = 0            
				   and DEFAULT_VIEW = 0            ;
			-- END Oracle Exception
		end -- if;
		if dbo.fnIsEmptyGuid(@ID) = 0 begin -- then
			update EDITVIEWS_FIELDS
			   set MODIFIED_USER_ID =  null             
			     , DATE_MODIFIED    =  getdate()        
			     , DATE_MODIFIED_UTC=  getutcdate()     
			     , FIELD_TYPE        = @FIELD_TYPE       
			     , DATA_LABEL        = @DATA_LABEL       
			     , DATA_FIELD        = @DATA_FIELD       
			     , DATA_REQUIRED     = @DATA_REQUIRED    
			     , UI_REQUIRED       = @DATA_REQUIRED    
			     , ONCLICK_SCRIPT    = @ONCLICK_SCRIPT   
			     , FORMAT_TAB_INDEX  = @FORMAT_TAB_INDEX 
			     , COLSPAN           = @COLSPAN          
			     , ROWSPAN           = @ROWSPAN          
			 where ID = @ID;
		end else begin
			-- 11/24/2006 Paul.  If a blank cannot be found at the expected location, just insert a new record. 
			-- 11/25/2006 Paul.  In order to force the insert, make sure to specify a unique FIELD_INDEX. 
			select @FIELD_INDEX = max(FIELD_INDEX) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
			exec dbo.spEDITVIEWS_FIELDS_InsControl @EDIT_NAME, @FIELD_INDEX, @DATA_LABEL, @DATA_FIELD, @DATA_REQUIRED, @FORMAT_TAB_INDEX, @FIELD_TYPE, @ONCLICK_SCRIPT, @COLSPAN, @ROWSPAN;
		end -- if;
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_CnvControl to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_CnvModulePopup' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_CnvModulePopup;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/27/2009 Paul.  We need to make it easier to convert a ChangeButton to a ModulePopup. 
-- 08/27/2009 Paul.  Also allow conversion from ListBox to a ModulePopup. 
-- 04/20/2016 Paul.  Add team management to Outbound Emails. 
Create Procedure dbo.spEDITVIEWS_FIELDS_CnvModulePopup
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @DISPLAY_FIELD     nvarchar(100)
	, @MODULE_TYPE       nvarchar(25)
	, @COLSPAN           int
	)
as
  begin
	-- 08/26/2009 Paul.  We are going to ignore the following fields for now. 
	-- Keeping them in the method will make it easy to duplicate the InsModulePopup call. 
	-- @DATA_REQUIRED     bit
	-- @FORMAT_TAB_INDEX  int
	-- @DISPLAY_FIELD     nvarchar(100)
	-- @MODULE_TYPE       nvarchar(25)
	-- @COLSPAN           int

	if exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = @EDIT_NAME and DATA_FIELD = @DATA_FIELD and FIELD_TYPE = N'ChangeButton' and DELETED = 0) begin -- then
		-- 08/27/2009 Paul.  The update will take care of the main record and the default view record. 
		update EDITVIEWS_FIELDS
		   set FIELD_TYPE        = N'ModulePopup'
		     , MODULE_TYPE       = @MODULE_TYPE
		     , ONCLICK_SCRIPT    = null
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = null
		 where EDIT_NAME         = @EDIT_NAME
		   and DATA_FIELD        = @DATA_FIELD
		   and FIELD_TYPE        = N'ChangeButton'
		   and DELETED           = 0;
	end -- if;

	if exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = @EDIT_NAME and DATA_FIELD = @DATA_FIELD and FIELD_TYPE = N'ListBox' and DELETED = 0) begin -- then
		-- 08/27/2009 Paul.  The update will take care of the main record and the default view record. 
		update EDITVIEWS_FIELDS
		   set FIELD_TYPE        = N'ModulePopup'
		     , MODULE_TYPE       = @MODULE_TYPE
		     , ONCLICK_SCRIPT    = null
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = null
		 where EDIT_NAME         = @EDIT_NAME
		   and DATA_FIELD        = @DATA_FIELD
		   and FIELD_TYPE        = N'ListBox'
		   and DELETED           = 0;
	end -- if;

	-- 04/20/2016 Paul.  Add team management to Outbound Emails. 
	if exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = @EDIT_NAME and FIELD_INDEX = @FIELD_INDEX and FIELD_TYPE = N'Blank' and DELETED = 0) begin -- then
		update EDITVIEWS_FIELDS
		   set FIELD_TYPE        = N'ModulePopup'
		     , DATA_LABEL        = @DATA_LABEL
		     , DATA_FIELD        = @DATA_FIELD
		     , DATA_REQUIRED     = @DATA_REQUIRED
		     , UI_REQUIRED       = @DATA_REQUIRED
		     , FORMAT_TAB_INDEX  = @FORMAT_TAB_INDEX
		     , DISPLAY_FIELD     = @DISPLAY_FIELD
		     , MODULE_TYPE       = @MODULE_TYPE
		     , COLSPAN           = @COLSPAN
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = null
		 where EDIT_NAME         = @EDIT_NAME
		   and FIELD_INDEX       = @FIELD_INDEX
		   and FIELD_TYPE        = N'Blank'
		   and DELETED           = 0;
	end -- if;
  end
GO

Grant Execute on dbo.spEDITVIEWS_FIELDS_CnvModulePopup to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_CnvNaicsSelect' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_CnvNaicsSelect;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_FIELDS_CnvNaicsSelect
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @FORMAT_TAB_INDEX  int
	, @COLSPAN           int
	)
as
  begin
	declare @ID                uniqueidentifier;
	declare @DATA_LABEL        nvarchar(150);
	declare @DATA_FIELD        nvarchar(100);
	declare @DATA_REQUIRED     bit;
	declare @DISPLAY_FIELD     nvarchar(100);
	declare @MODULE_TYPE       nvarchar(25);
	
	set @DATA_LABEL  = N'NAICSCodes.LBL_NAICS_SET_NAME';
	set @DATA_FIELD  = N'NAICS_SET_NAME';
	set @MODULE_TYPE = N'NAICSCodes';

	-- 05/12/2016 Paul.  First make sure that the data field does not already exist. 
	-- BEGIN Oracle Exception
		select @ID = ID
		  from EDITVIEWS_FIELDS
		 where EDIT_NAME    = @EDIT_NAME
		   and DATA_FIELD   = @DATA_FIELD
		   and DELETED      = 0            
		   and DEFAULT_VIEW = 0            ;
	-- END Oracle Exception
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		-- 05/12/2016 Paul.  Search for a Blank record at the specified index position. 
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and FIELD_TYPE   = N'Blank'     
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- 05/12/2016 Paul.  If blank was not found at the expected position, try and locate the first blank. 
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			-- BEGIN Oracle Exception
				select @ID = ID
				  from EDITVIEWS_FIELDS
				 where EDIT_NAME    = @EDIT_NAME
				   and FIELD_INDEX  = (select min(FIELD_INDEX)
				                         from EDITVIEWS_FIELDS
				                        where EDIT_NAME    = @EDIT_NAME
				                          and FIELD_TYPE   = N'Blank'
				                          and DELETED      = 0
				                          and DEFAULT_VIEW = 0)
				   and FIELD_TYPE   = N'Blank'     
				   and DELETED      = 0            
				   and DEFAULT_VIEW = 0            ;
			-- END Oracle Exception
		end -- if;
		if dbo.fnIsEmptyGuid(@ID) = 0 begin -- then
			update EDITVIEWS_FIELDS
			   set MODIFIED_USER_ID  =  null             
			     , DATE_MODIFIED     =  getdate()        
			     , DATE_MODIFIED_UTC =  getutcdate()     
			     , FORMAT_MAX_LENGTH = null
			     , FIELD_TYPE        = N'NAICSCodeSelect'        
			     , DATA_LABEL        = @DATA_LABEL       
			     , DATA_FIELD        = @DATA_FIELD       
			     , DATA_REQUIRED     = @DATA_REQUIRED    
			     , UI_REQUIRED       = @DATA_REQUIRED    
			     , FORMAT_SIZE       = null      
			     , FORMAT_TAB_INDEX  = @FORMAT_TAB_INDEX 
			     , COLSPAN           = @COLSPAN          
			 where ID = @ID;
		end else begin
			-- 05/12/2016 Paul.  If a blank cannot be found at the expected location, just insert a new record. 
			-- 11/25/2006 Paul.  In order to force the insert, make sure to specify a unique FIELD_INDEX. 
			select @FIELD_INDEX = max(FIELD_INDEX) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
			exec dbo.spEDITVIEWS_FIELDS_InsNaicsSelect @EDIT_NAME, @FIELD_INDEX, @FORMAT_TAB_INDEX, @COLSPAN;
		end -- if;
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_CnvNaicsSelect to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_CnvTagSelect' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_CnvTagSelect;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_FIELDS_CnvTagSelect
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @FORMAT_TAB_INDEX  int
	, @COLSPAN           int
	)
as
  begin
	declare @ID                uniqueidentifier;
	declare @DATA_LABEL        nvarchar(150);
	declare @DATA_FIELD        nvarchar(100);
	declare @DATA_REQUIRED     bit;
	declare @DISPLAY_FIELD     nvarchar(100);
	declare @MODULE_TYPE       nvarchar(25);
	
	set @DATA_LABEL  = N'.LBL_TAG_SET_NAME';
	set @DATA_FIELD  = N'TAG_SET_NAME';
	set @MODULE_TYPE = N'Tags';

	-- 05/12/2016 Paul.  First make sure that the data field does not already exist. 
	-- BEGIN Oracle Exception
		select @ID = ID
		  from EDITVIEWS_FIELDS
		 where EDIT_NAME    = @EDIT_NAME
		   and DATA_FIELD   = @DATA_FIELD
		   and DELETED      = 0            
		   and DEFAULT_VIEW = 0            ;
	-- END Oracle Exception
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		-- 05/12/2016 Paul.  Search for a Blank record at the specified index position. 
		-- BEGIN Oracle Exception
			select @ID = ID
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and FIELD_INDEX  = @FIELD_INDEX
			   and FIELD_TYPE   = N'Blank'     
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
		-- END Oracle Exception
		-- 05/12/2016 Paul.  If blank was not found at the expected position, try and locate the first blank. 
		if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
			-- BEGIN Oracle Exception
				select @ID = ID
				  from EDITVIEWS_FIELDS
				 where EDIT_NAME    = @EDIT_NAME
				   and FIELD_INDEX  = (select min(FIELD_INDEX)
				                         from EDITVIEWS_FIELDS
				                        where EDIT_NAME    = @EDIT_NAME
				                          and FIELD_TYPE   = N'Blank'
				                          and DELETED      = 0
				                          and DEFAULT_VIEW = 0)
				   and FIELD_TYPE   = N'Blank'     
				   and DELETED      = 0            
				   and DEFAULT_VIEW = 0            ;
			-- END Oracle Exception
		end -- if;
		if dbo.fnIsEmptyGuid(@ID) = 0 begin -- then
			update EDITVIEWS_FIELDS
			   set MODIFIED_USER_ID  =  null             
			     , DATE_MODIFIED     =  getdate()        
			     , DATE_MODIFIED_UTC =  getutcdate()     
			     , FORMAT_MAX_LENGTH = null
			     , FIELD_TYPE        = N'TagSelect'        
			     , DATA_LABEL        = @DATA_LABEL       
			     , DATA_FIELD        = @DATA_FIELD       
			     , DATA_REQUIRED     = @DATA_REQUIRED    
			     , UI_REQUIRED       = @DATA_REQUIRED    
			     , FORMAT_SIZE       = null      
			     , FORMAT_TAB_INDEX  = @FORMAT_TAB_INDEX 
			     , COLSPAN           = @COLSPAN          
			 where ID = @ID;
		end else begin
			-- 05/12/2016 Paul.  If a blank cannot be found at the expected location, just insert a new record. 
			-- 11/25/2006 Paul.  In order to force the insert, make sure to specify a unique FIELD_INDEX. 
			select @FIELD_INDEX = max(FIELD_INDEX) + 1
			  from EDITVIEWS_FIELDS
			 where EDIT_NAME    = @EDIT_NAME
			   and DELETED      = 0            
			   and DEFAULT_VIEW = 0            ;
			exec dbo.spEDITVIEWS_FIELDS_InsTagSelect @EDIT_NAME, @FIELD_INDEX, @FORMAT_TAB_INDEX, @COLSPAN;
		end -- if;
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_CnvTagSelect to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_CnvZipCodePopup' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_CnvZipCodePopup;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_FIELDS_CnvZipCodePopup
	( @EDIT_NAME         nvarchar( 50)
	, @DATA_FIELD        nvarchar(100)
	)
as
  begin
	if exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = @EDIT_NAME and DATA_FIELD = @DATA_FIELD and FIELD_TYPE = N'TextBox' and DELETED = 0) begin -- then
		update EDITVIEWS_FIELDS
		   set FIELD_TYPE        = N'ZipCodePopup'
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = null
		 where EDIT_NAME         = @EDIT_NAME
		   and DATA_FIELD        = @DATA_FIELD
		   and FIELD_TYPE        = N'TextBox'
		   and DELETED           = 0;
	end -- if;
  end
GO

Grant Execute on dbo.spEDITVIEWS_FIELDS_CnvZipCodePopup to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_LstChange' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_LstChange;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 11/25/2006 Paul.  Create a procedure to convert a BoundList to a ChangeButton. 
-- This is because SugarCRM changed the Assigned To listbox to a Change field. 
-- 09/16/2012 Paul.  Increase ONCLICK_SCRIPT to nvarchar(max). 
Create Procedure dbo.spEDITVIEWS_FIELDS_LstChange
	( @EDIT_NAME         nvarchar( 50)
	, @FIELD_INDEX       int
	, @DATA_LABEL        nvarchar(150)
	, @DATA_FIELD        nvarchar(100)
	, @DATA_REQUIRED     bit
	, @FORMAT_TAB_INDEX  int
	, @DISPLAY_FIELD     nvarchar(100)
	, @ONCLICK_SCRIPT    nvarchar(max)
	, @COLSPAN           int
	)
as
  begin
	declare @ID uniqueidentifier;
	
	-- 11/25/2006 Paul.  First make sure that the data field exists. 
	-- BEGIN Oracle Exception
		select @ID = ID
		  from EDITVIEWS_FIELDS
		 where EDIT_NAME    = @EDIT_NAME
		   and DATA_FIELD   = @DATA_FIELD
		   and FIELD_TYPE   = N'ListBox'
		   and DELETED      = 0            
		   and DEFAULT_VIEW = 0            ;
	-- END Oracle Exception
	if dbo.fnIsEmptyGuid(@ID) = 0 begin -- then
		update EDITVIEWS_FIELDS
		   set MODIFIED_USER_ID =  null             
		     , DATE_MODIFIED    =  getdate()        
		     , DATE_MODIFIED_UTC=  getutcdate()     
		     , FIELD_TYPE       = N'ChangeButton'   
		     , DATA_LABEL       = @DATA_LABEL       
		     , CACHE_NAME       = null
		     , DISPLAY_FIELD    = @DISPLAY_FIELD    
		     , DATA_REQUIRED    = @DATA_REQUIRED    
		     , UI_REQUIRED      = @DATA_REQUIRED    
		     , ONCLICK_SCRIPT   = @ONCLICK_SCRIPT   
		     , FORMAT_TAB_INDEX = @FORMAT_TAB_INDEX 
		     , COLSPAN          = @COLSPAN          
		 where ID = @ID;
	end -- if;
	
	-- 11/25/2006 Paul.  Also change the default view. 
	-- BEGIN Oracle Exception
		select @ID = ID
		  from EDITVIEWS_FIELDS
		 where EDIT_NAME    = @EDIT_NAME
		   and DATA_FIELD   = @DATA_FIELD
		   and FIELD_TYPE   = N'ListBox'
		   and DELETED      = 0            
		   and DEFAULT_VIEW = 1            ;
	-- END Oracle Exception
	if dbo.fnIsEmptyGuid(@ID) = 0 begin -- then
		update EDITVIEWS_FIELDS
		   set MODIFIED_USER_ID =  null             
		     , DATE_MODIFIED    =  getdate()        
		     , DATE_MODIFIED_UTC=  getutcdate()     
		     , FIELD_TYPE       = N'ChangeButton'   
		     , DATA_LABEL       = @DATA_LABEL       
		     , CACHE_NAME       = null
		     , DISPLAY_FIELD    = @DISPLAY_FIELD    
		     , DATA_REQUIRED    = @DATA_REQUIRED    
		     , UI_REQUIRED      = @DATA_REQUIRED    
		     , ONCLICK_SCRIPT   = @ONCLICK_SCRIPT   
		     , FORMAT_TAB_INDEX = @FORMAT_TAB_INDEX 
		     , COLSPAN          = @COLSPAN          
		 where ID = @ID;
	end -- if;
  end
GO
 
Grant Execute on dbo.spEDITVIEWS_FIELDS_LstChange to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spEDITVIEWS_FIELDS_MergeView' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spEDITVIEWS_FIELDS_MergeView;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spEDITVIEWS_FIELDS_MergeView
	( @EDIT_NAME         nvarchar( 50)
	, @MERGE_NAME        nvarchar( 50)
	, @DATA_LABEL1       nvarchar(150)
	, @DATA_LABEL2       nvarchar(150)
	)
as
  begin
	declare @ID          uniqueidentifier;
	declare @FIELD_WIDTH nvarchar(10);
	declare @FIELD_INDEX int;

-- #if SQL_Server /*
	declare merge_cursor cursor for
	select ID
	     , FIELD_WIDTH
	  from vwEDITVIEWS_FIELDS
	 where EDIT_NAME = @MERGE_NAME
	 order by FIELD_INDEX;
-- #endif SQL_Server */

/* -- #if IBM_DB2
	declare continue handler for not found
		set in_FETCH_STATUS = 1;
-- #endif IBM_DB2 */
/* -- #if MySQL
	declare continue handler for not found
		set in_FETCH_STATUS = 1;
	set in_FETCH_STATUS = 0;
-- #endif MySQL */

	select @FIELD_INDEX = isnull(max(FIELD_INDEX), 0)
	  from vwEDITVIEWS_FIELDS
	 where EDIT_NAME = @EDIT_NAME;

	if exists(select * from vwEDITVIEWS_FIELDS where EDIT_NAME = @MERGE_NAME) begin -- then
		set @FIELD_INDEX = @FIELD_INDEX + 1;
		exec dbo.spEDITVIEWS_FIELDS_InsSeparator @EDIT_NAME, @FIELD_INDEX;
		if @DATA_LABEL1 is not null and @DATA_LABEL2 is not null begin -- then
			set @FIELD_INDEX = @FIELD_INDEX + 1;
			exec dbo.spEDITVIEWS_FIELDS_InsHeader    @EDIT_NAME, @FIELD_INDEX, @DATA_LABEL1, null;
			set @FIELD_INDEX = @FIELD_INDEX + 1;
			exec dbo.spEDITVIEWS_FIELDS_InsHeader    @EDIT_NAME, @FIELD_INDEX, @DATA_LABEL2, null;
		end else if @DATA_LABEL1 is not null begin -- then
			set @FIELD_INDEX = @FIELD_INDEX + 1;
			exec dbo.spEDITVIEWS_FIELDS_InsHeader    @EDIT_NAME, @FIELD_INDEX, @DATA_LABEL1, 3;
		end -- if;
	end -- if;

	open merge_cursor;
	fetch next from merge_cursor into @ID, @FIELD_WIDTH;
	while @@FETCH_STATUS = 0 begin -- do
		set @FIELD_INDEX = @FIELD_INDEX + 1;
		-- 09/03/2012 Paul.  We need to make sure to convert 1 column 85% to colspan. 
		update EDITVIEWS_FIELDS
		   set EDIT_NAME         = @EDIT_NAME
		     , FIELD_INDEX       = @FIELD_INDEX
		     , COLSPAN           = (case when @FIELD_WIDTH = '85%' then 3 else COLSPAN end)
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = null
		 where ID                = @ID;
		fetch next from merge_cursor into @ID, @FIELD_WIDTH;
/* -- #if Oracle
		IF merge_cursor%NOTFOUND THEN
			StoO_sqlstatus := 2;
			StoO_fetchstatus := -1;
		ELSE
			StoO_sqlstatus := 0;
			StoO_fetchstatus := 0;
		END IF;
-- #endif Oracle */
	end -- while;
	close merge_cursor;
	deallocate merge_cursor;

	update EDITVIEWS
	   set DELETED           = 1
	     , DATE_MODIFIED     = getdate()
	     , DATE_MODIFIED_UTC = getutcdate()
	     , MODIFIED_USER_ID  = null
	 where NAME              = @MERGE_NAME;
  end
GO

Grant Execute on dbo.spEDITVIEWS_FIELDS_MergeView to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spFIELDS_META_DATA_DeleteByName' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spFIELDS_META_DATA_DeleteByName;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 03/29/2011 Paul.  Ease migration to Oracle. 
-- 04/18/2016 Paul.  Allow disable recompile so that we can do in the background. 
Create Procedure dbo.spFIELDS_META_DATA_DeleteByName
	( @MODIFIED_USER_ID  uniqueidentifier
	, @CUSTOM_MODULE     nvarchar(255)
	, @NAME              nvarchar(255)
	, @DISABLE_RECOMPILE bit = null
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	-- BEGIN Oracle Exception
		select @ID = ID
		  from FIELDS_META_DATA
		 where @CUSTOM_MODULE = CUSTOM_MODULE
		   and @NAME          = NAME
		   and DELETED        = 0;
	-- END Oracle Exception

	if dbo.fnIsEmptyGuid(@ID) = 0 begin -- then
		exec dbo.spFIELDS_META_DATA_Delete @ID, @MODIFIED_USER_ID, @DISABLE_RECOMPILE;
	end -- if;
  end
GO

Grant Execute on dbo.spFIELDS_META_DATA_DeleteByName to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spOAUTHKEYS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spOAUTHKEYS_Update;
GO

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/09/2012 Paul.  Twitter has a 40 character verifier. 
-- 04/13/2012 Paul.  Facebook has a 111 character access token. 
Create Procedure dbo.spOAUTHKEYS_Update
	( @MODIFIED_USER_ID   uniqueidentifier
	, @ASSIGNED_USER_ID   uniqueidentifier
	, @NAME               nvarchar(25)
	, @TOKEN              nvarchar(200)
	, @SECRET             nvarchar(50)
	, @VERIFIER           nvarchar(50)
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	
	exec dbo.spOAUTHKEYS_Delete @MODIFIED_USER_ID, @ASSIGNED_USER_ID, @NAME;
	
	set @ID = newid();
	insert into OAUTHKEYS
		( ID                
		, CREATED_BY        
		, DATE_ENTERED      
		, MODIFIED_USER_ID  
		, DATE_MODIFIED     
		, DATE_MODIFIED_UTC 
		, ASSIGNED_USER_ID  
		, NAME              
		, TOKEN             
		, SECRET            
		, VERIFIER          
		)
	values 	( @ID                
		, @MODIFIED_USER_ID        
		,  getdate()         
		, @MODIFIED_USER_ID  
		,  getdate()         
		,  getutcdate()      
		, @ASSIGNED_USER_ID  
		, @NAME              
		, @TOKEN             
		, @SECRET            
		, @VERIFIER          
		);
  end
GO

Grant Execute on dbo.spOAUTHKEYS_Update to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTEAMS_InsertPrivate' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTEAMS_InsertPrivate;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/23/2008 Paul.  This procedure as been stubbed-out as it is usedin spEMAILS_Update. 
Create Procedure dbo.spTEAMS_InsertPrivate
	( @MODIFIED_USER_ID  uniqueidentifier
	, @USER_ID           uniqueidentifier
	, @USER_NAME         nvarchar(20)
	, @FULL_NAME         nvarchar(100)
	)
as
  begin
	set nocount on
	
  end
GO
 
Grant Execute on dbo.spTEAMS_InsertPrivate to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTEAM_MEMBERSHIPS_MassUpdate' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTEAM_MEMBERSHIPS_MassUpdate;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spTEAM_MEMBERSHIPS_MassUpdate
	( @TEAM_ID           uniqueidentifier
	, @MODIFIED_USER_ID  uniqueidentifier
	, @ID_LIST           varchar(8000)
	)
as
  begin
	set nocount on
	
	declare @USER_ID      uniqueidentifier;
	declare @CurrentPosR  int;
	declare @NextPosR     int;
	set @CurrentPosR = 1;
	while @CurrentPosR <= len(@ID_LIST) begin -- do
		-- 10/04/2006 Paul.  charindex should not use unicode parameters as it will limit all inputs to 4000 characters. 
		set @NextPosR = charindex(',', @ID_LIST,  @CurrentPosR);
		if @NextPosR = 0 or @NextPosR is null begin -- then
			set @NextPosR = len(@ID_LIST) + 1;
		end -- if;
		set @USER_ID = cast(rtrim(ltrim(substring(@ID_LIST, @CurrentPosR, @NextPosR - @CurrentPosR))) as uniqueidentifier);
		set @CurrentPosR = @NextPosR+1;

		exec dbo.spTEAM_MEMBERSHIPS_Update @MODIFIED_USER_ID, @TEAM_ID, @USER_ID, 1;
	end -- while;
  end
GO
 
Grant Execute on dbo.spTEAM_MEMBERSHIPS_MassUpdate to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSERS_Delete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSERS_Delete;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 10/15/2006 Paul.  Delete team memberships. 
-- 11/18/2006 Paul.  Use a procedure to delete the user from the teams so that all implicit assignments can be recalculated. 
-- 09/12/2010 Paul.  We stopped using the table ROLES_USERS years ago. 
-- 09/12/2010 Paul.  VCALS was never used. 
-- 01/30/2019 Paul.  Trigger audit record so delete workflow will have access to custom fields. 
Create Procedure dbo.spUSERS_Delete
	( @ID               uniqueidentifier
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	-- 04/02/2006 Paul.  Catch the Oracle NO_DATA_FOUND exception. 
	-- BEGIN Oracle Exception
		-- 12/20/2005 Paul.  SugarCRM 4.0 relates Users to Prospect Lists.
		update PROSPECT_LISTS_PROSPECTS
		   set DELETED          = 1
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where RELATED_ID       = @ID
		   and DELETED          = 0;
	-- END Oracle Exception
	
	-- BEGIN Oracle Exception
		update CALLS_USERS
		   set DELETED          = 1
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where USER_ID          = @ID
		   and DELETED          = 0;
	-- END Oracle Exception
	
	-- BEGIN Oracle Exception
		update CONTACTS_USERS
		   set DELETED          = 1
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where USER_ID          = @ID
		   and DELETED          = 0;
	-- END Oracle Exception
	
	/*
	-- BEGIN Oracle Exception
		-- 11/13/2005 Paul.  Not sure if it makes sense to delete email relationships as they amount to a log.
		update EMAILMAN
		   set DELETED          = 1
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where USER_ID          = @ID
		   and DELETED          = 0;
	-- END Oracle Exception
	
	-- BEGIN Oracle Exception
		update EMAILMAN_SENT
		   set DELETED          = 1
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where USER_ID          = @ID
		   and DELETED          = 0;
	-- END Oracle Exception
	
	-- BEGIN Oracle Exception
		update EMAILS_USERS
		   set DELETED          = 1
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where USER_ID          = @ID
		   and DELETED          = 0;
	-- END Oracle Exception
	*/
	-- BEGIN Oracle Exception
		update MEETINGS_USERS
		   set DELETED          = 1
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where USER_ID          = @ID
		   and DELETED          = 0;
	-- END Oracle Exception
	
	-- BEGIN Oracle Exception
		update USERS_FEEDS
		   set DELETED          = 1
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where USER_ID          = @ID
		   and DELETED          = 0;
	-- END Oracle Exception
	
	-- BEGIN Oracle Exception
		delete from TRACKER
		 where ITEM_ID          = @ID
		   and USER_ID          = @MODIFIED_USER_ID;
	-- END Oracle Exception
	
	exec dbo.spPARENT_Delete @ID, @MODIFIED_USER_ID;

	-- 11/18/2006 Paul.  Only use team procedures when team management has been enabled. 
	if dbo.fnCONFIG_Boolean(N'enable_team_management') = 1 begin -- then
		exec dbo.spTEAM_MEMBERSHIPS_DeleteUser @MODIFIED_USER_ID, @ID;
	end -- if;
	
	-- BEGIN Oracle Exception
		update USERS
		   set DELETED          = 1
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = @MODIFIED_USER_ID
		 where ID               = @ID
		   and DELETED          = 0;

		-- 01/30/2019 Paul.  Trigger audit record so delete workflow will have access to custom fields. 
		update USERS_CSTM
		   set ID_C             = ID_C
		 where ID_C             = @ID;
	-- END Oracle Exception
  end
GO
 
Grant Execute on dbo.spUSERS_Delete to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSERS_TEAM_MEMBERSHIPS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSERS_TEAM_MEMBERSHIPS_Update;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 05/28/2020 Paul.  Wrapper to simplify support for React Client. 
Create Procedure dbo.spUSERS_TEAM_MEMBERSHIPS_Update
	( @MODIFIED_USER_ID  uniqueidentifier
	, @USER_ID           uniqueidentifier
	, @TEAM_ID           uniqueidentifier
	)
as
  begin
	set nocount on
	
	exec dbo.spTEAM_MEMBERSHIPS_Update @MODIFIED_USER_ID, @TEAM_ID, @USER_ID, 1;
  end
GO
 
Grant Execute on dbo.spUSERS_TEAM_MEMBERSHIPS_Update to public;
GO
 
 

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spTEAMS_InitPrivate' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spTEAMS_InitPrivate;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/23/2008 Paul.  This procedure as been stubbed-out as it is usedin spEMAILS_Update. 
Create Procedure dbo.spTEAMS_InitPrivate
as
  begin
	set nocount on
	
  end
GO


Grant Execute on dbo.spTEAMS_InitPrivate to public;
GO



if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSERS_InsertNTLM' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSERS_InsertNTLM;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 08/08/2006 Paul.  Set default role if defined. 
-- 11/18/2006 Paul.  If team management is enabled, create a private team for this user. 
-- 02/26/2008 Paul.  Increase USER_NAME so that an email can be used to login. 
-- 08/08/2008 Paul.  Status should not be NULL. InsertNTLM was not setting the value. 
-- The problem with Status being null is that the user is not displayed in the Users list. 
-- 08/27/2008 Paul.  PostgreSQL does not allow modifying input parameters.  Use a local temp variable. 
-- 10/19/2010 Paul.  Set global default team if defined. 
-- 08/18/2016 Paul.  Provide a way to disable NTLM new user creation. 
Create Procedure dbo.spUSERS_InsertNTLM
	( @ID                     uniqueidentifier output
	, @USER_DOMAIN            nvarchar(20)
	, @USER_NAME              nvarchar(60)
	, @IS_ADMIN               bit
	)
as
  begin
	set nocount on
	
	-- 08/08/2006 Paul.  Set default role if defined. 
	declare @DEFAULT_ROLE_ID  uniqueidentifier;
	declare @TEMP_USER_DOMAIN nvarchar(20);
	declare @TEMP_USER_NAME   nvarchar(60);
	-- 10/19/2010 Paul.  Set global default team if defined. 
	declare @GLOBAL_DEFAULT_TEAM_ID    uniqueidentifier;
	declare @DISABLE_NTLM     bit;

	set @DISABLE_NTLM = dbo.fnCONFIG_Boolean('Users.DisableNTLM');
	if @DISABLE_NTLM = 1 begin -- then
		raiserror(N'spUSERS_InsertNTLM: %s has attempted to access the system, but new user creation has been disabled.', 16, 1, @USER_NAME);
		return;
	end -- if;

	-- BEGIN Oracle Exception
		select @DEFAULT_ROLE_ID = ACL_ROLES.ID
		  from      ACL_ROLES
		 inner join CONFIG
		         on cast(CONFIG.VALUE as varchar(36)) = cast(ACL_ROLES.ID as varchar(36))
		        and lower(CONFIG.NAME)                = N'default_role'
		        and CONFIG.DELETED                    = 0
		 where ACL_ROLES.DELETED = 0
		   and datalength(CONFIG.VALUE) > 0;
	-- END Oracle Exception
	
	if dbo.fnCONFIG_Boolean(N'enable_team_management') = 1 begin -- then
		-- BEGIN Oracle Exception
			select @GLOBAL_DEFAULT_TEAM_ID = TEAMS.ID
			  from      TEAMS
			 inner join CONFIG
			         on cast(CONFIG.VALUE as varchar(36)) = cast(TEAMS.ID as varchar(36))
			        and lower(CONFIG.NAME)                = N'default_team'
			        and CONFIG.DELETED                    = 0
			 where TEAMS.DELETED = 0
			   and datalength(CONFIG.VALUE) > 0;
		-- END Oracle Exception
	end -- if;
	
	-- 11/18/2005 Paul.  User Domain is not used, but we are planning ahead. 
	set @TEMP_USER_DOMAIN = lower(@USER_DOMAIN);
	set @TEMP_USER_NAME   = lower(@USER_NAME);
	-- 12/18/2005 Paul.  Make sure not to find deleted users. 
	if not exists(select * from USERS where USER_NAME = @TEMP_USER_NAME and DELETED = 0) begin -- then
		set @ID = newid();
		-- 05/02/2016 Paul.  Default SAVE_QUERY to 1. 
		-- 05/20/2106 Paul.  Value should be 1, not 10. 
		insert into USERS
			( ID                    
			, USER_NAME             
			, LAST_NAME             
			, IS_ADMIN              
			, CREATED_BY            
			, DATE_ENTERED          
			, MODIFIED_USER_ID      
			, DATE_MODIFIED         
			, STATUS                
			, SAVE_QUERY            
			)
		values
			( @ID                    
			, @TEMP_USER_NAME        
			, @TEMP_USER_NAME        
			, @IS_ADMIN              
			, @ID                    
			,  getdate()             
			, @ID                    
			,  getdate()             
			, N'Active'              
			, 1                      
			);

		-- 04/21/2006 Paul.  Always create a custom record. 
		insert into USERS_CSTM ( ID_C ) values ( @ID );

		-- 08/12/2006 Paul.  Set default role if defined. 
		if dbo.fnIsEmptyGuid(@DEFAULT_ROLE_ID) = 0 begin -- then
			exec dbo.spACL_ROLES_USERS_Update @ID, @DEFAULT_ROLE_ID, @ID;
		end -- if;
		-- 11/18/2006 Paul.  Only use team procedures when team management has been enabled. 
		if dbo.fnCONFIG_Boolean(N'enable_team_management') = 1 begin -- then
			exec dbo.spTEAMS_InsertPrivate @ID, @ID, @TEMP_USER_NAME, @TEMP_USER_NAME;
			-- 10/19/2010 Paul.  Set global default team if defined. 
			if dbo.fnIsEmptyGuid(@GLOBAL_DEFAULT_TEAM_ID) = 0 begin -- then
				exec dbo.spTEAM_MEMBERSHIPS_Update null, @GLOBAL_DEFAULT_TEAM_ID, @ID, 1;
			end -- if;
		end -- if;
	end -- if;
  end
GO
 
Grant Execute on dbo.spUSERS_InsertNTLM to public;
GO
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSERS_MassDelete' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSERS_MassDelete;
GO
 

/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spUSERS_MassDelete
	( @ID_LIST          varchar(8000)
	, @MODIFIED_USER_ID uniqueidentifier
	)
as
  begin
	set nocount on
	
	declare @ID           uniqueidentifier;
	declare @CurrentPosR  int;
	declare @NextPosR     int;
	set @CurrentPosR = 1;
	while @CurrentPosR <= len(@ID_LIST) begin -- do
		-- 10/04/2006 Paul.  charindex should not use unicode parameters as it will limit all inputs to 4000 characters. 
		set @NextPosR = charindex(',', @ID_LIST,  @CurrentPosR);
		if @NextPosR = 0 or @NextPosR is null begin -- then
			set @NextPosR = len(@ID_LIST) + 1;
		end -- if;
		set @ID = cast(rtrim(ltrim(substring(@ID_LIST, @CurrentPosR, @NextPosR - @CurrentPosR))) as uniqueidentifier);
		set @CurrentPosR = @NextPosR+1;
		exec dbo.spUSERS_Delete @ID, @MODIFIED_USER_ID;
	end -- while;
  end
GO
 
Grant Execute on dbo.spUSERS_MassDelete to public;
GO
 
 
if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSERS_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSERS_Update;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/21/2006 Paul.  IS_GROUP was added in SugarCRM 4.0.
-- 08/08/2006 Paul.  Set default role if defined. 
-- 11/18/2006 Paul.  If team management is enabled, create a private team for this user. 
-- 11/18/2006 Paul.  Also watch for changes to REPORTS_TO_ID so that teams can be refreshed. 
-- 02/26/2008 Paul.  Increase USER_NAME so that an email can be used to login. 
-- 08/27/2008 Paul.  PostgreSQL does not allow modifying input parameters.  Use a local temp variable. 
-- 09/28/2008 Paul.  Block insert or update if number of users exceeds the max. 
-- 05/06/2009 Paul.  Add DEFAULT_TEAM to support SugarCRM migration. 
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
-- 11/26/2009 Paul.  We need to make sure that the default team is added to the membership table. 
-- 03/16/2010 Paul.  Add IS_ADMIN_DELEGATE. 
-- 07/09/2010 Paul.  Move the SMTP values from USER_PREFERENCES to the main table to make it easier to access. 
-- 07/09/2010 Paul.  SMTP values belong in the OUTBOUND_EMAILS table. 
-- 10/19/2010 Paul.  Set global default team if defined. 
-- 03/04/2011 Paul.  We need to allow the admin to set the flag to force a password change. 
-- 03/25/2011 Paul.  Add support for Google Apps. 
-- 03/25/2011 Paul.  Create a separate field for the Facebook ID. 
-- 12/13/2011 Paul.  Add support for Apple iCloud. 
-- 12/15/2012 Paul.  Move USER_PREFERENCES to separate fields for easier access on Surface RT. 
-- 09/20/2013 Paul.  Move EXTENSION to the main table. 
-- 09/27/2013 Paul.  SMS messages need to be opt-in. 
-- 11/21/2014 Paul.  Add User Picture. 
-- 04/20/2016 Paul.  Provide a way to allow each user to have their own SMTP server. 
-- 02/01/2017 Paul.  Add support for Exchange using Username/Password. 
-- 11/24/2017 Paul.  Provide a way to format phone numbers.  
-- 03/09/2020 Paul.  Increase @MAIL_SMTPPASS to 100. 
Create Procedure dbo.spUSERS_Update
	( @ID                     uniqueidentifier output
	, @MODIFIED_USER_ID       uniqueidentifier
	, @USER_NAME              nvarchar(60)
	, @FIRST_NAME             nvarchar(30)
	, @LAST_NAME              nvarchar(30)
	, @REPORTS_TO_ID          uniqueidentifier
	, @IS_ADMIN               bit
	, @RECEIVE_NOTIFICATIONS  bit
	, @DESCRIPTION            nvarchar(max)
	, @TITLE                  nvarchar(50)
	, @DEPARTMENT             nvarchar(50)
	, @PHONE_HOME             nvarchar(50)
	, @PHONE_MOBILE           nvarchar(50)
	, @PHONE_WORK             nvarchar(50)
	, @PHONE_OTHER            nvarchar(50)
	, @PHONE_FAX              nvarchar(50)
	, @EMAIL1                 nvarchar(100)
	, @EMAIL2                 nvarchar(100)
	, @STATUS                 nvarchar(25)
	, @ADDRESS_STREET         nvarchar(150)
	, @ADDRESS_CITY           nvarchar(100)
	, @ADDRESS_STATE          nvarchar(100)
	, @ADDRESS_POSTALCODE     nvarchar(9)
	, @ADDRESS_COUNTRY        nvarchar(25)
	, @USER_PREFERENCES       nvarchar(max)
	, @PORTAL_ONLY            bit
	, @EMPLOYEE_STATUS        nvarchar(25)
	, @MESSENGER_ID           nvarchar(25)
	, @MESSENGER_TYPE         nvarchar(25)
	, @PARENT_TYPE            nvarchar(25)
	, @PARENT_ID              uniqueidentifier
	, @IS_GROUP               bit
	, @DEFAULT_TEAM           uniqueidentifier = null
	, @IS_ADMIN_DELEGATE      bit = null
	, @MAIL_SMTPUSER          nvarchar(60) = null
	, @MAIL_SMTPPASS          nvarchar(100) = null
	, @SYSTEM_GENERATED_PASSWORD bit = null
	, @GOOGLEAPPS_SYNC_CONTACTS  bit = null
	, @GOOGLEAPPS_SYNC_CALENDAR  bit = null
	, @GOOGLEAPPS_USERNAME       nvarchar(100) = null
	, @GOOGLEAPPS_PASSWORD       nvarchar(100) = null
	, @FACEBOOK_ID               nvarchar(25) = null
	, @ICLOUD_SYNC_CONTACTS      bit = null
	, @ICLOUD_SYNC_CALENDAR      bit = null
	, @ICLOUD_USERNAME           nvarchar(100) = null
	, @ICLOUD_PASSWORD           nvarchar(100) = null
	, @THEME                     nvarchar(25) = null
	, @DATE_FORMAT               nvarchar(25) = null
	, @TIME_FORMAT               nvarchar(25) = null
	, @LANG                      nvarchar(10) = null
	, @CURRENCY_ID               uniqueidentifier = null
	, @TIMEZONE_ID               uniqueidentifier = null
	, @SAVE_QUERY                bit = null
	, @GROUP_TABS                bit = null
	, @SUBPANEL_TABS             bit = null
	, @EXTENSION                 nvarchar(25) = null
	, @SMS_OPT_IN                nvarchar(25) = null
	, @PICTURE                   nvarchar(max) = null
	, @MAIL_SMTPSERVER           nvarchar(100) = null
	, @MAIL_SMTPPORT             int = null
	, @MAIL_SMTPAUTH_REQ         bit = null
	, @MAIL_SMTPSSL              int = null
	, @MAIL_SENDTYPE             nvarchar(25) = null
	)
as
  begin
	set nocount on

	declare @FULL_NAME          nvarchar(128);
	declare @LAST_REPORTS_TO_ID uniqueidentifier;
	declare @TEMP_USER_NAME     nvarchar(60);
	declare @TEMP_REPORTS_TO_ID uniqueidentifier;
	-- 08/08/2006 Paul.  Set default role if defined. 
	declare @DEFAULT_ROLE_ID    uniqueidentifier;
	declare @MaxUsers           int;
	declare @ActiveUsers        int;
	-- 10/19/2010 Paul.  Set global default team if defined. 
	declare @GLOBAL_DEFAULT_TEAM_ID    uniqueidentifier;
	-- 11/24/2017 Paul.  Provide a way to format phone numbers.  
	declare @TEMP_PHONE_HOME    nvarchar(50);
	declare @TEMP_PHONE_MOBILE  nvarchar(50);
	declare @TEMP_PHONE_WORK    nvarchar(50);
	declare @TEMP_PHONE_OTHER   nvarchar(50);
	declare @TEMP_PHONE_FAX     nvarchar(50);
	declare @OLD_USER_NAME      nvarchar(60);
	set @TEMP_PHONE_HOME   = dbo.fnFormatPhone(@PHONE_HOME  );
	set @TEMP_PHONE_MOBILE = dbo.fnFormatPhone(@PHONE_MOBILE);
	set @TEMP_PHONE_WORK   = dbo.fnFormatPhone(@PHONE_WORK  );
	set @TEMP_PHONE_OTHER  = dbo.fnFormatPhone(@PHONE_OTHER );
	set @TEMP_PHONE_FAX    = dbo.fnFormatPhone(@PHONE_FAX   );

	-- BEGIN Oracle Exception
		select @DEFAULT_ROLE_ID = ACL_ROLES.ID
		  from      ACL_ROLES
		 inner join CONFIG
		         on cast(CONFIG.VALUE as varchar(36)) = cast(ACL_ROLES.ID as varchar(36))
		        and lower(CONFIG.NAME)                = N'default_role'
		        and CONFIG.DELETED                    = 0
		 where ACL_ROLES.DELETED = 0
		   and datalength(CONFIG.VALUE) > 0;
	-- END Oracle Exception
	
	if dbo.fnCONFIG_Boolean(N'enable_team_management') = 1 begin -- then
		-- BEGIN Oracle Exception
			select @GLOBAL_DEFAULT_TEAM_ID = TEAMS.ID
			  from      TEAMS
			 inner join CONFIG
			         on cast(CONFIG.VALUE as varchar(36)) = cast(TEAMS.ID as varchar(36))
			        and lower(CONFIG.NAME)                = N'default_team'
			        and CONFIG.DELETED                    = 0
			 where TEAMS.DELETED = 0
			   and datalength(CONFIG.VALUE) > 0;
		-- END Oracle Exception
	end -- if;
	
	-- 12/06/2005 Paul. Normalize the name.  A null USER_NAME means that the user is just an Employee. 
	set @TEMP_USER_NAME = rtrim(ltrim(@USER_NAME));
	if len(@TEMP_USER_NAME) = 0 begin -- then
		set @TEMP_USER_NAME = null;
	end -- if;
	-- 11/19/2006 Paul.  Prevent a user from reporting to himself. 
	set @TEMP_REPORTS_TO_ID = @REPORTS_TO_ID;
	if @TEMP_REPORTS_TO_ID = @ID begin -- then
		set @TEMP_REPORTS_TO_ID = null;
	end -- if;
	
	if dbo.fnUSERS_IsValidName(@ID, @TEMP_USER_NAME) = 0 begin -- then
		raiserror(N'spUSERS_Update: The user name %s already exists.  Duplicate user names are not allowed. ', 16, 1, @TEMP_USER_NAME);
	end else begin
		
		if not exists(select * from USERS where ID = @ID) begin -- then
			if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
				set @ID = newid();
			end -- if;
			insert into USERS
				( ID                    
				, CREATED_BY            
				, DATE_ENTERED          
				, MODIFIED_USER_ID      
				, DATE_MODIFIED         
				, DATE_MODIFIED_UTC     
				, USER_NAME             
				, FIRST_NAME            
				, LAST_NAME             
				, REPORTS_TO_ID         
				, IS_ADMIN              
				, RECEIVE_NOTIFICATIONS 
				, DESCRIPTION           
				, TITLE                 
				, DEPARTMENT            
				, PHONE_HOME            
				, PHONE_MOBILE          
				, PHONE_WORK            
				, PHONE_OTHER           
				, PHONE_FAX             
				, EMAIL1                
				, EMAIL2                
				, STATUS                
				, ADDRESS_STREET        
				, ADDRESS_CITY          
				, ADDRESS_STATE         
				, ADDRESS_COUNTRY       
				, ADDRESS_POSTALCODE    
				, USER_PREFERENCES      
				, PORTAL_ONLY           
				, EMPLOYEE_STATUS       
				, MESSENGER_ID          
				, MESSENGER_TYPE        
				, IS_GROUP              
				, DEFAULT_TEAM          
				, IS_ADMIN_DELEGATE     
				, SYSTEM_GENERATED_PASSWORD
				, GOOGLEAPPS_SYNC_CONTACTS 
				, GOOGLEAPPS_SYNC_CALENDAR 
				, GOOGLEAPPS_USERNAME      
				, GOOGLEAPPS_PASSWORD      
				, FACEBOOK_ID              
				, ICLOUD_SYNC_CONTACTS     
				, ICLOUD_SYNC_CALENDAR     
				, ICLOUD_USERNAME          
				, ICLOUD_PASSWORD          
				, THEME                    
				, DATE_FORMAT              
				, TIME_FORMAT              
				, LANG                     
				, CURRENCY_ID              
				, TIMEZONE_ID              
				, SAVE_QUERY               
				, GROUP_TABS               
				, SUBPANEL_TABS            
				, EXTENSION                
				, SMS_OPT_IN               
				, PICTURE                  
				)
			values
				( @ID                    
				, @MODIFIED_USER_ID      
				,  getdate()             
				, @MODIFIED_USER_ID      
				,  getdate()             
				,  getutcdate()          
				, @TEMP_USER_NAME        
				, @FIRST_NAME            
				, @LAST_NAME             
				, @TEMP_REPORTS_TO_ID    
				, @IS_ADMIN              
				, @RECEIVE_NOTIFICATIONS 
				, @DESCRIPTION           
				, @TITLE                 
				, @DEPARTMENT            
				, @TEMP_PHONE_HOME       
				, @TEMP_PHONE_MOBILE     
				, @TEMP_PHONE_WORK       
				, @TEMP_PHONE_OTHER      
				, @TEMP_PHONE_FAX        
				, @EMAIL1                
				, @EMAIL2                
				, @STATUS                
				, @ADDRESS_STREET        
				, @ADDRESS_CITY          
				, @ADDRESS_STATE         
				, @ADDRESS_COUNTRY       
				, @ADDRESS_POSTALCODE    
				, @USER_PREFERENCES      
				, @PORTAL_ONLY           
				, @EMPLOYEE_STATUS       
				, @MESSENGER_ID          
				, @MESSENGER_TYPE        
				, @IS_GROUP              
				, @DEFAULT_TEAM          
				, @IS_ADMIN_DELEGATE     
				, @SYSTEM_GENERATED_PASSWORD
				, @GOOGLEAPPS_SYNC_CONTACTS 
				, @GOOGLEAPPS_SYNC_CALENDAR 
				, @GOOGLEAPPS_USERNAME      
				, @GOOGLEAPPS_PASSWORD      
				, @FACEBOOK_ID              
				, @ICLOUD_SYNC_CONTACTS     
				, @ICLOUD_SYNC_CALENDAR     
				, @ICLOUD_USERNAME          
				, @ICLOUD_PASSWORD          
				, @THEME                    
				, @DATE_FORMAT              
				, @TIME_FORMAT              
				, @LANG                     
				, @CURRENCY_ID              
				, @TIMEZONE_ID              
				, @SAVE_QUERY               
				, @GROUP_TABS               
				, @SUBPANEL_TABS            
				, @EXTENSION                
				, @SMS_OPT_IN               
				, @PICTURE                  
				);
			-- 08/12/2006 Paul.  Set default role if defined. 
			if dbo.fnIsEmptyGuid(@DEFAULT_ROLE_ID) = 0 begin -- then
				exec dbo.spACL_ROLES_USERS_Update @MODIFIED_USER_ID, @DEFAULT_ROLE_ID, @ID;
			end -- if;
			-- 11/18/2006 Paul.  Only use team procedures when team management has been enabled. 
			if dbo.fnCONFIG_Boolean(N'enable_team_management') = 1 begin -- then
				set @FULL_NAME = dbo.fnFullName(@FIRST_NAME, @LAST_NAME);
				exec dbo.spTEAMS_InsertPrivate @ID, @ID, @TEMP_USER_NAME, @FULL_NAME;
				-- 11/26/2009 Paul.  We need to make sure that the default team is added to the membership table. 
				if dbo.fnIsEmptyGuid(@DEFAULT_TEAM) = 0 begin -- then
					exec dbo.spTEAM_MEMBERSHIPS_Update @MODIFIED_USER_ID, @DEFAULT_TEAM, @ID, 1;
				end -- if;
				-- 10/19/2010 Paul.  Set global default team if defined. 
				if dbo.fnIsEmptyGuid(@GLOBAL_DEFAULT_TEAM_ID) = 0 begin -- then
					exec dbo.spTEAM_MEMBERSHIPS_Update @MODIFIED_USER_ID, @GLOBAL_DEFAULT_TEAM_ID, @ID, 1;
				end -- if;
			end -- if;
		end else begin
			-- 11/18/2006 Paul.  We need to capture the last REPORTS_TO_ID to watch for changes. 
			-- 11/30/2017 Paul.  If the user name changes, we need to update assigned set names. 
			select @LAST_REPORTS_TO_ID = REPORTS_TO_ID
			     , @OLD_USER_NAME      = USER_NAME
			  from USERS
			 where ID = @ID;

			-- 04/15/2011 Paul.  We need to allow the Goole and Facebook properties to be cleared, so don't check if null. 
			update USERS
			   set MODIFIED_USER_ID       = @MODIFIED_USER_ID      
			     , DATE_MODIFIED          =  getdate()             
			     , DATE_MODIFIED_UTC      =  getutcdate()          
			     , USER_NAME              = @TEMP_USER_NAME        
			     , FIRST_NAME             = @FIRST_NAME            
			     , LAST_NAME              = @LAST_NAME             
			     , REPORTS_TO_ID          = @TEMP_REPORTS_TO_ID    
			     , IS_ADMIN               = @IS_ADMIN              
			     , RECEIVE_NOTIFICATIONS  = @RECEIVE_NOTIFICATIONS 
			     , DESCRIPTION            = @DESCRIPTION           
			     , TITLE                  = @TITLE                 
			     , DEPARTMENT             = @DEPARTMENT            
			     , PHONE_HOME             = @TEMP_PHONE_HOME       
			     , PHONE_MOBILE           = @TEMP_PHONE_MOBILE     
			     , PHONE_WORK             = @TEMP_PHONE_WORK       
			     , PHONE_OTHER            = @TEMP_PHONE_OTHER      
			     , PHONE_FAX              = @TEMP_PHONE_FAX        
			     , EMAIL1                 = @EMAIL1                
			     , EMAIL2                 = @EMAIL2                
			     , STATUS                 = @STATUS                
			     , ADDRESS_STREET         = @ADDRESS_STREET        
			     , ADDRESS_CITY           = @ADDRESS_CITY          
			     , ADDRESS_STATE          = @ADDRESS_STATE         
			     , ADDRESS_COUNTRY        = @ADDRESS_COUNTRY       
			     , ADDRESS_POSTALCODE     = @ADDRESS_POSTALCODE    
			     , USER_PREFERENCES       = @USER_PREFERENCES      
			     , PORTAL_ONLY            = @PORTAL_ONLY           
			     , EMPLOYEE_STATUS        = @EMPLOYEE_STATUS       
			     , MESSENGER_ID           = @MESSENGER_ID          
			     , MESSENGER_TYPE         = @MESSENGER_TYPE        
			     , IS_GROUP               = @IS_GROUP              
			     , DEFAULT_TEAM           = @DEFAULT_TEAM          
			     , IS_ADMIN_DELEGATE      = @IS_ADMIN_DELEGATE     
			     , SYSTEM_GENERATED_PASSWORD = @SYSTEM_GENERATED_PASSWORD
			     , GOOGLEAPPS_SYNC_CONTACTS  = @GOOGLEAPPS_SYNC_CONTACTS 
			     , GOOGLEAPPS_SYNC_CALENDAR  = @GOOGLEAPPS_SYNC_CALENDAR 
			     , GOOGLEAPPS_USERNAME       = @GOOGLEAPPS_USERNAME      
			     , GOOGLEAPPS_PASSWORD       = @GOOGLEAPPS_PASSWORD      
			     , FACEBOOK_ID               = @FACEBOOK_ID              
			     , ICLOUD_SYNC_CONTACTS      = @ICLOUD_SYNC_CONTACTS     
			     , ICLOUD_SYNC_CALENDAR      = @ICLOUD_SYNC_CALENDAR     
			     , ICLOUD_USERNAME           = @ICLOUD_USERNAME          
			     , ICLOUD_PASSWORD           = @ICLOUD_PASSWORD          
			     , THEME                     = @THEME                    
			     , DATE_FORMAT               = @DATE_FORMAT              
			     , TIME_FORMAT               = @TIME_FORMAT              
			     , LANG                      = @LANG                     
			     , CURRENCY_ID               = @CURRENCY_ID              
			     , TIMEZONE_ID               = @TIMEZONE_ID              
			     , SAVE_QUERY                = @SAVE_QUERY               
			     , GROUP_TABS                = @GROUP_TABS               
			     , SUBPANEL_TABS             = @SUBPANEL_TABS            
			     , EXTENSION                 = @EXTENSION                
			     , SMS_OPT_IN                = @SMS_OPT_IN               
			     , PICTURE                   = @PICTURE                  
			 where ID                     = @ID                    ;

			if dbo.fnCONFIG_Boolean(N'enable_team_management') = 1 begin -- then
				-- 11/18/2006 Paul.  If reports to has changed, then update all related teams. 
				-- Make sure that nulls don't cause a problem. 
				if @LAST_REPORTS_TO_ID is null begin -- then
					set @LAST_REPORTS_TO_ID = '00000000-0000-0000-0000-000000000000';
				end -- if;
				if @TEMP_REPORTS_TO_ID is null begin -- then
					set @TEMP_REPORTS_TO_ID = '00000000-0000-0000-0000-000000000000';
				end -- if;
				if @LAST_REPORTS_TO_ID <> @TEMP_REPORTS_TO_ID begin -- then
					exec dbo.spTEAM_MEMBERSHIPS_RefreshUser @MODIFIED_USER_ID, @ID;
				end -- if;
				-- 11/26/2009 Paul.  We need to make sure that the default team is added to the membership table. 
				if dbo.fnIsEmptyGuid(@DEFAULT_TEAM) = 0 begin -- then
					exec dbo.spTEAM_MEMBERSHIPS_Update @MODIFIED_USER_ID, @DEFAULT_TEAM, @ID, 1;
				end -- if;
			end -- if;
			-- 11/30/2017 Paul.  If the team name changes, we need to update team set names. 
			if @OLD_USER_NAME <> @USER_NAME begin -- then
				exec dbo.spASSIGNED_SETS_UpdateNames @MODIFIED_USER_ID, @ID;
			end -- if;
		end -- if;

		if not exists(select * from USERS_CSTM where ID_C = @ID) begin -- then
			insert into USERS_CSTM ( ID_C ) values ( @ID );
		end -- if;

		-- 07/09/2010 Paul.  SMTP values belong in the OUTBOUND_EMAILS table. 
		-- 04/20/2016 Paul.  Provide a way to allow each user to have their own SMTP server. 
		-- 02/01/2017 Paul.  Add support for Exchange using Username/Password. 
		exec dbo.spOUTBOUND_EMAILS_UpdateUser @MODIFIED_USER_ID, @ID, @MAIL_SMTPUSER, @MAIL_SMTPPASS, @MAIL_SMTPSERVER, @MAIL_SMTPPORT, @MAIL_SMTPAUTH_REQ, @MAIL_SMTPSSL, @MAIL_SENDTYPE;

		-- 09/015/2016 Paul.  This is 10-year old code that makes no sense.  The parent of a user can only be another user, not an Email, Call or Meeting. 
		--if dbo.fnIsEmptyGuid(@PARENT_ID) = 0 begin -- then
		--	if @PARENT_TYPE = N'Emails' begin -- then
		--		exec dbo.spEMAILS_USERS_Update        @MODIFIED_USER_ID, @PARENT_ID, @ID;
		--	end else if @PARENT_TYPE = N'Calls' begin -- then
		--		exec dbo.spCALLS_USERS_Update         @MODIFIED_USER_ID, @PARENT_ID, @ID, 1, null;
		--	end else if @PARENT_TYPE = N'Meetings' begin -- then
		--		exec dbo.spMEETINGS_USERS_Update      @MODIFIED_USER_ID, @PARENT_ID, @ID, 1, null;
		--	end -- if;
		--end -- if;

		-- 09/28/2008 Paul.  Validate after inserting or updating so that activating an existing user will be validated. 
		set @MaxUsers = dbo.fnCONFIG_Int(N'max_users');
		if @MaxUsers is not null and @MaxUsers > 0 begin -- then
			-- 08/29/2012 Paul.  Exclude the Admin and QuickBooks users from the count. 
			-- 01/09/2014 Paul.  Make room for SalesFusion and other special users. 
			-- 06/26/2015 Paul.  Make room for Marketo. 
			select @ActiveUsers = count(*)
			  from vwUSERS_Login
			 where ID > '00000000-0000-0000-0000-00000000000F';
			if @ActiveUsers > @MaxUsers begin -- then
				raiserror(N'This service has been limited to %d active users.', 16, 1, @MaxUsers);
			end -- if;
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spUSERS_Update to public;
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spCONFIG_Update' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spCONFIG_Update;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 09/28/2008 Paul.  max_users is a protected config value that cannot be edited by an admin. 
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
Create Procedure dbo.spCONFIG_Update
	( @MODIFIED_USER_ID  uniqueidentifier
	, @CATEGORY          nvarchar(32)
	, @NAME              nvarchar(60)
	, @VALUE             nvarchar(max)
	)
as
  begin
	set nocount on
	
	declare @ID uniqueidentifier;
	-- BEGIN Oracle Exception
		select @ID = ID
		  from CONFIG
		 where NAME = @NAME 
		   and DELETED = 0;
	-- END Oracle Exception
	if dbo.fnIsEmptyGuid(@ID) = 1 begin -- then
		set @ID = newid();
		insert into CONFIG
			( ID               
			, CREATED_BY       
			, DATE_ENTERED     
			, MODIFIED_USER_ID 
			, DATE_MODIFIED    
			, CATEGORY         
			, NAME             
			, VALUE            
			)
		values
			( @ID               
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @MODIFIED_USER_ID 
			,  getdate()        
			, @CATEGORY         
			, @NAME             
			, @VALUE            
			);
	end else begin
		-- 09/28/2008 Paul.  max_users can be inserted, but it cannot be updated. 
		if lower(@NAME) <> N'max_users' begin -- then
			update CONFIG
			   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
			     , DATE_MODIFIED     =  getdate()        
			     , DATE_MODIFIED_UTC =  getutcdate()     
			     , CATEGORY          = @CATEGORY         
			     , NAME              = @NAME             
			     , VALUE             = @VALUE            
			 where ID                = @ID               ;
		end -- if;
	end -- if;

	-- 09/20/2007 Paul.  Create private teams when enabling team management. 
	if @NAME = N'enable_team_management' begin -- then
		if dbo.fnCONFIG_Boolean(@NAME) = 1 begin -- then
			-- 09/14/2008 Paul.  A single space after the procedure simplifies the migration to DB2. 
			exec dbo.spTEAMS_InitPrivate ;
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spCONFIG_Update to public;
GO

if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spUSERS_Import' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spUSERS_Import;
GO


/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 04/21/2006 Paul.  IS_GROUP was added in SugarCRM 4.0.
-- 08/08/2006 Paul.  Set default role if defined. 
-- 11/18/2006 Paul.  If team management is enabled, create a private team for this user. 
-- 11/18/2006 Paul.  Also watch for changes to REPORTS_TO_ID so that teams can be refreshed. 
-- 02/26/2008 Paul.  Increase USER_NAME so that an email can be used to login. 
-- 09/04/2008 Paul.  PostgreSQL does not allow modifying input parameters.  Use a local temp variable. 
-- 09/15/2009 Paul.  Convert data type to nvarchar(max) to support Azure. 
-- 09/12/2010 Paul.  Add defaults for @DEFAULT_TEAM, @IS_ADMIN_DELEGATE, @MAIL_SMTPUSER, @MAIL_SMTPPASS to ease migration to EffiProz. 
-- 07/09/2011 Paul.  Add missing default fields. 
-- 09/27/2013 Paul.  SMS messages need to be opt-in. 
Create Procedure dbo.spUSERS_Import
	( @ID                     uniqueidentifier output
	, @MODIFIED_USER_ID       uniqueidentifier
	, @USER_NAME              nvarchar(60)
	, @FIRST_NAME             nvarchar(30)
	, @LAST_NAME              nvarchar(30)
	, @REPORTS_TO_ID          uniqueidentifier
	, @REPORTS_TO_NAME        nvarchar(60)
	, @TEAM_ID                uniqueidentifier
	, @TEAM_NAME              nvarchar(128)
	, @DESCRIPTION            nvarchar(max)
	, @TITLE                  nvarchar(50)
	, @DEPARTMENT             nvarchar(50)
	, @PHONE_HOME             nvarchar(50)
	, @PHONE_MOBILE           nvarchar(50)
	, @PHONE_WORK             nvarchar(50)
	, @PHONE_OTHER            nvarchar(50)
	, @PHONE_FAX              nvarchar(50)
	, @EMAIL1                 nvarchar(100)
	, @EMAIL2                 nvarchar(100)
	, @STATUS                 nvarchar(25)
	, @ADDRESS_STREET         nvarchar(150)
	, @ADDRESS_CITY           nvarchar(100)
	, @ADDRESS_STATE          nvarchar(100)
	, @ADDRESS_POSTALCODE     nvarchar(9)
	, @ADDRESS_COUNTRY        nvarchar(25)
	, @EMPLOYEE_STATUS        nvarchar(25)
	, @MESSENGER_ID           nvarchar(25)
	, @MESSENGER_TYPE         nvarchar(25)
	, @PARENT_TYPE            nvarchar(25)
	, @PARENT_ID              uniqueidentifier
	, @THEME                  nvarchar(25)
	, @LANGUAGE               nvarchar(5)
	, @DATE_FORMAT            nvarchar(50)
	, @TIME_FORMAT            nvarchar(50)
	, @TIMEZONE_ID            uniqueidentifier
	, @CURRENCY_ID            uniqueidentifier
	, @EXTENSION              nvarchar(25) = null
	, @SMS_OPT_IN             nvarchar(25) = null
	)
as
  begin
	set nocount on

	declare @IS_ADMIN_DELEGATE      bit;
	declare @RECEIVE_NOTIFICATIONS  bit;
	declare @IS_ADMIN               bit;
	declare @PORTAL_ONLY            bit;
	declare @IS_GROUP               bit;
	declare @USER_PREFERENCES       nvarchar(4000);
	declare @TEMP_REPORTS_TO_ID     uniqueidentifier;
	declare @TEMP_TEAM_ID           uniqueidentifier;
	declare @DEFAULT_TEAM              uniqueidentifier;
	declare @MAIL_SMTPUSER             nvarchar(60);
	declare @MAIL_SMTPPASS             nvarchar(30);
	declare @SYSTEM_GENERATED_PASSWORD bit;
	declare @GOOGLEAPPS_SYNC_CONTACTS  bit;
	declare @GOOGLEAPPS_SYNC_CALENDAR  bit;
	declare @GOOGLEAPPS_USERNAME       nvarchar(100);
	declare @GOOGLEAPPS_PASSWORD       nvarchar(100);
	declare @FACEBOOK_ID               nvarchar(25);
	declare @ICLOUD_SYNC_CONTACTS      bit;
	declare @ICLOUD_SYNC_CALENDAR      bit;
	declare @ICLOUD_USERNAME           nvarchar(100);
	declare @ICLOUD_PASSWORD           nvarchar(100);
	declare @SAVE_QUERY                bit;
	declare @GROUP_TABS                bit;
	declare @SUBPANEL_TABS             bit;

	set @TEMP_REPORTS_TO_ID = @REPORTS_TO_ID;
	set @TEMP_TEAM_ID       = @TEAM_ID;
	set @USER_PREFERENCES = N'<?xml version="1.0" encoding="UTF-8"?>';
	set @USER_PREFERENCES = @USER_PREFERENCES + N'<USER_PREFERENCE>';
	if @LANGUAGE is not null begin -- then
		set @USER_PREFERENCES = @USER_PREFERENCES + N'<culture>';
		set @USER_PREFERENCES = @USER_PREFERENCES + @LANGUAGE;
		set @USER_PREFERENCES = @USER_PREFERENCES + N'</culture>';
	end -- if;
	if @THEME is not null begin -- then
		set @USER_PREFERENCES = @USER_PREFERENCES + N'<theme>';
		set @USER_PREFERENCES = @USER_PREFERENCES + @THEME;
		set @USER_PREFERENCES = @USER_PREFERENCES + N'</theme>';
	end -- if;
	if @DATE_FORMAT is not null begin -- then
		set @USER_PREFERENCES = @USER_PREFERENCES + N'<dateformat>';
		set @USER_PREFERENCES = @USER_PREFERENCES + @DATE_FORMAT;
		set @USER_PREFERENCES = @USER_PREFERENCES + N'</dateformat>';
	end -- if;
	if @TIME_FORMAT is not null begin -- then
		set @USER_PREFERENCES = @USER_PREFERENCES + N'<timeformat>';
		set @USER_PREFERENCES = @USER_PREFERENCES + @TIME_FORMAT;
		set @USER_PREFERENCES = @USER_PREFERENCES + N'</timeformat>';
	end -- if;
	if @TIMEZONE_ID is not null begin -- then
		set @USER_PREFERENCES = @USER_PREFERENCES + N'<timezone>';
		set @USER_PREFERENCES = @USER_PREFERENCES + cast(@TIMEZONE_ID as char(36));
		set @USER_PREFERENCES = @USER_PREFERENCES + N'</timezone>';
	end -- if;
	if @CURRENCY_ID is not null begin -- then
		set @USER_PREFERENCES = @USER_PREFERENCES + N'<currency_id>';
		set @USER_PREFERENCES = @USER_PREFERENCES + cast(@CURRENCY_ID as char(36));
		set @USER_PREFERENCES = @USER_PREFERENCES + N'</currency_id>';
	end -- if;
	set @USER_PREFERENCES = @USER_PREFERENCES + N'</USER_PREFERENCE>';

	if @TEMP_REPORTS_TO_ID is null and @REPORTS_TO_NAME is not null begin -- then
		select @TEMP_REPORTS_TO_ID = ID
		  from USERS
		 where USER_NAME      = @REPORTS_TO_NAME
		   and DELETED        = 0;
	end -- if;

	if @ID is null begin -- then
		-- 06/25/2010 Paul.  Import should lookup the user name and update if it already exists. 
		-- BEGIN Oracle Exception
			select @ID = ID
			  from USERS
			 where USER_NAME = @USER_NAME
			   and DELETED   = 0;
		-- END Oracle Exception
	end -- if;
	

	-- 09/12/2010 Paul.  Add defaults for @DEFAULT_TEAM, @IS_ADMIN_DELEGATE, @MAIL_SMTPUSER, @MAIL_SMTPPASS. 
	-- 07/09/2011 Paul.  Add more defaults. 
	-- 09/27/2013 Paul.  Add defaults for @ICLOUD_SYNC_CONTACTS, @ICLOUD_SYNC_CALENDAR, @ICLOUD_USERNAME, @ICLOUD_PASSWORD, @THEME, @DATE_FORMAT, @TIME_FORMAT, @LANG, @CURRENCY_ID, @TIMEZONE_ID, @SAVE_QUERY, @GROUP_TABS, @SUBPANEL_TABS, @EXTENSION, @SMS_OPT_IN. 
	exec dbo.spUSERS_Update @ID out, @MODIFIED_USER_ID, @USER_NAME, @FIRST_NAME, @LAST_NAME, @TEMP_REPORTS_TO_ID, @IS_ADMIN, @RECEIVE_NOTIFICATIONS, @DESCRIPTION, @TITLE, @DEPARTMENT, @PHONE_HOME, @PHONE_MOBILE, @PHONE_WORK, @PHONE_OTHER, @PHONE_FAX, @EMAIL1, @EMAIL2, @STATUS, @ADDRESS_STREET, @ADDRESS_CITY, @ADDRESS_STATE, @ADDRESS_POSTALCODE, @ADDRESS_COUNTRY, @USER_PREFERENCES, @PORTAL_ONLY, @EMPLOYEE_STATUS, @MESSENGER_ID, @MESSENGER_TYPE, @PARENT_TYPE, @PARENT_ID, @IS_GROUP, @DEFAULT_TEAM, @IS_ADMIN_DELEGATE, @MAIL_SMTPUSER, @MAIL_SMTPPASS, @SYSTEM_GENERATED_PASSWORD, @GOOGLEAPPS_SYNC_CONTACTS, @GOOGLEAPPS_SYNC_CALENDAR, @GOOGLEAPPS_USERNAME, @GOOGLEAPPS_PASSWORD, @FACEBOOK_ID, @ICLOUD_SYNC_CONTACTS, @ICLOUD_SYNC_CALENDAR, @ICLOUD_USERNAME, @ICLOUD_PASSWORD, @THEME, @DATE_FORMAT, @TIME_FORMAT, @LANGUAGE, @CURRENCY_ID, @TIMEZONE_ID, @SAVE_QUERY, @GROUP_TABS, @SUBPANEL_TABS, @EXTENSION, @SMS_OPT_IN;


	if dbo.fnCONFIG_Boolean(N'enable_team_management') = 1 begin -- then
		if @TEMP_TEAM_ID is null and @TEAM_NAME is not null begin -- then
			select @TEMP_TEAM_ID = ID
			  from TEAMS
			 where NAME     = @TEAM_NAME
			   and DELETED  = 0;
		end -- if;

		if @TEMP_TEAM_ID is not null begin -- then
			exec dbo.spTEAM_MEMBERSHIPS_Update @MODIFIED_USER_ID, @TEMP_TEAM_ID, @ID, 1;
		end -- if;
	end -- if;
  end
GO

Grant Execute on dbo.spUSERS_Import to public;
GO


if exists (select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_NAME = 'spMODULES_GlobalCustomPaging' and ROUTINE_TYPE = 'PROCEDURE')
	Drop Procedure dbo.spMODULES_GlobalCustomPaging;
GO
 
/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
Create Procedure dbo.spMODULES_GlobalCustomPaging
	( @MODIFIED_USER_ID  uniqueidentifier
	)
as
  begin
	set nocount on
	
	exec dbo.spCONFIG_Update @MODIFIED_USER_ID, 'system', 'allow_custom_paging', 'true';

	-- 09/28/2009 Paul.  All modules will get enabled. 
	update MODULES
	   set MODIFIED_USER_ID  = @MODIFIED_USER_ID 
	     , DATE_MODIFIED     =  getdate()        
	     , DATE_MODIFIED_UTC =  getutcdate()     
	     , CUSTOM_PAGING     = 1
	 where DELETED           = 0;
  end
GO
 
-- exec dbo.spMODULES_GlobalCustomPaging null;

Grant Execute on dbo.spMODULES_GlobalCustomPaging to public;
GO
 





/**********************************************************************************************************************
 * Copyright (C) 2005-2022 SplendidCRM Software, Inc. 
 * MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software 
 * is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *********************************************************************************************************************/
-- 01/19/2010 Paul.  Don't create the audit tables on an Offline Client database. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'SYSTEM_SYNC_CONFIG' and TABLE_TYPE = 'BASE TABLE') begin -- then
	exec dbo.spSqlBuildAllAuditTables;
end -- if;
GO













print 'FIELD_VALIDATORS Defaults';
GO

set nocount on;
GO

-- http://www.regexlib.com/
-- Expression :  ^(?:(?:[\+]?(?<CountryCode>[\d]{1,3}(?:[ ]+|[\-.])))?[(]?(?<AreaCode>[\d]{3})[\-/)]?(?:[ ]+)?)?(?<Number>[a-zA-Z2-9][a-zA-Z0-9 \-.]{6,})(?:(?:[ ]+|[xX]|(i:ext[\.]?)){1,2}(?<Ext>[\d]{1,5}))?$
-- Description:  This allows the formatting of most phone numbers.
-- Matches    :  [1-800-DISCOVER], [(610) 310-5555 x5555], [533-1123]
-- Non-Matches:  [1 533-1123], [553334], [66/12343]
-- exec dbo.spFIELD_VALIDATORS_InsertRegEx null, 'Phone Number', '^(?:(?:[\+]?(?<CountryCode>[\d]{1,3}(?:[ ]+|[\-.])))?[(]?(?<AreaCode>[\d]{3})[\-/)]?(?:[ ]+)?)?(?<Number>[a-zA-Z2-9][a-zA-Z0-9 \-.]{6,})(?:(?:[ ]+|[xX]|(i:ext[\.]?)){1,2}(?<Ext>[\d]{1,5}))?$';

-- Expression :  ^((?:(?:[\+]?(?<CountryCode>[\d]{1,3}(?:[ ]+|[\-.])))?[(]?(?<AreaCode>\d{1,3})[\-/)]?(?:[ ]+)?)?(?<Number>[a-zA-Z1-9][a-zA-Z0-9 \-.]{6,}))?(?:(?:[ ]+|[xX]|(i:ext[\.]?)){0,2}(?<Ext>[\d]{1,5}))?$
-- Description:  Modified from above making the following updates:
--               - Area Code can be 1 number in australia if country code is specified. Ie '+61 8 9300 0000' will now validate
--               - China (I think it is) has numbers starting with 1, previously only accepted numbers starting 3-9
--               - 1-5 numbers will be validated as a extension, allowing phone numbers such as 115
-- Matches    :  [+61 8 9300 0000] [115] 
exec dbo.spFIELD_VALIDATORS_InsertRegEx null, 'Phone Number', '^((?:(?:[\+]?(?<CountryCode>[\d]{1,3}(?:[ ]+|[\-.])))?[(]?(?<AreaCode>\d{1,3})[\-/)]?(?:[ ]+)?)?(?<Number>[a-zA-Z1-9][a-zA-Z0-9 \-.]{6,}))?(?:(?:[ ]+|[xX]|(i:ext[\.]?)){0,2}(?<Ext>[\d]{1,5}))?$';

-- http://www.regexlib.com/
-- Expression :  ^(([A-Za-z0-9]+_+)|([A-Za-z0-9]+\-+)|([A-Za-z0-9]+\.+)|([A-Za-z0-9]+\++))*[A-Za-z0-9]+@((\w+\-+)|(\w+\.))*\w{1,63}\.[a-zA-Z]{2,6}$
-- Description:  The most complete email validation routine I could come up with. It verifies that: - Only letters, numbers and email acceptable symbols (+, _, -, .) are allowed - No two different symbols may follow each other - Cannot begin with a symbol - Ending domain ...
-- Matches    :  [g_s+gav@com.com], [gav@gav.com], [jim@jim.c.dc.ca]
-- Non-Matches:  [gs_.gs@com.com], [gav@gav.c], [jim@--c.ca]
-- 01/26/2020 Paul.  Maximum top level domain according to RFC 1034 is 64 characters. 
exec dbo.spFIELD_VALIDATORS_InsertRegEx null, 'Email Address', '^(([A-Za-z0-9]+_+)|([A-Za-z0-9]+\-+)|([A-Za-z0-9]+\.+)|([A-Za-z0-9]+\++))*[A-Za-z0-9]+@((\w+\-+)|(\w+\.))*\w{1,63}\.[a-zA-Z]{2,63}$';
if exists(select * from FIELD_VALIDATORS where NAME = 'Email Address' and REGULAR_EXPRESSION like '%.[[]a-zA-Z]{2,6}$') begin -- then
	update FIELD_VALIDATORS
	   set REGULAR_EXPRESSION = '^(([A-Za-z0-9]+_+)|([A-Za-z0-9]+\-+)|([A-Za-z0-9]+\.+)|([A-Za-z0-9]+\++))*[A-Za-z0-9]+@((\w+\-+)|(\w+\.))*\w{1,63}\.[a-zA-Z]{2,63}$'
	     , DATE_MODIFIED      = getdate()
	     , DATE_MODIFIED_UTC  = getutcdate()
	 where NAME               = 'Email Address'
	   and REGULAR_EXPRESSION like '%.[[]a-zA-Z]{2,6}$'
end -- if;

-- http://www.regexlib.com/
-- Expression :  (^\d*\.?\d*[0-9]+\d*$)|(^[0-9]+\d*\.\d*$)
-- Description:  This matches all positive decimal values. There was one here already which claimed to but would fail on value 0.00 which is positive AFAIK...  
-- Matches    :  [0.00], [1.23], [4.56]
-- Non-Matches:  [-1.03], [-0.01], [-0.00]
exec dbo.spFIELD_VALIDATORS_InsertRegEx null, 'Positive Decimal', '(^\d*\.?\d*[0-9]+\d*$)|(^[0-9]+\d*\.\d*$)';

-- 08/11/2014 Paul.  Positive Decimal with Commas
-- http://www.regexlib.com/
-- Expression :  (^(((\d{1,3})(,\d{3})*)|(\d+))(.\d+)?$)
-- Description:  validates numbers, with or without decimal places, and comma 1000 separators.
-- Matches    :  [9999999], [99999.99999], [99,999,999.9999]
-- Non-Matches:  [9999.], [9,99,99999.999], [999.9999.9999]
exec dbo.spFIELD_VALIDATORS_InsertRegEx null, 'Positive Decimal with Commas', '(^(((\d{1,3})(,\d{3})*)|(\d+))(.\d+)?$)';

-- http://www.regexlib.com/
-- Expression :  ^http\://[a-zA-Z0-9\-\.]+\.[a-zA-Z]{2,3}(/\S*)?$
-- Description:  Verifies URLs. Checks for the leading protocol, a good looking domain (two or three letter TLD; no invalid characters in domain) and a somwhat reasonable file path.
-- Matches    :  http://psychopop.org | http://www.edsroom.com/newUser.asp | http://unpleasant.jarrin.net/markov/inde
-- Non-Matches:  ftp://psychopop.org | http://www.edsroom/ | http://un/pleasant.jarrin.net/markov/index.asp
exec dbo.spFIELD_VALIDATORS_InsertRegEx null, 'URL', '^http\://[a-zA-Z0-9\-\.]+\.[a-zA-Z]{2,3}(/\S*)?$';

-- 08/05/2010 Paul.  Add integer for Release List Order. 
-- http://www.regexlib.com/
-- Expression :  ^\d*$  (^\d+$ is similar but would not allow blank strings)
-- Description:  Positive integer value.
-- Matches    :  [123], [10], [54]
-- Non-Matches:  [-54], [54.234], [abc]
exec dbo.spFIELD_VALIDATORS_InsertRegEx null, 'Integer', '(^\d*$)';
-- 07/06/2017 Paul.  Correct integer validator. It was previously set to be the same as the Positive Decimal validator. 
if exists(select * from FIELD_VALIDATORS where NAME = 'Integer' and REGULAR_EXPRESSION = '(^\d*\.?\d*[0-9]+\d*$)|(^[0-9]+\d*\.\d*$)' and DELETED = 0) begin -- then
	update FIELD_VALIDATORS
	   set REGULAR_EXPRESSION = '(^\d*$)'
	     , DATE_MODIFIED      = getdate()
	     , DATE_MODIFIED_UTC  = getutcdate()
	     , MODIFIED_USER_ID   = null
	 where NAME               = 'Integer'
	   and REGULAR_EXPRESSION = '(^\d*\.?\d*[0-9]+\d*$)|(^[0-9]+\d*\.\d*$)'
	   and DELETED            = 0;
end -- if;

-- 10/23/2013 Paul.  Add Twitter message length validation. 
-- http://www.informatik.uni-hamburg.de/RZ/software/perl/manual/pod/perlre.html#DESCRIPTION
-- Expression :  ^[\s\S]{1,140}$
-- Description:  Match any whitespace and any non-whitespace character. 
exec dbo.spFIELD_VALIDATORS_InsertRegEx null, 'Twitter Message', '(^[\s\S]{1,140}$)';

-- 10/26/2013 Paul.  Add Twitter track length validation. 
-- Expression :  ^[\s\S^,]{1,60}$
-- Description:  Match any whitespace and any non-whitespace character. 
exec dbo.spFIELD_VALIDATORS_InsertRegEx null, 'Twitter Track', '(^[\s\S^,]{1,60}$)';

set nocount off;
GO

/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spFIELD_VALIDATORS_Defaults()
/

call dbo.spSqlDropProcedure('spFIELD_VALIDATORS_Defaults')
/

-- #endif IBM_DB2 */



print 'TIMEZONES Name Changes';
GO
-- delete TIMEZONES
set nocount on;
GO

-- 04/08/2010 Paul.  Name Changes must occur before TIMEZONES defaults.1.sql.

-- 02/22/2007 Paul.  2007 time zone update for Microsoft Windows operating systems
-- http://support.microsoft.com/kb/928388
if exists (select * from TIMEZONES where NAME = N'(GMT+04:00) Baku, Tbilisi, Yerevan' and DELETED = 0) begin -- then
	print N'Rename Time Zone: (GMT+04:00) Baku, Tbilisi, Yerevan';
	update TIMEZONES
	   set NAME          = N'(GMT+04:00) Baku'
	     , DATE_MODIFIED =  getdate()             
	 where NAME          = N'(GMT+04:00) Baku, Tbilisi, Yerevan'
	   and DELETED = 0;
end -- if;

if exists (select * from TIMEZONES where NAME = N'(GMT+02:00) Athens, Istanbul, Minsk' and DELETED = 0) begin -- then
	print N'Rename Time Zone: (GMT+02:00) Athens, Istanbul, Minsk';
	update TIMEZONES
	   set NAME          = N'(GMT+02:00) Athens, Bucharest, Istanbul'
	     , DATE_MODIFIED =  getdate()             
	 where NAME          = N'(GMT+02:00) Athens, Istanbul, Minsk'
	   and DELETED = 0;
end -- if;

if exists (select * from TIMEZONES where NAME = N'(GMT-06:00) Guadalajara, Mexico City, Monterrey' and DELETED = 0) begin -- then
	print N'Rename Time Zone: (GMT-06:00) Guadalajara, Mexico City, Monterrey';
	update TIMEZONES
	   set NAME          = N'(GMT-06:00) Guadalajara, Mexico City, Monterrey - Old'
	     , DATE_MODIFIED =  getdate()             
	 where NAME          = N'(GMT-06:00) Guadalajara, Mexico City, Monterrey'
	   and DELETED = 0;
end -- if;

if exists (select * from TIMEZONES where NAME = N'(GMT) Casablanca, Monrovia' and DELETED = 0) begin -- then
	print N'Rename Time Zone: (GMT) Casablanca, Monrovia';
	update TIMEZONES
	   set NAME          = N'(GMT) Casablanca, Monrovia, Reykjavik'
	     , DATE_MODIFIED =  getdate()             
	 where NAME          = N'(GMT) Casablanca, Monrovia'
	   and DELETED = 0;
end -- if;

if exists (select * from TIMEZONES where NAME = N'(GMT-07:00) Chihuahua, La Paz, Mazatlan' and DELETED = 0) begin -- then
	print N'Rename Time Zone: (GMT-07:00) Chihuahua, La Paz, Mazatlan';
	update TIMEZONES
	   set NAME          = N'(GMT-07:00) Chihuahua, La Paz, Mazatlan - Old'
	     , DATE_MODIFIED =  getdate()             
	 where NAME          = N'(GMT-07:00) Chihuahua, La Paz, Mazatlan'
	   and DELETED = 0;
end -- if;

if exists (select * from TIMEZONES where NAME = N'(GMT+06:00) Sri Jayawardenepura' and DELETED = 0) begin -- then
	print N'Rename Time Zone: (GMT+06:00) Sri Jayawardenepura';
	update TIMEZONES
	   set NAME          = N'(GMT+05:30) Sri Jayawardenepura'
	     , DATE_MODIFIED =  getdate()             
	 where NAME          = N'(GMT+06:00) Sri Jayawardenepura'
	   and DELETED = 0;
end -- if;

if exists (select * from TIMEZONES where NAME = N'(GMT-08:00) Pacific Time (US & Canada); Tijuana' and DELETED = 0) begin -- then
	print N'Rename Time Zone: (GMT-08:00) Pacific Time (US & Canada), Tijuana';
	update TIMEZONES
	   set NAME          = N'(GMT-08:00) Pacific Time (US & Canada)'
	     , DATE_MODIFIED =  getdate()             
	 where NAME          = N'(GMT-08:00) Pacific Time (US & Canada); Tijuana'
	   and DELETED = 0;
end -- if;

/*
-- 04/08/2010 Paul.  (GMT-05:00) Bogota, Lima, Quito changes in 2010. 
if exists (select * from TIMEZONES where NAME = N'(GMT-05:00) Bogota, Lima, Quito' and DELETED = 0) begin -- then
	print N'Rename Time Zone: (GMT-05:00) Bogota, Lima, Quito';
	update TIMEZONES
	   set NAME          = N'(GMT-05:00) Bogota, Lima, Quito, Rio Branco'
	     , DATE_MODIFIED =  getdate()             
	 where NAME          = N'(GMT-05:00) Bogota, Lima, Quito'
	   and DELETED = 0;
end -- if;
*/

-- 04/08/2010 Paul.  2010 time zone update for Microsoft Windows operating systems
-- http://support.microsoft.com/kb/914387
if exists (select * from TIMEZONES where NAME = N'(GMT-03:00) Buenos Aires, Georgetown' and DELETED = 0) begin -- then
	print N'Rename Time Zone: (GMT-03:00) Buenos Aires, Georgetown';
	update TIMEZONES
	   set NAME          = N'(GMT-03:00) Buenos Aires'
	     , DATE_MODIFIED =  getdate()             
	 where NAME          = N'(GMT-03:00) Buenos Aires, Georgetown'
	   and DELETED = 0;
end -- if;
if exists (select * from TIMEZONES where NAME = N'(GMT+06:00) Astana, Dhaka' and DELETED = 0) begin -- then
	print N'Rename Time Zone: (GMT+06:00) Astana, Dhaka';
	update TIMEZONES
	   set NAME          = N'(GMT+06:00) Astana'
	     , DATE_MODIFIED =  getdate()             
	 where NAME          = N'(GMT+06:00) Astana, Dhaka'
	   and DELETED = 0;
end -- if;
if exists (select * from TIMEZONES where NAME = N'(GMT+12:00) Fiji, Kamchatka, Marshall Is.' and DELETED = 0) begin -- then
	print N'Rename Time Zone: (GMT+12:00) Fiji, Kamchatka, Marshall Is.';
	update TIMEZONES
	   set NAME          = N'(GMT+12:00) Fiji'
	     , DATE_MODIFIED =  getdate()             
	 where NAME          = N'(GMT+12:00) Fiji, Kamchatka, Marshall Is.'
	   and DELETED = 0;
end -- if;
if exists (select * from TIMEZONES where NAME = N'(GMT+03:00) Tbilisi' and DELETED = 0) begin -- then
	print N'Rename Time Zone: (GMT+03:00) Tbilisi';
	update TIMEZONES
	   set NAME          = N'(GMT+04:00) Tbilisi'
	     , DATE_MODIFIED =  getdate()             
	 where NAME          = N'(GMT+03:00) Tbilisi'
	   and DELETED = 0;
end -- if;
if exists (select * from TIMEZONES where NAME = N'(GMT) Casablanca, Monrovia, Reykjavik' and DELETED = 0) begin -- then
	print N'Rename Time Zone: (GMT) Casablanca, Monrovia, Reykjavik';
	update TIMEZONES
	   set NAME          = N'(GMT) Casablanca'
	     , DATE_MODIFIED =  getdate()             
	 where NAME          = N'(GMT) Casablanca, Monrovia, Reykjavik'
	   and DELETED = 0;
end -- if;
if exists (select * from TIMEZONES where NAME = N'(GMT+08:00) Irkutsk, Ulaan Bataar' and DELETED = 0) begin -- then
	print N'Rename Time Zone: (GMT+08:00) Irkutsk, Ulaan Bataar';
	update TIMEZONES
	   set NAME          = N'(GMT+08:00) Irkutsk'
	     , DATE_MODIFIED =  getdate()             
	 where NAME          = N'(GMT+08:00) Irkutsk, Ulaan Bataar'
	   and DELETED = 0;
end -- if;
if exists (select * from TIMEZONES where NAME = N'(GMT-08:00) Tijuana, Baja California' and DELETED = 0) begin -- then
	print N'Rename Time Zone: (GMT-08:00) Tijuana, Baja California';
	update TIMEZONES
	   set NAME          = N'(GMT-08:00) Tijuana'
	     , DATE_MODIFIED =  getdate()             
	 where NAME          = N'(GMT-08:00) Tijuana, Baja California'
	   and DELETED = 0;
end -- if;
if exists (select * from TIMEZONES where NAME = N'(GMT+05:00) Islamabad, Karachi, Tashkent' and DELETED = 0) begin -- then
	print N'Rename Time Zone: (GMT+05:00) Islamabad, Karachi, Tashkent';
	update TIMEZONES
	   set NAME          = N'(GMT+05:00) Islamabad, Karachi'
	     , DATE_MODIFIED =  getdate()             
	 where NAME          = N'(GMT+05:00) Islamabad, Karachi, Tashkent'
	   and DELETED = 0;
end -- if;
if exists (select * from TIMEZONES where NAME = N'(GMT-05:00) Bogota, Lima, Quito, Rio Branco' and DELETED = 0) begin -- then
	print N'Rename Time Zone: (GMT-05:00) Bogota, Lima, Quito, Rio Branco';
	update TIMEZONES
	   set NAME          = N'(GMT-05:00) Bogota, Lima, Quito'
	     , DATE_MODIFIED =  getdate()             
	 where NAME          = N'(GMT-05:00) Bogota, Lima, Quito, Rio Branco'
	   and DELETED = 0;
end -- if;
if exists (select * from TIMEZONES where NAME = N'(GMT-11:00) Midway Island, Samoa' and DELETED = 0) begin -- then
	print N'Rename Time Zone: (GMT-11:00) Midway Island, Samoa';
	update TIMEZONES
	   set NAME          = N'(GMT-11:00) Samoa'
	     , DATE_MODIFIED =  getdate()             
	 where NAME          = N'(GMT-11:00) Midway Island, Samoa'
	   and DELETED = 0;
end -- if;
if exists (select * from TIMEZONES where NAME = N'(GMT+06:00) Almaty, Novosibirsk' and DELETED = 0) begin -- then
	print N'Rename Time Zone: (GMT+06:00) Almaty, Novosibirsk';
	update TIMEZONES
	   set NAME          = N'(GMT+06:00) Novosibirsk'
	     , DATE_MODIFIED =  getdate()             
	 where NAME          = N'(GMT+06:00) Almaty, Novosibirsk'
	   and DELETED = 0;
end -- if;
if exists (select * from TIMEZONES where NAME = N'(GMT-04:00) Caracas, La Paz' and DELETED = 0) begin -- then
	print N'Rename Time Zone: (GMT-04:00) Caracas, La Paz';
	update TIMEZONES
	   set NAME          = N'(GMT-04:30) Caracas'
	     , DATE_MODIFIED =  getdate()             
	 where NAME          = N'(GMT-04:00) Caracas, La Paz'
	   and DELETED = 0;
end -- if;

GO


set nocount off;
GO


/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTIMEZONES_Changes()
/

call dbo.spSqlDropProcedure('spTIMEZONES_Changes')
/

-- #endif IBM_DB2 */




print 'CONFIG Company';
GO

set nocount on;
GO

-- 04/23/2008 Paul.  Company information is used in Quotes, Orders and Invoices.
exec dbo.spCONFIG_InsertOnly null, 'company', 'company_name'   , 'Company Name';
exec dbo.spCONFIG_InsertOnly null, 'company', 'company_address', 'Company Address';
exec dbo.spCONFIG_InsertOnly null, 'company', 'company_logo'   , '';
GO


set nocount off;
GO

/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spCONFIG_Company()
/

call dbo.spSqlDropProcedure('spCONFIG_Company')
/

-- #endif IBM_DB2 */



print 'CONFIG defaults';
GO

set nocount on;
GO

-- 08/22/2008 Paul.  Move professional modules to a separate file. 

-- 04/28/2006 Paul.  Provide a variable where the title of the application can be displayed. 
-- This is primarily used on the SplendidCRM Demo site.
-- <h1><font color=black>SQL Server 2005 Express</font></h1>
-- <h1><font color=black>Oracle 10g Express</font></h1>
-- <h1><font color=black>IBM DB2 Express-C</font></h1>
-- <h1><font color=black>MySQL 5.0</font></h1>
exec dbo.spCONFIG_InsertOnly null, 'system', 'platform_title'                         , '';

-- 07/16/2005 Paul. Defaults extracted from SugarSuite-Full-3.0b\include\utils.php function make_sugar_config
exec dbo.spCONFIG_InsertOnly null, 'system', 'admin_export_only'                      , 'false';
--exec dbo.spCONFIG_InsertOnly null, 'system', 'cache_dir'                              , 'cache/';
exec dbo.spCONFIG_InsertOnly null, 'system', 'calculate_response_time'                , 'true';
exec dbo.spCONFIG_InsertOnly null, 'system', 'create_default_user'                    , 'false';
--exec dbo.spCONFIG_InsertOnly null, 'system', 'default_action'                         , 'index';
exec dbo.spCONFIG_InsertOnly null, 'system', 'default_charset'                        , 'UTF-8';
exec dbo.spCONFIG_InsertOnly null, 'system', 'default_date_format'                    , 'MM/dd/yyyy';
exec dbo.spCONFIG_InsertOnly null, 'system', 'default_language'                       , 'en-US';
exec dbo.spCONFIG_InsertOnly null, 'system', 'default_module'                         , 'Home';
exec dbo.spCONFIG_InsertOnly null, 'system', 'default_password'                       , '';
-- 05/09/2010 Paul.  Make the default theme Six. 
-- 04/28/2012 Paul.  Make the default theme Atlantic. 
-- 03/12/2014 Paul.  Make the default theme Seven. 
-- 10/02/2016 Paul.  Make the default theme Arctic. 
-- 04/01/2022 Paul.  Make the default theme Pacific. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'default_theme'                          , 'Pacific';
-- 07/25/2015 Paul.  SugarClassic and Sugar2006 were moved long ago.  We need to change the default to prevent app crash. 
if exists(select * from CONFIG where NAME = 'default_theme' and VALUE = 'SugarClassic' and DELETED = 0) begin -- then
	update CONFIG
	   set VALUE             = 'Seven'
	     , DATE_MODIFIED     = getdate()
	     , DATE_MODIFIED_UTC = getutcdate()
	 where NAME              = 'default_theme'
	   and VALUE             in ('SugarClassic', 'Sugar2006')
	   and DELETED           = 0;
end -- if;

exec dbo.spCONFIG_InsertOnly null, 'system', 'default_time_format'                    , 'h:mm tt';
exec dbo.spCONFIG_InsertOnly null, 'system', 'default_user_is_admin'                  , 'false';
exec dbo.spCONFIG_InsertOnly null, 'system', 'default_user_name'                      , '';
exec dbo.spCONFIG_InsertOnly null, 'system', 'disable_export'                         , 'false';
--exec dbo.spCONFIG_InsertOnly null, 'system', 'disable_persistent_connections'         , 'false';
exec dbo.spCONFIG_InsertOnly null, 'system', 'display_email_template_variable_chooser', 'false';
exec dbo.spCONFIG_InsertOnly null, 'system', 'display_inbound_email_buttons'          , 'false';
exec dbo.spCONFIG_InsertOnly null, 'system', 'history_max_viewed'                     , '10';
exec dbo.spCONFIG_InsertOnly null, 'system', 'host_name'                              , 'localhost';
exec dbo.spCONFIG_InsertOnly null, 'system', 'languages'                              , 'en-US';
exec dbo.spCONFIG_InsertOnly null, 'system', 'list_max_entries_per_page'              , '20';
exec dbo.spCONFIG_InsertOnly null, 'system', 'lock_default_user_name'                 , 'false';
exec dbo.spCONFIG_InsertOnly null, 'system', 'log_memory_usage'                       , 'false';
exec dbo.spCONFIG_InsertOnly null, 'system', 'require_accounts'                       , 'true';
exec dbo.spCONFIG_InsertOnly null, 'system', 'rss_cache_time'                         , '10800';
exec dbo.spCONFIG_InsertOnly null, 'system', 'translation_string_prefix'              , 'false';
--exec dbo.spCONFIG_InsertOnly null, 'system', 'unique_key'                             , md5(create_guid());
exec dbo.spCONFIG_InsertOnly null, 'system', 'upload_maxsize'                         , '3000000';

--exec dbo.spCONFIG_InsertOnly null, 'system', 'dbconfig'                               , ''; // this must be set!!
--exec dbo.spCONFIG_InsertOnly null, 'system', 'dbconfigoption'                         , ''; // this must be set!!
--exec dbo.spCONFIG_InsertOnly null, 'system', 'import_dir'                             , ''; // this must be set!!
--exec dbo.spCONFIG_InsertOnly null, 'system', 'session_dir'                            , ''; // this must be set!!
--exec dbo.spCONFIG_InsertOnly null, 'system', 'site_url'                               , ''; // this must be set!!
--exec dbo.spCONFIG_InsertOnly null, 'system', 'tmp_dir'                                , ''; // this must be set!!
--exec dbo.spCONFIG_InsertOnly null, 'system', 'upload_dir'                             , ''; // this must be set!!


-- 07/16/2005 Paul. Defaults extracted from SugarSuite-Full-3.0b\include\utils.php function get_sugar_config_defaults
--exec dbo.spCONFIG_InsertOnly null, 'system', 'dump_slow_queries'                      , 'false';
--exec dbo.spCONFIG_InsertOnly null, 'system', 'installer_locked'                       , 'true';
--exec dbo.spCONFIG_InsertOnly null, 'system', 'large_scale_test'                       , 'false';
exec dbo.spCONFIG_InsertOnly null, 'system', 'login_nav'                              , 'true';
-- 08/12/2009 Paul.  A customer wants the ability to turn off the saved searches, both globally and on a per user basis. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'save_query'                             , 'true';

-- #if SQL_Server /*
if exists(select * from CONFIG where NAME = 'save_query' and cast(VALUE as nvarchar(25)) = 'all' and DELETED = 0) begin -- then
	-- 08/12/2009 Paul.  The default in SugarCRM is 'all', but we treat save_query as a boolean flag. 
	update CONFIG
	   set VALUE            = 'true'
	     , DATE_MODIFIED    = getdate()
	     , MODIFIED_USER_ID = NULL
	 where NAME             = 'save_query'
	   and DELETED          = 0;
end -- if;
-- #endif SQL_Server */

exec dbo.spCONFIG_InsertOnly null, 'system', 'slow_query_time_msec'                   , '100';
--exec dbo.spCONFIG_InsertOnly null, 'system', 'verify_client_ip'                       , 'true';

-- 08/28/2005 Paul.  Default timezone.
exec dbo.spCONFIG_InsertOnly null, 'system', 'default_timezone'                       , 'BFA61AF7-26ED-4020-A0C1-39A15E4E9E0A';
-- 11/07/2005 Paul.  Allow preferences to be stored in PHP format. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'XML_UserPreferences', 'on';
-- 11/10/2005 Paul.  Point to documentation on SourceForge.
exec dbo.spCONFIG_InsertOnly null, 'system', 'HelpUrl', 'http://sourceforge.net/project/showfiles.php?group_id=107819&package_id=124871';

-- 08/08/2006 Paul.  Default currency was not previously defined. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'default_currency'                       , 'E340202E-6291-4071-B327-A34CB4DF239B';
-- 04/30/2016 Paul.  Base currency has been USD, but we should make it easy to allow a different base. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'base_currency'                          , 'E340202E-6291-4071-B327-A34CB4DF239B';
-- 05/14/2008 Paul.  Some companies might want to show the cents.  This is more common when used as an ordering system. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'currency_format'                        , 'c0';

-- 08/08/2006 Paul.  Create a placeholder for a default role to be assigned to new users. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'default_role'                           , '';
-- 08/17/2006 Paul.  We only use SMTPServer, so don't populate smtpport, smtpuser or smtppassword. 
exec dbo.spCONFIG_InsertOnly null, 'mail'  , 'smtpserver'                             , '';
-- 12/21/2006 Paul.  We now support authentication to SMTP servers. 
exec dbo.spCONFIG_InsertOnly null, 'mail'  , 'smtpport'                               , '';
exec dbo.spCONFIG_InsertOnly null, 'mail'  , 'smtpauth_req'                           , '';
exec dbo.spCONFIG_InsertOnly null, 'mail'  , 'smtpuser'                               , '';
exec dbo.spCONFIG_InsertOnly null, 'mail'  , 'smtppass'                               , '';
-- 11/16/2009 Paul.  Allow SSL with client certificate. 
exec dbo.spCONFIG_InsertOnly null, 'mail'  , 'smtpcertificate'                        , '';
-- 12/22/2007 Paul.  Email campain config values. 
exec dbo.spCONFIG_InsertOnly null, 'mail'  , 'massemailer_campaign_emails_per_run'        , '500';
exec dbo.spCONFIG_InsertOnly null, 'mail'  , 'massemailer_tracking_entities_location_type', null;
exec dbo.spCONFIG_InsertOnly null, 'mail'  , 'massemailer_tracking_entities_location'     , null;
-- 01/13/2008 Paul.  Template subject for email regarding a case. 
exec dbo.spCONFIG_InsertOnly null, 'mail'  , 'inbound_email_case_subject_macro'       , '[CASE:%1]';
-- 01/20/2008 Paul.  Save the raw inbound email data by default. 
exec dbo.spCONFIG_InsertOnly null, 'mail'  , 'email_inbound_save_raw'                 , 'true';
-- 01/20/2008 Paul.  Default filter for Cross-Site Scripting (XSS). 
exec dbo.spCONFIG_InsertOnly null, 'mail'  , 'email_xss', 'html|meta|body|base|form|style|applet|object|script|embed|xml|frameset|iframe|frame|blink|link|ilayer|layer|bgsound|import|xmp';

-- #if SQL_Server /*
-- 05/23/2010 Paul.  We want to keep the style tag. 
if exists(select * from CONFIG where NAME = 'email_xss' and VALUE like '%|style%' and DELETED = 0) begin -- then
	print 'CONFIG email_xss: We want to keep the style tag. ';
	update CONFIG
	   set VALUE             = replace(VALUE, '|style', '')
	     , DATE_MODIFIED     = getdate()
	     , DATE_MODIFIED_UTC = getutcdate()
	     , MODIFIED_USER_ID  = NULL
	 where NAME              = 'email_xss'
	   and VALUE             like '%|style%'
	   and DELETED           = 0;
end -- if;
-- #endif SQL_Server */

-- 01/09/2008 Paul.  Use Rijndael instead of TripleDES because it allows 128 block and key sizes, so Guids can be used for both. 
-- 01/08/2008 Paul.  Generate the encryption key as it must remain with the database. 
-- 07/29/2010 Paul.  Now that we run the configurator, we can delay the creation of these keys until app startup. 
/*
if not exists(select * from CONFIG where NAME = 'InboundEmailKey' and DELETED = 0) begin -- then
	insert into CONFIG(ID, CATEGORY, NAME, VALUE)
	values(newid(), 'mail', 'InboundEmailKey', cast(newid() as nvarchar(36)));
end -- if;
-- 01/09/2008 Paul.  Generate the encryption IV as it must remain with the database. 
if not exists(select * from CONFIG where NAME = 'InboundEmailKey' and DELETED = 0) begin -- then
	insert into CONFIG(ID, CATEGORY, NAME, VALUE)
	values(newid(), 'mail', 'InboundEmailIV', cast(newid() as nvarchar(36)));
end -- if;
*/

-- 01/14/2008 Paul.  Generate a unique key for the system. 
if not exists(select * from CONFIG where NAME = 'unique_key' and DELETED = 0) begin -- then
	insert into CONFIG(ID, CATEGORY, NAME, VALUE)
	values(newid(), 'mail', 'unique_key', cast(newid() as nvarchar(36)));
end -- if;
-- 01/14/2008 Paul.  By default, we will check for updates and we will send usage info. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'send_usage_info'                        , 'true';

-- 10/25/2006 Paul.  Provide a way to disable help wiki. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'enable_help_wiki'                       , 'true';
-- 11/01/2006 Paul.  Max import errors. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'import_max_errors'                      , '200';
-- 01/22/2007 Paul.  If ASSIGNED_USER_ID is null, then let everybody see it. 
-- This was added to work around a bug whereby the ASSIGNED_USER_ID was not automatically assigned to the creating user. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'show_unassigned'                        , 'false';
-- 01/01/2008 Paul.  We need a quick way to require user assignments across the system. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'require_user_assignment'                , 'false';


-- 06/02/2007 Paul.  Each user is allowed to set their own max_tabs in their general preferences. 
-- 05/09/2010 Paul.  The Six theme tabs are now larger, so reduce the max to 8. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'default_max_tabs'                       , '8';

-- 11/17/2007 Paul.  Allow the admin to select an alternate mobile theme. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'default_mobile_theme'                   , 'Mobile';

-- 03/30/2008 Paul.  Provide a way to disable silverlight graphs. Default to enable. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'enable_silverlight'                     , 'true';
-- 03/30/2008 Paul.  Provide a way to disable flash graphs. Default to disable. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'enable_flash'                           , 'false';

-- 12/09/2008 Paul.  Allow concurrency to be disabled. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'enable_concurrency_check'               , 'true';
-- 03/14/2014 Paul.  DUPLICATE_CHECHING_ENABLED enables duplicate checking. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'enable_duplicate_check'                 , 'true';

-- 08/05/2009 Paul.  The Training Portal has changed, so we should take this opportunity to make it configurable.
-- exec dbo.spCONFIG_InsertOnly null, 'system', 'sugar_university', 'http://www.sugarcrm.com/crm/university-jump-page.php&tmpl=network&version={0}&edition=OS&language={1}';
exec dbo.spCONFIG_InsertOnly null, 'system', 'sugar_university', 'http://www.splendidcrm.com/Portals/0/Two-Minute%20Training.htm?version={0}&language={1}';

-- #if SQL_Server /*
--02/27/2010 Paul.  Point to new SplendidCRM training videos. 
if exists(select * from CONFIG where NAME = 'sugar_university' and VALUE like '%www.sugarcrm.com%' and DELETED = 0) begin -- then
	update CONFIG
	   set VALUE             = 'http://www.splendidcrm.com/Portals/0/Two-Minute%20Training.htm?version={0}&language={1}'
	     , DATE_MODIFIED     = getdate()
	     , DATE_MODIFIED_UTC = getutcdate()
	 where NAME    = 'sugar_university'
	   and VALUE   like '%www.sugarcrm.com%'
	   and DELETED = 0;
end -- if;
-- #endif SQL_Server */

-- 09/07/2009 Paul.  Custom Paging can be enabled and disabled, but default to false as few customers will have millions of records. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'allow_custom_paging'                    , 'false';
-- 12/03/2009 Paul.  The AjaxControlToolkit has support for Tabs. 
-- 02/26/2010 Paul.  Change name from configure_group_tabs to default_subpanel_tabs. 
-- 02/27/2010 Paul.  Turn on SubPanel Tabs and Group Tabs by default. 
-- 05/06/2010 Paul.  Now that we have the Six theme, we can disable the subpanel tabs. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'default_subpanel_tabs'                  , 'false';
-- 02/26/2010 Paul.  Added support for Group Menu, and make it the default to match SugarCRM. 
-- 05/06/2010 Paul.  Now that we have the Six theme, we can disable the group tabs. 
-- 07/28/2010 Paul.  Sugar 6 defaults to group tabs off. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'default_group_tabs'                     , 'false';

-- 02/27/2010 Paul.  Include Show SQL so that it is easy to enable. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'show_sql'                               , 'false';

-- 04/08/2010 Paul.  Admin Delegation flag. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'allow_admin_roles'                      , 'false';

-- 08/02/2010 Paul.  Add support for LinkedIn icon in DetailView. 
-- 11/11/2010 Paul.  We are getting a javascript error in the LinkedIn code on IE8. "Error: Invalid argument."
-- this._window.style.left = windowOffset.left + "px";
-- Lets remove LinkedIn as this error will make us look bad. 
--exec dbo.spCONFIG_InsertOnly null, 'system', 'external_scripts'                       , '<script type="text/javascript" src="http://www.linkedin.com/companyInsider?script&useBorder=yes"></script><script type="text/javascript" src="http://www.linkedin.com/js/public-profile/widget-os.js"></script>';
exec dbo.spCONFIG_InsertOnly null, 'system', 'external_scripts'                       , '';
exec dbo.spCONFIG_InsertOnly null, 'system', 'external_scripts_mobile'                , '';

-- 10/09/2010 Paul.  Provide a way to hide the Six toolbar. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'hide_theme_toolbar'                     , 'false';

-- 03/05/2011 Paul.  Default to 6 characters, 1 alpha, 1 numeric, no history, no expiration. 
exec dbo.spCONFIG_InsertOnly null, 'security', 'Password.PreferredPasswordLength'   , '6';
exec dbo.spCONFIG_InsertOnly null, 'security', 'Password.MinimumLowerCaseCharacters', '1';
exec dbo.spCONFIG_InsertOnly null, 'security', 'Password.MinimumUpperCaseCharacters', '0';
exec dbo.spCONFIG_InsertOnly null, 'security', 'Password.MinimumNumericCharacters'  , '1';
exec dbo.spCONFIG_InsertOnly null, 'security', 'Password.MinimumSymbolCharacters'   , '0';
exec dbo.spCONFIG_InsertOnly null, 'security', 'Password.PrefixText'                , null;
exec dbo.spCONFIG_InsertOnly null, 'security', 'Password.TextStrengthDescriptions'  , null;
exec dbo.spCONFIG_InsertOnly null, 'security', 'Password.SymbolCharacters'          , null;
exec dbo.spCONFIG_InsertOnly null, 'security', 'Password.ComplexityNumber'          , '2';
exec dbo.spCONFIG_InsertOnly null, 'security', 'Password.HistoryMaximum'            , '0';
exec dbo.spCONFIG_InsertOnly null, 'security', 'Password.LoginLockoutCount'         , '5';
exec dbo.spCONFIG_InsertOnly null, 'security', 'Password.ExpirationDays'            , '0';

-- 03/19/2011 Paul.  Allow facebook integration to be configurable. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'facebook.AppID'                       , '';
exec dbo.spCONFIG_InsertOnly null, 'system', 'facebook.AppSecret'                   , '';
exec dbo.spCONFIG_InsertOnly null, 'system', 'facebook.EnableLogin'                 , 'false';
exec dbo.spCONFIG_InsertOnly null, 'system', 'facebook.Portal.EnableLogin'          , 'false';

-- 04/08/2012 Paul.  Allow import of LinkedIn contacts. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'LinkedIn.APIKey'                      , '';
exec dbo.spCONFIG_InsertOnly null, 'system', 'LinkedIn.SecretKey'                   , '';

-- 04/08/2012 Paul.  Allow import of Twitter contacts. 
-- 02/26/2015 Paul.  Provide a way to disable twitter without clearing values. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'Twitter.EnableTracking'               , 'true';
exec dbo.spCONFIG_InsertOnly null, 'system', 'Twitter.ConsumerKey'                  , '';
exec dbo.spCONFIG_InsertOnly null, 'system', 'Twitter.ConsumerSecret'               , '';
exec dbo.spCONFIG_InsertOnly null, 'system', 'Twitter.VerboseStatus'                , 'false';

-- 04/22/2012 Paul.  Allow import of Salesforce contacts. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'Salesforce.ConsumerKey'               , '';
exec dbo.spCONFIG_InsertOnly null, 'system', 'Salesforce.ConsumerSecret'            , '';
-- 04/22/2012 Paul.  Hardcode the version as this is what the code was developed against. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'Salesforce.Version'                   , '24.0';

-- 08/22/2012 Paul.  Apple and Android devices should support speech and handwriting. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'enable_speech'                        , 'true';
exec dbo.spCONFIG_InsertOnly null, 'system', 'enable_handwriting'                   , 'true';

-- 12/21/2012 Paul.  Prepare to show reminders. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'enable_reminder_popdowns'             , 'true';
exec dbo.spCONFIG_InsertOnly null, 'system', 'reminder_max_time'                    , '90000';
exec dbo.spCONFIG_InsertOnly null, 'system', 'enable_email_reminders'               , 'true';
exec dbo.spCONFIG_InsertOnly null, 'system', 'notify_send_from_assigning_user'      , 'false';
-- 12/23/2013 Paul.  Add SMS_REMINDER_TIME. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'enable_sms_reminders'                 , 'true';
-- 01/16/2014 Paul.  Allow reminders to contacts and leads to be disabled. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'enable_email_reminders_contacts'      , 'true';
exec dbo.spCONFIG_InsertOnly null, 'system', 'enable_email_reminders_leads'         , 'true';
exec dbo.spCONFIG_InsertOnly null, 'system', 'enable_sms_reminders_contacts'        , 'true';
exec dbo.spCONFIG_InsertOnly null, 'system', 'enable_sms_reminders_leads'           , 'true';

-- 02/20/2013 Paul.  New HTML5 calendar supports Google Calendars. 
-- 11/19/2014 Paul.  Calendar code is failing.  Stop enabling as default. 
-- http://www.google.com/calendar/feeds/usa__en@holiday.calendar.google.com/public/basic
exec dbo.spCONFIG_InsertOnly null, 'system', 'GoogleCalendar.HolidayCalendars'      , '';
-- 06/15/2020 Paul.  Correct if calendar is bad. 
if exists(select * from CONFIG where NAME = 'GoogleCalendar.HolidayCalendars' and VALUE = 'http://www.google.com/calendar/feeds/usa__en@holiday.calendar.google.com/public/basic' and DELETED = 0) begin -- then
	update CONFIG
	   set VALUE             = null
	     , DATE_MODIFIED     = getdate()
	     , DATE_MODIFIED_UTC = getutcdate()
	 where NAME              = 'GoogleCalendar.HolidayCalendars'
	   and VALUE             = 'http://www.google.com/calendar/feeds/usa__en@holiday.calendar.google.com/public/basic'
	   and DELETED           = 0;
end -- if;
GO

exec dbo.spCONFIG_InsertOnly null, 'system', 'calendar.hour_start'                  , '8';
exec dbo.spCONFIG_InsertOnly null, 'system', 'calendar.hour_end'                    , '18';

-- 03/04/2013 Paul.  Data for recurring calls or meetings. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'calendar.max_repeat_count'            , '1000';
-- 04/16/2013 Paul.  Allow system to be restricted by IP Address. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'Authentication.IPAddresses'           , '';
-- 05/01/2013 Paul.  Add Contacts field to support B2C. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'BusinessMode'                         , 'B2B';
-- 08/07/2015 Paul.  Revenue line items. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'OpportunitiesMode'                    , 'Opportunities';
-- 10/10/2015 Paul.  Allow activity streams to be disabled for performance reasons. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'enable_activity_streams'              , 'true';
-- 04/07/2016 Paul.  Provide a way to hide the access view. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'hide_user_access_view'                , 'false';
-- 04/14/2016 Paul.  Provide a way to inherit Assigned User from parent.  
exec dbo.spCONFIG_InsertOnly null, 'system', 'inherit_assigned_user'                , 'false';
-- 04/20/2016 Paul.  Provide a way to allow each user to have their own SMTP server. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'enable_separate_smtp_server'          , 'false';
-- 04/03/2018 Paul.  Enable Dynamic Mass Update. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'enable_dynamic_mass_update'           , 'true';
GO

-- 07/07/2013 Paul.  Convert translation engine to use Microsoft Translator. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'MicrosoftTranslator.ClientID'         , '';
exec dbo.spCONFIG_InsertOnly null, 'system', 'MicrosoftTranslator.ClientSecret'     , '';
GO

-- 04/20/2018 Paul.  Alternate language mapping to convert en-CA to en_US. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'alternate_language.en-CA'             , 'en-US';
exec dbo.spCONFIG_InsertOnly null, 'system', 'alternate_language.en-AU'             , 'en-US';
exec dbo.spCONFIG_InsertOnly null, 'system', 'alternate_language.en-GB'             , 'en-US';
GO

-- 07/02/2018 Paul.  Allow defaults to display as checked for Opt Out and Do Not Call. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'default_email_opt_out'                , 'true';
exec dbo.spCONFIG_InsertOnly null, 'system', 'default_do_not_call'                  , 'true';
-- 07/28/2019 Paul.  Specify default so that React client will not complain. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'enable_dynamic_assignment'            , 'false';
-- 03/30/2022 Paul.  Add Insight fields. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'enable_insights'                      , 'true';
GO

set nocount off;
GO

/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spCONFIG_Defaults()
/

call dbo.spSqlDropProcedure('spCONFIG_Defaults')
/

-- #endif IBM_DB2 */



print 'CONFIG License';
GO

set nocount on;
GO

exec dbo.spCONFIG_InsertOnly null, 'system', 'gnu_license', '<p>This program is free software: you can redistribute it and/or modify it under the terms of the 
<a href="http://www.gnu.org/licenses/agpl.txt">GNU Affero General Public License</a> as published by the 
<a href="http://www.gnu.org/licenses/">Free Software Foundation</a>, either version 3 
of the License, or (at your option) any later version.</p>

<p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
See the <a href="http://www.gnu.org/licenses/agpl.txt">GNU Affero General Public License</a> for more details.</p>
';

set nocount off;
GO

/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spCONFIG_License()
/

call dbo.spSqlDropProcedure('spCONFIG_License')
/

-- #endif IBM_DB2 */



print 'CONFIG Logo';
GO

set nocount on;
GO

exec dbo.spCONFIG_InsertOnly null, 'system', 'header_logo_image' , 'SplendidCRM_Logo.gif';
exec dbo.spCONFIG_InsertOnly null, 'system', 'header_logo_width' , '207';
exec dbo.spCONFIG_InsertOnly null, 'system', 'header_logo_height', '60';
exec dbo.spCONFIG_InsertOnly null, 'system', 'header_logo_style' , 'margin-left: 10px';
-- 07/24/2006 Paul.  We need a way to change the header background. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'header_background' , 'images/header_bg.gif';
-- 01/26/2014 Paul.  Atlantic theme header logo. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'header_home_image' , '~/Include/images/SplendidCRM_Icon.gif';
GO


set nocount off;
GO

/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spCONFIG_Logo()
/

call dbo.spSqlDropProcedure('spCONFIG_Logo')
/

-- #endif IBM_DB2 */



print 'CONFIG ServiceLevel';
GO

set nocount on;
GO

exec dbo.spCONFIG_InsertOnly null, 'system', 'service_level'   , 'Builder';
GO

-- 02/04/2022 Paul.  Service level name changed from Community to Builder. 
if exists(select * from CONFIG where NAME = 'service_level' and cast(VALUE as nvarchar(20)) = 'Community' and DELETED = 0) begin -- then
	print 'Service level name has changed from Community to Builder.';
	update CONFIG
	   set VALUE  = 'Builder'
	 where NAME   = 'service_level'
	   and cast(VALUE as nvarchar(20)) = 'Community'
	   and DELETED = 0;
end -- if;
GO

set nocount off;
GO

/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spCONFIG_ServiceLevel()
/

call dbo.spSqlDropProcedure('spCONFIG_ServiceLevel')
/

-- #endif IBM_DB2 */



print 'CURRENCIES defaults';
GO

set nocount on;
GO

-- http://www.id3.org/iso4217.html
-- http://www.xe.com/iso4217.php
-- http://www.xe.com/symbols.php
exec dbo.spCURRENCIES_InsertOnly 'E340202E-6291-4071-B327-A34CB4DF239B', null, N'U.S. Dollar'                        , N'$', N'USD', 1.0, N'Active';
-- 05/01/2016 Paul.  We are going to prepopulate the currency table so that we can be sure to get the supported ISO values correct. 
exec dbo.spCURRENCIES_InsertOnlyByISO N'United Arab Emirates Dirham'        , N'د.إ ', N'AED', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Afghan Afghani'                     , N'؋', N'AFN', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Albanian Lek'                       , N'Lek', N'ALL', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Armenian Dram'                      , N'', N'AMD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Netherlands Antillean Guilder'      , N'ƒ', N'ANG', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Angolan Kwanza'                     , N'Kz', N'AOA', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Argentine Peso'                     , N'$', N'ARS', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Australian Dollar'                  , N'$', N'AUD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Aruban Florin'                      , N'ƒ', N'AWG', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Azerbaijani Manat'                  , N'ман', N'AZN', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Bosnia-Herzegovina Convertible Mark', N'KM', N'BAM', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Barbadian Dollar'                   , N'$', N'BBD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Bangladeshi Taka'                   , N'Tk', N'BDT', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Bulgarian Lev'                      , N'лв', N'BGN', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Bahraini Dinar'                     , N'BD', N'BHD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Burundian Franc'                    , N'', N'BIF', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Bermudan Dollar'                    , N'$', N'BMD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Brunei Dollar'                      , N'$', N'BND', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Bolivian Boliviano'                 , N'$b', N'BOB', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Brazilian Real'                     , N'R$', N'BRL', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Bahamian Dollar'                    , N'$', N'BSD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Bitcoin'                            , N'', N'BTC', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Bhutanese Ngultrum'                 , N'', N'BTN', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Botswanan Pula'                     , N'P', N'BWP', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Belarusian Ruble'                   , N'p.', N'BYR', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Belize Dollar'                      , N'BZ$', N'BZD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Canadian Dollar'                    , N'$', N'CAD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Congolese Franc'                    , N'', N'CDF', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Swiss Franc'                        , N'', N'CHF', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Chilean Unit of Account (UF)'       , N'', N'CLF', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Chilean Peso'                       , N'$', N'CLP', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Chinese Yuan'                       , N'¥', N'CNY', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Colombian Peso'                     , N'$', N'COP', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Costa Rican Colón'                  , N'₡', N'CRC', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Cuban Convertible Peso'             , N'CUC$', N'CUC', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Cuban Peso'                         , N'₱', N'CUP', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Cape Verdean Escudo'                , N'$', N'CVE', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Czech Republic Koruna'              , N'Kč', N'CZK', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Djiboutian Franc'                   , N'', N'DJF', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Danish Krone'                       , N'kr', N'DKK', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Dominican Peso'                     , N'RD$', N'DOP', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Algerian Dinar'                     , N'', N'DZD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Estonian Kroon'                     , N'', N'EEK', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Egyptian Pound'                     , N'£', N'EGP', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Eritrean Nakfa'                     , N'£', N'ERN', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Ethiopian Birr'                     , N'Br', N'ETB', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Euro'                               , N'€', N'EUR', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Fijian Dollar'                      , N'$', N'FJD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Falkland Islands Pound'             , N'£', N'FKP', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'British Pound Sterling'             , N'£', N'GBP', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Georgian Lari'                      , N'', N'GEL', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Guernsey Pound'                     , N'£', N'GGP', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Ghanaian Cedi'                      , N'¢', N'GHS', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Gibraltar Pound'                    , N'£', N'GIP', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Gambian Dalasi'                     , N'', N'GMD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Guinean Franc'                      , N'', N'GNF', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Guatemalan Quetzal'                 , N'Q', N'GTQ', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Guyanaese Dollar'                   , N'$', N'GYD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Hong Kong Dollar'                   , N'$', N'HKD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Honduran Lempira'                   , N'L', N'HNL', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Croatian Kuna'                      , N'kn', N'HRK', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Haitian Gourde'                     , N'G', N'HTG', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Hungarian Forint'                   , N'Ft', N'HUF', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Indonesian Rupiah'                  , N'Rp', N'IDR', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Israeli New Sheqel'                 , N'₪', N'ILS', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Manx pound'                         , N'£', N'IMP', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Indian Rupee'                       , N'₹', N'INR', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Iraqi Dinar'                        , N'د.ع', N'IQD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Iranian Rial'                       , N'﷼', N'IRR', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Icelandic Króna'                    , N'kr', N'ISK', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Jersey Pound'                       , N'£', N'JEP', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Jamaican Dollar'                    , N'J$', N'JMD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Jordanian Dinar'                    , N'', N'JOD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Japanese Yen'                       , N'¥', N'JPY', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Kenyan Shilling'                    , N'KSh', N'KES', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Kyrgystani Som'                     , N'лв', N'KGS', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Cambodian Riel'                     , N'៛', N'KHR', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Comorian Franc'                     , N'', N'KMF', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'North Korean Won'                   , N'₩', N'KPW', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'South Korean Won'                   , N'₩', N'KRW', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Kuwaiti Dinar'                      , N'ك', N'KWD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Cayman Islands Dollar'              , N'$', N'KYD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Kazakhstani Tenge'                  , N'лв', N'KZT', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Laotian Kip'                        , N'₭', N'LAK', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Lebanese Pound'                     , N'£', N'LBP', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Sri Lankan Rupee'                   , N'₨', N'LKR', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Liberian Dollar'                    , N'$', N'LRD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Lesotho Loti'                       , N'', N'LSL', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Lithuanian Litas'                   , N'', N'LTL', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Latvian Lats'                       , N'', N'LVL', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Libyan Dinar'                       , N'LD', N'LYD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Moroccan Dirham'                    , N'', N'MAD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Moldovan Leu'                       , N'', N'MDL', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Malagasy Ariary'                    , N'Ar', N'MGA', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Macedonian Denar'                   , N'ден', N'MKD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Myanma Kyat'                        , N'K', N'MMK', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Mongolian Tugrik'                   , N'₮', N'MNT', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Macanese Pataca'                    , N'MOP$', N'MOP', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Mauritanian Ouguiya'                , N'', N'MRO', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Mauritian Rupee'                    , N'₨', N'MUR', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Maldivian Rufiyaa'                  , N'', N'MVR', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Malawian Kwacha'                    , N'MK', N'MWK', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Mexican Peso'                       , N'$', N'MXN', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Malaysian Ringgit'                  , N'RM', N'MYR', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Mozambican Metical'                 , N'MT', N'MZN', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Namibian Dollar'                    , N'$', N'NAD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Nigerian Naira'                     , N'₦', N'NGN', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Nicaraguan Córdoba'                 , N'C$', N'NIO', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Norwegian Krone'                    , N'kr', N'NOK', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Nepalese Rupee'                     , N'₨', N'NPR', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'New Zealand Dollar'                 , N'$', N'NZD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Omani Rial'                         , N'﷼', N'OMR', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Panamanian Balboa'                  , N'B/.', N'PAB', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Peruvian Nuevo Sol'                 , N'S/.', N'PEN', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Papua New Guinean Kina'             , N'K', N'PGK', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Philippine Peso'                    , N'₱', N'PHP', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Pakistani Rupee'                    , N'₨', N'PKR', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Polish Zloty'                       , N'zł', N'PLN', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Paraguayan Guarani'                 , N'Gs', N'PYG', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Qatari Rial'                        , N'﷼', N'QAR', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Romanian Leu'                       , N'lei', N'RON', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Serbian Dinar'                      , N'Дин.', N'RSD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Russian Ruble'                      , N'руб', N'RUB', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Rwandan Franc'                      , N'', N'RWF', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Saudi Riyal'                        , N'﷼', N'SAR', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Solomon Islands Dollar'             , N'$', N'SBD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Seychellois Rupee'                  , N'₨', N'SCR', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Sudanese Pound'                     , N'', N'SDG', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Swedish Krona'                      , N'kr', N'SEK', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Singapore Dollar'                   , N'$', N'SGD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Saint Helena Pound'                 , N'£', N'SHP', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Sierra Leonean Leone'               , N'Le', N'SLL', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Somali Shilling'                    , N'S', N'SOS', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Surinamese Dollar'                  , N'$', N'SRD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'São Tomé and Príncipe Dobra'        , N'', N'STD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Salvadoran Colón'                   , N'$', N'SVC', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Syrian Pound'                       , N'£', N'SYP', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Swazi Lilangeni'                    , N'', N'SZL', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Thai Baht'                          , N'฿', N'THB', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Tajikistani Somoni'                 , N'', N'TJS', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Turkmenistani Manat'                , N'', N'TMT', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Tunisian Dinar'                     , N'', N'TND', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Tongan Pa?anga'                     , N'T$', N'TOP', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Turkish Lira'                       , N'', N'TRY', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Trinidad and Tobago Dollar'         , N'TT$', N'TTD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'New Taiwan Dollar'                  , N'NT$', N'TWD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Tanzanian Shilling'                 , N'', N'TZS', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Ukrainian Hryvnia'                  , N'₴', N'UAH', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Ugandan Shilling'                   , N'', N'UGX', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Uruguayan Peso'                     , N'$U', N'UYU', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Uzbekistan Som'                     , N'лв', N'UZS', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Venezuelan Bolívar Fuerte'          , N'Bs', N'VEF', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Vietnamese Dong'                    , N'₫', N'VND', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Vanuatu Vatu'                       , N'VT', N'VUV', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Samoan Tala'                        , N'$', N'WST', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'CFA Franc BEAC'                     , N'', N'XAF', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Silver (troy ounce)'                , N'', N'XAG', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Gold (troy ounce)'                  , N'', N'XAU', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'East Caribbean Dollar'              , N'$', N'XCD', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Special Drawing Rights'             , N'', N'XDR', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'CFA Franc BCEAO'                    , N'', N'XOF', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'CFP Franc'                          , N'', N'XPF', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Yemeni Rial'                        , N'﷼', N'YER', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'South African Rand'                 , N'R', N'ZAR', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Zambian Kwacha (pre-2013)'          , N'', N'ZMK', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Zambian Kwacha'                     , N'ZK', N'ZMW', 1.0, N'Inactive';
exec dbo.spCURRENCIES_InsertOnlyByISO N'Zimbabwean Dollar'                  , N'Z$', N'ZWL', 1.0, N'Inactive';
GO

-- 05/01/2016 Paul.  New search requires non-null STATUS. 
if exists(select * from CURRENCIES where STATUS is null) begin -- then
	update CURRENCIES
	   set STATUS            = N'Active'
	     , DATE_MODIFIED     = getdate()
	     , DATE_MODIFIED_UTC = getutcdate()
	 where STATUS            is null;
end -- if;
GO


set nocount off;
GO

/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spCURRENCIES_Defaults()
/

call dbo.spSqlDropProcedure('spCURRENCIES_Defaults')
/

-- #endif IBM_DB2 */

set nocount on;
GO

if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'ACLRoles.DetailView' and DELETED = 0) begin -- then
	print 'DETAILVIEWS_FIELDS ACLRoles.DetailView';
	exec dbo.spDETAILVIEWS_InsertOnly          'ACLRoles.DetailView', 'ACLRoles', 'vwACL_ROLES_Edit', '15%', '35%', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'ACLRoles.DetailView' ,  0, 'ACLRoles.LBL_NAME'              , 'NAME'                             , '{0}'        , 3;
	exec dbo.spDETAILVIEWS_FIELDS_InsertOnly   'ACLRoles.DetailView' ,  1, 'TextBox', 'ACLRoles.LBL_DESCRIPTION', 'DESCRIPTION', null, null, null, null, null, 3, null;
end -- if;
GO

set nocount on;
GO

if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Config.DetailView' and DELETED = 0) begin -- then
	print 'DETAILVIEWS_FIELDS Config.DetailView';
	exec dbo.spDETAILVIEWS_InsertOnly           'Config.DetailView', 'Config', 'vwCONFIG_Edit', '15%', '35%', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Config.DetailView'        ,  0, 'Config.LBL_NAME'                      , 'NAME'               , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Config.DetailView'        ,  1, 'Config.LBL_CATEGORY'                  , 'CATEGORY'           , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Config.DetailView'        ,  2, 'Config.LBL_VALUE'                     , 'VALUE'              , '{0}'        , 3;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 05/01/2016 Paul.  We are going to prepopulate the currency table so that we can be sure to get the supported ISO values correct. 
-- delete from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Currencies.DetailView';
if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Currencies.DetailView' and DELETED = 0) begin -- then
	print 'DETAILVIEWS_FIELDS Currencies.DetailView';
	exec dbo.spDETAILVIEWS_InsertOnly          'Currencies.DetailView', 'Currencies', 'vwCURRENCIES_Edit', '15%', '35', 2;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Currencies.DetailView',  0, 'Currencies.LBL_NAME'                  , 'NAME'                                          , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Currencies.DetailView',  1, 'Currencies.LBL_ISO4217'               , 'ISO4217'                                       , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Currencies.DetailView',  2, 'Currencies.LBL_CONVERSION_RATE'       , 'CONVERSION_RATE'                               , '{0:F3}'     , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Currencies.DetailView',  3, 'Currencies.LBL_SYMBOL'                , 'SYMBOL'                                        , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBoundList 'Currencies.DetailView',  4, 'Currencies.LBL_STATUS'                , 'STATUS'                                        , '{0}'        , 'currency_status_dom', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsCheckBox  'Currencies.DetailView',  5, 'Currencies.LBL_DEFAULT_CURRENCY'      , 'IS_DEFAULT'                                    , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Currencies.DetailView',  6, '.LBL_DATE_MODIFIED'                   , 'DATE_MODIFIED .LBL_BY MODIFIED_BY_NAME', '{0} {1} {2}', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsCheckBox  'Currencies.DetailView',  7, 'Currencies.LBL_BASE_CURRENCY'         , 'IS_BASE'                                       , null;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- delete from DETAILVIEWS_FIELDS where DETAIL_NAME = 'DynamicButtons.DetailView';
if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'DynamicButtons.DetailView' and DELETED = 0) begin -- then 
	print 'DETAILVIEWS_FIELDS DynamicButtons.DetailView'; 
	exec dbo.spDETAILVIEWS_InsertOnly 'DynamicButtons.DetailView', 'DynamicButtons', 'vwDYNAMIC_BUTTONS_Edit', '15%', '35%', null; 
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'DynamicButtons.DetailView',  0, 'DynamicButtons.LBL_VIEW_NAME'         , 'VIEW_NAME'          , '{0}', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'DynamicButtons.DetailView',  1, 'DynamicButtons.LBL_CONTROL_INDEX'     , 'CONTROL_INDEX'      , '{0}', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBoundList  'DynamicButtons.DetailView',  2, 'DynamicButtons.LBL_CONTROL_TYPE'      , 'CONTROL_TYPE'       , '{0}', 'dynamic_button_type_dom', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBoundList  'DynamicButtons.DetailView',  3, 'DynamicButtons.LBL_MODULE_NAME'       , 'MODULE_NAME'        , '{0}', 'Modules'                , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBoundList  'DynamicButtons.DetailView',  4, 'DynamicButtons.LBL_MODULE_ACCESS_TYPE', 'MODULE_ACCESS_TYPE' , '{0}', 'module_access_type_dom' , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBoundList  'DynamicButtons.DetailView',  5, 'DynamicButtons.LBL_TARGET_NAME'       , 'TARGET_NAME'        , '{0}', 'Modules'                , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBoundList  'DynamicButtons.DetailView',  6, 'DynamicButtons.LBL_TARGET_ACCESS_TYPE', 'TARGET_ACCESS_TYPE' , '{0}', 'module_access_type_dom' , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsCheckbox   'DynamicButtons.DetailView',  7, 'DynamicButtons.LBL_MOBILE_ONLY'       , 'MOBILE_ONLY'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsCheckbox   'DynamicButtons.DetailView',  8, 'DynamicButtons.LBL_ADMIN_ONLY'        , 'ADMIN_ONLY'         , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsCheckbox   'DynamicButtons.DetailView',  9, 'DynamicButtons.LBL_EXCLUDE_MOBILE'    , 'EXCLUDE_MOBILE'     , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'DynamicButtons.DetailView', 10, 'DynamicButtons.LBL_CONTROL_TEXT'      , 'CONTROL_TEXT'       , '{0}', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'DynamicButtons.DetailView', 11, 'DynamicButtons.LBL_CONTROL_TOOLTIP'   , 'CONTROL_TOOLTIP'    , '{0}', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'DynamicButtons.DetailView', 12, 'DynamicButtons.LBL_CONTROL_ACCESSKEY' , 'CONTROL_ACCESSKEY'  , '{0}', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'DynamicButtons.DetailView', 13, 'DynamicButtons.LBL_CONTROL_CSSCLASS'  , 'CONTROL_CSSCLASS'   , '{0}', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'DynamicButtons.DetailView', 14, 'DynamicButtons.LBL_TEXT_FIELD'        , 'TEXT_FIELD'         , '{0}', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'DynamicButtons.DetailView', 15, 'DynamicButtons.LBL_ARGUMENT_FIELD'    , 'ARGUMENT_FIELD'     , '{0}', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'DynamicButtons.DetailView', 16, 'DynamicButtons.LBL_COMMAND_NAME'      , 'COMMAND_NAME'       , '{0}', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'DynamicButtons.DetailView', 17, 'DynamicButtons.LBL_URL_FORMAT'        , 'URL_FORMAT'         , '{0}', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'DynamicButtons.DetailView', 18, 'DynamicButtons.LBL_URL_TARGET'        , 'URL_TARGET'         , '{0}', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'DynamicButtons.DetailView', 19, 'DynamicButtons.LBL_ONCLICK_SCRIPT'    , 'ONCLICK_SCRIPT'     , '{0}', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsCheckbox   'DynamicButtons.DetailView', 20, 'DynamicButtons.LBL_HIDDEN'            , 'HIDDEN'             , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBlank      'DynamicButtons.DetailView', 21, null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'DynamicButtons.DetailView', 22, 'DynamicButtons.LBL_BUSINESS_RULE'     , 'BUSINESS_RULE'      , '{0}', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'DynamicButtons.DetailView', 23, 'DynamicButtons.LBL_BUSINESS_SCRIPT'   , 'BUSINESS_SCRIPT'    , '{0}', null;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 09/12/2009 Paul.  Allow editing of Field Validators. 
-- delete from DETAILVIEWS_FIELDS where DETAIL_NAME = 'FieldValidators.DetailView';
-- 12/12/2010 Paul.  Missing last parameter in spDETAILVIEWS_InsertOnly. 
if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'FieldValidators.DetailView' and DELETED = 0) begin -- then
	print 'DETAILVIEWS_FIELDS FieldValidators.DetailView';
	exec dbo.spDETAILVIEWS_InsertOnly          'FieldValidators.DetailView', 'FieldValidators', 'vwFIELD_VALIDATORS', '15%', '35%', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'FieldValidators.DetailView',  0, 'FieldValidators.LBL_NAME'              , 'NAME'              , '{0}', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'FieldValidators.DetailView',  1, 'FieldValidators.LBL_VALIDATION_TYPE'   , 'VALIDATION_TYPE'   , '{0}', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'FieldValidators.DetailView',  2, 'FieldValidators.LBL_REGULAR_EXPRESSION', 'REGULAR_EXPRESSION', '{0}', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'FieldValidators.DetailView',  3, 'FieldValidators.LBL_DATA_TYPE'         , 'DATA_TYPE'         , '{0}', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'FieldValidators.DetailView',  4, 'FieldValidators.LBL_MININUM_VALUE'     , 'MININUM_VALUE'     , '{0}', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'FieldValidators.DetailView',  5, 'FieldValidators.LBL_MAXIMUM_VALUE'     , 'MAXIMUM_VALUE'     , '{0}', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'FieldValidators.DetailView',  6, 'FieldValidators.LBL_COMPARE_OPERATOR'  , 'COMPARE_OPERATOR'  , '{0}', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBlank     'FieldValidators.DetailView',  7, null;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 02/21/2021 Paul.  Languages for React client. 
-- delete from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Languages.DetailView';
if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Languages.DetailView' and DELETED = 0) begin -- then
	print 'DETAILVIEWS_FIELDS Languages.DetailView';
	exec dbo.spDETAILVIEWS_InsertOnly           'Languages.DetailView', 'Languages', 'vwLANGUAGES', '15%', '35%', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Languages.DetailView'     ,  0, 'Languages.LBL_NAME'                   , 'NAME'               , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Languages.DetailView'     ,  1, 'Languages.LBL_LCID'                   , 'LCID'               , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsCheckbox   'Languages.DetailView'     ,  2, 'Languages.LBL_ACTIVE'                 , 'ACTIVE'             , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Languages.DetailView'     ,  3, 'Languages.LBL_NATIVE_NAME'            , 'NATIVE_NAME'        , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Languages.DetailView'     ,  4, 'Languages.LBL_DISPLAY_NAME'           , 'DISPLAY_NAME'       , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBlank      'Languages.DetailView'     ,  5, null;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 09/09/2009 Paul.  Allow direct editing of the module table. 
-- delete from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Modules.DetailView';
-- 12/02/2009 Paul.  Add the ability to disable Mass Updates. 
-- 04/01/2010 Paul.  Add Exchange Sync flag. 
-- 12/12/2010 Paul.  Missing last parameter in spDETAILVIEWS_InsertOnly. 
-- 06/18/2011 Paul.  REST_ENABLED provides a way to enable/disable a module in the REST API. 
-- 03/14/2014 Paul.  DUPLICATE_CHECHING_ENABLED enables duplicate checking. 
-- 11/01/2017 Paul.  Use a module-based flag so that Record Level Security is only enabled when needed. 
if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Modules.DetailView' and DELETED = 0) begin -- then
	print 'DETAILVIEWS_FIELDS Modules.DetailView';
	exec dbo.spDETAILVIEWS_InsertOnly          'Modules.DetailView' , 'Modules', 'vwMODULES', '15%', '35%', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' ,  0, 'Modules.LBL_MODULE_NAME'           , 'MODULE_NAME'                      , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' ,  1, 'Modules.LBL_DISPLAY_NAME'          , 'DISPLAY_NAME'                     , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' ,  2, 'Modules.LBL_RELATIVE_PATH'         , 'RELATIVE_PATH'                    , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' ,  3, 'Modules.LBL_TABLE_NAME'            , 'TABLE_NAME'                       , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' ,  4, 'Modules.LBL_TAB_ORDER'             , 'TAB_ORDER'                        , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' ,  5, 'Modules.LBL_PORTAL_ENABLED'        , 'PORTAL_ENABLED'                   , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' ,  6, 'Modules.LBL_MODULE_ENABLED'        , 'MODULE_ENABLED'                   , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' ,  7, 'Modules.LBL_TAB_ENABLED'           , 'TAB_ENABLED'                      , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' ,  8, 'Modules.LBL_IS_ADMIN'              , 'IS_ADMIN'                         , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' ,  9, 'Modules.LBL_CUSTOM_ENABLED'        , 'CUSTOM_ENABLED'                   , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' , 10, 'Modules.LBL_REPORT_ENABLED'        , 'REPORT_ENABLED'                   , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' , 11, 'Modules.LBL_IMPORT_ENABLED'        , 'IMPORT_ENABLED'                   , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' , 12, 'Modules.LBL_MOBILE_ENABLED'        , 'MOBILE_ENABLED'                   , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' , 13, 'Modules.LBL_CUSTOM_PAGING'         , 'CUSTOM_PAGING'                    , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' , 14, 'Modules.LBL_MASS_UPDATE_ENABLED'   , 'MASS_UPDATE_ENABLED'              , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' , 15, 'Modules.LBL_DEFAULT_SEARCH_ENABLED', 'DEFAULT_SEARCH_ENABLED'           , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' , 16, 'Modules.LBL_EXCHANGE_SYNC'         , 'EXCHANGE_SYNC'                    , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' , 17, 'Modules.LBL_EXCHANGE_FOLDERS'      , 'EXCHANGE_FOLDERS'                 , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' , 18, 'Modules.LBL_EXCHANGE_CREATE_PARENT', 'EXCHANGE_CREATE_PARENT'           , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' , 19, 'Modules.LBL_REST_ENABLED'          , 'REST_ENABLED'                     , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' , 20, 'Modules.LBL_DUPLICATE_CHECHING_ENABLED', 'DUPLICATE_CHECHING_ENABLED'   , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' , 21, 'Modules.LBL_RECORD_LEVEL_SECURITY_ENABLED', 'RECORD_LEVEL_SECURITY_ENABLED'        , '{0}'        , null;
end else begin
	if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Modules.DetailView' and DATA_FIELD = 'MASS_UPDATE_ENABLED' and DELETED = 0) begin -- then
		exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' , 14, 'Modules.LBL_MASS_UPDATE_ENABLED' , 'MASS_UPDATE_ENABLED'              , '{0}'        , null;
		exec dbo.spDETAILVIEWS_FIELDS_InsBlank     'Modules.DetailView' , 15, null;
	end -- if;
	if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Modules.DetailView' and DATA_FIELD = 'DEFAULT_SEARCH_ENABLED' and DELETED = 0) begin -- then
		exec dbo.spDETAILVIEWS_FIELDS_CnvBound     'Modules.DetailView' , 15, 'Modules.LBL_DEFAULT_SEARCH_ENABLED' , 'DEFAULT_SEARCH_ENABLED'        , '{0}'        , null;
	end -- if;
	-- 04/01/2010 Paul.  Add Exchange Sync flag. 
	if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Modules.DetailView' and DATA_FIELD = 'EXCHANGE_SYNC' and DELETED = 0) begin -- then
		exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' , 16, 'Modules.LBL_EXCHANGE_SYNC'       , 'EXCHANGE_SYNC'                    , '{0}'        , null;
	end -- if;
	-- 04/04/2010 Paul.  Add Exchange Folders flag. 
	if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Modules.DetailView' and DATA_FIELD = 'EXCHANGE_FOLDERS' and DELETED = 0) begin -- then
		exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' , 17, 'Modules.LBL_EXCHANGE_FOLDERS'    , 'EXCHANGE_FOLDERS'                 , '{0}'        , null;
	end -- if;
	-- 04/05/2010 Paul.  Add Exchange Create Parent flag. Need to be able to disable Account creation. 
	if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Modules.DetailView' and DATA_FIELD = 'EXCHANGE_CREATE_PARENT' and DELETED = 0) begin -- then
		exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' , 18, 'Modules.LBL_EXCHANGE_CREATE_PARENT', 'EXCHANGE_CREATE_PARENT'         , '{0}'        , null;
	end -- if;
	-- 06/23/2010 Paul.  Allow display of the Portal flag. 
	if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Modules.DetailView' and DATA_FIELD = 'PORTAL_ENABLED' and DELETED = 0) begin -- then
		update DETAILVIEWS_FIELDS
		   set DELETED           = 1
		     , DATE_MODIFIED     = getdate()
		     , MODIFIED_USER_ID  = null
		 where DETAIL_NAME       = 'Modules.DetailView'
		   and FIELD_TYPE        = 'Blank'
		   and FIELD_INDEX       = 5
		   and DELETED           = 0;
		exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' ,  5, 'Modules.LBL_PORTAL_ENABLED'        , 'PORTAL_ENABLED'                   , '{0}'        , null;
	end -- if;
	-- 06/18/2011 Paul.  REST_ENABLED provides a way to enable/disable a module in the REST API. 
	if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Modules.DetailView' and DATA_FIELD = 'REST_ENABLED' and DELETED = 0) begin -- then
		exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' , 19, 'Modules.LBL_REST_ENABLED'          , 'REST_ENABLED'                     , '{0}'        , null;
	end -- if;
	-- 03/14/2014 Paul.  DUPLICATE_CHECHING_ENABLED enables duplicate checking. 
	if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Modules.DetailView' and DATA_FIELD = 'DUPLICATE_CHECHING_ENABLED' and DELETED = 0) begin -- then
		exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Modules.DetailView' , 20, 'Modules.LBL_DUPLICATE_CHECHING_ENABLED', 'DUPLICATE_CHECHING_ENABLED', '{0}'        , null;
	end -- if;
	-- 11/01/2017 Paul.  Use a module-based flag so that Record Level Security is only enabled when needed. 
	if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Modules.DetailView' and DATA_FIELD = 'RECORD_LEVEL_SECURITY_ENABLED' and DELETED = 0) begin -- then
		exec dbo.spDETAILVIEWS_FIELDS_CnvBound     'Modules.DetailView' , 21, 'Modules.LBL_RECORD_LEVEL_SECURITY_ENABLED', 'RECORD_LEVEL_SECURITY_ENABLED'     , '{0}'        , null;
	end -- if;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- delete from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Schedulers.DetailView';
if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Schedulers.DetailView' and DELETED = 0) begin -- then
	print 'DETAILVIEWS_FIELDS Schedulers.DetailView';
	exec dbo.spDETAILVIEWS_InsertOnly           'Schedulers.DetailView', 'Schedulers', 'vwSCHEDULERS', '15%', '35%', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Schedulers.DetailView'    ,  0, 'Schedulers.LBL_NAME'                  , 'NAME'               , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBoundList  'Schedulers.DetailView'    ,  1, 'Schedulers.LBL_STATUS'                , 'STATUS'             , '{0}'        , 'scheduler_status_dom', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Schedulers.DetailView'    ,  2, 'Schedulers.LBL_JOB'                   , 'JOB'                , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBlank      'Schedulers.DetailView'    ,  3, null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Schedulers.DetailView'    ,  4, 'Schedulers.LBL_DATE_TIME_START'       , 'DATE_TIME_START'    , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Schedulers.DetailView'    ,  5, 'Schedulers.LBL_TIME_FROM'             , 'TIME_FROM'          , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Schedulers.DetailView'    ,  6, 'Schedulers.LBL_DATE_TIME_END'         , 'DATE_TIME_END'      , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Schedulers.DetailView'    ,  7, 'Schedulers.LBL_TIME_TO'               , 'TIME_TO'            , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Schedulers.DetailView'    ,  8, 'Schedulers.LBL_LAST_RUN'              , 'LAST_RUN'           , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Schedulers.DetailView'    ,  9, 'Schedulers.LBL_INTERVAL'              , 'JOB_INTERVAL'       , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Schedulers.DetailView'    , 10, 'Schedulers.LBL_CATCH_UP'              , 'CATCH_UP'           , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBlank      'Schedulers.DetailView'    , 11, null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Schedulers.DetailView'    , 12, '.LBL_DATE_ENTERED'                    , 'DATE_ENTERED'       , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Schedulers.DetailView'    , 13, '.LBL_DATE_MODIFIED'                   , 'DATE_MODIFIED'      , '{0}'        , null;
end else begin
	-- 03/29/2021 Paul.  INTERVAL is not a valid field. 
	if exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Schedulers.DetailView' and DATA_FIELD = 'INTERVAL' and DELETED = 0) begin -- then
		update DETAILVIEWS_FIELDS
		   set DATA_FIELD        = 'JOB_INTERVAL'
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()     
		     , MODIFIED_USER_ID  = null
		 where DETAIL_NAME       = 'Schedulers.DetailView'
		   and DATA_FIELD        = 'INTERVAL'
		   and DELETED           = 0;
	end -- if;
end -- if;
GO


set nocount off;
GO


set nocount on;
GO

-- delete from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Shortcuts.DetailView';
if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Shortcuts.DetailView' and DELETED = 0) begin -- then
	print 'DETAILVIEWS_FIELDS Shortcuts.DetailView';
	exec dbo.spDETAILVIEWS_InsertOnly           'Shortcuts.DetailView', 'Shortcuts', 'vwSHORTCUTS_Edit', '15%', '35%', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBoundList  'Shortcuts.DetailView'     ,  0, 'Shortcuts.LBL_MODULE_NAME'            , 'MODULE_NAME'        , '{0}'        , 'Modules'  , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Shortcuts.DetailView'     ,  1, 'Shortcuts.LBL_DISPLAY_NAME'           , 'DISPLAY_NAME'       , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Shortcuts.DetailView'     ,  2, 'Shortcuts.LBL_RELATIVE_PATH'          , 'RELATIVE_PATH'      , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Shortcuts.DetailView'     ,  3, 'Shortcuts.LBL_IMAGE_NAME'             , 'IMAGE_NAME'         , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Shortcuts.DetailView'     ,  4, 'Shortcuts.LBL_SHORTCUT_ORDER'         , 'SHORTCUT_ORDER'     , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsCheckBox   'Shortcuts.DetailView'     ,  5, 'Shortcuts.LBL_SHORTCUT_ENABLED'       , 'SHORTCUT_ENABLED'   , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBoundList  'Shortcuts.DetailView'     ,  6, 'Shortcuts.LBL_SHORTCUT_MODULE'        , 'SHORTCUT_MODULE'    , '{0}'        , 'Modules'              , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBoundList  'Shortcuts.DetailView'     ,  7, 'Shortcuts.LBL_SHORTCUT_ACLTYPE'       , 'SHORTCUT_ACLTYPE'   , '{0}'        , 'shortcuts_acltype_dom', null;
end -- if;
GO

set nocount off;
GO


-- 10/15/2006 Paul.  Add support for Teams. 
-- 04/12/2016 Paul.  Add parent team and custom fields. 
-- 04/28/2016 Paul.  Rename parent to PARENT_ID. 
-- 11/11/2020 Paul.  React requires full url in format. 
-- delete from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Teams.DetailView'
if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Teams.DetailView' and DELETED = 0) begin -- then
	print 'DETAILVIEWS_FIELDS Teams.DetailView';
	exec dbo.spDETAILVIEWS_InsertOnly          'Teams.DetailView', 'Teams', 'vwTEAMS_Edit', '15%', '35%', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Teams.DetailView'    ,  0, 'Teams.LBL_NAME'                  , 'NAME'                             , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsHyperLink 'Teams.DetailView'    ,  1, 'Teams.LBL_PARENT_NAME'           , 'PARENT_NAME'                      , '{0}'        , 'PARENT_ID' , '~/Administration/Teams/view.aspx?ID={0}', null, null;
	exec dbo.spDETAILVIEWS_FIELDS_InsertOnly   'Teams.DetailView'    ,  2, 'TextBox', 'Teams.LBL_DESCRIPTION', 'DESCRIPTION', null, null, null, null, null, 3, null;
end else begin
	-- 04/12/2016 Paul.  Add parent team and custom fields. 
	-- 04/28/2016 Paul.  Rename parent to PARENT_ID. 
	if exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Teams.DetailView' and DATA_FIELD = 'PARENT_TEAM_NAME' and DELETED = 0) begin -- then
		update DETAILVIEWS_FIELDS
		   set DATA_FIELD        = 'PARENT_NAME'
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = null
		 where DETAIL_NAME       = 'Teams.DetailView'
		   and DATA_FIELD        = 'PARENT_TEAM_NAME'
		   and DELETED           = 0;
	end -- if;
	if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Teams.DetailView' and DATA_FIELD = 'PARENT_NAME' and DELETED = 0) begin -- then
		update DETAILVIEWS_FIELDS
		   set FIELD_INDEX       = FIELD_INDEX + 1
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = null
		 where DETAIL_NAME       = 'Teams.DetailView'
		   and FIELD_INDEX      >= 1
		   and DELETED           = 0;
		update DETAILVIEWS_FIELDS
		   set COLSPAN           = null
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = null
		 where DETAIL_NAME       = 'Teams.DetailView'
		   and DATA_FIELD        = 'NAME'
		   and COLSPAN           = 3
		   and DELETED           = 0;
		exec dbo.spDETAILVIEWS_FIELDS_InsHyperLink 'Teams.DetailView'    ,  1, 'Teams.LBL_PARENT_NAME'           , 'PARENT_NAME'                      , '{0}'        , 'PARENT_ID' , '~/Administration/Teams/view.aspx?ID={0}', null, null;
	end -- if;

	-- 11/11/2020 Paul.  React requires full url in format. 
	if exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Teams.DetailView' and DATA_FIELD = 'PARENT_NAME' and URL_FORMAT = 'view.aspx?ID={0}' and DELETED = 0) begin -- then
		update DETAILVIEWS_FIELDS
		   set URL_FORMAT        = '~/Administration/Teams/view.aspx?ID={0}'
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = null
		 where DETAIL_NAME       = 'Teams.DetailView'
		   and DATA_FIELD        = 'PARENT_NAME'
		   and URL_FORMAT        = 'view.aspx?ID={0}'
		   and DELETED           = 0;
	end -- if;
end -- if;
GO

set nocount on;
GO

-- delete from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Terminology.DetailView';
if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Terminology.DetailView' and DELETED = 0) begin -- then
	print 'DETAILVIEWS_FIELDS Terminology.DetailView';
	exec dbo.spDETAILVIEWS_InsertOnly           'Terminology.DetailView', 'Terminology', 'vwTERMINOLOGY_Edit', '15%', '35%', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Terminology.DetailView'   ,  0, 'Terminology.LBL_NAME'                 , 'NAME'               , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBoundList  'Terminology.DetailView'   ,  1, 'Terminology.LBL_LANG'                 , 'LANG'               , '{0}'        , 'Languages', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBoundList  'Terminology.DetailView'   ,  2, 'Terminology.LBL_MODULE_NAME'          , 'MODULE_NAME'        , '{0}'        , 'Modules'  , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBlank      'Terminology.DetailView'   ,  3, null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Terminology.DetailView'   ,  4, 'Terminology.LBL_LIST_NAME'            , 'LIST_NAME'          , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Terminology.DetailView'   ,  5, 'Terminology.LBL_LIST_ORDER'           , 'LIST_ORDER'         , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound      'Terminology.DetailView'   ,  6, 'Terminology.LBL_DISPLAY_NAME'         , 'DISPLAY_NAME'       , '{0}'        , 3;
end -- if;
GO


set nocount off;
GO


set nocount on;
GO

-- 09/04/2006 Paul.  Remove from EMAIL and OTHER_EMAIL.  This data goes in the EmailOptions panel. 
-- 08/24/2013 Paul.  Add EXTENSION_C in preparation for Asterisk click-to-call. 
-- 09/20/2013 Paul.  Move EXTENSION to the main table. 
-- 01/04/2018 Paul.  Change to Employees.LBL_REPORTS_TO. 
-- 10/29/2020 Paul.  Change to Users.LBL_REPORTS_TO as the Employees module may be disabled. 
if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Users.DetailView' and DELETED = 0) begin -- then
	print 'DETAILVIEWS_FIELDS Users.DetailView';
	exec dbo.spDETAILVIEWS_InsertOnly          'Users.DetailView'         , 'Users'         , 'vwUSERS_Edit'         , '15%', '35%', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBoundList 'Users.DetailView'   ,  1, 'Users.LBL_EMPLOYEE_STATUS'       , 'EMPLOYEE_STATUS'                  , '{0}'        , 'employee_status_dom' , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBlank     'Users.DetailView'   ,  2, null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Users.DetailView'   ,  3, 'Users.LBL_TITLE'                 , 'TITLE'                            , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Users.DetailView'   ,  4, 'Users.LBL_OFFICE_PHONE'          , 'PHONE_WORK'                       , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Users.DetailView'   ,  5, 'Users.LBL_DEPARTMENT'            , 'DEPARTMENT'                       , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Users.DetailView'   ,  6, 'Users.LBL_MOBILE_PHONE'          , 'PHONE_MOBILE'                     , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsHyperLink 'Users.DetailView'   ,  7, 'Users.LBL_REPORTS_TO'            , 'REPORTS_TO_NAME'                  , '{0}'        , 'REPORTS_TO_ID'       , '~/Users/view.aspx?ID={0}', null, null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Users.DetailView'   ,  8, 'Users.LBL_OTHER'                 , 'PHONE_OTHER'                      , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Users.DetailView'   ,  9, 'Users.LBL_EXTENSION'             , 'EXTENSION'                        , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Users.DetailView'   , 10, 'Users.LBL_FAX'                   , 'PHONE_FAX'                        , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Users.DetailView'   , 11, 'Users.LBL_FACEBOOK_ID'           , 'FACEBOOK_ID'                      , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Users.DetailView'   , 12, 'Users.LBL_HOME_PHONE'            , 'PHONE_HOME'                       , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBoundList 'Users.DetailView'   , 13, 'Users.LBL_MESSENGER_TYPE'        , 'MESSENGER_TYPE'                   , '{0}'        , 'messenger_type_dom'  , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBlank     'Users.DetailView'   , 14, null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Users.DetailView'   , 15, 'Users.LBL_MESSENGER_ID'          , 'MESSENGER_ID'                     , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBlank     'Users.DetailView'   , 16, null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Users.DetailView'   , 17, 'Users.LBL_ADDRESS'               , 'ADDRESS_HTML'                     , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBlank     'Users.DetailView'   , 18, null;
	exec dbo.spDETAILVIEWS_FIELDS_InsertOnly   'Users.DetailView'   , 19, 'TextBox', 'Users.LBL_NOTES', 'DESCRIPTION', null, null, null, null, null, 3, null;
end else begin
	-- 01/21/2008 Paul.  Some older systems still have EMAIL1 and EMAIL2 in the main. 
	if exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Users.DetailView' and DATA_FIELD in ('EMAIL1', 'EMAIL2') and DELETED = 0) begin -- then
		print 'Remove EMAIL1 and EMAIL2 from Users Main panel.';
		update DETAILVIEWS_FIELDS
		   set DELETED          = 1
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = null
		 where DETAIL_NAME      = 'Users.DetailView'
		   and DATA_FIELD       in ('EMAIL1', 'EMAIL2')
		   and DELETED          = 0;
	end -- if;
	-- 08/24/2013 Paul.  Add EXTENSION_C in preparation for Asterisk click-to-call. 
	-- 09/20/2013 Paul.  Move EXTENSION to the main table. 
	if exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Users.DetailView' and DATA_FIELD = 'EXTENSION_C' and DELETED = 0) begin -- then
		-- 01/21/2018 Paul.  If there already exists an EXTENSION field, then convert to blank. 
		if exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Users.DetailView' and DATA_FIELD = 'EXTENSION' and DELETED = 0) begin -- then
			update DETAILVIEWS_FIELDS
			   set FIELD_TYPE       = 'Blank'
			     , DATA_FIELD       = null
			     , DATA_LABEL       = null
			     , DATE_MODIFIED    = getdate()
			     , DATE_MODIFIED_UTC= getutcdate()
			     , MODIFIED_USER_ID = null
			 where DETAIL_NAME      = 'Users.DetailView'
			   and DATA_FIELD       = 'EXTENSION_C'
			   and DELETED          = 0;
		end else begin
			update DETAILVIEWS_FIELDS
			   set DATA_FIELD       = 'EXTENSION'
			     , DATA_LABEL       = 'Users.LBL_EXTENSION'
			     , DATE_MODIFIED    = getdate()
			     , DATE_MODIFIED_UTC= getutcdate()
			     , MODIFIED_USER_ID = null
			 where DETAIL_NAME      = 'Users.DetailView'
			   and DATA_FIELD       = 'EXTENSION_C'
			   and DELETED          = 0;
		end -- if;
	end -- if;
	-- 01/17/2018 Paul.  We noticed multiple EXTENSION records, so check and fix. 
	if exists(select count(*) from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Users.DetailView' and DATA_FIELD = 'EXTENSION' and DEFAULT_VIEW = 0 and DELETED = 0 group by DETAIL_NAME, DATA_FIELD having count(*) > 1) begin -- then
		print 'Users.DetailView: Multiple EXTENSION fields encountered. ';
		update DETAILVIEWS_FIELDS
		   set FIELD_TYPE       = 'Blank'
		     , DATA_FIELD       = null
		     , DATA_LABEL       = null
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = null
		 where DETAIL_NAME      = 'Users.DetailView'
		   and DATA_FIELD       = 'EXTENSION'
		   and DELETED          = 0;
	end -- if;
	if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Users.DetailView' and DATA_FIELD = 'EXTENSION' and DELETED = 0) begin -- then
		exec dbo.spDETAILVIEWS_FIELDS_CnvBound     'Users.DetailView'  ,  9, 'Users.LBL_EXTENSION'              , 'EXTENSION'                        , '{0}'        , null;
	end -- if;
	exec dbo.spDETAILVIEWS_FIELDS_CnvBound     'Users.DetailView'  , 11, 'Users.LBL_FACEBOOK_ID'            , 'FACEBOOK_ID'                      , '{0}'        , null;
	-- 01/04/2018 Paul.  Change to Employees.LBL_REPORTS_TO. 
	if exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Users.DetailView' and DATA_FIELD = 'REPORTS_TO_NAME' and DATA_LABEL in ('Contacts.LBL_REPORTS_TO', 'Users.LBL_REPORTS_TO') and DELETED = 0) begin -- then
		-- 02/03/2018 Paul.  This is where the EXTENSION duplicate field problem was re-created. 
		update DETAILVIEWS_FIELDS
		   set DATA_LABEL       = 'Employees.LBL_REPORTS_TO'
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = null
		 where DETAIL_NAME      = 'Users.DetailView'
		   and DATA_FIELD       = 'REPORTS_TO_NAME'
		   and DATA_LABEL       in ('Contacts.LBL_REPORTS_TO', 'Users.LBL_REPORTS_TO')
		   and DELETED          = 0;
	end -- if;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 08/05/2006 Paul.  Convert MailOptions to a dynamic view so that fields can be easily removed. 
-- 08/05/2006 Paul.  SplendidCRM does not support anything other than the build-in .NET mail.
-- 01/20/2008 Paul.  Add EMAIL1 so that users can be the target of a campaign. 
-- 07/09/2010 Paul.  Remove MAIL_FROMNAME and MAIL_FROMADDRESS. 
-- 12/15/2012 Paul.  Remove MAIL_FROMNAME and MAIL_FROMADDRESS from creation section. 
-- delete from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Users.MailOptions';
if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Users.MailOptions' and DELETED = 0) begin -- then
	print 'DETAILVIEWS_FIELDS Users.MailOptions';
	exec dbo.spDETAILVIEWS_InsertOnly          'Users.MailOptions', 'Users', 'vwUSERS_Edit', '15%', '35%', null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Users.MailOptions'  ,  1, 'Users.LBL_EMAIL'                 , 'EMAIL1'                           , '{0}'        , null;
	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Users.MailOptions'  ,  2, 'Users.LBL_OTHER_EMAIL'           , 'EMAIL2'                           , '{0}'        , null;
--	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Users.MailOptions'  ,  3, 'Users.LBL_MAIL_FROMNAME'         , 'MAIL_FROMNAME'                    , '{0}'        , null;
--	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Users.MailOptions'  ,  4, 'Users.LBL_MAIL_FROMADDRESS'      , 'MAIL_FROMADDRESS'                 , '{0}'        , null;
--	exec dbo.spDETAILVIEWS_FIELDS_InsBoundList 'Users.MailOptions'  ,  5, 'Users.LBL_MAIL_SENDTYPE'         , 'MAIL_SENDTYPE'                    , '{0}'        , 'notifymail_sendtype'  , null;
--	exec dbo.spDETAILVIEWS_FIELDS_InsBlank     'Users.MailOptions'  ,  6, null;
--	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Users.MailOptions'  ,  7, 'Users.LBL_MAIL_SMTPSERVER'       , 'MAIL_SMTPSERVER'                  , '{0}'        , null;
--	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Users.MailOptions'  ,  8, 'Users.LBL_MAIL_SMTPPORT'         , 'MAIL_SMTPPORT'                    , '{0}'        , null;
--	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Users.MailOptions'  ,  9, 'Users.LBL_MAIL_SMTPAUTH_REQ'     , 'MAIL_SMTPAUTH_REQ'                , '{0}'        , null;
--	exec dbo.spDETAILVIEWS_FIELDS_InsBlank     'Users.MailOptions'  , 10, null;
--	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Users.MailOptions'  , 11, 'Users.LBL_MAIL_SMTPUSER'         , 'MAIL_SMTPUSER'                    , '{0}'        , null;
--	exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Users.MailOptions'  , 12, 'Users.LBL_MAIL_SMTPPASS'         , 'MAIL_SMTPPASS'                    , '******'     , null;
end else begin
	if not exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Users.MailOptions' and DATA_FIELD = 'EMAIL1' and DELETED = 0) begin -- then
		print 'Add EMAIL1 to Users.';
		update DETAILVIEWS_FIELDS
		   set FIELD_INDEX      = FIELD_INDEX + 2
		     , DATE_MODIFIED    = getdate()
		     , MODIFIED_USER_ID = null
		 where DETAIL_NAME      = 'Users.MailOptions'
		   and FIELD_INDEX     >= 1
		   and DELETED          = 0;
		exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Users.MailOptions'  ,  1, 'Users.LBL_EMAIL'                 , 'EMAIL1'                           , '{0}'        , null;
		exec dbo.spDETAILVIEWS_FIELDS_InsBound     'Users.MailOptions'  ,  2, 'Users.LBL_OTHER_EMAIL'           , 'EMAIL2'                           , '{0}'        , null;
	end -- if;
	-- 07/09/2010 Paul.  Remove MAIL_FROMNAME and MAIL_FROMADDRESS.
	if exists(select * from DETAILVIEWS_FIELDS where DETAIL_NAME = 'Users.MailOptions' and DATA_FIELD in ('MAIL_FROMNAME', 'MAIL_FROMADDRESS') and DELETED = 0) begin -- then
		print 'Remove MAIL_FROMNAME and MAIL_FROMADDRESS.';
		update DETAILVIEWS_FIELDS
		   set DELETED           = 1
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = null
		 where DETAIL_NAME       = 'Users.MailOptions'
		   and DATA_FIELD        in ('MAIL_FROMNAME', 'MAIL_FROMADDRESS')
		   and DELETED           = 0;
	end -- if;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

if not exists(select * from DETAILVIEWS_RELATIONSHIPS where DETAIL_NAME = 'Administration.ListView' and DELETED = 0) begin -- then
	print 'DETAILVIEWS_RELATIONSHIPS Administration.ListView';
	exec dbo.spDETAILVIEWS_InsertOnly               'Administration.ListView'   , 'Administration'   , 'vwADMINISTRATION', '20%', '30%', null;
	exec dbo.spDETAILVIEWS_RELATIONSHIPS_InsertOnly 'Administration.ListView'   , 'Administration'   , 'SystemView'         ,  1, 'Administration.LBL_ADMINISTRATION_HOME_TITLE' , null, null, null, null;
	exec dbo.spDETAILVIEWS_RELATIONSHIPS_InsertOnly 'Administration.ListView'   , 'Administration'   , 'UsersView'          ,  2, 'Administration.LBL_USERS_TITLE'               , null, null, null, null;
	exec dbo.spDETAILVIEWS_RELATIONSHIPS_InsertOnly 'Administration.ListView'   , 'Administration'   , 'StudioView'         ,  3, 'Administration.LBL_STUDIO_TITLE'              , null, null, null, null;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 12/28/2007 Paul.  UnifiedSearch should be customizable. 
-- delete from DETAILVIEWS_RELATIONSHIPS where DETAIL_NAME = 'Home.UnifiedSearch';
-- 01/01/2008 Paul.  We should not need to fix the search on a clean install. 
-- 08/15/2012 Paul.  Add SearchBugs to Home.UnifiedSearch. 
-- 12/08/2014 Paul.  Add ChatMessages. 
if not exists(select * from DETAILVIEWS_RELATIONSHIPS where DETAIL_NAME = 'Home.UnifiedSearch' and DELETED = 0) begin -- then
	print 'DETAILVIEWS_RELATIONSHIPS Home.UnifiedSearch';
	exec dbo.spDETAILVIEWS_InsertOnly               'Home.UnifiedSearch'       , 'Home'              , 'vwHOME_Edit', '15%', '35%', null;
	exec dbo.spDETAILVIEWS_RELATIONSHIPS_InsertOnly 'Home.UnifiedSearch'       , 'Contacts'         , '~/Contacts/SearchContacts'          , 0, 'Contacts.LBL_LIST_FORM_TITLE'     , null, null, null, null;
	exec dbo.spDETAILVIEWS_RELATIONSHIPS_InsertOnly 'Home.UnifiedSearch'       , 'Accounts'         , '~/Accounts/SearchAccounts'          , 1, 'Accounts.LBL_LIST_FORM_TITLE'     , null, null, null, null;
	exec dbo.spDETAILVIEWS_RELATIONSHIPS_InsertOnly 'Home.UnifiedSearch'       , 'Leads'            , '~/Leads/SearchLeads'                , 2, 'Leads.LBL_LIST_FORM_TITLE'        , null, null, null, null;
	exec dbo.spDETAILVIEWS_RELATIONSHIPS_InsertOnly 'Home.UnifiedSearch'       , 'Opportunities'    , '~/Opportunities/SearchOpportunities', 3, 'Opportunities.LBL_LIST_FORM_TITLE', null, null, null, null;
	exec dbo.spDETAILVIEWS_RELATIONSHIPS_InsertOnly 'Home.UnifiedSearch'       , 'Prospects'        , '~/Prospects/SearchProspects'        , 4, 'Prospects.LBL_LIST_FORM_TITLE'    , null, null, null, null;
	exec dbo.spDETAILVIEWS_RELATIONSHIPS_InsertOnly 'Home.UnifiedSearch'       , 'Cases'            , '~/Cases/SearchCases'                , 5, 'Cases.LBL_LIST_FORM_TITLE'        , null, null, null, null;
	exec dbo.spDETAILVIEWS_RELATIONSHIPS_InsertOnly 'Home.UnifiedSearch'       , 'Project'          , '~/Projects/SearchProjects'          , 6, 'Project.LBL_LIST_FORM_TITLE'      , null, null, null, null;
	exec dbo.spDETAILVIEWS_RELATIONSHIPS_InsertOnly 'Home.UnifiedSearch'       , 'Bugs'             , '~/Bugs/SearchBugs'                  , 7, 'Bugs.LBL_LIST_FORM_TITLE'         , null, null, null, null;
	exec dbo.spDETAILVIEWS_RELATIONSHIPS_InsertOnly 'Home.UnifiedSearch'       , 'ChatMessages'     , '~/ChatMessages/SearchChatMessages'  , 8, 'ChatMessages.LBL_LIST_FORM_TITLE' , null, null, null, null;
end else begin
	-- 08/15/2012 Paul.  Fix Project.LBL_LIST_FORM_TITLE. 
	if exists(select * from DETAILVIEWS_RELATIONSHIPS where DETAIL_NAME = 'Home.UnifiedSearch' and TITLE = 'Projects.LBL_LIST_FORM_TITLE' and DELETED = 0) begin -- then
		update DETAILVIEWS_RELATIONSHIPS
		   set TITLE             = 'Project.LBL_LIST_FORM_TITLE'
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = null
		 where DETAIL_NAME       = 'Home.UnifiedSearch'
		   and TITLE             = 'Projects.LBL_LIST_FORM_TITLE'
		   and DELETED           = 0;
	end -- if;
	exec dbo.spDETAILVIEWS_RELATIONSHIPS_InsertOnly 'Home.UnifiedSearch'       , 'Bugs'             , '~/Bugs/SearchBugs'                  , 7, 'Bugs.LBL_LIST_FORM_TITLE'         , null, null, null, null;
	exec dbo.spDETAILVIEWS_RELATIONSHIPS_InsertOnly 'Home.UnifiedSearch'       , 'ChatMessages'     , '~/ChatMessages/SearchChatMessages'  , 8, 'ChatMessages.LBL_LIST_FORM_TITLE' , null, null, null, null;
end -- if;
GO

set nocount off;
GO

-- sp_helptext spDETAILVIEWS_RELATIONSHIPS_InsertOnly
if not exists(select * from DETAILVIEWS_RELATIONSHIPS where DETAIL_NAME = 'Teams.DetailView' and DELETED = 0) begin -- then
	print 'DETAILVIEWS_RELATIONSHIPS Teams.DetailView Professional';
	exec dbo.spDETAILVIEWS_RELATIONSHIPS_InsertOnly 'Teams.DetailView'         , 'Users'            , 'Users'              ,  1, 'Users.LBL_MODULE_NAME'            , 'vwTEAM_MEMBERSHIPS_List', 'TEAM_ID', 'FULL_NAME', 'asc';
end -- if;
GO

print 'DYNAMIC_BUTTONS DetailView admin';
-- delete from DYNAMIC_BUTTONS where VIEW_NAME like '%.DetailView'
--GO

set nocount on;
GO

-- 08/22/2008 Paul.  Move professional modules to a separate file. 
-- 07/19/2010 Paul.  Remove all references to button keys.  They conflict with the browser keys. 
--	exec dbo.spDYNAMIC_BUTTONS_InsButton    '.DetailView', 0, null, 'edit'  , null, null, 'Edit'     , null, '.LBL_EDIT_BUTTON_LABEL'     , '.LBL_EDIT_BUTTON_TITLE'     , null, null, null;
--	exec dbo.spDYNAMIC_BUTTONS_InsButton    '.DetailView', 1, null, 'edit'  , null, null, 'Duplicate', null, '.LBL_DUPLICATE_BUTTON_LABEL', '.LBL_DUPLICATE_BUTTON_TITLE', null, null, null;
--	exec dbo.spDYNAMIC_BUTTONS_InsButton    '.DetailView', 2, null, 'delete', null, null, 'Delete'   , null, '.LBL_DELETE_BUTTON_LABEL'   , '.LBL_DELETE_BUTTON_TITLE'   , null, 'return ConfirmDelete();', null;
--	exec dbo.spDYNAMIC_BUTTONS_InsButton    '.DetailView', 3, null, null    , null, null, 'Cancel'   , null, '.LBL_CANCEL_BUTTON_LABEL'   , '.LBL_CANCEL_BUTTON_TITLE'   , null, null, null;

-- 09/06/2011 Paul.  Add View Log as a default. 
if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = '.DetailView' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS .DetailView';
	exec dbo.spDYNAMIC_BUTTONS_InsEdit      '.DetailView'                     , 0, null;
	exec dbo.spDYNAMIC_BUTTONS_InsDuplicate '.DetailView'                     , 1, null;
	exec dbo.spDYNAMIC_BUTTONS_InsDelete    '.DetailView'                     , 2, null;
	exec dbo.spDYNAMIC_BUTTONS_InsCancel    '.DetailView'                     , 3, null, 1;  -- DetailView Cancel is only visible on mobile. 
	exec dbo.spDYNAMIC_BUTTONS_InsViewLog   '.DetailView'                     , 4, null;
end -- if;
GO

-- 09/12/2009 Paul.  Allow editing of Field Validators. 
exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.DetailView', 'FieldValidators.DetailView' , 'FieldValidators' ;
GO

-- 09/09/2009 Paul.  Allow direct editing of the module table. 
--exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.DetailView', 'Modules.DetailView'         , 'Modules'         ;
-- 05/28/2012 Paul.  Modules cannot be duplicated, deleted or audited. 
-- 09/26/2017 Paul.  Add Archive access right. 
if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Modules.DetailView' and DELETED = 0) begin -- then
	exec dbo.spDYNAMIC_BUTTONS_InsEdit      'Modules.DetailView'              , 0, null;
	exec dbo.spDYNAMIC_BUTTONS_InsCancel    'Modules.DetailView'              , 1, null, 0;
	exec dbo.spDYNAMIC_BUTTONS_InsButton    'Modules.DetailView'              , 2, 'Modules', 'edit', null, null, 'Archive.Build', null, 'Modules.LBL_BUILD_ARCHIVE_TABLE', 'Modules.LBL_BUILD_ARCHIVE_TABLE', null, null, null;
end else begin
	if exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Modules.DetailView' and COMMAND_NAME = 'Delete' and DELETED = 0) begin -- then
		print 'DYNAMIC_BUTTONS Modules.DetailView:  Remove duplicate, delete and audit. ';
		update DYNAMIC_BUTTONS
		   set DELETED           = 1
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		where VIEW_NAME          = 'Modules.DetailView'
		  and DELETED            = 0;
		exec dbo.spDYNAMIC_BUTTONS_InsEdit      'Modules.DetailView'              , 0, null;
		exec dbo.spDYNAMIC_BUTTONS_InsCancel    'Modules.DetailView'              , 1, null, 0;
	end -- if;
	-- 09/26/2017 Paul.  Add Archive access right. 
	if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Modules.DetailView' and COMMAND_NAME = 'Archive.Build' and DELETED = 0) begin -- then
		exec dbo.spDYNAMIC_BUTTONS_InsButton    'Modules.DetailView'              , 2, 'Modules', 'edit', null, null, 'Archive.Build', null, 'Modules.LBL_BUILD_ARCHIVE_TABLE', 'Modules.LBL_BUILD_ARCHIVE_TABLE', null, null, null;
	end -- if;
end -- if;
GO

-- 04/29/2008 Paul.  The Cancel button should always be displayed, not just on a mobile device.
if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Import.ImportView' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS Import.ImportView';
	exec dbo.spDYNAMIC_BUTTONS_InsButton    'Import.ImportView'               , 0, null              , 'import', null, null, 'Import.Run'          , null, 'Import.LBL_RUN_BUTTON_LABEL'                 , 'Import.LBL_RUN_BUTTON_TITLE'                 , null                                        , null, null;
	exec dbo.spDYNAMIC_BUTTONS_InsButton    'Import.ImportView'               , 1, null              , 'import', null, null, 'Import.Preview'      , null, 'Import.LBL_PREVIEW_BUTTON_LABEL'             , 'Import.LBL_PREVIEW_BUTTON_TITLE'             , null                                        , null, null;
	exec dbo.spDYNAMIC_BUTTONS_InsCancel    'Import.ImportView'               , 2, null              , 0;
end -- if;
GO

-- 09/02/2008 Paul.  We need to have two edit buttons, one for the My Account and one for the administrator. 
-- 10/18/2008 Paul.  Admin User Edit needs the User ID.
-- 11/29/2008 Paul.  Needed to add the ID to the text field. 
-- 08/22/2010 Paul.  Add ONCLICK_SCRIPT to spDYNAMIC_BUTTONS_InsButtonLink. 
-- 06/05/2015 Paul.  Use separate set of buttons for MyAccount to prevent 2 edit buttons from being in the same list. 
-- 08/11/2020 Paul.  Employees module may be disabled, so create a Users version of LBL_RESET_PREFERENCES. 
-- delete from DYNAMIC_BUTTONS where VIEW_NAME = 'Users.DetailView'
if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Users.DetailView' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS Users.DetailView';
--	exec dbo.spDYNAMIC_BUTTONS_InsButtonLink 'Users.DetailView'               , 0, 'Users'           , 'edit', null, null, 'EditMyAccount'         , 'EditMyAccount.aspx', null, '.LBL_EDIT_BUTTON_LABEL'     , '.LBL_EDIT_BUTTON_TITLE'     , null, null, null, null;
	exec dbo.spDYNAMIC_BUTTONS_InsButtonLink 'Users.DetailView'               , 1, 'Users'           , 'edit', null, null, 'Edit'                  , 'edit.aspx?ID={0}'  , 'ID', '.LBL_EDIT_BUTTON_LABEL'     , '.LBL_EDIT_BUTTON_TITLE'     , null, null, null, null;
	exec dbo.spDYNAMIC_BUTTONS_InsButton     'Users.DetailView'               , 2, 'Users'           , null, null, null, 'ChangePassword'          , null, 'Users.LBL_CHANGE_PASSWORD_BUTTON_LABEL'      , 'Users.LBL_CHANGE_PASSWORD_BUTTON_TITLE'      , null, 'PasswordPopup(); return false;', null;
	exec dbo.spDYNAMIC_BUTTONS_InsDuplicate  'Users.DetailView'               , 3, 'Users';
	exec dbo.spDYNAMIC_BUTTONS_InsButton     'Users.DetailView'               , 4, 'Users'           , null, null, null, 'ResetDefaults'           , null, 'Users.LBL_RESET_PREFERENCES'                 , 'Users.LBL_RESET_PREFERENCES'                 , null, null, null;
	exec dbo.spDYNAMIC_BUTTONS_InsCancel     'Users.DetailView'               , 5, null, 1;
end else begin
	-- 06/05/2015 Paul.  Use separate set of buttons for MyAccount to prevent 2 edit buttons from being in the same list. 
	if exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Users.DetailView' and COMMAND_NAME = 'EditMyAccount' and DELETED = 0) begin -- then
		print 'Use separate set of buttons for MyAccount to prevent 2 edit buttons from being in the same list.';
		update DYNAMIC_BUTTONS
		   set DELETED       = 1
		     , DATE_MODIFIED = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		 where VIEW_NAME     = 'Users.DetailView'
		   and COMMAND_NAME  = 'EditMyAccount'
		   and DELETED       = 0;
	end -- if;
	/*
	if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Users.DetailView' and COMMAND_NAME = 'EditMyAccount' and DELETED = 0) begin -- then
		print 'User Edit needs to be different for the My Account.';
		update DYNAMIC_BUTTONS
		   set CONTROL_INDEX = CONTROL_INDEX + 1
		     , DATE_MODIFIED = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		 where VIEW_NAME     = 'Users.DetailView'
		   and DELETED       = 0;
		exec dbo.spDYNAMIC_BUTTONS_InsButtonLink 'Users.DetailView'               , 0, 'Users'           , 'edit', null, null, 'EditMyAccount'         , 'EditMyAccount.aspx', null, '.LBL_EDIT_BUTTON_LABEL'     , '.LBL_EDIT_BUTTON_TITLE'     , null, null, null, null;
	end -- if;
	*/
	if exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Users.DetailView' and COMMAND_NAME = 'Edit' and (URL_FORMAT = 'edit.aspx' or TEXT_FIELD is null) and DELETED = 0) begin -- then
		print 'Admin User Edit needs the User ID.';
		update DYNAMIC_BUTTONS
		   set URL_FORMAT    = 'edit.aspx?ID={0}'
		     , TEXT_FIELD    = 'ID'
		     , DATE_MODIFIED = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		 where VIEW_NAME     = 'Users.DetailView'
		   and COMMAND_NAME  = 'Edit'
		   and (URL_FORMAT    = 'edit.aspx' or TEXT_FIELD is null)
		   and DELETED       = 0;
	end -- if;
	-- 08/11/2020 Paul.  Employees module may be disabled, so create a Users version of LBL_RESET_PREFERENCES. 
	if exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Users.DetailView' and COMMAND_NAME = 'ResetDefaults' and CONTROL_TEXT = 'Employees.LBL_RESET_PREFERENCES' and DELETED = 0) begin -- then
		update DYNAMIC_BUTTONS
		   set CONTROL_TEXT      = 'Users.LBL_RESET_PREFERENCES'
		     , CONTROL_TOOLTIP   = 'Users.LBL_RESET_PREFERENCES'
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		 where VIEW_NAME         = 'Users.DetailView'
		   and COMMAND_NAME      = 'ResetDefaults'
		   and CONTROL_TEXT      = 'Employees.LBL_RESET_PREFERENCES'
		   and DELETED           = 0;
	end -- if;
end -- if;
GO

-- 06/05/2015 Paul.  Use separate set of buttons for MyAccount to prevent 2 edit buttons from being in the same list. 
-- 08/11/2020 Paul.  Employees module may be disabled, so create a Users version of LBL_RESET_PREFERENCES. 
if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Users.DetailView.MyAccount' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS Users.DetailView.MyAccount';
	exec dbo.spDYNAMIC_BUTTONS_InsButtonLink 'Users.DetailView.MyAccount'     , 0, 'Users'           , 'edit', null, null, 'EditMyAccount'         , 'EditMyAccount.aspx', null, '.LBL_EDIT_BUTTON_LABEL'     , '.LBL_EDIT_BUTTON_TITLE'     , null, null, null, null;
	exec dbo.spDYNAMIC_BUTTONS_InsButton     'Users.DetailView.MyAccount'     , 1, 'Users'           , null, null, null, 'ChangePassword'          , null, 'Users.LBL_CHANGE_PASSWORD_BUTTON_LABEL'      , 'Users.LBL_CHANGE_PASSWORD_BUTTON_TITLE'      , null, 'PasswordPopup(); return false;', null;
	exec dbo.spDYNAMIC_BUTTONS_InsDuplicate  'Users.DetailView.MyAccount'     , 2, 'Users';
	exec dbo.spDYNAMIC_BUTTONS_InsButton     'Users.DetailView.MyAccount'     , 3, 'Users'           , null, null, null, 'ResetDefaults'           , null, 'Users.LBL_RESET_PREFERENCES'                 , 'Users.LBL_RESET_PREFERENCES'                 , null, null, null;
	exec dbo.spDYNAMIC_BUTTONS_InsCancel     'Users.DetailView.MyAccount'     , 4, null, 1;
end else begin
	-- 08/11/2020 Paul.  Employees module may be disabled, so create a Users version of LBL_RESET_PREFERENCES. 
	if exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Users.DetailView.MyAccount' and COMMAND_NAME = 'ResetDefaults' and CONTROL_TEXT = 'Employees.LBL_RESET_PREFERENCES' and DELETED = 0) begin -- then
		update DYNAMIC_BUTTONS
		   set CONTROL_TEXT      = 'Users.LBL_RESET_PREFERENCES'
		     , CONTROL_TOOLTIP   = 'Users.LBL_RESET_PREFERENCES'
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		 where VIEW_NAME         = 'Users.DetailView.MyAccount'
		   and COMMAND_NAME      = 'ResetDefaults'
		   and CONTROL_TEXT      = 'Employees.LBL_RESET_PREFERENCES'
		   and DELETED           = 0;
	end -- if;
end -- if;
GO

-- Administration
if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = '.AdminDetailView' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS .AdminDetailView';
	exec dbo.spDYNAMIC_BUTTONS_InsEdit      '.AdminDetailView'                , 0, null;
	exec dbo.spDYNAMIC_BUTTONS_InsDelete    '.AdminDetailView'                , 1, null;
	exec dbo.spDYNAMIC_BUTTONS_InsCancel    '.AdminDetailView'                , 2, null, 1;
end -- if;
GO

-- 01/31/2012 Paul.  ACLRoles should not have a View Change Log. 
-- 08/15/2017 Paul.  Add Export button. 
--exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.DetailView'     , 'ACLRoles.DetailView'        , 'ACLRoles'        ;
if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'ACLRoles.DetailView' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS ACLRoles.DetailView';
	exec dbo.spDYNAMIC_BUTTONS_InsEdit      'ACLRoles.DetailView'             , 0, 'ACLRoles'        ;
	exec dbo.spDYNAMIC_BUTTONS_InsDuplicate 'ACLRoles.DetailView'             , 1, 'ACLRoles'        ;
	exec dbo.spDYNAMIC_BUTTONS_InsDelete    'ACLRoles.DetailView'             , 2, 'ACLRoles'        ;
	exec dbo.spDYNAMIC_BUTTONS_InsButton    'ACLRoles.DetailView'             , 4, 'ACLRoles'       , 'edit'  , null, null, 'Export'       , null, '.LBL_EXPORT_BUTTON_LABEL'                , '.LBL_EXPORT_BUTTON_TITLE'                , null, null, null;
end else begin
	-- 01/31/2012 Paul.  The ViewLog command was preventing the FieldSecurity command from begin created. 
	if exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'ACLRoles.DetailView' and COMMAND_NAME = 'ViewLog' and DELETED = 0) begin -- then
		print 'ACLRoles.DetailView: Remove View Change Log';
		update DYNAMIC_BUTTONS
		   set DELETED           = 1
		     , MODIFIED_USER_ID  = null
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		 where VIEW_NAME         = 'ACLRoles.DetailView'
		   and COMMAND_NAME      = 'ViewLog'
		   and DELETED           = 0;
	end -- if;
	-- 08/15/2017 Paul.  Add Export button. 
	if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'ACLRoles.DetailView' and COMMAND_NAME = 'Export' and DELETED = 0) begin -- then
		exec dbo.spDYNAMIC_BUTTONS_InsButton    'ACLRoles.DetailView'             , -1, 'ACLRoles'       , 'edit'  , null, null, 'Export'       , null, '.LBL_EXPORT_BUTTON_LABEL'                , '.LBL_EXPORT_BUTTON_TITLE'                , null, null, null;
	end -- if;
end -- if;
GO


exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.AdminDetailView', 'Config.DetailView'          , 'Config'          ;
exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.DetailView'     , 'Schedulers.DetailView'      , 'Schedulers'      ;
exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.DetailView'     , 'Terminology.DetailView'     , 'Terminology'     ;
exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.DetailView'     , 'Teams.DetailView'           , 'Teams'           ;
GO


-- 05/01/2016 Paul.  We are going to prepopulate the currency table so that we can be sure to get the supported ISO values correct. 
-- delete from DYNAMIC_BUTTONS where VIEW_NAME = 'Currencies.DetailView';
if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Currencies.DetailView' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS Currencies.DetailView';
	exec dbo.spDYNAMIC_BUTTONS_InsEdit      'Currencies.DetailView'           , 0, null;
	exec dbo.spDYNAMIC_BUTTONS_InsCancel    'Currencies.DetailView'           , 1, null, 1;
	exec dbo.spDYNAMIC_BUTTONS_InsButton    'Currencies.DetailView'           , 2, 'Currencies'      , 'edit'  , null, null, 'Currencies.MakeDefault', null, 'Currencies.LBL_MAKE_DEFAULT', 'Currencies.LBL_MAKE_DEFAULT', null, 'return ConfirmChange();', null;
	exec dbo.spDYNAMIC_BUTTONS_InsButton    'Currencies.DetailView'           , 3, 'Currencies'      , 'edit'  , null, null, 'Currencies.MakeBase'   , null, 'Currencies.LBL_MAKE_BASE'   , 'Currencies.LBL_MAKE_BASE'   , null, 'return ConfirmChange();', null;
	exec dbo.spDYNAMIC_BUTTONS_InsButton    'Currencies.DetailView'           , 4, 'Currencies'      , 'edit'  , null, null, 'Currencies.UpdateRate' , null, 'Currencies.LBL_UPDATE_RATE' , 'Currencies.LBL_UPDATE_RATE' , null, null, null;
end -- if;
GO

-- 04/01/2019 Paul.  Add Shortcuts module for Admin API. 
exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.DetailView', 'Shortcuts.DetailView'      , 'Shortcuts'      ;
exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.DetailView', 'DynamicButtons.DetailView' , 'DynamicButtons' ;
-- 02/21/2021 Paul.  Languages for React client. 
exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.DetailView', 'Languages.DetailView'      , 'Languages'      ;
GO


-- 03/06/2018 Paul.  Add ViewLog to Teams if missing. 
if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Teams.DetailView' and COMMAND_NAME = 'ViewLog' and DELETED = 0) begin -- then
	exec dbo.spDYNAMIC_BUTTONS_InsViewLog   'Teams.DetailView'                     , -1, null;
end -- if;
GO

set nocount off;
GO


print 'DYNAMIC_BUTTONS EditView admin';
-- delete from DYNAMIC_BUTTONS where VIEW_NAME like '%.EditView'
--GO

set nocount on;
GO

-- 08/22/2008 Paul.  Move professional modules to a separate file. 
--	exec dbo.spDYNAMIC_BUTTONS_InsButton  '.EditView'                      , 0, null, 'edit', null, null, 'Save'     , null, '.LBL_SAVE_BUTTON_LABEL'     , '.LBL_SAVE_BUTTON_TITLE'     , '.LBL_SAVE_BUTTON_KEY'     , null, null;
--	exec dbo.spDYNAMIC_BUTTONS_InsButton  '.EditView'                      , 1, null, null  , null, null, 'Cancel'   , null, '.LBL_CANCEL_BUTTON_LABEL'   , '.LBL_CANCEL_BUTTON_TITLE'   , '.LBL_CANCEL_BUTTON_KEY'   , null, null;

if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = '.EditView' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS .EditView';
	exec dbo.spDYNAMIC_BUTTONS_InsSave   '.EditView'                       , 0, null;
	exec dbo.spDYNAMIC_BUTTONS_InsCancel '.EditView'                       , 1, null, 0;  -- EditView Cancel is always visible. 
end -- if;
GO

exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.EditView', 'Users.EditView'           , 'Users'           ;
exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.EditView', 'DynamicButtons.EditView'  , 'DynamicButtons'  ;
-- 09/09/2009 Paul.  Allow direct editing of the module table. 
exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.EditView', 'Modules.EditView'         , 'Modules'         ;
-- 09/12/2009 Paul.  Allow editing of Field Validators. 
exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.EditView', 'FieldValidators.EditView' , 'FieldValidators' ;
-- 05/17/2010 Paul.  Allow editing of Languages. 
exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.EditView', 'Languages.EditView'       , 'Languages'       ;
GO

-- 05/01/2016 Paul.  Currencies now has full EditView/DetailView/ListView layouts. 
-- 03/19/2019 Paul.  Remove Clear button. 
if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Currencies.EditView' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS Currencies.EditView';
	exec dbo.spDYNAMIC_BUTTONS_InsSave   'Currencies.EditView'             , 0, null;
	exec dbo.spDYNAMIC_BUTTONS_InsCancel 'Currencies.EditView'             , 1, null, 0;  -- EditView Cancel is always visible. 
end else begin
	-- 05/01/2016 Paul.  Currencies now has full EditView/DetailView/ListView layouts. 
	update DYNAMIC_BUTTONS
	   set DELETED           = 1
	     , DATE_MODIFIED     = getdate()
	     , DATE_MODIFIED_UTC = getutcdate()
	 where VIEW_NAME         = 'Currencies.EditView'
	   and COMMAND_NAME      = 'Clear'
	   and DELETED           = 0;
	exec dbo.spDYNAMIC_BUTTONS_InsCancel 'Currencies.EditView'             , 1, null, 0;  -- EditView Cancel is always visible. 
end -- if;
GO

-- Administration
if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = '.AdminEditView' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS .AdminEditView';
	exec dbo.spDYNAMIC_BUTTONS_InsSave    '.AdminEditView'                 , 0, null;
	exec dbo.spDYNAMIC_BUTTONS_InsSaveNew '.AdminEditView'                 , 1, null;
end -- if;
GO

exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.EditView', 'ACLRoles.EditView'         , 'ACLRoles'         ;
exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.EditView', 'Config.EditView'           , 'Config'           ;
exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.EditView', 'ConfigureSettings.EditView', 'ConfigureSettings';
exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.EditView', 'Dropdown.EditView'         , 'Dropdown'         ;
exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.EditView', 'Schedulers.EditView'       , 'Schedulers'       ;
exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.EditView', 'Shortcuts.EditView'        , 'Shortcuts'        ;
exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.EditView', 'Terminology.EditView'      , 'Terminology'      ;
exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.EditView', 'Teams.EditView'            , 'Teams'            ;
GO

if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'DynamicLayout.EditView' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS DynamicLayout.EditView';
	exec dbo.spDYNAMIC_BUTTONS_InsSave   'DynamicLayout.EditView'          , 1, null;
	exec dbo.spDYNAMIC_BUTTONS_InsCancel 'DynamicLayout.EditView'          , 2, null              , 0;
	exec dbo.spDYNAMIC_BUTTONS_InsButton 'DynamicLayout.EditView'          , 3, null              , null  , null              , null, 'New'                     , null, '.LBL_NEW_BUTTON_LABEL'                       , '.LBL_NEW_BUTTON_TITLE'                       , '.LBL_NEW_BUTTON_KEY'                       , null, null;
	exec dbo.spDYNAMIC_BUTTONS_InsButton 'DynamicLayout.EditView'          , 4, null              , null  , null              , null, 'Defaults'                , null, '.LBL_DEFAULTS_BUTTON_LABEL'                  , '.LBL_DEFAULTS_BUTTON_TITLE'                  , '.LBL_DEFAULTS_BUTTON_KEY'                  , null, null;
end -- if;
GO

if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'EditCustomFields.EditView' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS EditCustomFields.EditView';
	exec dbo.spDYNAMIC_BUTTONS_InsSave   'EditCustomFields.EditView'       , 1, null;
	exec dbo.spDYNAMIC_BUTTONS_InsCancel 'EditCustomFields.EditView'       , 2, null              , 0;
end -- if;
GO

if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'PasswordManager.EditView' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS PasswordManager.EditView';
	exec dbo.spDYNAMIC_BUTTONS_InsButton 'PasswordManager.EditView'        , 0, null              , null  , null              , null, 'Save'                    , null, '.LBL_SAVE_BUTTON_LABEL'                      , '.LBL_SAVE_BUTTON_TITLE'                      , '.LBL_SAVE_BUTTON_KEY'                      , null, null;
	exec dbo.spDYNAMIC_BUTTONS_InsButton 'PasswordManager.EditView'        , 1, null              , null  , null              , null, 'Cancel'                  , null, '.LBL_CANCEL_BUTTON_LABEL'                    , '.LBL_CANCEL_BUTTON_TITLE'                    , '.LBL_CANCEL_BUTTON_KEY'                    , null, null;
end -- if;
GO

-- 05/07/2017 Paul.  Add HTML5 Dashboard. 
if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Dashboard.EditView' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS .EditView';
	exec dbo.spDYNAMIC_BUTTONS_InsSave   'Dashboard.EditView', 0, null;
	exec dbo.spDYNAMIC_BUTTONS_InsCancel 'Dashboard.EditView', 1, null, 0;
	exec dbo.spDYNAMIC_BUTTONS_InsButton 'Dashboard.EditView', 2, null, null  , null, null, 'Delete', null, '.LBL_DELETE_BUTTON_LABEL', '.LBL_DELETE_BUTTON_TITLE', null, null, null;
end -- if;
GO


set nocount off;
GO


print 'DYNAMIC_BUTTONS ListView admin';
-- delete from DYNAMIC_BUTTONS where VIEW_NAME like '%.ListView'
--GO

set nocount on;
GO


-- 06/06/2015 Paul.  New CheckAll buttons for Seven theme. 
if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'CheckAll.ListView' and DELETED = 0) begin -- then
	exec dbo.spDYNAMIC_BUTTONS_InsButtonLink 'CheckAll.ListView', 0, null, null, null, null, 'SelectPage' , '#' , null, '.LBL_SELECT_PAGE' , '.LBL_SELECT_PAGE' , null, null, null, 'SplendidGrid_CheckAll(1); return false';
	exec dbo.spDYNAMIC_BUTTONS_InsButton     'CheckAll.ListView', 1, null, null, null, null, 'SelectAll'  ,       null, '.LBL_SELECT_ALL'  , '.LBL_SELECT_ALL'  , null, null, null;
	exec dbo.spDYNAMIC_BUTTONS_InsButtonLink 'CheckAll.ListView', 2, null, null, null, null, 'DeselectAll', '#' , null, '.LBL_DESELECT_ALL', '.LBL_DESELECT_ALL', null, null, null, 'SplendidGrid_CheckAll(0); return false;';
	update DYNAMIC_BUTTONS
	   set CONTROL_CSSCLASS = 'DataGridOtherButton'
	 where VIEW_NAME = 'CheckAll.ListView';
end -- if;
GO


if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'ACLRoles.ListView' and DELETED = 0) begin -- then
	exec dbo.spDYNAMIC_BUTTONS_InsButtonLink 'ACLRoles.ListView', 0, 'ACLRoles', 'edit', null, null, 'Create', 'edit.aspx', null, '.LBL_CREATE_BUTTON_LABEL', '.LBL_CREATE_BUTTON_TITLE', null, null, null, null;
end -- if;
GO

if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Dropdown.ListView' and DELETED = 0) begin -- then
	exec dbo.spDYNAMIC_BUTTONS_InsButtonLink 'Dropdown.ListView', 0, 'Dropdown', 'edit', null, null, 'Create', 'edit.aspx', null, '.LBL_CREATE_BUTTON_LABEL', '.LBL_CREATE_BUTTON_TITLE', null, null, null, null;
end -- if;
GO

if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'DynamicButtons.ListView' and DELETED = 0) begin -- then
	exec dbo.spDYNAMIC_BUTTONS_InsButtonLink 'DynamicButtons.ListView', 0, 'DynamicButtons', 'edit', null, null, 'Create', 'edit.aspx', null, '.LBL_CREATE_BUTTON_LABEL', '.LBL_CREATE_BUTTON_TITLE', null, null, null, null;
end -- if;
GO

if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'FieldValidators.ListView' and DELETED = 0) begin -- then
	exec dbo.spDYNAMIC_BUTTONS_InsButtonLink 'FieldValidators.ListView', 0, 'FieldValidators', 'edit', null, null, 'Create', 'edit.aspx', null, '.LBL_CREATE_BUTTON_LABEL', '.LBL_CREATE_BUTTON_TITLE', null, null, null, null;
end -- if;
GO

if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Schedulers.ListView' and DELETED = 0) begin -- then
	exec dbo.spDYNAMIC_BUTTONS_InsButtonLink 'Schedulers.ListView', 0, 'Schedulers', 'edit', null, null, 'Create', 'edit.aspx', null, '.LBL_CREATE_BUTTON_LABEL', '.LBL_CREATE_BUTTON_TITLE', null, null, null, null;
end -- if;
GO

if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Shortcuts.ListView' and DELETED = 0) begin -- then
	exec dbo.spDYNAMIC_BUTTONS_InsButtonLink 'Shortcuts.ListView', 0, 'Shortcuts', 'edit', null, null, 'Create', 'edit.aspx', null, '.LBL_CREATE_BUTTON_LABEL', '.LBL_CREATE_BUTTON_TITLE', null, null, null, null;
end -- if;
GO

if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Terminology.ListView' and DELETED = 0) begin -- then
	exec dbo.spDYNAMIC_BUTTONS_InsButtonLink 'Terminology.ListView', 0, 'Terminology', 'edit', null, null, 'Create', 'edit.aspx', null, '.LBL_CREATE_BUTTON_LABEL', '.LBL_CREATE_BUTTON_TITLE', null, null, null, null;
end -- if;
GO

if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Users.ListView' and DELETED = 0) begin -- then
	exec dbo.spDYNAMIC_BUTTONS_InsButtonLink 'Users.ListView', 0, 'Users', 'edit', null, null, 'Create', 'edit.aspx', null, '.LBL_CREATE_BUTTON_LABEL', '.LBL_CREATE_BUTTON_TITLE', null, null, null, null;
end -- if;
GO

-- 02/21/2021 Paul.  Languages buttons for React client. 
if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Languages.ListView' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS .EditView';
	exec dbo.spDYNAMIC_BUTTONS_InsButton 'Languages.ListView', 0, null, null  , null, null, 'Add'   , null, '.LBL_ADD_BUTTON_LABEL'   , '.LBL_ADD_BUTTON_TITLE'   , null, null, null;
	exec dbo.spDYNAMIC_BUTTONS_InsButton 'Languages.ListView', 1, null, null  , null, null, 'Cancel', null, '.LBL_CANCEL_BUTTON_LABEL', '.LBL_CANCEL_BUTTON_TITLE', null, null, null;
end -- if;
GO

if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Teams.ListView' and DELETED = 0) begin -- then
	exec dbo.spDYNAMIC_BUTTONS_InsButtonLink 'Teams.ListView', 0, 'Teams', 'edit', null, null, 'Create', 'edit.aspx', null, '.LBL_CREATE_BUTTON_LABEL', '.LBL_CREATE_BUTTON_TITLE', null, null, null, null;
end -- if;
GO


set nocount off;
GO


print 'DYNAMIC_BUTTONS MassUpdate admin';

set nocount on;
GO

if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'ACLRoles.MassUpdate' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS ACLRoles MassUpdate';
	exec dbo.spDYNAMIC_BUTTONS_InsButton    'ACLRoles.MassUpdate'      , 0, 'ACLRoles'      , 'delete', null, null, 'MassDelete', null, '.LBL_DELETE'         , '.LBL_DELETE'         , null, 'if ( !ValidateOne() ) return false;', null;
end -- if;
GO

if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Terminology.MassUpdate' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS Terminology MassUpdate';
	exec dbo.spDYNAMIC_BUTTONS_InsButton    'Terminology.MassUpdate'   , 0, 'Terminology'   , 'delete', null, null, 'MassDelete', null, '.LBL_DELETE'         , '.LBL_DELETE'         , null, 'if ( !ValidateOne() ) return false;', null;
end -- if;
GO

-- 06/06/2015 Paul.  MassUpdateButtons combines ListHeader and DynamicButtons.
if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = '.MassUpdate' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS  MassUpdate';
	exec dbo.spDYNAMIC_BUTTONS_InsButton    '.MassUpdate'      , 0, null, null, null, null, 'MassUpdate', null, '.LBL_UPDATE'         , '.LBL_UPDATE'         , null, 'if ( !ValidateOne() ) return false;', null;
end -- if;
GO

-- 05/01/2016 Paul.  We are going to prepopulate the currency table so that we can be sure to get the supported ISO values correct. 
if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Currencies.MassUpdate' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS Currencies MassUpdate';
	exec dbo.spDYNAMIC_BUTTONS_InsButton    'Currencies.MassUpdate'      , 0, 'Currencies'      , 'edit'  , null, null, 'MassUpdate', null, '.LBL_UPDATE'         , '.LBL_UPDATE'         , null, 'if ( !ValidateOne() ) return false;', null;
end -- if;
GO

if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Teams.MassUpdate' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS Teams MassUpdate';
	exec dbo.spDYNAMIC_BUTTONS_InsButton    'Teams.MassUpdate'         , 0, 'Teams'         , 'delete', null, null, 'MassDelete', null, '.LBL_DELETE'         , '.LBL_DELETE'         , null, 'if ( !ValidateOne() ) return false;', null;
end -- if;
GO


set nocount off;
GO




print 'DYNAMIC_BUTTONS ModuleBuilder';
GO

set nocount on;
GO

-- delete from DYNAMIC_BUTTONS where VIEW_NAME = 'ModuleBuilder.WizardView';
if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'ModuleBuilder.WizardView' and COMMAND_NAME = 'Generate' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS ModuleBuilder.WizardView';
	exec dbo.spDYNAMIC_BUTTONS_InsButton 'ModuleBuilder.WizardView'  , 0, 'ModuleBuilder'   , 'edit', null, null, 'Back'    , null, '.LBL_BACK_BUTTON_LABEL'                 , '.LBL_BACK_BUTTON_LABEL'                 , null, null, null;
	exec dbo.spDYNAMIC_BUTTONS_InsButton 'ModuleBuilder.WizardView'  , 1, 'ModuleBuilder'   , 'edit', null, null, 'Next'    , null, '.LBL_NEXT_BUTTON_LABEL'                 , '.LBL_NEXT_BUTTON_LABEL'                 , null, null, null;
	exec dbo.spDYNAMIC_BUTTONS_InsButton 'ModuleBuilder.WizardView'  , 2, 'ModuleBuilder'   , 'edit', null, null, 'Generate', null, 'ModuleBuilder.LBL_GENERATE_BUTTON_LABEL', 'ModuleBuilder.LBL_GENERATE_BUTTON_LABEL', null, null, null;
end -- if;
GO


set nocount off;
GO


/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spDYNAMIC_BUTTONS_ModuleBuilder()
/

call dbo.spSqlDropProcedure('spDYNAMIC_BUTTONS_ModuleBuilder')
/

-- #endif IBM_DB2 */

print 'DYNAMIC_BUTTONS Popup admin';
-- delete from DYNAMIC_BUTTONS where VIEW_NAME like '%.PopupView'
--GO

set nocount on;
GO

-- 08/22/2008 Paul.  Move professional modules to a separate file. 
if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = '.PopupView' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS .PopupView';
	exec dbo.spDYNAMIC_BUTTONS_InsPopupClear  '.PopupView', 0, null, 'list';
	exec dbo.spDYNAMIC_BUTTONS_InsPopupCancel '.PopupView', 1, null, 'list';
end -- if;
GO

exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.PopupView', 'Users.PopupView'            , 'Users'            ;
exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.PopupView', 'Teams.PopupView'            , 'Teams'            ;
GO

-- 08/05/2010 Paul.  Change MultiSelect to use default buttons. 
if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = '.PopupMultiSelect' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS .PopupMultiSelect';
	exec dbo.spDYNAMIC_BUTTONS_InsPopup     '.PopupMultiSelect', 0, null, 'list', null, null, 'SelectChecked();', null, '.LBL_SELECT_BUTTON_LABEL', '.LBL_SELECT_BUTTON_TITLE', null, null, null;
	exec dbo.spDYNAMIC_BUTTONS_InsPopup     '.PopupMultiSelect', 1, null, 'list', null, null, 'Cancel();'       , null, '.LBL_DONE_BUTTON_LABEL'  , '.LBL_DONE_BUTTON_TITLE'  , null, null, null;
end -- if;
GO

exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.PopupMultiSelect', 'Users.PopupMultiSelect'           , 'Users'           ;
exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.PopupMultiSelect', 'ACLRoles.PopupMultiSelect'        , null              ;
-- 05/04/2016 Paul.  Single role selection in layout editor. 
exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.PopupView'       , 'ACLRoles.PopupView'               , null              ;
exec dbo.spDYNAMIC_BUTTONS_CopyDefault '.PopupMultiSelect', 'Teams.PopupMultiSelect'           , 'Teams'           ;
GO

set nocount off;
GO


print 'DYNAMIC_BUTTONS SubPanel admin';

set nocount on;
GO

if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'ACLRoles.Users' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS ACLRoles SubPanel';
	exec dbo.spDYNAMIC_BUTTONS_InsPopup     'ACLRoles.Users'                  , 0, 'ACLRoles'        , 'edit', 'Users'           , 'edit', 'UserMultiSelect();'      , null, '.LBL_SELECT_BUTTON_LABEL'                    , '.LBL_SELECT_BUTTON_TITLE'                    , null, null, null;
end -- if;
GO

if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Users.ACLRoles' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS Users SubPanel';
	exec dbo.spDYNAMIC_BUTTONS_InsPopup     'Users.ACLRoles'                  , 0, 'Users'           , 'edit', 'ACLRoles'        , 'edit', 'RoleMultiSelect();'      , null, '.LBL_SELECT_BUTTON_LABEL'                    , '.LBL_SELECT_BUTTON_TITLE'                    , null, null, null;
end -- if;
GO

if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Teams.Users' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS Teams.Users SubPanel';
	exec dbo.spDYNAMIC_BUTTONS_InsPopup     'Teams.Users'                     , 1, 'Teams'           , 'edit', 'Users'           , 'edit', 'UserMultiSelect();'      , null, '.LBL_SELECT_BUTTON_LABEL'                    , '.LBL_SELECT_BUTTON_TITLE'                    , null, null, null;
end -- if;
GO

if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'Users.Teams' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS Users.Teams SubPanel';
	exec dbo.spDYNAMIC_BUTTONS_InsPopup     'Users.Teams'                     , 0, 'Users'           , 'edit', 'Teams'           , 'edit', 'TeamMultiSelect();'      , null, '.LBL_SELECT_BUTTON_LABEL'                    , '.LBL_SELECT_BUTTON_TITLE'                    , null, null, null;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'ACLRoles.EditView' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS ACLRoles.EditView';
	exec dbo.spEDITVIEWS_InsertOnly            'ACLRoles.EditView', 'ACLRoles', 'vwACL_ROLES_Edit', '15%', '85%', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'ACLRoles.EditView'       ,  0, 'ACLRoles.LBL_NAME'                      , 'NAME'                       , 1, 1, 150, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBlank       'ACLRoles.EditView'       ,  1, null;
	exec dbo.spEDITVIEWS_FIELDS_InsMultiLine   'ACLRoles.EditView'       ,  2, 'ACLRoles.LBL_DESCRIPTION'               , 'DESCRIPTION'                , 0, 2,   8, 60, null;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 03/30/2021 Paul.  Roles needed for React client. 
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'ACLRoles.SearchBasic' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS ACLRoles.SearchBasic';
	exec dbo.spEDITVIEWS_InsertOnly             'ACLRoles.SearchBasic'        , 'ACLRoles', 'vwACL_ROLES', '15%', '85%', 1;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'ACLRoles.SearchBasic'        ,  0, 'ACLRoles.LBL_NAME'                     , 'NAME'                        , 0, null, 100, 25, null;
end -- if;
GO

-- 06/02/2021 Paul.  Roles needed for React client. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'ACLRoles.SearchByUser';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'ACLRoles.SearchByUser' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS ACLRoles.SearchByUser';
	exec dbo.spEDITVIEWS_InsertOnly             'ACLRoles.SearchByUser'       , 'ACLRoles', 'vwACL_ROLES', '15%', '85%', 1;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList    'ACLRoles.SearchByUser'       ,  0, '.LBL_ASSIGNED_TO'                      , 'ID'                         , 0, null, 'AssignedUser' , null, null;
end -- if;
GO

-- 08/01/2016 Paul.  Roles needed for BPMN. 
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'ACLRoles.SearchPopup' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS ACLRoles.SearchPopup';
	exec dbo.spEDITVIEWS_InsertOnly             'ACLRoles.SearchPopup'        , 'ACLRoles', 'vwACL_ROLES', '15%', '85%', 1;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'ACLRoles.SearchPopup'        ,  0, 'ACLRoles.LBL_NAME'                     , 'NAME'                        , 0, null, 100, 25, null;
end -- if;
GO

set nocount off;
GO


print 'EDITVIEWS_FIELDS Admin';
set nocount on;
GO


-- select * from vwEDITVIEWS_FIELDS where EDIT_NAME = 'Config.EditView' order by FIELD_INDEX;
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Config.EditView';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Config.EditView' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Config.EditView';
	exec dbo.spEDITVIEWS_InsertOnly            'Config.EditView', 'Config', 'vwCONFIG_Edit', '15%', '35%', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Config.EditView'            ,  0, 'Config.LBL_NAME'                        , 'NAME'                             , 1, 1,  60, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Config.EditView'            ,  1, 'Config.LBL_CATEGORY'                    , 'CATEGORY'                         , 0, 1,  32, 20, null;
	exec dbo.spEDITVIEWS_FIELDS_InsMultiLine   'Config.EditView'            ,  2, 'Config.LBL_VALUE'                       , 'VALUE'                            , 0, 1,   8, 80, 3;
end -- if;
GO

if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Config.SearchBasic' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Config.SearchBasic';
	exec dbo.spEDITVIEWS_InsertOnly            'Config.SearchBasic', 'Config' , 'vwCONFIG_List', '15%', '35%', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Config.SearchBasic'         ,  0, 'Config.LBL_NAME'                        , 'NAME'                             , 0, 1,  60, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Config.SearchBasic'         ,  1, 'Config.LBL_VALUE'                       , 'VALUE'                            , 0, 1, 200, 35, null;
end -- if;
GO

-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Currencies.EditView';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Currencies.EditView' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Currencies.EditView';
	exec dbo.spEDITVIEWS_InsertOnly            'Currencies.EditView' , 'Currencies', 'vwCURRENCIES_Edit', '15%', '35%', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Currencies.EditView'        ,  0, 'Currencies.LBL_NAME'                    , 'NAME'                             , 1, 1,  60, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Currencies.EditView'        ,  1, 'Currencies.LBL_ISO4217'                 , 'ISO4217'                          , 1, 1,  32, 20, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Currencies.EditView'        ,  2, 'Currencies.LBL_RATE'                    , 'CONVERSION_RATE'                  , 1, 1,  32, 20, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Currencies.EditView'        ,  3, 'Currencies.LBL_SYMBOL'                  , 'SYMBOL'                           , 1, 1,  32, 20, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Currencies.EditView'        ,  4, 'Currencies.LBL_STATUS'                  , 'STATUS'                           , 1, 1, 'currency_status_dom', null, null;
end -- if;
GO

-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Schedulers.EditView';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Schedulers.EditView' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Schedulers.EditView';
	exec dbo.spEDITVIEWS_InsertOnly            'Schedulers.EditView', 'Schedulers', 'vwSCHEDULERS', '15%', '35%', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Schedulers.EditView'        ,  0, 'Schedulers.LBL_NAME'                    , 'NAME'                             , 1, 1,  60, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Schedulers.EditView'        ,  1, 'Schedulers.LBL_STATUS'                  , 'STATUS'                           , 1, 1, 'scheduler_status_dom', null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Schedulers.EditView'        ,  2, 'Schedulers.LBL_JOB'                     , 'JOB'                              , 1, 1, 'SchedulerJobs', null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBlank       'Schedulers.EditView'        ,  3, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'Schedulers.EditView'        ,  4, 'Schedulers.LBL_INTERVAL'                , 'JOB_INTERVAL'                     , 1, 1, 'CRON'           , null, 3, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'Schedulers.EditView'        ,  5, 'Schedulers.LBL_DATE_TIME_START'         , 'DATE_TIME_START'                  , 0, 1, 'DateTimePicker' , null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'Schedulers.EditView'        ,  6, 'Schedulers.LBL_TIME_FROM'               , 'TIME_FROM'                        , 0, 1, 'TimePicker'     , null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'Schedulers.EditView'        ,  7, 'Schedulers.LBL_DATE_TIME_END'           , 'DATE_TIME_END'                    , 0, 1, 'DateTimePicker' , null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'Schedulers.EditView'        ,  8, 'Schedulers.LBL_TIME_TO'                 , 'TIME_TO'                          , 0, 1, 'TimePicker'     , null, null, null;
end else begin
	if exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Schedulers.EditView' and DATA_FIELD = 'JOB_INTERVAL' and FIELD_TYPE = 'TextBox' and DELETED = 0) begin -- then
		update EDITVIEWS_FIELDS
		   set FIELD_TYPE        = 'CRON'
		     , FORMAT_SIZE       = null
		     , FORMAT_MAX_LENGTH = null
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		 where EDIT_NAME         = 'Schedulers.EditView'
		   and DATA_FIELD        = 'JOB_INTERVAL'
		   and FIELD_TYPE        = 'TextBox'
		   and DELETED           = 0;
	end -- if; 
end -- if;
GO

-- 02/03/2021 Paul.  Provide a way to search. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Schedulers.SearchBasic';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Schedulers.SearchBasic' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Schedulers.SearchBasic';
	exec dbo.spEDITVIEWS_InsertOnly            'Schedulers.SearchBasic', 'Schedulers', 'vwSCHEDULERS', '15%', '35%', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Schedulers.SearchBasic'     ,  0, 'Schedulers.LBL_NAME'                    , 'NAME'                             , 1, 1,  60, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBlank       'Schedulers.SearchBasic'     ,  1, null;
end -- if;
GO

-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Terminology.EditView';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Terminology.EditView' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Terminology.EditView';
	exec dbo.spEDITVIEWS_InsertOnly            'Terminology.EditView', 'Terminology', 'vwTERMINOLOGY_Edit', '15%', '35%', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Terminology.EditView'       ,  0, 'Terminology.LBL_NAME'                   , 'NAME'                             , 0, 1,  50, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Terminology.EditView'       ,  1, 'Terminology.LBL_LANG'                   , 'LANG'                             , 1, 1, 'Languages'           , null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Terminology.EditView'       ,  2, 'Terminology.LBL_MODULE_NAME'            , 'MODULE_NAME'                      , 0, 1, 'Modules'             , null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBlank       'Terminology.EditView'       ,  3, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Terminology.EditView'       ,  4, 'Terminology.LBL_LIST_NAME'              , 'LIST_NAME'                        , 0, 1, 'TerminologyPickLists', null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Terminology.EditView'       ,  5, 'Terminology.LBL_LIST_ORDER'             , 'LIST_ORDER'                       , 0, 1,  10, 20, null;
	exec dbo.spEDITVIEWS_FIELDS_InsMultiLine   'Terminology.EditView'       ,  6, 'Terminology.LBL_DISPLAY_NAME'           , 'DISPLAY_NAME'                     , 0, 1,   8, 80, 3;
end -- if;
GO

-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Terminology.SearchBasic';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Terminology.SearchBasic' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Terminology.SearchBasic';
	exec dbo.spEDITVIEWS_InsertOnly            'Terminology.SearchBasic', 'Terminology', 'vwTERMINOLOGY_Edit', '15%', '35%', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Terminology.SearchBasic'    ,  0, 'Terminology.LBL_NAME'                   , 'NAME'                             , 0, 1,  50, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Terminology.SearchBasic'    ,  1, 'Terminology.LBL_LANG'                   , 'LANG'                             , 1, 1, 'Languages'           , null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Terminology.SearchBasic'    ,  2, 'Terminology.LBL_MODULE_NAME'            , 'MODULE_NAME'                      , 0, 1, 'Modules'             , null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBlank       'Terminology.SearchBasic'    ,  3, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Terminology.SearchBasic'    ,  4, 'Terminology.LBL_LIST_NAME'              , 'LIST_NAME'                        , 0, 1, 'TerminologyPickLists', null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBlank       'Terminology.SearchBasic'    ,  5, null;
	exec dbo.spEDITVIEWS_FIELDS_InsMultiLine   'Terminology.SearchBasic'    ,  6, 'Terminology.LBL_DISPLAY_NAME'           , 'DISPLAY_NAME'                     , 0, 1,   8, 80, 3;
end -- if;
GO

-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Shortcuts.EditView';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Shortcuts.EditView' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Shortcuts.EditView';
	exec dbo.spEDITVIEWS_InsertOnly            'Shortcuts.EditView', 'Shortcuts', 'vwSHORTCUTS_Edit', '15%', '35%', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Shortcuts.EditView'         ,  0, 'Shortcuts.LBL_MODULE_NAME'              , 'MODULE_NAME'                      , 0, 1, 'Modules'              , null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Shortcuts.EditView'         ,  1, 'Shortcuts.LBL_DISPLAY_NAME'             , 'DISPLAY_NAME'                     , 0, 1, 150, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Shortcuts.EditView'         ,  2, 'Shortcuts.LBL_RELATIVE_PATH'            , 'RELATIVE_PATH'                    , 0, 1, 255, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Shortcuts.EditView'         ,  3, 'Shortcuts.LBL_IMAGE_NAME'               , 'IMAGE_NAME'                       , 0, 1,  50, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Shortcuts.EditView'         ,  4, 'Shortcuts.LBL_SHORTCUT_ORDER'           , 'SHORTCUT_ORDER'                   , 0, 1,  10, 10, null;
	exec dbo.spEDITVIEWS_FIELDS_InsCheckBox    'Shortcuts.EditView'         ,  5, 'Shortcuts.LBL_SHORTCUT_ENABLED'         , 'SHORTCUT_ENABLED'                 , 0, 1, null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Shortcuts.EditView'         ,  6, 'Shortcuts.LBL_SHORTCUT_MODULE'          , 'SHORTCUT_MODULE'                  , 0, 1, 'Modules'              , null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Shortcuts.EditView'         ,  7, 'Shortcuts.LBL_SHORTCUT_ACLTYPE'         , 'SHORTCUT_ACLTYPE'                 , 0, 1, 'shortcuts_acltype_dom', null, null;
end -- if;
GO

-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'DynamicButtons.SearchBasic';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'DynamicButtons.SearchBasic' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS DynamicButtons.SearchBasic';
	exec dbo.spEDITVIEWS_InsertOnly            'DynamicButtons.SearchBasic', 'DynamicButtons', 'vwDYNAMIC_BUTTONS', '15%', '35%', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'DynamicButtons.SearchBasic' ,  0, 'DynamicButtons.LBL_VIEW_NAME'           , 'VIEW_NAME'                        , 1, 1, 'DynamicButtonViews'   , null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBlank       'DynamicButtons.SearchBasic' ,  1, null;
end -- if;
GO

-- 10/27/2019 Paul.  New layout for PasswordManager.  Needed to manually allow PasswordManager as module even as no entry exists in MODULES table. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'PasswordManager.EditView';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'PasswordManager.EditView' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS PasswordManager.EditView';
	exec dbo.spEDITVIEWS_InsertOnly            'PasswordManager.EditView', 'PasswordManager', 'vwCONFIG_Edit', '15%', '35%', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'PasswordManager.EditView'   ,  0, 'PasswordManager.LBL_PREFERRED_PASSWORD_LENGTH'    , 'Password.PreferredPasswordLength'   , 0, 1,  10, 10, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'PasswordManager.EditView'   ,  1, 'PasswordManager.LBL_MINIMUM_LOWER_CASE_CHARACTERS', 'Password.MinimumLowerCaseCharacters', 0, 1,  10, 10, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'PasswordManager.EditView'   ,  2, 'PasswordManager.LBL_MINIMUM_UPPER_CASE_CHARACTERS', 'Password.MinimumUpperCaseCharacters', 0, 1,  10, 10, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'PasswordManager.EditView'   ,  3, 'PasswordManager.LBL_MINIMUM_NUMERIC_CHARACTERS'   , 'Password.MinimumNumericCharacters'  , 0, 1,  10, 10, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'PasswordManager.EditView'   ,  4, 'PasswordManager.LBL_MINIMUM_SYMBOL_CHARACTERS'    , 'Password.MinimumSymbolCharacters'   , 0, 1,  10, 10, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'PasswordManager.EditView'   ,  5, 'PasswordManager.LBL_SYMBOL_CHARACTERS'            , 'Password.SymbolCharacters'          , 0, 1, 150, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel       'PasswordManager.EditView'   ,  6, null                                               , 'PasswordManager.LBL_SYMBOL_CHARACTERS_DEFAULT !@#$%^&*()<>?~.', -1;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'PasswordManager.EditView'   ,  7, 'PasswordManager.LBL_COMPLEXITY_NUMBER'            , 'Password.ComplexityNumber'          , 0, 1,  10, 10, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'PasswordManager.EditView'   ,  8, 'PasswordManager.LBL_HISTORY_MAXIMUM'              , 'Password.HistoryMaximum'            , 0, 1,  10, 10, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'PasswordManager.EditView'   ,  9, 'PasswordManager.LBL_LOGIN_LOCKOUT_COUNT'          , 'Password.LoginLockoutCount'         , 0, 1,  10, 10, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'PasswordManager.EditView'   , 10, 'PasswordManager.LBL_EXPIRATION_DAYS'              , 'Password.ExpirationDays'            , 0, 1,  10, 10, null;
end -- if;
GO

-- 11/22/2020 Paul.  Add Dropdown editor support to React Client. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Dropdown.EditView';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Dropdown.EditView' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Dropdown.EditView';
	exec dbo.spEDITVIEWS_InsertOnly            'Dropdown.EditView', 'Dropdown', 'vwTERMINOLOGY', '15%', '35%', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Dropdown.EditView'          ,  1, 'Dropdown.LBL_DROPDOWN'                     , 'LIST_NAME'                       , 1, 1, 150, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Dropdown.EditView'          ,  2, 'Dropdown.LBL_LANGUAGE'                     , 'LANG'                            , 1, 1, 'Languages', null, null, null;
end -- if;
GO

-- 11/22/2020 Paul.  Add Dropdown editor support to React Client. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Dropdown.SearchBasic';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Dropdown.SearchBasic' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Dropdown.SearchBasic';
	exec dbo.spEDITVIEWS_InsertOnly            'Dropdown.SearchBasic', 'Dropdown', 'vwTERMINOLOGY', '15%', '35%', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Dropdown.SearchBasic'       ,  1, 'Dropdown.LBL_DROPDOWN'                     , 'LIST_NAME'                       , 1, 1, 'TerminologyPickLists', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Dropdown.SearchBasic'       ,  2, 'Dropdown.LBL_LANGUAGE'                     , 'LANG'                            , 1, 1, 'Languages', null, null, null;
end -- if;
GO

-- 01/30/2021 Paul.  Add EditCustomFields support to React Client. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'EditCustomFields.NewRecord';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'EditCustomFields.NewRecord' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS EditCustomFields.NewRecord';
	exec dbo.spEDITVIEWS_InsertOnly            'EditCustomFields.NewRecord', 'EditCustomFields', 'vwFIELDS_META_DATA', '30%', '70%', 1;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'EditCustomFields.NewRecord' ,  0, 'EditCustomFields.COLUMN_TITLE_NAME'           , 'NAME'                           , 1, 1, 255, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'EditCustomFields.NewRecord' ,  1, 'EditCustomFields.COLUMN_TITLE_LABEL'          , 'LABEL'                          , 1, 1, 255, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'EditCustomFields.NewRecord' ,  2, 'EditCustomFields.COLUMN_TITLE_DATA_TYPE'      , 'DATA_TYPE'                      , 1, 1, 'custom_field_type_dom', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'EditCustomFields.NewRecord' ,  3, 'EditCustomFields.COLUMN_TITLE_MAX_SIZE'       , 'MAX_SIZE'                       , 0, 1, 255, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsCheckBox    'EditCustomFields.NewRecord' ,  4, 'EditCustomFields.COLUMN_TITLE_REQUIRED_OPTION', 'REQUIRED'                       , 0, 1, null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'EditCustomFields.NewRecord' ,  5, 'EditCustomFields.COLUMN_TITLE_DEFAULT_VALUE'  , 'DEFAULT_VALUE'                  , 0, 1, 255, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'EditCustomFields.NewRecord' ,  6, 'EditCustomFields.LBL_DROPDOWN_LIST'           , 'DROPDOWN_LIST'                  , 1, 1, 'TerminologyPickLists', null, null, null
end -- if;
GO

-- 01/30/2021 Paul.  Add EditCustomFields support to React Client. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'EditCustomFields.EditView';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'EditCustomFields.EditView' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS EditCustomFields.EditView';
	exec dbo.spEDITVIEWS_InsertOnly            'EditCustomFields.EditView', 'EditCustomFields', 'vwFIELDS_META_DATA', '30%', '70%', 1;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel       'EditCustomFields.EditView'  ,  0, 'EditCustomFields.COLUMN_TITLE_NAME'           , 'NAME'                           , null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel       'EditCustomFields.EditView'  ,  1, 'EditCustomFields.COLUMN_TITLE_LABEL'          , 'LABEL'                          , null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel       'EditCustomFields.EditView'  ,  2, 'EditCustomFields.COLUMN_TITLE_DATA_TYPE'      , 'DATA_TYPE'                      , null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'EditCustomFields.EditView'  ,  3, 'EditCustomFields.COLUMN_TITLE_MAX_SIZE'       , 'MAX_SIZE'                       , 0, 1, 255, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsCheckBox    'EditCustomFields.EditView'  ,  4, 'EditCustomFields.COLUMN_TITLE_REQUIRED_OPTION', 'REQUIRED'                       , 0, 1, null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'EditCustomFields.EditView'  ,  5, 'EditCustomFields.COLUMN_TITLE_DEFAULT_VALUE'  , 'DEFAULT_VALUE'                  , 0, 1, 255, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'EditCustomFields.EditView'  ,  6, 'EditCustomFields.LBL_DROPDOWN_LIST'           , 'DROPDOWN_LIST'                  , 1, 1, 'TerminologyPickLists', null, null, null
end -- if;
GO

-- 11/22/2020 Paul.  Add Dropdown editor support to React Client. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Terminology.RenameTabs';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Terminology.RenameTabs' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Terminology.RenameTabs';
	exec dbo.spEDITVIEWS_InsertOnly            'Terminology.RenameTabs', 'Terminology', 'vwMODULES_RenameTabs', '15%', '85%', 1;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Terminology.RenameTabs'     ,  1, 'Dropdown.LBL_LANGUAGE'                       , 'LANG'                            , 1, 1, 'Languages', null, null, null;
end -- if;
GO

-- 09/09/2021 Paul.  Add Undelete support to React Client. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Undelete.SearchBasic';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Undelete.SearchBasic' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Undelete.SearchBasic';
	exec dbo.spEDITVIEWS_InsertOnly            'Undelete.SearchBasic', 'Undelete', 'vwCONFIG_Edit', '11%', '22%', 3;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Undelete.SearchBasic'       ,  0, 'Undelete.LBL_NAME'                          , 'NAME'                   , null, null, 255, 30, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Undelete.SearchBasic'       ,  1, 'Undelete.LBL_MODULE_NAME'                   , 'MODULE_NAME'            , null, null, 'AuditedModules', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBlank       'Undelete.SearchBasic'       ,  2, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Undelete.SearchBasic'       ,  3, 'Undelete.LBL_AUDIT_TOKEN'                   , 'AUDIT_TOKEN'            , null, null, 255, 30, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Undelete.SearchBasic'       ,  4, 'Undelete.LBL_MODIFIED_BY'                   , 'MODIFIED_USER_ID'       , null, null, 'ActiveUsers'   , null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'Undelete.SearchBasic'       ,  5, 'Undelete.LBL_AUDIT_DATE'                    , 'AUDIT_DATE'             , NULL, null, 'DateRange'     , null, null, null;
end -- if;
GO

-- 10/27/2021 Paul.  Administration.AdminWizard layout is used as a collection of values and not for layout purposes. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Configurator.AdminWizard.Company';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Configurator.AdminWizard.Company' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Configurator.AdminWizard.Company';
	exec dbo.spEDITVIEWS_InsertOnly            'Configurator.AdminWizard.Company', 'Configurator', 'vwCONFIG_Edit', '15%', '35%', 2;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Configurator.AdminWizard.Company',  0, 'Configurator.LBL_COMPANY_NAME'          , 'company_name'           , 0, 1, 255, 40, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Configurator.AdminWizard.Company',  1, 'Configurator.LBL_HEADER_LOGO_IMAGE'     , 'header_logo_image'      , 0, 1, 255, 40, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Configurator.AdminWizard.Company',  2, 'Configurator.LBL_HEADER_LOGO_WIDTH'     , 'header_logo_width'      , 0, 1, 255, 10, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Configurator.AdminWizard.Company',  3, 'Configurator.LBL_HEADER_LOGO_HEIGHT'    , 'header_logo_height'     , 0, 1, 255, 10, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Configurator.AdminWizard.Company',  4, 'Configurator.LBL_HEADER_LOGO_STYLE'     , 'header_logo_style'      , 0, 1, 255, 20, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Configurator.AdminWizard.Company',  5, 'Configurator.LBL_ATLANTIC_HOME_IMAGE'   , 'header_home_image'      , 0, 1, 255, 40, null;
end -- if;
GO

-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Configurator.AdminWizard.Locale';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Configurator.AdminWizard.Locale' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Configurator.AdminWizard.Locale';
	exec dbo.spEDITVIEWS_InsertOnly            'Configurator.AdminWizard.Locale' , 'Configurator', 'vwCONFIG_Edit', '15%', '35%', 2;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Configurator.AdminWizard.Locale' ,  0, 'Users.LBL_LANGUAGE'                     , 'default_language'       , 0, 2, 'Languages'       , null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Configurator.AdminWizard.Locale' ,  1, 'Users.LBL_CURRENCY'                     , 'default_currency'       , 0, 2, 'Currencies'      , null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Configurator.AdminWizard.Locale' ,  2, 'Users.LBL_DATE_FORMAT'                  , 'default_date_format'    , 0, 2, 'DateFormat.en-US', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Configurator.AdminWizard.Locale' ,  3, 'Users.LBL_TIME_FORMAT'                  , 'default_language'       , 0, 2, 'TimeForamt.en-US', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Configurator.AdminWizard.Locale' ,  4, 'Users.LBL_TIMEZONE'                     , 'default_timezone'       , 0, 2, 'TimeZones'       , null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBlank       'Configurator.AdminWizard.Locale' ,  5, null;
end -- if;
GO

-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Configurator.AdminWizard.Mail';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Configurator.AdminWizard.Mail' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Configurator.AdminWizard.Mail';
	exec dbo.spEDITVIEWS_InsertOnly            'Configurator.AdminWizard.Mail', 'Configurator', 'vwCONFIG_Edit', '15%', '35%', 2;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Configurator.AdminWizard.Mail'  ,  0, 'EmailMan.LBL_NOTIFY_FROMNAME'           , 'fromname'               , 0, 3, 128, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Configurator.AdminWizard.Mail'  ,  1, 'EmailMan.LBL_NOTIFY_FROMADDRESS'        , 'fromaddress'            , 0, 3, 128, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Configurator.AdminWizard.Mail'  ,  2, 'EmailMan.LBL_MAIL_SMTPSERVER'           , 'smtpserver'             , 0, 3,  64, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Configurator.AdminWizard.Mail'  ,  3, 'EmailMan.LBL_MAIL_SMTPPORT'             , 'smtpport'               , 0, 3,  10, 10, null;
	exec dbo.spEDITVIEWS_FIELDS_InsCheckBox    'Configurator.AdminWizard.Mail'  ,  4, 'EmailMan.LBL_MAIL_SMTPAUTH_REQ'         , 'smtpauth_req'           , 0, 3, null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsCheckBox    'Configurator.AdminWizard.Mail'  ,  5, 'EmailMan.LBL_MAIL_SMTPSSL'              , 'smtpssl'                , 0, 3, null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Configurator.AdminWizard.Mail'  ,  6, 'EmailMan.LBL_MAIL_SMTPUSER'             , 'smtpuser'               , 0, 3,  64, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsPassword    'Configurator.AdminWizard.Mail'  ,  7, 'EmailMan.LBL_MAIL_SMTPPASS'             , 'password'               , 0, 3,  64, 25, null;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 01/20/2010 Paul.  Add ability to search the new Audit Events table. 
-- 03/28/2019 Paul.  Move AuditEvents.SearchBasic to default file for Community edition. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'AuditEvents.SearchBasic';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'AuditEvents.SearchBasic' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS AuditEvents.SearchBasic';
	exec dbo.spEDITVIEWS_InsertOnly             'AuditEvents.SearchBasic'   , 'AuditEvents', 'vwAUDIT_EVENTS', '11%', '22%', 3;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'AuditEvents.SearchBasic'   ,  0, 'Users.LBL_NAME'                         , 'FULL_NAME'                  , 0, null,  30, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsAutoComplete 'AuditEvents.SearchBasic'   ,  1, 'Users.LBL_USER_NAME'                    , 'USER_NAME'                  , 0, null,  30, 25, 'Users', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBlank        'AuditEvents.SearchBasic'   ,  2, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl      'AuditEvents.SearchBasic'   ,  3, '.LBL_DATE_MODIFIED'                     , 'DATE_MODIFIED'              , 0, null, 'DateRange'          , null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList    'AuditEvents.SearchBasic'   ,  4, 'Audit.LBL_AUDIT_ACTION'                 , 'AUDIT_ACTION'               , 1, null, 'audit_action_dom'   , null, 4;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList    'AuditEvents.SearchBasic'   ,  5, 'Audit.LBL_MODULE_NAME'                  , 'MODULE_NAME'                , 1, null, 'Modules'            , null, 4;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 03/05/2011 Paul.  Add search for Config. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Config.SearchBasic';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Config.SearchBasic' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Config.SearchBasic';
	exec dbo.spEDITVIEWS_InsertOnly             'Config.SearchBasic'      , 'Config', 'vwCONFIG_List', '15%', '35%', 2;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Config.SearchBasic'      ,  0, 'Config.LBL_NAME'                        , 'NAME'                       , 0, null,  50, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Config.SearchBasic'      ,  1, 'Config.LBL_VALUE'                       , 'VALUE'                      , 0, null, 200, 35, null;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 05/01/2016 Paul.  We are going to prepopulate the currency table so that we can be sure to get the supported ISO values correct. 
-- delete from EDITVIEWS where NAME = 'Currencies.SearchBasic';
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Currencies.SearchBasic';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Currencies.SearchBasic' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Currencies.SearchBasic';
	exec dbo.spEDITVIEWS_InsertOnly             'Currencies.SearchBasic'      , 'Currencies', 'vwCURRENCIES_List', '11%', '22%', 3;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Currencies.SearchBasic'      ,  0, 'Currencies.LBL_NAME'                    , 'NAME'                       , 0, null,  36, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Currencies.SearchBasic'      ,  1, 'Currencies.LBL_ISO4217'                 , 'ISO4217'                    , 0, null,  36, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList    'Currencies.SearchBasic'      ,  2, 'Currencies.LBL_STATUS'                  , 'STATUS'                     , 0, null, 'currency_status_dom' , null, 2;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'DynamicButtons.EditView';
-- 07/28/2010 Paul.  We need a flag to exclude a button from a mobile device. 
-- 03/14/2014 Paul.  Allow hidden buttons to be created. 
-- 08/16/2017 Paul.  Add ability to apply a business rule to a button. 
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'DynamicButtons.EditView' and DELETED = 0) begin -- then 
	print 'EDITVIEWS_FIELDS DynamicButtons.EditView'; 
	exec dbo.spEDITVIEWS_InsertOnly 'DynamicButtons.EditView', 'DynamicButtons', 'vwDYNAMIC_BUTTONS_Edit', '15%', '35%', null; 
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'DynamicButtons.EditView',  0, 'DynamicButtons.LBL_VIEW_NAME'         , 'VIEW_NAME'          , 1, 1,  50, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel       'DynamicButtons.EditView',  1, 'DynamicButtons.LBL_CONTROL_INDEX'     , 'CONTROL_INDEX'      , null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'DynamicButtons.EditView',  2, 'DynamicButtons.LBL_CONTROL_TYPE'      , 'CONTROL_TYPE'       , 1, 1, 'dynamic_button_type_dom', null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'DynamicButtons.EditView',  3, 'DynamicButtons.LBL_MODULE_NAME'       , 'MODULE_NAME'        , 0, 1, 'Modules'                , null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'DynamicButtons.EditView',  4, 'DynamicButtons.LBL_MODULE_ACCESS_TYPE', 'MODULE_ACCESS_TYPE' , 0, 1, 'module_access_type_dom' , null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'DynamicButtons.EditView',  5, 'DynamicButtons.LBL_TARGET_NAME'       , 'TARGET_NAME'        , 0, 1, 'Modules'                , null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'DynamicButtons.EditView',  6, 'DynamicButtons.LBL_TARGET_ACCESS_TYPE', 'TARGET_ACCESS_TYPE' , 0, 1, 'module_access_type_dom' , null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'DynamicButtons.EditView',  7, 'DynamicButtons.LBL_MOBILE_ONLY'       , 'MOBILE_ONLY'        , 0, 1, 'CheckBox', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'DynamicButtons.EditView',  8, 'DynamicButtons.LBL_ADMIN_ONLY'        , 'ADMIN_ONLY'         , 0, 1, 'CheckBox', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'DynamicButtons.EditView',  9, 'DynamicButtons.LBL_EXCLUDE_MOBILE'    , 'EXCLUDE_MOBILE'     , 0, 1, 'CheckBox', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'DynamicButtons.EditView', 10, 'DynamicButtons.LBL_CONTROL_TEXT'      , 'CONTROL_TEXT'       , 0, 1, 150, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'DynamicButtons.EditView', 11, 'DynamicButtons.LBL_CONTROL_TOOLTIP'   , 'CONTROL_TOOLTIP'    , 0, 1, 150, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'DynamicButtons.EditView', 12, 'DynamicButtons.LBL_CONTROL_ACCESSKEY' , 'CONTROL_ACCESSKEY'  , 0, 1, 150, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'DynamicButtons.EditView', 13, 'DynamicButtons.LBL_CONTROL_CSSCLASS'  , 'CONTROL_CSSCLASS'   , 0, 1,  50, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'DynamicButtons.EditView', 14, 'DynamicButtons.LBL_TEXT_FIELD'        , 'TEXT_FIELD'         , 0, 1, 200, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'DynamicButtons.EditView', 15, 'DynamicButtons.LBL_ARGUMENT_FIELD'    , 'ARGUMENT_FIELD'     , 0, 1, 200, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'DynamicButtons.EditView', 16, 'DynamicButtons.LBL_COMMAND_NAME'      , 'COMMAND_NAME'       , 0, 1,  50, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'DynamicButtons.EditView', 17, 'DynamicButtons.LBL_URL_FORMAT'        , 'URL_FORMAT'         , 0, 1, 255, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'DynamicButtons.EditView', 18, 'DynamicButtons.LBL_URL_TARGET'        , 'URL_TARGET'         , 0, 1,  20, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsMultiLine   'DynamicButtons.EditView', 19, 'DynamicButtons.LBL_ONCLICK_SCRIPT'    , 'ONCLICK_SCRIPT'     , 0, 1,   3, 60, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'DynamicButtons.EditView', 20, 'DynamicButtons.LBL_HIDDEN'            , 'HIDDEN'             , 0, 1, 'CheckBox', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBlank       'DynamicButtons.EditView', 21, null;
	exec dbo.spEDITVIEWS_FIELDS_InsMultiLine   'DynamicButtons.EditView', 22, 'DynamicButtons.LBL_BUSINESS_RULE'     , 'BUSINESS_RULE'      , 0, 1,   3, 60, null;
	exec dbo.spEDITVIEWS_FIELDS_InsMultiLine   'DynamicButtons.EditView', 23, 'DynamicButtons.LBL_BUSINESS_SCRIPT'   , 'BUSINESS_SCRIPT'    , 0, 1,   3, 60, null;
end else begin
	if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'DynamicButtons.EditView' and DATA_FIELD = 'EXCLUDE_MOBILE' and DELETED = 0) begin -- then
		print 'DynamicButtons: Add EXCLUDE_MOBILE.';
		update EDITVIEWS_FIELDS
		   set FIELD_INDEX       = FIELD_INDEX + 1
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = null
		 where EDIT_NAME         = 'DynamicButtons.EditView'
		   and FIELD_INDEX      >= 9
		   and DELETED           = 0;
		exec dbo.spEDITVIEWS_FIELDS_InsControl     'DynamicButtons.EditView',  9, 'DynamicButtons.LBL_EXCLUDE_MOBILE'    , 'EXCLUDE_MOBILE'     , 0, 1, 'CheckBox', null, null, null;
	end -- if;
	-- 03/14/2014 Paul.  Allow hidden buttons to be created. 
	if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'DynamicButtons.EditView' and DATA_FIELD = 'HIDDEN' and DELETED = 0) begin -- then
		print 'DynamicButtons: Add HIDDEN.';
		exec dbo.spEDITVIEWS_FIELDS_InsControl     'DynamicButtons.EditView', 20, 'DynamicButtons.LBL_HIDDEN'            , 'HIDDEN'             , 0, 1, 'CheckBox', null, null, null;
		exec dbo.spEDITVIEWS_FIELDS_InsBlank       'DynamicButtons.EditView', 21, null;
	end -- if;
	-- 08/16/2017 Paul.  Increase the size of the ONCLICK_SCRIPT so that we can add a javascript info column. 
	if exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'DynamicButtons.EditView' and DATA_FIELD = 'ONCLICK_SCRIPT' and FORMAT_ROWS is null and DELETED = 0) begin -- then
		print 'DynamicButtons: Update ONCLICK_SCRIPT.';
		update EDITVIEWS_FIELDS
		   set FORMAT_ROWS       = 3
		     , FORMAT_COLUMNS    = 60
		     , FORMAT_MAX_LENGTH = null
		     , FORMAT_SIZE       = null
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = null
		 where EDIT_NAME         = 'DynamicButtons.EditView'
		   and DATA_FIELD        = 'ONCLICK_SCRIPT'
		   and DELETED           = 0;
	end -- if;
	-- 08/16/2017 Paul.  Add ability to apply a business rule to a button. 
	exec dbo.spEDITVIEWS_FIELDS_InsMultiLine   'DynamicButtons.EditView', 22, 'DynamicButtons.LBL_BUSINESS_RULE'     , 'BUSINESS_RULE'      , 0, 1,   3, 60, null;
	exec dbo.spEDITVIEWS_FIELDS_InsMultiLine   'DynamicButtons.EditView', 23, 'DynamicButtons.LBL_BUSINESS_SCRIPT'   , 'BUSINESS_SCRIPT'    , 0, 1,   3, 60, null;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 04/11/2011 Paul.  Add support for Dynamic Layout popups. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'DynamicLayout.DetailView.PopupView';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'DynamicLayout.DetailView.PopupView' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS DynamicLayout.DetailView.PopupView';
	exec dbo.spEDITVIEWS_InsertOnly             'DynamicLayout.DetailView.PopupView', 'DynamicLayout', 'vwDETAILVIEWS_FIELDS', '15%', '35%', 2;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'DynamicLayout.DetailView.PopupView',  0, 'DynamicLayout.LBL_DETAIL_NAME'     , 'DETAIL_NAME'             , 0, null,  50, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'DynamicLayout.DetailView.PopupView',  1, 'DynamicLayout.LBL_LIST_DATA_FIELD' , 'DATA_FIELD'              , 0, null,  50, 35, null;
end -- if;
GO

-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'DynamicLayout.EditView.PopupView';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'DynamicLayout.EditView.PopupView' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS DynamicLayout.EditView.PopupView';
	exec dbo.spEDITVIEWS_InsertOnly             'DynamicLayout.EditView.PopupView', 'DynamicLayout', 'vwEDITVIEWS_FIELDS', '15%', '35%', 2;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'DynamicLayout.EditView.PopupView',  0, 'DynamicLayout.LBL_EDIT_NAME'       , 'EDIT_NAME'               , 0, null,  50, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'DynamicLayout.EditView.PopupView',  1, 'DynamicLayout.LBL_LIST_DATA_FIELD' , 'DATA_FIELD'              , 0, null,  50, 35, null;
end -- if;
GO

-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'DynamicLayout.GridView.PopupView';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'DynamicLayout.GridView.PopupView' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS DynamicLayout.GridView.PopupView';
	exec dbo.spEDITVIEWS_InsertOnly             'DynamicLayout.GridView.PopupView', 'DynamicLayout', 'vwGRIDVIEWS_COLUMNS', '15%', '35%', 2;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'DynamicLayout.GridView.PopupView',  0, 'DynamicLayout.LBL_GRID_NAME'       , 'GRID_NAME'               , 0, null,  50, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'DynamicLayout.GridView.PopupView',  1, 'DynamicLayout.LBL_LIST_DATA_FIELD' , 'DATA_FIELD'              , 0, null,  50, 35, null;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 01/29/2021 Paul.  Add EditCustomFields to React client. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'EditCustomFields.SearchBasic';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'EditCustomFields.SearchBasic' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS EditCustomFields.SearchBasic';
	exec dbo.spEDITVIEWS_InsertOnly             'EditCustomFields.SearchBasic', 'EditCustomFields', 'vwFIELDS_META_DATA_List', '15%', '85%', 1;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList    'EditCustomFields.SearchBasic',  5, 'EditCustomFields.LBL_MODULE_SELECT'   , 'CUSTOM_MODULE'              , 1, null, 'CustomEditModules'            , null, null;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 09/12/2009 Paul.  Allow editing of Field Validators. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'FieldValidators.EditView';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'FieldValidators.EditView' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS FieldValidators.EditView';
	exec dbo.spEDITVIEWS_InsertOnly          'FieldValidators.EditView' , 'FieldValidators', 'vwFIELD_VALIDATORS', '15%', '35%', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound     'FieldValidators.EditView' , 0, 'FieldValidators.LBL_NAME'              , 'NAME'               , 1, 1,   50, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound     'FieldValidators.EditView' , 1, 'FieldValidators.LBL_VALIDATION_TYPE'   , 'VALIDATION_TYPE'    , 1, 1,   50, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound     'FieldValidators.EditView' , 2, 'FieldValidators.LBL_REGULAR_EXPRESSION', 'REGULAR_EXPRESSION' , 0, 1, 2000, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound     'FieldValidators.EditView' , 3, 'FieldValidators.LBL_DATA_TYPE'         , 'DATA_TYPE'          , 0, 1,   25, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound     'FieldValidators.EditView' , 4, 'FieldValidators.LBL_MININUM_VALUE'     , 'MININUM_VALUE'      , 0, 1,  255, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound     'FieldValidators.EditView' , 5, 'FieldValidators.LBL_MAXIMUM_VALUE'     , 'MAXIMUM_VALUE'      , 0, 1,  255, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound     'FieldValidators.EditView' , 6, 'FieldValidators.LBL_COMPARE_OPERATOR'  , 'COMPARE_OPERATOR'   , 0, 1,   25, 35, null;

end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 05/17/2010 Paul.  Allow editing of Languages. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Languages.EditView';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Languages.EditView' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Languages.EditView';
	exec dbo.spEDITVIEWS_InsertOnly          'Languages.EditView'       , 'Languages', 'vwLANGUAGES', '15%', '35%', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound     'Languages.EditView'       , 0, 'Languages.LBL_NAME'                    , 'NAME'               , 1, 1,   10, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound     'Languages.EditView'       , 1, 'Languages.LBL_LCID'                    , 'LCID'               , 1, 1,   10, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl   'Languages.EditView'       , 2, 'Languages.LBL_ACTIVE'                  , 'ACTIVE'             , 0, 1, 'CheckBox', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound     'Languages.EditView'       , 3, 'Languages.LBL_NATIVE_NAME'             , 'NATIVE_NAME'        , 1, 1,   80, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound     'Languages.EditView'       , 4, 'Languages.LBL_DISPLAY_NAME'            , 'DISPLAY_NAME'       , 1, 1,   80, 35, null;

end -- if;
GO


set nocount off;
GO




print 'EDITVIEWS_FIELDS ModuleBuilder';
set nocount on;
GO


-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'ModuleBuilder.WizardView';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'ModuleBuilder.WizardView' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS ModuleBuilder.WizardView';
	exec dbo.spEDITVIEWS_InsertOnly             'ModuleBuilder.WizardView', 'ModuleBuilder', 'vwMODULES', '15%', '35%', null;
	exec dbo.spEDITVIEWS_FIELDS_InsAutoComplete 'ModuleBuilder.WizardView',  0, 'ModuleBuilder.LBL_DISPLAY_NAME'             , 'DISPLAY_NAME'                                           , 1, 1, 150, 25, 'Modules', null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel        'ModuleBuilder.WizardView',  1, null                                         , 'ModuleBuilder.LBL_DISPLAY_NAME_INSTRUCTIONS'            , null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'ModuleBuilder.WizardView',  2, 'ModuleBuilder.LBL_NAME'                     , 'MODULE_NAME'                                            , 1, 1,  50, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel        'ModuleBuilder.WizardView',  3, null                                         , 'ModuleBuilder.LBL_MODULE_NAME_INSTRUCTIONS'             , null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'ModuleBuilder.WizardView',  4, 'ModuleBuilder.LBL_TABLE_NAME'               , 'TABLE_NAME'                                             , 1, 1,  50, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel        'ModuleBuilder.WizardView',  5, null                                         , 'ModuleBuilder.LBL_TABLE_NAME_INSTRUCTIONS'              , null;
	exec dbo.spEDITVIEWS_FIELDS_InsCheckBox     'ModuleBuilder.WizardView',  6, 'ModuleBuilder.LBL_TAB_ENABLED'              , 'TAB_ENABLED'                                            , 0, 1, null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel        'ModuleBuilder.WizardView',  7, null                                         , 'ModuleBuilder.LBL_TAB_ENABLED_INSTRUCTIONS'             , null;
	exec dbo.spEDITVIEWS_FIELDS_InsCheckBox     'ModuleBuilder.WizardView',  8, 'ModuleBuilder.LBL_MOBILE_ENABLED'           , 'MOBILE_ENABLED'                                         , 0, 1, null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel        'ModuleBuilder.WizardView',  9, null                                         , 'ModuleBuilder.LBL_MOBILE_ENABLED_INSTRUCTIONS'          , null;
	exec dbo.spEDITVIEWS_FIELDS_InsCheckBox     'ModuleBuilder.WizardView', 10, 'ModuleBuilder.LBL_CUSTOM_ENABLED'           , 'CUSTOM_ENABLED'                                         , 0, 1, null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel        'ModuleBuilder.WizardView', 11, null                                         , 'ModuleBuilder.LBL_CUSTOM_ENABLED_INSTRUCTIONS'          , null;
	exec dbo.spEDITVIEWS_FIELDS_InsCheckBox     'ModuleBuilder.WizardView', 12, 'ModuleBuilder.LBL_REPORT_ENABLED'           , 'REPORT_ENABLED'                                         , 0, 1, null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel        'ModuleBuilder.WizardView', 13, null                                         , 'ModuleBuilder.LBL_REPORT_ENABLED_INSTRUCTIONS'          , null;
	exec dbo.spEDITVIEWS_FIELDS_InsCheckBox     'ModuleBuilder.WizardView', 14, 'ModuleBuilder.LBL_IMPORT_ENABLED'           , 'IMPORT_ENABLED'                                         , 0, 1, null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel        'ModuleBuilder.WizardView', 15, null                                         , 'ModuleBuilder.LBL_IMPORT_ENABLED_INSTRUCTIONS'          , null;
	exec dbo.spEDITVIEWS_FIELDS_InsCheckBox     'ModuleBuilder.WizardView', 16, 'ModuleBuilder.LBL_REST_ENABLED'             , 'REST_ENABLED'                                           , 0, 1, null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel        'ModuleBuilder.WizardView', 17, null                                         , 'ModuleBuilder.LBL_REST_ENABLED_INSTRUCTIONS'            , null;
	exec dbo.spEDITVIEWS_FIELDS_InsCheckBox     'ModuleBuilder.WizardView', 18, 'ModuleBuilder.LBL_IS_ADMIN'                 , 'IS_ADMIN'                                               , 0, 1, null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel        'ModuleBuilder.WizardView', 19, null                                         , 'ModuleBuilder.LBL_IS_ADMIN_INSTRUCTIONS'                , null;
	exec dbo.spEDITVIEWS_FIELDS_InsCheckBox     'ModuleBuilder.WizardView', 20, 'ModuleBuilder.LBL_INCLUDE_ASSIGNED_USER_ID' , 'INCLUDE_ASSIGNED_USER_ID'                               , 0, 1, null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel        'ModuleBuilder.WizardView', 21, null                                         , 'ModuleBuilder.LBL_INCLUDE_ASSIGNED_USER_ID_INSTRUCTIONS', null;
	exec dbo.spEDITVIEWS_FIELDS_InsCheckBox     'ModuleBuilder.WizardView', 22, 'ModuleBuilder.LBL_INCLUDE_TEAM_ID'          , 'INCLUDE_TEAM_ID'                                        , 0, 1, null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel        'ModuleBuilder.WizardView', 23, null                                         , 'ModuleBuilder.LBL_INCLUDE_TEAM_ID_INSTRUCTIONS'         , null;
	exec dbo.spEDITVIEWS_FIELDS_InsCheckBox     'ModuleBuilder.WizardView', 24, 'ModuleBuilder.LBL_OVERWRITE_EXISTING'       , 'OVERWRITE_EXISTING'                                     , 0, 1, null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel        'ModuleBuilder.WizardView', 25, null                                         , 'ModuleBuilder.LBL_OVERWRITE_EXISTING_INSTRUCTIONS'      , null;
	exec dbo.spEDITVIEWS_FIELDS_InsCheckBox     'ModuleBuilder.WizardView', 26, 'ModuleBuilder.LBL_CREATE_CODE_BEHIND'       , 'CREATE_CODE_BEHIND'                                     , 0, 1, null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel        'ModuleBuilder.WizardView', 27, null                                         , 'ModuleBuilder.LBL_CREATE_CODE_BEHIND_INSTRUCTIONS'      , null;
	exec dbo.spEDITVIEWS_FIELDS_InsCheckBox     'ModuleBuilder.WizardView', 28, 'ModuleBuilder.LBL_REACT_ONLY'               , 'REACT_ONLY'                                             , 0, 1, null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel        'ModuleBuilder.WizardView', 29, null                                         , 'ModuleBuilder.LBL_REACT_ONLY_INSTRUCTIONS'              , null;
end -- if;
GO


set nocount off;
GO

/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spEDITVIEWS_FIELDS_ModuleBuilder()
/

call dbo.spSqlDropProcedure('spEDITVIEWS_FIELDS_ModuleBuilder')
/

-- #endif IBM_DB2 */


set nocount on;
GO

-- 09/09/2009 Paul.  Allow direct editing of the module table. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Modules.EditView';
-- 12/02/2009 Paul.  Add the ability to disable Mass Updates. 
-- 04/01/2010 Paul.  Add Exchange Sync flag. 
-- 06/18/2011 Paul.  REST_ENABLED provides a way to enable/disable a module in the REST API. 
-- 03/14/2014 Paul.  DUPLICATE_CHECHING_ENABLED enables duplicate checking. 
-- 06/15/2017 Paul.  Allow the RELATIVE_PATH to be editable so that html5 can be enabled or disabled manually. 
-- 11/01/2017 Paul.  Use a module-based flag so that Record Level Security is only enabled when needed. 
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Modules.EditView' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Modules.EditView';
	exec dbo.spEDITVIEWS_InsertOnly            'Modules.EditView'       , 'Modules', 'vwMODULES', '15%', '35%', null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel       'Modules.EditView'       ,  0, 'Modules.LBL_MODULE_NAME'              , 'MODULE_NAME'           , null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Modules.EditView'       ,  1, 'Modules.LBL_DISPLAY_NAME'             , 'DISPLAY_NAME'          , 1, 1, 50, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Modules.EditView'       ,  2, 'Modules.LBL_RELATIVE_PATH'            , 'RELATIVE_PATH'         , 1, 1, 50, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel       'Modules.EditView'       ,  3, 'Modules.LBL_TABLE_NAME'               , 'TABLE_NAME'            , null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Modules.EditView'       ,  4, 'Modules.LBL_TAB_ORDER'                , 'TAB_ORDER'             , 1, 1, 10, 10, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'Modules.EditView'       ,  5, 'Modules.LBL_PORTAL_ENABLED'           , 'PORTAL_ENABLED'        , 0, 1, 'CheckBox', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'Modules.EditView'       ,  6, 'Modules.LBL_MODULE_ENABLED'           , 'MODULE_ENABLED'        , 0, 1, 'CheckBox', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'Modules.EditView'       ,  7, 'Modules.LBL_TAB_ENABLED'              , 'TAB_ENABLED'           , 0, 1, 'CheckBox', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel       'Modules.EditView'       ,  8, 'Modules.LBL_IS_ADMIN'                 , 'IS_ADMIN'              , null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel       'Modules.EditView'       ,  9, 'Modules.LBL_CUSTOM_ENABLED'           , 'CUSTOM_ENABLED'        , null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'Modules.EditView'       , 10, 'Modules.LBL_REPORT_ENABLED'           , 'REPORT_ENABLED'        , 0, 1, 'CheckBox', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'Modules.EditView'       , 11, 'Modules.LBL_IMPORT_ENABLED'           , 'IMPORT_ENABLED'        , 0, 1, 'CheckBox', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'Modules.EditView'       , 12, 'Modules.LBL_MOBILE_ENABLED'           , 'MOBILE_ENABLED'        , 0, 1, 'CheckBox', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'Modules.EditView'       , 13, 'Modules.LBL_CUSTOM_PAGING'            , 'CUSTOM_PAGING'         , 0, 1, 'CheckBox', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'Modules.EditView'       , 14, 'Modules.LBL_MASS_UPDATE_ENABLED'      , 'MASS_UPDATE_ENABLED'   , 0, 1, 'CheckBox', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'Modules.EditView'       , 15, 'Modules.LBL_DEFAULT_SEARCH_ENABLED'   , 'DEFAULT_SEARCH_ENABLED', 0, 1, 'CheckBox', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'Modules.EditView'       , 16, 'Modules.LBL_EXCHANGE_SYNC'            , 'EXCHANGE_SYNC'         , 0, 1, 'CheckBox', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'Modules.EditView'       , 17, 'Modules.LBL_EXCHANGE_FOLDERS'         , 'EXCHANGE_FOLDERS'      , 0, 1, 'CheckBox', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'Modules.EditView'       , 18, 'Modules.LBL_EXCHANGE_CREATE_PARENT'   , 'EXCHANGE_CREATE_PARENT', 0, 1, 'CheckBox', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'Modules.EditView'       , 19, 'Modules.LBL_REST_ENABLED'             , 'REST_ENABLED'          , 0, 1, 'CheckBox', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'Modules.EditView'       , 20, 'Modules.LBL_DUPLICATE_CHECHING_ENABLED', 'DUPLICATE_CHECHING_ENABLED', 0, 1, 'CheckBox', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'Modules.EditView'       , 21, 'Modules.LBL_RECORD_LEVEL_SECURITY_ENABLED', 'RECORD_LEVEL_SECURITY_ENABLED', 0, 1, 'CheckBox', null, null, null;
end else begin
	if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Modules.EditView' and DATA_FIELD = 'MASS_UPDATE_ENABLED' and DELETED = 0) begin -- then
		exec dbo.spEDITVIEWS_FIELDS_InsControl     'Modules.EditView'       , 14, 'Modules.LBL_MASS_UPDATE_ENABLED'      , 'MASS_UPDATE_ENABLED', 0, 1, 'CheckBox', null, null, null;
	end -- if;
	if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Modules.EditView' and DATA_FIELD = 'DEFAULT_SEARCH_ENABLED' and DELETED = 0) begin -- then
		update EDITVIEWS_FIELDS
		   set DELETED           = 1
		     , DATE_MODIFIED     = getdate()
		     , MODIFIED_USER_ID  = null
		 where EDIT_NAME         = 'Modules.EditView'
		   and FIELD_TYPE        = 'Blank'
		   and FIELD_INDEX       = 15
		   and DELETED           = 0;
		exec dbo.spEDITVIEWS_FIELDS_InsControl     'Modules.EditView'       , 15, 'Modules.LBL_DEFAULT_SEARCH_ENABLED'   , 'DEFAULT_SEARCH_ENABLED', 0, 1, 'CheckBox', null, null, null;
	end -- if;
	-- 04/01/2010 Paul.  Add Exchange Sync flag. 
	if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Modules.EditView' and DATA_FIELD = 'EXCHANGE_SYNC' and DELETED = 0) begin -- then
		exec dbo.spEDITVIEWS_FIELDS_InsControl     'Modules.EditView'       , 16, 'Modules.LBL_EXCHANGE_SYNC'            , 'EXCHANGE_SYNC'         , 0, 1, 'CheckBox', null, null, null;
	end -- if;
	-- 04/04/2010 Paul.  Add Exchange Folders flag. 
	if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Modules.EditView' and DATA_FIELD = 'EXCHANGE_FOLDERS' and DELETED = 0) begin -- then
		exec dbo.spEDITVIEWS_FIELDS_InsControl     'Modules.EditView'       , 17, 'Modules.LBL_EXCHANGE_FOLDERS'         , 'EXCHANGE_FOLDERS'      , 0, 1, 'CheckBox', null, null, null;
	end -- if;
	-- 04/05/2010 Paul.  Add Exchange Create Parent flag. Need to be able to disable Account creation. 
	if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Modules.EditView' and DATA_FIELD = 'EXCHANGE_CREATE_PARENT' and DELETED = 0) begin -- then
		exec dbo.spEDITVIEWS_FIELDS_InsControl     'Modules.EditView'       , 17, 'Modules.LBL_EXCHANGE_CREATE_PARENT'   , 'EXCHANGE_CREATE_PARENT', 0, 1, 'CheckBox', null, null, null;
	end -- if;
	-- 06/23/2010 Paul.  Allow editing of the Portal flag. 
	if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Modules.EditView' and DATA_FIELD = 'PORTAL_ENABLED' and DELETED = 0) begin -- then
		update EDITVIEWS_FIELDS
		   set DELETED           = 1
		     , DATE_MODIFIED     = getdate()
		     , MODIFIED_USER_ID  = null
		 where EDIT_NAME         = 'Modules.EditView'
		   and FIELD_TYPE        = 'Blank'
		   and FIELD_INDEX       = 5
		   and DELETED           = 0;
		exec dbo.spEDITVIEWS_FIELDS_InsControl     'Modules.EditView'       ,  5, 'Modules.LBL_PORTAL_ENABLED'   , 'PORTAL_ENABLED', 0, 1, 'CheckBox', null, null, null;
	end -- if;
	-- 06/18/2011 Paul.  REST_ENABLED provides a way to enable/disable a module in the REST API. 
	if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Modules.EditView' and DATA_FIELD = 'REST_ENABLED' and DELETED = 0) begin -- then
		exec dbo.spEDITVIEWS_FIELDS_InsControl     'Modules.EditView'       , 19, 'Modules.LBL_REST_ENABLED'             , 'REST_ENABLED'          , 0, 1, 'CheckBox', null, null, null;
	end -- if;
	-- 03/14/2014 Paul.  DUPLICATE_CHECHING_ENABLED enables duplicate checking. 
	if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Modules.EditView' and DATA_FIELD = 'DUPLICATE_CHECHING_ENABLED' and DELETED = 0) begin -- then
		exec dbo.spEDITVIEWS_FIELDS_InsControl     'Modules.EditView'       , 20, 'Modules.LBL_DUPLICATE_CHECHING_ENABLED', 'DUPLICATE_CHECHING_ENABLED', 0, 1, 'CheckBox', null, null, null;
		exec dbo.spEDITVIEWS_FIELDS_InsBlank       'Modules.EditView'       , 21, null;
	end -- if;
	-- 06/15/2017 Paul.  Allow the RELATIVE_PATH to be editable so that html5 can be enabled or disabled manually. 
	if exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Modules.EditView' and DATA_FIELD = 'RELATIVE_PATH' and FIELD_TYPE = 'Label' and DELETED = 0) begin -- then
		update EDITVIEWS_FIELDS
		   set FIELD_TYPE        = 'TextBox'
		     , DATA_REQUIRED     = 1
		     , UI_REQUIRED       = 1
		     , FORMAT_TAB_INDEX  = 1
		     , FORMAT_SIZE       = 35
		     , FORMAT_MAX_LENGTH = 50
		     , DATE_MODIFIED     = getdate()
		     , MODIFIED_USER_ID  = null
		 where EDIT_NAME         = 'Modules.EditView'
		   and DATA_FIELD        = 'RELATIVE_PATH'
		   and FIELD_TYPE        = 'Label'
		   and DELETED           = 0;
	end -- if;
	-- 11/01/2017 Paul.  Use a module-based flag so that Record Level Security is only enabled when needed. 
	if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Modules.EditView' and DATA_FIELD = 'RECORD_LEVEL_SECURITY_ENABLED' and DELETED = 0) begin -- then
		update EDITVIEWS_FIELDS
		   set DELETED           = 1
		     , DATE_MODIFIED     = getdate()
		     , MODIFIED_USER_ID  = null
		 where EDIT_NAME         = 'Modules.EditView'
		   and FIELD_TYPE        = 'Blank'
		   and FIELD_INDEX       = 21
		   and DELETED           = 0;
		exec dbo.spEDITVIEWS_FIELDS_InsControl     'Modules.EditView'       , 21, 'Modules.LBL_RECORD_LEVEL_SECURITY_ENABLED'   , 'RECORD_LEVEL_SECURITY_ENABLED', 0, 1, 'CheckBox', null, null, null;
	end -- if;
end -- if;
GO


set nocount off;
GO


set nocount on;
GO

-- 06/22/2013 Paul.  Add search for Modules. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Modules.SearchBasic';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Modules.SearchBasic' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Modules.SearchBasic';
	exec dbo.spEDITVIEWS_InsertOnly             'Modules.SearchBasic'     , 'Modules', 'vwMODULES_List', '15%', '35%', 2;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Modules.SearchBasic'     ,  0, 'Modules.LBL_MODULE_NAME'                , 'MODULE_NAME'                , 0, null,  50, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Modules.SearchBasic'     ,  1, 'Modules.LBL_TABLE_NAME'                 , 'TABLE_NAME'                 , 0, null,  50, 35, null;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Shortcuts.SearchBasic';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Shortcuts.SearchBasic' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Shortcuts.SearchBasic';
	exec dbo.spEDITVIEWS_InsertOnly             'Shortcuts.SearchBasic'   , 'Shortcuts', 'vwSHORTCUTS_Edit', '15%', '35%', 2;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList    'Shortcuts.SearchBasic'   ,  0, 'Shortcuts.LBL_MODULE_NAME'              , 'MODULE_NAME'                , 1, null, 'Modules'           , null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBlank        'Shortcuts.SearchBasic'   ,  1, null;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'SystemLog.SearchBasic';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'SystemLog.SearchBasic' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS SystemLog.SearchBasic';
	exec dbo.spEDITVIEWS_InsertOnly             'SystemLog.SearchBasic'   , 'SystemLog', 'vwSYSTEM_LOG', '11%', '22%', 3;
	exec dbo.spEDITVIEWS_FIELDS_InsControl      'SystemLog.SearchBasic'   ,  0, '.LBL_DATE_ENTERED'                      , 'DATE_ENTERED'               , 0, null, 'DateRange'          , null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList    'SystemLog.SearchBasic'   ,  1, 'SystemLog.LBL_ERROR_TYPE'               , 'ERROR_TYPE'                 , 0, null, 'system_log_type_dom', null, 3;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'SystemLog.SearchBasic'   ,  2, 'SystemLog.LBL_SERVER_HOST'              , 'SERVER_HOST'                , 0, null,  60, 25, null;

	exec dbo.spEDITVIEWS_FIELDS_InsBound        'SystemLog.SearchBasic'   ,  3, 'Users.LBL_USER_NAME'                    , 'USER_NAME'                  , 0, null,  60, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'SystemLog.SearchBasic'   ,  4, 'SystemLog.LBL_RELATIVE_PATH'            , 'LBL_RELATIVE_PATH'          , 0, null, 100, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'SystemLog.SearchBasic'   ,  5, 'SystemLog.LBL_REMOTE_HOST'              , 'REMOTE_HOST'                , 0, null,  60, 25, null;

	exec dbo.spEDITVIEWS_FIELDS_InsBound        'SystemLog.SearchBasic'   ,  6, 'SystemLog.LBL_MESSAGE'                  , 'MESSAGE'                    , 0, null, 100, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'SystemLog.SearchBasic'   ,  7, 'SystemLog.LBL_FILE_NAME'                , 'FILE_NAME'                  , 0, null, 100, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'SystemLog.SearchBasic'   ,  8, 'SystemLog.LBL_METHOD'                   , 'METHOD'                     , 0, null, 100, 25, null;
end -- if;
GO

set nocount off;
GO


-- 10/15/2006 Paul.  Add support for Teams. 
-- 04/12/2016 Paul.  Add parent team and custom fields. 
-- 04/28/2016 Paul.  Rename parent to PARENT_ID. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Teams.EditView'
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Teams.EditView' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Teams.EditView';
	exec dbo.spEDITVIEWS_InsertOnly            'Teams.EditView', 'Teams', 'vwTEAMS_Edit', '15%', '35%', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Teams.EditView'          ,  0, 'Teams.LBL_NAME'                         , 'NAME'                       , 1, 1, 128, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsModulePopup 'Teams.EditView'          ,  1, 'Teams.LBL_PARENT_NAME'                  , 'PARENT_ID'                  , 0, 1, 'PARENT_NAME', 'Teams', null;
	exec dbo.spEDITVIEWS_FIELDS_InsMultiLine   'Teams.EditView'          ,  2, 'Teams.LBL_DESCRIPTION'                  , 'DESCRIPTION'                , 0, 2,   4, 60, null;
end else begin
	-- 04/12/2016 Paul.  Add parent team and custom fields. 
	-- 04/28/2016 Paul.  Rename parent to PARENT_ID. 
	if exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Teams.EditView' and DATA_FIELD = 'PARENT_TEAM_ID' and DELETED = 0) begin -- then
		update EDITVIEWS_FIELDS
		   set DATA_FIELD        = 'PARENT_ID'
		     , DISPLAY_FIELD     = 'PARENT_NAME'
		     , DATA_LABEL        = 'Teams.LBL_PARENT_NAME'
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = null
		 where EDIT_NAME         = 'Teams.EditView'
		   and DATA_FIELD        = 'PARENT_TEAM_ID'
		   and DELETED           = 0;
	end -- if;
	if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Teams.EditView' and DATA_FIELD = 'PARENT_ID' and DELETED = 0) begin -- then
		update EDITVIEWS_FIELDS
		   set DELETED           = 1
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = null
		 where EDIT_NAME         = 'Teams.EditView'
		   and FIELD_TYPE        = 'Blank'
		   and DELETED           = 0;
		exec dbo.spEDITVIEWS_FIELDS_InsModulePopup 'Teams.EditView'          ,  1, 'Teams.LBL_PARENT_NAME'                  , 'PARENT_ID'                  , 0, 1, 'PARENT_NAME', 'Teams', null;
	end -- if;
	-- 05/11/2016 Paul.  Correct field width to support parent. 
	if exists(select * from EDITVIEWS where NAME = 'Teams.EditView' and FIELD_WIDTH = '85%' and DELETED = 0) begin -- then
		update EDITVIEWS
		   set FIELD_WIDTH       = '35%'
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = null
		 where NAME              = 'Teams.EditView'
		   and FIELD_WIDTH       = '85%'
		   and DELETED           = 0;
	end -- if;
end -- if;
GO

-- 02/22/2017 Paul.  Convert to ctlSearchView. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Teams.SearchBasic';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Teams.SearchBasic' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Teams.SearchBasic';
	exec dbo.spEDITVIEWS_InsertOnly             'Teams.SearchBasic'         , 'Teams', 'vwTEAMS_List', '11%', '22%', 3;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Teams.SearchBasic'         ,  0, 'Teams.LBL_NAME'                         , 'NAME'                       , 0, null, 100, 80, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList    'Teams.SearchBasic'         ,  1, 'Teams.LBL_PRIVATE'                      , 'PRIVATE'                    , 0, null, 'team_private_dom', null, 2;
	exec dbo.spEDITVIEWS_FIELDS_InsModulePopup  'Teams.SearchBasic'         ,  2, 'Teams.LBL_PARENT_NAME'                  , 'PARENT_ID'                  , 0, null, 'PARENT_NAME', 'Teams', null;
		update EDITVIEWS
		   set DATA_COLUMNS      = 3
		     , LABEL_WIDTH       = '11%'
		     , FIELD_WIDTH       = '22%'
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		 where NAME              = 'Teams.SearchBasic'
		   and DATA_COLUMNS      = 1
		   and DELETED           = 0;
end -- if;
GO

-- 12/01/2009 Paul.  Add Teams search field. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Teams.SearchPopup';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Teams.SearchPopup' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Teams.SearchPopup';
	exec dbo.spEDITVIEWS_InsertOnly             'Teams.SearchPopup'         , 'Teams', 'vwTEAMS_List', '11%', '22%', 3;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Teams.SearchPopup'         ,  0, 'Teams.LBL_NAME'                         , 'NAME'                       , 0, null, 100, 80, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList    'Teams.SearchPopup'         ,  1, 'Teams.LBL_PRIVATE'                      , 'PRIVATE'                    , 0, null, 'team_private_dom', null, 2;
	exec dbo.spEDITVIEWS_FIELDS_InsModulePopup  'Teams.SearchPopup'         ,  2, 'Teams.LBL_PARENT_NAME'                  , 'PARENT_ID'                  , 0, null, 'PARENT_NAME', 'Teams', null;
end else begin
	if exists(select * from EDITVIEWS where NAME = 'Teams.SearchPopup' and DATA_COLUMNS = 1 and DELETED = 0) begin -- then
		update EDITVIEWS
		   set DATA_COLUMNS      = 3
		     , LABEL_WIDTH       = '11%'
		     , FIELD_WIDTH       = '22%'
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		 where NAME              = 'Teams.SearchPopup'
		   and DATA_COLUMNS      = 1
		   and DELETED           = 0;
		exec dbo.spEDITVIEWS_FIELDS_InsBoundList    'Teams.SearchPopup'         ,  1, 'Teams.LBL_PRIVATE'                      , 'PRIVATE'                    , 0, null, 'team_private_dom', null, 2;
		exec dbo.spEDITVIEWS_FIELDS_InsModulePopup  'Teams.SearchPopup'         ,  2, 'Teams.LBL_PARENT_NAME'                  , 'PARENT_ID'                  , 0, null, 'PARENT_NAME', 'Teams', null;
	end -- if;
end -- if;
GO

set nocount on;
GO

-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'UserLogins.SearchBasic';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'UserLogins.SearchBasic' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS UserLogins.SearchBasic';
	exec dbo.spEDITVIEWS_InsertOnly             'UserLogins.SearchBasic'  , 'Users', 'vwUSERS_LOGINS', '11%', '22%', 3;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'UserLogins.SearchBasic'  ,  0, 'Users.LBL_NAME'                         , 'FULL_NAME'                  , 0, null,  30, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsAutoComplete 'UserLogins.SearchBasic'  ,  1, 'Users.LBL_USER_NAME'                    , 'USER_NAME'                  , 0, null,  30, 25, 'Users', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBlank        'UserLogins.SearchBasic'  ,  2, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'UserLogins.SearchBasic'  ,  3, 'Users.LBL_REMOTE_HOST'                  , 'REMOTE_HOST'                , 0, null,  75, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'UserLogins.SearchBasic'  ,  4, 'Users.LBL_TARGET'                       , 'TARGET'                     , 0, null,  75, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'UserLogins.SearchBasic'  ,  5, 'Users.LBL_ASPNET_SESSIONID'             , 'ASPNET_SESSIONID'           , 0, null,  75, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl      'UserLogins.SearchBasic'  ,  6, 'Users.LBL_LOGIN_DATE'                   , 'LOGIN_DATE'                 , 0, null, 'DateRange'          , null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl      'UserLogins.SearchBasic'  ,  7, 'Users.LBL_LOGOUT_DATE'                  , 'LOGOUT_DATE'                , 0, null, 'DateRange'          , null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList    'UserLogins.SearchBasic'  ,  8, 'Users.LBL_LOGIN_STATUS'                 , 'LOGIN_STATUS'               , 0, null, 'login_status_dom'   , null, 3;
end else begin
	exec dbo.spEDITVIEWS_FIELDS_CnvAutoComplete 'UserLogins.SearchBasic'  ,  1, 'Users.LBL_USER_NAME'                    , 'USER_NAME'                  , 0, null,  30, 25, 'Users', null;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

--delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.EditView'
-- 09/04/2006 Paul.  Remove from EMAIL and OTHER_EMAIL.  This data goes in the EmailOptions panel. 
-- 07/08/2010 Paul.  Move Users.EditAddress fields to Users.EditView
-- 08/24/2013 Paul.  Add EXTENSION_C in preparation for Asterisk click-to-call. 
-- 09/20/2013 Paul.  Move EXTENSION to the main table. 
-- 09/27/2013 Paul.  SMS messages need to be opt-in. 
-- 10/12/2020 Paul.  Employees module may be disabled, so make sure to define LBL_REPORTS_TO for use on Users.EditView. 
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.EditView' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Users.EditView';
	exec dbo.spEDITVIEWS_InsertOnly            'Users.EditView'         , 'Users'         , 'vwUSERS_Edit'         , '15%', '35%', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Users.EditView'          ,  1, 'Users.LBL_EMPLOYEE_STATUS'              , 'EMPLOYEE_STATUS'            , 0, 5, 'employee_status_dom' , null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBlank       'Users.EditView'          ,  2, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.EditView'          ,  3, 'Users.LBL_TITLE'                        , 'TITLE'                      , 0, 5,  50, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.EditView'          ,  4, 'Users.LBL_OFFICE_PHONE'                 , 'PHONE_WORK'                 , 0, 6,  25, 20, null;
--	exec dbo.spEDITVIEWS_FIELDS_InsValidator   'Users.EditView'          ,  4, 'Phone Number'                           , 'PHONE_WORK'                 , '.ERR_INVALID_PHONE_NUMBER';
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.EditView'          ,  5, 'Users.LBL_DEPARTMENT'                   , 'DEPARTMENT'                 , 0, 5,  50, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.EditView'          ,  6, 'Users.LBL_MOBILE_PHONE'                 , 'PHONE_MOBILE'               , 0, 6,  25, 20, null;
--	exec dbo.spEDITVIEWS_FIELDS_InsValidator   'Users.EditView'          ,  6, 'Phone Number'                           , 'PHONE_MOBILE'               , '.ERR_INVALID_PHONE_NUMBER';
	exec dbo.spEDITVIEWS_FIELDS_InsModulePopup 'Users.EditView'          ,  7, 'Users.LBL_REPORTS_TO'                   , 'REPORTS_TO_ID'              , 0, 5, 'REPORTS_TO_NAME'     , 'Users', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.EditView'          ,  8, 'Users.LBL_OTHER'                        , 'PHONE_OTHER'                , 0, 6,  25, 20, null;
--	exec dbo.spEDITVIEWS_FIELDS_InsValidator   'Users.EditView'          ,  8, 'Phone Number'                           , 'PHONE_OTHER'                , '.ERR_INVALID_PHONE_NUMBER';
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.EditView'          ,  9, 'Users.LBL_EXTENSION'                    , 'EXTENSION'                  , 0, 5,  25, 20, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.EditView'          , 10, 'Users.LBL_FAX'                          , 'PHONE_FAX'                  , 0, 6,  25, 20, null;
--	exec dbo.spEDITVIEWS_FIELDS_InsValidator   'Users.EditView'          , 10, 'Phone Number'                           , 'PHONE_FAX'                  , '.ERR_INVALID_PHONE_NUMBER';
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.EditView'          , 11, 'Users.LBL_FACEBOOK_ID'                  , 'FACEBOOK_ID'                , 0, 5,  25, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.EditView'          , 12, 'Users.LBL_HOME_PHONE'                   , 'PHONE_HOME'                 , 0, 6,  25, 20, null;
--	exec dbo.spEDITVIEWS_FIELDS_InsValidator   'Users.EditView'          , 12, 'Phone Number'                           , 'PHONE_HOME'                 , '.ERR_INVALID_PHONE_NUMBER';
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Users.EditView'          , 13, 'Users.LBL_MESSENGER_TYPE'               , 'MESSENGER_TYPE'             , 0, 5, 'messenger_type_dom'  , null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.EditView'          , 14, 'Users.LBL_MESSENGER_ID'                 , 'MESSENGER_ID'               , 0, 5,  25, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsMultiLine   'Users.EditView'          , 15, 'Users.LBL_PRIMARY_ADDRESS'              , 'ADDRESS_STREET'             , 0, 8,   2, 30, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.EditView'          , 16, 'Users.LBL_CITY'                         , 'ADDRESS_CITY'               , 0, 8, 100, 15, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.EditView'          , 17, 'Users.LBL_STATE'                        , 'ADDRESS_STATE'              , 0, 8, 100, 15, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.EditView'          , 18, 'Users.LBL_POSTAL_CODE'                  , 'ADDRESS_POSTALCODE'         , 0, 8,  20, 10, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.EditView'          , 19, 'Users.LBL_COUNTRY'                      , 'ADDRESS_COUNTRY'            , 0, 8,  20, 10, null;
	-- 09/27/2013 Paul.  SMS messages need to be opt-in. 
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Users.EditView'          , 20, 'Users.LBL_SMS_OPT_IN'                   , 'SMS_OPT_IN'                 , 0, 1, 'dom_sms_opt_in'     , null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsMultiLine   'Users.EditView'          , 21, 'Users.LBL_NOTES'                        , 'DESCRIPTION'                , 0, 7,   4, 80, 3;
end else begin
	-- 08/27/2009 Paul.  Convert the ChangeButton to a ModulePopup. 
	exec dbo.spEDITVIEWS_FIELDS_CnvModulePopup 'Users.EditView'          ,  7, 'Contacts.LBL_REPORTS_TO'                , 'REPORTS_TO_ID'              , 0, 5, 'REPORTS_TO_NAME'     , 'Users', null;

	-- 03/25/2011 Paul.  Create a separate field for the Facebook ID. 
	if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.EditView' and DATA_FIELD = 'FACEBOOK_ID' and DELETED = 0) begin -- then
		if exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.EditView' and FIELD_TYPE = 'Blank' and FIELD_INDEX = 11 and DELETED = 0) begin -- then
			update EDITVIEWS_FIELDS
			   set DELETED          = 1
			     , DATE_MODIFIED    = getdate()
			     , DATE_MODIFIED_UTC= getutcdate()
			     , MODIFIED_USER_ID = null
			 where EDIT_NAME        = 'Users.EditView'
			   and FIELD_TYPE       = 'Blank'
			   and FIELD_INDEX      = 11
			   and DELETED          = 0;
		end -- if;
		exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.EditView'          , 11, 'Users.LBL_FACEBOOK_ID'                  , 'FACEBOOK_ID'                , 0, 5,  25, 35, null;
	end -- if;

	-- 08/24/2013 Paul.  Add EXTENSION_C in preparation for Asterisk click-to-call. 
	-- 09/20/2013 Paul.  Move EXTENSION to the main table. 
	if exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.EditView' and DATA_FIELD = 'EXTENSION_C' and DELETED = 0) begin -- then
			update EDITVIEWS_FIELDS
			   set DATA_FIELD       = 'EXTENSION'
			     , DATA_LABEL       = 'Users.LBL_EXTENSION'
			     , DATE_MODIFIED    = getdate()
			     , DATE_MODIFIED_UTC= getutcdate()
			     , MODIFIED_USER_ID = null
			 where EDIT_NAME        = 'Users.EditView'
			   and DATA_FIELD       = 'EXTENSION_C'
			   and DELETED          = 0;
	end -- if;
	if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.EditView' and DATA_FIELD = 'EXTENSION' and DELETED = 0) begin -- then
		if exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.EditView' and FIELD_TYPE = 'Blank' and FIELD_INDEX = 9 and DELETED = 0) begin -- then
			update EDITVIEWS_FIELDS
			   set DELETED          = 1
			     , DATE_MODIFIED    = getdate()
			     , DATE_MODIFIED_UTC= getutcdate()
			     , MODIFIED_USER_ID = null
			 where EDIT_NAME        = 'Users.EditView'
			   and FIELD_TYPE       = 'Blank'
			   and FIELD_INDEX      = 9
			   and DELETED          = 0;
		end -- if;
		exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.EditView'          ,  9, 'Users.LBL_EXTENSION'                    , 'EXTENSION'                  , 0, 5,  25, 20, null;
	end -- if;

	-- 01/21/2008 Paul.  Some older systems still have EMAIL1 and EMAIL2 in the main. 
	if exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.EditView' and DATA_FIELD in ('EMAIL1', 'EMAIL2') and DELETED = 0) begin -- then
		print 'Remove EMAIL1 and EMAIL2 from Users Main panel.';
		update EDITVIEWS_FIELDS
		   set DELETED          = 1
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = null
		 where EDIT_NAME        = 'Users.EditView'
		   and DATA_FIELD       in ('EMAIL1', 'EMAIL2')
		   and DELETED          = 0;
	end -- if;
/*
	if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.EditView' and FIELD_VALIDATOR_ID is not null and DELETED = 0) begin -- then
		print 'Users.EditView: Update validators';
--		exec dbo.spEDITVIEWS_FIELDS_InsValidator   'Users.EditView'          ,  4, 'Phone Number'                           , 'PHONE_WORK'                 , '.ERR_INVALID_PHONE_NUMBER';
--		exec dbo.spEDITVIEWS_FIELDS_InsValidator   'Users.EditView'          ,  6, 'Phone Number'                           , 'PHONE_MOBILE'               , '.ERR_INVALID_PHONE_NUMBER';
--		exec dbo.spEDITVIEWS_FIELDS_InsValidator   'Users.EditView'          ,  8, 'Phone Number'                           , 'PHONE_OTHER'                , '.ERR_INVALID_PHONE_NUMBER';
--		exec dbo.spEDITVIEWS_FIELDS_InsValidator   'Users.EditView'          , 10, 'Phone Number'                           , 'PHONE_FAX'                  , '.ERR_INVALID_PHONE_NUMBER';
--		exec dbo.spEDITVIEWS_FIELDS_InsValidator   'Users.EditView'          , 12, 'Phone Number'                           , 'PHONE_HOME'                 , '.ERR_INVALID_PHONE_NUMBER';
	end -- if;
*/
	-- 07/08/2010 Paul.  Move Users.EditAddress fields to Users.EditView
	-- 09/02/2012 Paul.  Merge layout so that there is only one table to render in the HTML5 Client. 
	if exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.EditAddress' and DELETED = 0) begin -- then
		exec dbo.spEDITVIEWS_FIELDS_MergeView      'Users.EditView', 'Users.EditAddress', 'Users.LBL_ADDRESS_INFORMATION', null;
	end -- if;
	-- 09/27/2013 Paul.  SMS messages need to be opt-in. 
	exec dbo.spEDITVIEWS_FIELDS_CnvBoundLst    'Users.EditView'          , 20, 'Users.LBL_SMS_OPT_IN'                   , 'SMS_OPT_IN'                 , 0, 1, 'dom_sms_opt_in'     , null, null;
end -- if;
GO

-- 02/01/2017 Paul.  Add support for Exchange using Username/Password. 
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.SmtpView' and DELETED = 0) begin -- then
	update EDITVIEWS_FIELDS
	   set DELETED           = 1
	     , DATE_MODIFIED     = getdate()
	     , DATE_MODIFIED_UTC = getutcdate()
	     , MODIFIED_USER_ID  = null
	 where EDIT_NAME = 'Users.EditMailOptions';
end -- if;

-- 08/05/2006 Paul.  Convert MailOptions to a dynamic view so that fields can be easily removed. 
-- 08/05/2006 Paul.  SplendidCRM does not support anything other than the build-in .NET mail.
-- 01/20/2008 Paul.  Add EMAIL1 so that users can be the target of a campaign. 
-- 07/08/2010 Paul.  Remove MAIL_FROMNAME and MAIL_FROMADDRESS.  Add MAIL_SMTPUSER and MAIL_SMTPPASS. 
-- 04/20/2016 Paul.  Restore MAIL_SMTPSERVER for separate email server. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.EditMailOptions';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.EditMailOptions' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Users.EditMailOptions';
	exec dbo.spEDITVIEWS_InsertOnly            'Users.EditMailOptions', 'Users', 'vwUSERS_Edit', '15%', '35%', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.EditMailOptions'   ,  1, 'Users.LBL_EMAIL'                        , 'EMAIL1'                     , 0, 9, 100, 50, null;
	exec dbo.spEDITVIEWS_FIELDS_InsValidator   'Users.EditMailOptions'   ,  1, 'Email Address'                          , 'EMAIL1'                     , '.ERR_INVALID_EMAIL_ADDRESS';
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.EditMailOptions'   ,  2, 'Users.LBL_OTHER_EMAIL'                  , 'EMAIL2'                     , 0, 9, 100, 50, null;
	exec dbo.spEDITVIEWS_FIELDS_InsValidator   'Users.EditMailOptions'   ,  2, 'Email Address'                          , 'EMAIL2'                     , '.ERR_INVALID_EMAIL_ADDRESS';
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Users.EditMailOptions'   ,  3, 'Users.LBL_MAIL_SENDTYPE'                , 'MAIL_SENDTYPE'              , 0, 9, 'user_mail_send_type', null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBlank       'Users.EditMailOptions'   ,  4, null;
end else begin
	if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.EditMailOptions' and DATA_FIELD = 'EMAIL1' and DELETED = 0) begin -- then
		print 'Add EMAIL1 to Users.';
		update EDITVIEWS_FIELDS
		   set FIELD_INDEX      = FIELD_INDEX + 2
		     , DATE_MODIFIED    = getdate()
		     , MODIFIED_USER_ID = null
		 where EDIT_NAME        = 'Users.EditMailOptions'
		   and FIELD_INDEX     >= 1
		   and DELETED          = 0;
    		-- 01/20/2008 Paul.  The reply info should not be required. 
		update EDITVIEWS_FIELDS
		   set UI_REQUIRED      = 0
		     , DATA_REQUIRED    = 0
		     , DATE_MODIFIED    = getdate()
		     , MODIFIED_USER_ID = null
		 where EDIT_NAME        = 'Users.EditMailOptions'
		   and DATA_FIELD      in ('MAIL_FROMNAME', 'MAIL_FROMADDRESS')
		   and UI_REQUIRED      = 1
		   and DELETED          = 0;
		exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.EditMailOptions'   ,  1, 'Users.LBL_EMAIL'                        , 'EMAIL1'                     , 0, 9, 100, 50, null;
		exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.EditMailOptions'   ,  2, 'Users.LBL_OTHER_EMAIL'                  , 'EMAIL2'                     , 0, 9, 100, 50, null;

	end -- if;
	if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.EditMailOptions' and FIELD_VALIDATOR_ID is not null and DELETED = 0) begin -- then
		print 'Users.EditMailOptions: Update validators';
		exec dbo.spEDITVIEWS_FIELDS_InsValidator   'Users.EditMailOptions'   ,  1, 'Email Address'                          , 'EMAIL1'                     , '.ERR_INVALID_EMAIL_ADDRESS';
		exec dbo.spEDITVIEWS_FIELDS_InsValidator   'Users.EditMailOptions'   ,  2, 'Email Address'                          , 'EMAIL2'                     , '.ERR_INVALID_EMAIL_ADDRESS';
	end -- if;
end -- if;
GO

-- 02/01/2017 Paul.  Add support for Exchange using Username/Password. 
-- 02/02/2017 Paul.  Server and Port are optional as server values will be used if blank. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.SmtpView';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.SmtpView' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Users.SmtpView';
	exec dbo.spEDITVIEWS_InsertOnly            'Users.SmtpView'  , 'Users', 'vwUSERS_Edit', '20%', '30%', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.SmtpView'  ,  1, 'Users.LBL_MAIL_SMTPSERVER'           , 'MAIL_SMTPSERVER'             , 0, 10,  50, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.SmtpView'  ,  2, 'Users.LBL_MAIL_SMTPPORT'             , 'MAIL_SMTPPORT'               , 0, 10,  10, 10, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'Users.SmtpView'  ,  3, 'Users.LBL_MAIL_SMTPAUTH_REQ'         , 'MAIL_SMTPAUTH_REQ'           , 0, 10, 'CheckBox'               , null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'Users.SmtpView'  ,  4, 'Users.LBL_MAIL_SMTPSSL'              , 'MAIL_SMTPSSL'                , 0, 10, 'CheckBox'               , null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.SmtpView'  ,  5, 'Users.LBL_MAIL_SMTPUSER'             , 'MAIL_SMTPUSER'               , 1, 10, 100, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsPassword    'Users.SmtpView'  ,  6, 'Users.LBL_MAIL_SMTPPASS'             , 'MAIL_SMTPPASS'               , 1, 10, 100, 25, null;
end -- if;
GO

-- 03/08/2017 Paul.  Need to protect against left-over fields. 
if exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.EditMailOptions' and DATA_FIELD in ('MAIL_SMTPSERVER', 'MAIL_SMTPPORT', 'MAIL_SMTPAUTH_REQ', 'MAIL_SMTPSSL') and DELETED = 0) begin -- then
	update EDITVIEWS_FIELDS
	   set DELETED           = 1
	     , DATE_MODIFIED     = getdate()
	     , DATE_MODIFIED_UTC = getutcdate()
	     , MODIFIED_USER_ID  = null
	 where EDIT_NAME         = 'Users.EditMailOptions'
	   and DATA_FIELD        in ('MAIL_SMTPSERVER', 'MAIL_SMTPPORT', 'MAIL_SMTPAUTH_REQ', 'MAIL_SMTPSSL')
	   and DELETED           = 0;
end -- if;
GO

-- 07/01/2020 Paul.  Users.EditView.Settings for the React Client. 
-- 12/16/2020 Paul.  DEFAULT_TEAM instead of DEFAULT_TEAM_ID. 
-- 11/11/2021 Paul.  PASSWORD field should be of type Password so that it is not displayed in plain text when entering. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.EditView.Settings';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.EditView.Settings' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Users.EditView.Settings';
	exec dbo.spEDITVIEWS_InsertOnly            'Users.EditView.Settings', 'Users'         , 'vwUSERS_Edit'         , '15%', '35%', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.EditView.Settings'      ,  0, 'Users.LBL_FIRST_NAME'               , 'FIRST_NAME'                              , 0, 0, 100, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.EditView.Settings'      ,  1, 'Users.LBL_USER_NAME'                , 'USER_NAME'                               , 1, 0, 100, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.EditView.Settings'      ,  2, 'Users.LBL_LAST_NAME'                , 'LAST_NAME'                               , 1, 0, 100, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsPassword    'Users.EditView.Settings'      ,  3, 'Users.LBL_PASSWORD'                 , 'PASSWORD'                                , 0, 0, 100, 35, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Users.EditView.Settings'      ,  4, 'Users.LBL_STATUS'                   , 'STATUS'                                  , 1, 0, 'user_status_dom'  , null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsModulePopup 'Users.EditView.Settings'      ,  5, 'Users.LBL_DEFAULT_TEAM'             , 'DEFAULT_TEAM'                            , 0, 0, 'DEFAULT_TEAM_NAME', 'Teams', null;
	exec dbo.spEDITVIEWS_FIELDS_InsControl     'Users.EditView.Settings'      ,  6, 'Users.LBL_PICTURE'                  , 'PICTURE'                                 , 0, 0, 'Picture'          , null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBlank       'Users.EditView.Settings'      ,  7, null;
	exec dbo.spEDITVIEWS_FIELDS_InsHeader      'Users.EditView.Settings'      ,  8, 'Users.LBL_USER_SETTINGS', 3;
	exec dbo.spEDITVIEWS_FIELDS_InsCheckBox    'Users.EditView.Settings'      ,  9, 'Users.LBL_ADMIN'                    , 'IS_ADMIN'                                , 0, 0, null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel       'Users.EditView.Settings'      , 10, null                                 , 'Users.LBL_ADMIN_TEXT'                    , null;
	exec dbo.spEDITVIEWS_FIELDS_InsCheckBox    'Users.EditView.Settings'      , 11, 'Users.LBL_ADMIN_DELEGATE'           , 'IS_ADMIN_DELEGATE'                       , 0, 0, null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel       'Users.EditView.Settings'      , 12, null                                 , 'Users.LBL_ADMIN_DELEGATE_TEXT'           , null;
	exec dbo.spEDITVIEWS_FIELDS_InsCheckBox    'Users.EditView.Settings'      , 13, 'Users.LBL_RECEIVE_NOTIFICATIONS'    , 'RECEIVE_NOTIFICATIONS'                   , 0, 0, null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel       'Users.EditView.Settings'      , 14, null                                 , 'Users.LBL_RECEIVE_NOTIFICATIONS_TEXT'    , null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Users.EditView.Settings'      , 15, 'Users.LBL_THEME'                    , 'THEME'                                   , 1, 0, 'Themes'     , null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel       'Users.EditView.Settings'      , 16, null                                 , 'Users.LBL_THEME_TEXT'                    , null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Users.EditView.Settings'      , 17, 'Users.LBL_LANGUAGE'                 , 'LANG'                                    , 1, 0, 'Languages'  , null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel       'Users.EditView.Settings'      , 18, null                                 , 'Users.LBL_LANGUAGE_TEXT'                 , null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Users.EditView.Settings'      , 19, 'Users.LBL_DATE_FORMAT'              , 'DATE_FORMAT'                             , 1, 0, 'DateFormats', null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel       'Users.EditView.Settings'      , 20, null                                 , 'Users.LBL_DATE_FORMAT_TEXT'              , null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Users.EditView.Settings'      , 21, 'Users.LBL_TIME_FORMAT'              , 'TIME_FORMAT'                             , 1, 0, 'TimeFormats', null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel       'Users.EditView.Settings'      , 22, null                                 , 'Users.LBL_TIME_FORMAT_TEXT'              , null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Users.EditView.Settings'      , 23, 'Users.LBL_TIMEZONE'                 , 'TIMEZONE_ID'                             , 1, 0, 'TimeZones'  , null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel       'Users.EditView.Settings'      , 24, null                                 , 'Users.LBL_TIMEZONE_TEXT'                 , null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Users.EditView.Settings'      , 25, 'Users.LBL_CURRENCY'                 , 'CURRENCY_ID'                             , 1, 0, 'Currencies' , null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel       'Users.EditView.Settings'      , 26, null                                 , 'Users.LBL_CURRENCY_TEXT'                 , null;
	exec dbo.spEDITVIEWS_FIELDS_InsCheckBox    'Users.EditView.Settings'      , 27, 'Users.LBL_SAVE_QUERY'               , 'SAVE_QUERY'                              , 0, 0, null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel       'Users.EditView.Settings'      , 28, null                                 , 'Users.LBL_SAVE_QUERY_TEXT'               , null;
	exec dbo.spEDITVIEWS_FIELDS_InsCheckBox    'Users.EditView.Settings'      , 29, 'Users.LBL_GROUP_TABS'               , 'GROUP_TABS'                              , 0, 0, null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel       'Users.EditView.Settings'      , 30, null                                 , 'Users.LBL_GROUP_TABS_TEXT'               , null;
	exec dbo.spEDITVIEWS_FIELDS_InsCheckBox    'Users.EditView.Settings'      , 31, 'Users.LBL_SUBPANEL_TABS'            , 'SUBPANEL_TABS'                           , 0, 0, null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel       'Users.EditView.Settings'      , 32, null                                 , 'Users.LBL_SUBPANEL_TABS_TEXT'            , null;
	exec dbo.spEDITVIEWS_FIELDS_InsCheckBox    'Users.EditView.Settings'      , 33, 'Users.LBL_SYSTEM_GENERATED_PASSWORD', 'LBL_SYSTEM_GENERATED_PASSWORD_TEXT'      , 0, 0, null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel       'Users.EditView.Settings'      , 34, null                                 , 'Users.LBL_SYSTEM_GENERATED_PASSWORD_TEXT', null;
end else begin
	-- 12/16/2020 Paul.  DEFAULT_TEAM instead of DEFAULT_TEAM_ID. 
	if exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.EditView.Settings' and DATA_FIELD = 'DEFAULT_TEAM_ID' and DELETED = 0) begin -- then
		update EDITVIEWS_FIELDS
		   set DATA_FIELD        = 'DEFAULT_TEAM'
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = null
		 where EDIT_NAME         = 'Users.EditView.Settings'
		   and DATA_FIELD        = 'DEFAULT_TEAM_ID'
		   and DELETED           = 0;
	end -- if;
	-- 11/11/2021 Paul.  PASSWORD field should be of type Password so that it is not displayed in plain text when entering. 
	if exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.EditView.Settings' and DATA_FIELD = 'PASSWORD' and FIELD_TYPE = 'TextBox' and DELETED = 0) begin -- then
		update EDITVIEWS_FIELDS
		   set FIELD_TYPE        = 'Password'
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = null
		 where EDIT_NAME         = 'Users.EditView.Settings'
		   and DATA_FIELD        = 'PASSWORD'
		   and FIELD_TYPE        = 'TextBox' 
		   and DELETED           = 0;
	end -- if;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.SearchAdvanced' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Users.SearchAdvanced';
	exec dbo.spEDITVIEWS_InsertOnly             'Users.SearchAdvanced'    , 'Users', 'vwUSERS_List', '15%', '35%', 2;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Users.SearchAdvanced'    ,  0, 'Users.LBL_FIRST_NAME'                   , 'FIRST_NAME'                                              , 0, null,  30, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsAutoComplete 'Users.SearchAdvanced'    ,  1, 'Users.LBL_USER_NAME'                    , 'USER_NAME'                                               , 0, null,  20, 25, 'Users', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Users.SearchAdvanced'    ,  2, 'Users.LBL_LAST_NAME'                    , 'LAST_NAME'                                               , 0, null,  30, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList    'Users.SearchAdvanced'    ,  3, 'Users.LBL_STATUS'                       , 'STATUS'                                                  , 0, null, 'user_status_dom'   , null, 6;
	exec dbo.spEDITVIEWS_FIELDS_InsControl      'Users.SearchAdvanced'    ,  4, 'Users.LBL_ADMIN'                        , 'IS_ADMIN'                                                , 0, null, 'CheckBox', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Users.SearchAdvanced'    ,  5, 'Users.LBL_TITLE'                        , 'TITLE'                                                   , 0, null,  50, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBlank        'Users.SearchAdvanced'    ,  6, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Users.SearchAdvanced'    ,  7, 'Users.LBL_DEPARTMENT'                   , 'DEPARTMENT'                                              , 0, null,  75, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Users.SearchAdvanced'    ,  8, 'Users.LBL_ANY_PHONE'                    , 'PHONE_HOME PHONE_MOBILE PHONE_WORK PHONE_OTHER PHONE_FAX', 0, null,  25, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Users.SearchAdvanced'    ,  9, 'Users.LBL_ADDRESS'                      , 'ADDRESS_STREET'                                          , 0, null, 150, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Users.SearchAdvanced'    , 10, 'Users.LBL_ANY_EMAIL'                    , 'EMAIL1 EMAIL2'                                           , 0, null, 100, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Users.SearchAdvanced'    , 11, 'Users.LBL_STATE'                        , 'ADDRESS_STATE'                                           , 0, null, 100, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Users.SearchAdvanced'    , 12, 'Users.LBL_CITY'                         , 'ADDRESS_CITY'                                            , 0, null, 100, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Users.SearchAdvanced'    , 13, 'Users.LBL_POSTAL_CODE'                  , 'ADDRESS_POSTALCODE'                                      , 0, null,  20, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList    'Users.SearchAdvanced'    , 14, 'Users.LBL_COUNTRY'                      , 'ADDRESS_COUNTRY'                                         , 0, null, 'countries_dom', null, 6;
end else begin
	exec dbo.spEDITVIEWS_FIELDS_CnvAutoComplete 'Users.SearchAdvanced'    ,  1, 'Users.LBL_USER_NAME'                    , 'USER_NAME'                                               , 0, null,  20, 25, 'Users', null;
end -- if;
GO

if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.SearchBasic' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Users.SearchBasic';
	exec dbo.spEDITVIEWS_InsertOnly             'Users.SearchBasic'       , 'Users', 'vwUSERS_List', '11%', '22%', 3;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Users.SearchBasic'       ,  0, 'Users.LBL_FIRST_NAME'                   , 'FIRST_NAME'                 , 0, null,  30, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Users.SearchBasic'       ,  1, 'Users.LBL_LAST_NAME'                    , 'LAST_NAME'                  , 0, null,  30, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Users.SearchBasic'       ,  2, 'Users.LBL_DEPARTMENT'                   , 'DEPARTMENT'                 , 0, null,  75, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList    'Users.SearchBasic'       ,  3, 'Users.LBL_STATUS'                       , 'STATUS'                     , 1, null, 'user_status_dom'   , null, null;
end else begin
	-- 01/17/2008 Paul.  ListBoxes that are not UI_REQUIRED default to querying for data that is NULL.  That is bad in his area. 
	if exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.SearchBasic' and DATA_FIELD = 'STATUS' and UI_REQUIRED = 0 and DELETED = 0) begin -- then
		update EDITVIEWS_FIELDS
		   set DATA_REQUIRED    = 1
		     , UI_REQUIRED      = 1
		     , DATE_MODIFIED    = getdate()
		     , MODIFIED_USER_ID = null
		 where EDIT_NAME        = 'Users.SearchBasic'
		   and DATA_FIELD       = 'STATUS'
		   and UI_REQUIRED      = 0
		   and DELETED          = 0;
	end -- if;
end -- if;
GO

-- 03/22/2010 Paul.  Allow searching one Email1. 
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.SearchPopup' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Users.SearchPopup';
	exec dbo.spEDITVIEWS_InsertOnly             'Users.SearchPopup'       , 'Users', 'vwUSERS_List', '15%', '35%', 2;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Users.SearchPopup'       ,  0, 'Users.LBL_FIRST_NAME'                   , 'FIRST_NAME'                 , 0, null,  30, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Users.SearchPopup'       ,  1, 'Users.LBL_LAST_NAME'                    , 'LAST_NAME'                  , 0, null,  30, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsAutoComplete 'Users.SearchPopup'       ,  2, 'Users.LBL_USER_NAME'                    , 'USER_NAME'                  , 0, null,  20, 25, 'Users', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Users.SearchPopup'       ,  3, 'Users.LBL_EMAIL1'                       , 'EMAIL1'                     , 0, null, 255, 25, null;
end else begin
	exec dbo.spEDITVIEWS_FIELDS_CnvAutoComplete 'Users.SearchPopup'       ,  2, 'Users.LBL_USER_NAME'                    , 'USER_NAME'                  , 0, null,  20, 25, 'Users', null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound        'Users.SearchPopup'       ,  3, 'Users.LBL_EMAIL1'                       , 'EMAIL1'                     , 0, null, 255, 25, null;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 10/27/2021 Paul.  Administration.AdminWizard layout is used as a collection of values and not for layout purposes. 
-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.UserWizard.Profile';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.UserWizard.Profile' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Users.UserWizard.Profile';
	exec dbo.spEDITVIEWS_InsertOnly            'Users.UserWizard.Profile', 'Configurator', 'vwCONFIG_Edit', '15%', '35%', 2;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.UserWizard.Profile',  0, 'Users.LBL_FIRST_NAME'                   , 'FIRST_NAME'             , 0, 1, 100, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.UserWizard.Profile',  1, 'Users.LBL_LAST_NAME'                    , 'LAST_NAME'              , 1, 1, 100, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.UserWizard.Profile',  2, 'Users.LBL_EMAIL'                        , 'EAMIL1'                 , 0, 1, 100, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBlank       'Users.UserWizard.Profile',  3, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.UserWizard.Profile',  4, 'Users.LBL_OFFICE_PHONE'                 , 'PHONE_WORK'             , 0, 1,  25, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.UserWizard.Profile',  5, 'Users.LBL_MOBILE_PHONE'                 , 'PHONE_MOBILE'           , 0, 1,  25, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsMultiLine   'Users.UserWizard.Profile',  6, 'Users.LBL_PRIMARY_ADDRESS'              , 'ADDRESS_STREET'         , 0, 1,   2, 30, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBlank       'Users.UserWizard.Profile',  7, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.UserWizard.Profile',  8, 'Users.LBL_CITY'                         , 'ADDRESS_CITY'           , 0, 1, 100, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.UserWizard.Profile', 10, 'Users.LBL_STATE'                        , 'ADDRESS_STATE'          , 0, 1, 100, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.UserWizard.Profile', 11, 'Users.LBL_POSTAL_CODE'                  , 'ADDRESS_POSTALCODE'     , 0, 1,  20, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.UserWizard.Profile', 12, 'Users.LBL_COUNTRY'                      , 'ADDRESS_COUNTRY'        , 0, 1,  20, 25, null;
end -- if;
GO

-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.UserWizard.Locale';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.UserWizard.Locale' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Users.UserWizard.Locale';
	exec dbo.spEDITVIEWS_InsertOnly            'Users.UserWizard.Locale' , 'Configurator', 'vwCONFIG_Edit', '15%', '35%', 2;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Users.UserWizard.Locale' ,  0, 'Users.LBL_LANGUAGE'                     , 'LANG'                   , 0, 2, 'Languages' , null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Users.UserWizard.Locale' ,  1, 'Users.LBL_CURRENCY'                     , 'CURRENCY_ID'            , 0, 2, 'Currencies', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Users.UserWizard.Locale' ,  2, 'Users.LBL_DATE_FORMAT'                  , 'DATE_FORMAT'            , 0, 2, 'DateFormat', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Users.UserWizard.Locale' ,  3, 'Users.LBL_TIME_FORMAT'                  , 'TIME_FORMAT'            , 0, 2, 'TimeForamt', null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBoundList   'Users.UserWizard.Locale' ,  4, 'Users.LBL_TIMEZONE'                     , 'TIMEZONE_ID'            , 0, 2, 'TimeZones' , null, null, null;
	exec dbo.spEDITVIEWS_FIELDS_InsBlank       'Users.UserWizard.Locale' ,  5, null;
end -- if;
GO

-- delete from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.UserWizard.Mail';
if not exists(select * from EDITVIEWS_FIELDS where EDIT_NAME = 'Users.UserWizard.Mail' and DELETED = 0) begin -- then
	print 'EDITVIEWS_FIELDS Users.UserWizard.Mail';
	exec dbo.spEDITVIEWS_InsertOnly            'Users.UserWizard.Mail', 'Configurator', 'vwCONFIG_Edit', '15%', '85%', 1;
	exec dbo.spEDITVIEWS_FIELDS_InsLabel       'Users.UserWizard.Mail'  ,  0, 'EmailMan.LBL_MAIL_SMTPSERVER'            , 'smtpserver'             , null;
	exec dbo.spEDITVIEWS_FIELDS_InsBound       'Users.UserWizard.Mail'  ,  1, 'Users.LBL_MAIL_SMTPUSER'                 , 'MAIL_SMTPUSER'          , 0, 10, 100, 25, null;
	exec dbo.spEDITVIEWS_FIELDS_InsPassword    'Users.UserWizard.Mail'  ,  2, 'Users.LBL_MAIL_SMTPPASS'                 , 'MAIL_SMTPPASS'          , 0, 10, 100, 25, null;
end -- if;
GO


set nocount off;
GO


set nocount on;
GO

-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'ACLRoles.ListView'
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'ACLRoles.ListView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS ACLRoles.ListView';
	exec dbo.spGRIDVIEWS_InsertOnly           'ACLRoles.ListView', 'ACLRoles', 'vwACL_ROLES_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'ACLRoles.ListView'          , 1, 'ACLRoles.LBL_NAME'                        , 'NAME'            , 'NAME'            , '20%', 'listViewTdLinkS1', 'ID', '~/Administration/ACLRoles/view.aspx?id={0}', null, 'ACLRoles', null;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 08/01/2016 Paul.  Roles needed for BPMN. 
-- 10/30/2020 Paul.  Add the DESCRIPTION for the React Client. 
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'ACLRoles.PopupView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS ACLRoles.PopupView';
	exec dbo.spGRIDVIEWS_InsertOnly           'ACLRoles.PopupView', 'ACLRoles', 'vwACL_ROLES';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'ACLRoles.PopupView'         ,  1, 'ACLRoles.LBL_LIST_NAME'                   , 'NAME'            , 'NAME'            , '49%', 'listViewTdLinkS1', 'ID NAME', 'SelectACLRole(''{0}'', ''{1}'');', null, 'ACLRoles', null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'ACLRoles.PopupView'         ,  2, 'Tags.LBL_LIST_DESCRIPTION'                , 'DESCRIPTION'     , 'DESCRIPTION'     , '49%';
end else begin
	if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'ACLRoles.PopupView' and DATA_FIELD = 'DESCRIPTION' and DELETED = 0) begin -- then
		update GRIDVIEWS_COLUMNS
		   set ITEMSTYLE_WIDTH    = '49%'
		     , DATE_MODIFIED      = getdate()
		     , MODIFIED_USER_ID   = null
		 where GRID_NAME          = 'ACLRoles.PopupView'
		   and DATA_FIELD         = 'NAME'
		   and ITEMSTYLE_WIDTH    = '100%'
		   and DELETED            = 0;
		exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'ACLRoles.PopupView'         ,  2, 'Tags.LBL_LIST_DESCRIPTION'                , 'DESCRIPTION'     , 'DESCRIPTION'     , '49%';
	end -- if;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 02/11/2021 Paul.  ACLRoles.Users for the React Client. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'ACLRoles.Users';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'ACLRoles.Users' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS ACLRoles.Users';
	exec dbo.spGRIDVIEWS_InsertOnly           'ACLRoles.Users', 'ACLRoles', 'vwACL_ROLES_USERS';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'ACLRoles.Users'           , 0, 'Users.LBL_LIST_NAME'                        , 'FULL_NAME'              , 'FULL_NAME'              , '22%', 'listViewTdLinkS1', 'USER_ID', '~/Users/view.aspx?id={0}', null, 'Users', null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'ACLRoles.Users'           , 1, 'Users.LBL_LIST_USER_NAME'                   , 'USER_NAME'              , 'USER_NAME'              , '22%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'ACLRoles.Users'           , 2, 'Users.LBL_LIST_EMAIL'                       , 'EMAIL1'                 , 'EMAIL1'                 , '22%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'ACLRoles.Users'           , 3, '.LBL_LIST_PHONE'                            , 'PHONE_WORK'             , 'PHONE_WORK'             , '22%';
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 08/20/2019 Paul.  React Client needs an audit layout. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'Audit.ListView';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Audit.ListView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Audit.ListView';
	exec dbo.spGRIDVIEWS_InsertOnly           'Audit.ListView', 'Audit', 'vwAUDIT_VIEW';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Audit.ListView', 0, 'Audit.LBL_FIELD_NAME'            , 'FIELD_NAME'          , 'FIELD_NAME'     , '5%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Audit.ListView', 1, 'Audit.LBL_OLD_NAME'              , 'BEFORE_VALUE'        , 'BEFORE_VALUE'   , '40%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Audit.ListView', 2, 'Audit.LBL_NEW_VALUE'             , 'AFTER_VALUE'         , 'AFTER_VALUE'    , '40%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Audit.ListView', 3, 'Audit.LBL_CHANGED_BY'            , 'CREATED_BY'          , 'CREATED_BY'     , '5%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Audit.ListView', 4, 'Audit.LBL_LIST_DATE'             , 'DATE_CREATED'        , 'DATE_CREATED'   , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_UpdateStyle  null, 'Audit.ListView', 0, null, null, null, null, 0;
	exec dbo.spGRIDVIEWS_COLUMNS_UpdateStyle  null, 'Audit.ListView', 4, null, null, null, null, 0;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 08/28/2019 Paul.  React Client needs an audit layout. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'Audit.PersonalInfo';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Audit.PersonalInfo' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Audit.PersonalInfo';
	exec dbo.spGRIDVIEWS_InsertOnly           'Audit.PersonalInfo', 'Audit', 'vwAUDIT_VIEW';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Audit.PersonalInfo', 0, 'Audit.LBL_LIST_FIELD'        , 'FIELD_NAME'          , 'FIELD_NAME'     , '20%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Audit.PersonalInfo', 1, 'Audit.LBL_LIST_VALUE'        , 'VALUE'               , 'VALUE'          , '45%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Audit.PersonalInfo', 2, 'Audit.LBL_LIST_LEAD_SOURCE'  , 'LEAD_SOURCE'         , 'LEAD_SOURCE'    , '20%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Audit.PersonalInfo', 3, 'Audit.LBL_LIST_LAST_UPDATED' , 'LAST_UPDATED'        , 'LAST_UPDATED'   , '15%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_UpdateStyle  null, 'Audit.PersonalInfo', 3, null, null, null, null, 0;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 01/20/2010 Paul.  Add ability to search the new Audit Events table. 
-- 03/28/2019 Paul.  Move AuditEvents.ListView to default file for Community edition. 
-- 03/28/2019 Paul.  Convert to DateTime field. 
-- 02/24/2021 Paul.  The React client needs a way to determine the default sort, besides NAME asc. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'AuditEvents.ListView';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'AuditEvents.ListView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS AuditEvents.ListView';
	exec dbo.spGRIDVIEWS_InsertOnly           'AuditEvents.ListView', 'AuditEvents', 'vwAUDIT_EVENTS', 'DATE_MODIFIED', 'desc';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'AuditEvents.ListView'       , 0, 'Users.LBL_LIST_NAME'                      , 'FULL_NAME'            , 'FULL_NAME'       , '15%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'AuditEvents.ListView'       , 1, 'Users.LBL_LIST_USER_NAME'                 , 'USER_NAME'            , 'USER_NAME'       , '15%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'AuditEvents.ListView'       , 2, '.LBL_LIST_DATE_MODIFIED'                  , 'DATE_MODIFIED'        , 'DATE_MODIFIED'   , '15%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'AuditEvents.ListView'       , 4, 'Audit.LBL_LIST_AUDIT_ACTION'              , 'AUDIT_ACTION'         , 'AUDIT_ACTION'    , '10%', 'audit_action_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'AuditEvents.ListView'       , 5, 'Audit.LBL_LIST_MODULE_NAME'               , 'MODULE_NAME'          , 'MODULE_NAME'     , '15%', 'Modules';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'AuditEvents.ListView'       , 6, 'Audit.LBL_LIST_AUDIT_ITEM'                , 'AUDIT_PARENT_ID'      , 'AUDIT_PARENT_ID' , '30%', 'listViewTdLinkS1', 'MODULE_FOLDER AUDIT_PARENT_ID', '~/{0}/view.aspx?id={1}', null, null, null;
end else begin
	-- 03/28/2019 Paul.  Convert to DateTime field. 
	if exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'AuditEvents.ListView' and DATA_FIELD = 'DATE_MODIFIED' and DATA_FORMAT is null and DELETED = 0) begin -- then
		update GRIDVIEWS_COLUMNS
		   set DELETED           = 1
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		 where GRID_NAME         = 'AuditEvents.ListView'
		   and DATA_FIELD        = 'DATE_MODIFIED'
		   and DATA_FORMAT       is null
		   and DELETED           = 0;
		exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'AuditEvents.ListView'       , 2, '.LBL_LIST_DATE_MODIFIED'                  , 'DATE_MODIFIED'        , 'DATE_MODIFIED'   , '15%', 'DateTime';
	end -- if;
	-- 02/24/2021 Paul.  The React client needs a way to determine the default sort, besides NAME asc. 
	if exists(select * from GRIDVIEWS where NAME = 'AuditEvents.ListView' and SORT_FIELD is null and DELETED = 0) begin -- then
		exec dbo.spGRIDVIEWS_UpdateSort null, 'AuditEvents.ListView', 'DATE_MODIFIED', 'desc';
	end -- if;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'Config.ListView';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Config.ListView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Config.ListView';
	exec dbo.spGRIDVIEWS_InsertOnly           'Config.ListView', 'Config', 'vwCONFIG_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'Config.ListView'        ,  2, 'Config.LBL_LIST_NAME'                , 'NAME'            , 'NAME'            , '35%', 'listViewTdLinkS1', 'ID', '~/Administration/Config/view.aspx?id={0}', null, 'Config', null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Config.ListView'        ,  3, 'Config.LBL_LIST_CATEGORY'            , 'CATEGORY'        , 'CATEGORY'        , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Config.ListView'        ,  4, 'Config.LBL_LIST_VALUE'               , 'VALUE'           , 'VALUE'           , '50%';
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 09/15/2019 Paul.  The React Client sees True/False and the ASP.NET client sees 1/0.  Need a list that supports both, simultaneously. 
-- 05/01/2016 Paul.  We are going to prepopulate the currency table so that we can be sure to get the supported ISO values correct. 
-- 09/15/2019 Paul.  The React Client sees True/False and the ASP.NET client sees 1/0.  Need a list that supports both, simultaneously. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'Currencies.ListView'
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Currencies.ListView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Currencies.ListView';
	exec dbo.spGRIDVIEWS_InsertOnly             'Currencies.ListView', 'Currencies', 'vwCURRENCIES_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink   'Currencies.ListView'  , 2, 'Currencies.LBL_LIST_NAME'                   , 'NAME'             , 'NAME'             , '30%', 'listViewTdLinkS1', 'ID', '~/Administration/Currencies/view.aspx?id={0}', null, 'Currencies', null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList   'Currencies.ListView'  , 3, 'Currencies.LBL_LIST_STATUS'                 , 'STATUS'           , 'STATUS'           , '10%', 'currency_status_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound       'Currencies.ListView'  , 4, 'Currencies.LBL_LIST_ISO4217'                , 'ISO4217'          , 'ISO4217'          , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound       'Currencies.ListView'  , 5, 'Currencies.LBL_LIST_SYMBOL'                 , 'SYMBOL'           , 'SYMBOL'           , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound       'Currencies.ListView'  , 6, 'Currencies.LBL_LIST_CONVERSION_RATE'        , 'CONVERSION_RATE'  , 'CONVERSION_RATE'  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList   'Currencies.ListView'  , 7, 'Currencies.LBL_LIST_DEFAULT_CURRENCY'       , 'IS_DEFAULT'       , 'IS_DEFAULT'       , '10%', 'yesno_list';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList   'Currencies.ListView'  , 8, 'Currencies.LBL_LIST_BASE_CURRENCY'          , 'IS_BASE'          , 'IS_BASE'          , '10%', 'yesno_list';
	-- 05/01/2016 Paul.  Format is not working, but keep anyway. 
	update GRIDVIEWS_COLUMNS
	   set COLUMN_TYPE        = 'BoundColumn'
	     , DATA_FORMAT        = '{0:F3}'
	 where GRID_NAME          = 'Currencies.ListView'
	   and DATA_FIELD         = 'CONVERSION_RATE'
	   and DELETED            = 0;
end else begin
	-- 09/15/2019 Paul.  The React Client sees True/False and the ASP.NET client sees 1/0.  Need a list that supports both, simultaneously. 
	if exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Currencies.ListView' and LIST_NAME = 'yesno_dom' and DELETED = 0) begin -- then
		update GRIDVIEWS_COLUMNS
		   set LIST_NAME          = 'yesno_list'
		     , DATE_MODIFIED      = getdate()
		     , DATE_MODIFIED_UTC  = getutcdate()
		 where GRID_NAME          = 'Currencies.ListView'
		   and LIST_NAME          = 'yesno_dom'
		   and DELETED            = 0;
	end -- if;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'DynamicButtons.ListView';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'DynamicButtons.ListView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS DynamicButtons.ListView';
	exec dbo.spGRIDVIEWS_InsertOnly           'DynamicButtons.ListView', 'DynamicButtons', 'vwDYNAMIC_BUTTONS';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'DynamicButtons.ListView',  2, 'DynamicButtons.LBL_LIST_CONTROL_TEXT', 'CONTROL_TEXT'    , 'CONTROL_TEXT'    , '19%', 'listViewTdLinkS1', 'ID', '~/Administration/DynamicButtons/view.aspx?id={0}', null, 'DynamicButtons', null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'DynamicButtons.ListView',  3, 'DynamicButtons.LBL_LIST_MODULE_NAME' , 'MODULE_NAME'     , 'MODULE_NAME'     , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'DynamicButtons.ListView',  4, 'DynamicButtons.LBL_LIST_CONTROL_TYPE', 'CONTROL_TYPE'    , 'CONTROL_TYPE'    , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'DynamicButtons.ListView',  5, 'DynamicButtons.LBL_LIST_COMMAND_NAME', 'COMMAND_NAME'    , 'COMMAND_NAME'    , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'DynamicButtons.ListView',  6, 'DynamicButtons.LBL_LIST_TEXT_FIELD'  , 'TEXT_FIELD'      , 'TEXT_FIELD'      , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'DynamicButtons.ListView',  7, 'DynamicButtons.LBL_LIST_URL_FORMAT'  , 'URL_FORMAT'      , 'URL_FORMAT'      , '30%';
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 04/11/2011 Paul.  Add support for Dynamic Layout popups. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'DynamicLayout.DetailView.PopupView';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'DynamicLayout.DetailView.PopupView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS DynamicLayout.DetailView.PopupView';
	exec dbo.spGRIDVIEWS_InsertOnly           'DynamicLayout.DetailView.PopupView', 'DynamicLayout', 'vwDETAILVIEWS_FIELDS';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'DynamicLayout.DetailView.PopupView', 1, 'DynamicLayout.LBL_LIST_DETAIL_NAME' , 'DETAIL_NAME'     , 'DETAIL_NAME'     , '20%', 'listViewTdLinkS1', 'ID DETAIL_NAME', 'SelectLayoutField(''{0}'', ''{1}'');', null, null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'DynamicLayout.DetailView.PopupView', 2, 'DynamicLayout.LBL_LIST_FIELD_INDEX' , 'FIELD_INDEX'     , 'FIELD_INDEX'     , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'DynamicLayout.DetailView.PopupView', 3, 'DynamicLayout.LBL_LIST_FIELD_TYPE'  , 'FIELD_TYPE'      , 'FIELD_TYPE'      , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'DynamicLayout.DetailView.PopupView', 4, 'DynamicLayout.LBL_LIST_DATA_FIELD'  , 'DATA_FIELD'      , 'DATA_FIELD'      , '20%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'DynamicLayout.DetailView.PopupView', 5, 'DynamicLayout.LBL_LIST_DATA_LABEL'  , 'DATA_LABEL'      , 'DATA_LABEL'      , '25%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'DynamicLayout.DetailView.PopupView', 6, 'DynamicLayout.LBL_LIST_LIST_NAME'   , 'LIST_NAME'       , 'LIST_NAME'       , '10%';
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'DynamicLayout.EditView.PopupView';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'DynamicLayout.EditView.PopupView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS DynamicLayout.EditView.PopupView';
	exec dbo.spGRIDVIEWS_InsertOnly           'DynamicLayout.EditView.PopupView'  , 'DynamicLayout', 'vwEDITVIEWS_FIELDS';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'DynamicLayout.EditView.PopupView'  , 1, 'DynamicLayout.LBL_LIST_EDIT_NAME'   , 'EDIT_NAME'       , 'EDIT_NAME'       , '25%', 'listViewTdLinkS1', 'ID EDIT_NAME', 'SelectLayoutField(''{0}'', ''{1}'');', null, null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'DynamicLayout.EditView.PopupView'  , 2, 'DynamicLayout.LBL_LIST_FIELD_INDEX' , 'FIELD_INDEX'     , 'FIELD_INDEX'     , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'DynamicLayout.EditView.PopupView'  , 3, 'DynamicLayout.LBL_LIST_FIELD_TYPE'  , 'FIELD_TYPE'      , 'FIELD_TYPE'      , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'DynamicLayout.EditView.PopupView'  , 4, 'DynamicLayout.LBL_LIST_DATA_FIELD'  , 'DATA_FIELD'      , 'DATA_FIELD'      , '20%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'DynamicLayout.EditView.PopupView'  , 5, 'DynamicLayout.LBL_LIST_DATA_LABEL'  , 'DATA_LABEL'      , 'DATA_LABEL'      , '25%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'DynamicLayout.EditView.PopupView'  , 6, 'DynamicLayout.LBL_LIST_LIST_NAME'   , 'LIST_NAME'       , 'LIST_NAME'       , '10%';
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'DynamicLayout.GridView.PopupView';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'DynamicLayout.GridView.PopupView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS DynamicLayout.GridView.PopupView';
	exec dbo.spGRIDVIEWS_InsertOnly           'DynamicLayout.GridView.PopupView'  , 'DynamicLayout', 'vwGRIDVIEWS_COLUMNS';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'DynamicLayout.GridView.PopupView'  , 1, 'DynamicLayout.LBL_LIST_GRID_NAME'   , 'GRID_NAME'       , 'GRID_NAME'       , '25%', 'listViewTdLinkS1', 'ID GRID_NAME', 'SelectLayoutField(''{0}'', ''{1}'');', null, null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'DynamicLayout.GridView.PopupView'  , 2, 'DynamicLayout.LBL_LIST_COLUMN_INDEX', 'COLUMN_INDEX'    , 'COLUMN_INDEX'    , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'DynamicLayout.GridView.PopupView'  , 3, 'DynamicLayout.LBL_LIST_COLUMN_TYPE' , 'COLUMN_TYPE'     , 'COLUMN_TYPE'     , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'DynamicLayout.GridView.PopupView'  , 4, 'DynamicLayout.LBL_LIST_DATA_FORMAT' , 'DATA_FORMAT'     , 'DATA_FORMAT'     , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'DynamicLayout.GridView.PopupView'  , 5, 'DynamicLayout.LBL_LIST_DATA_FIELD'  , 'DATA_FIELD'      , 'DATA_FIELD'      , '20%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'DynamicLayout.GridView.PopupView'  , 6, 'DynamicLayout.LBL_LIST_HEADER_TEXT' , 'HEADER_TEXT'     , 'HEADER_TEXT'     , '25%';
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 01/29/2021 Paul.  Add EditCustomFields to React client. 
-- 02/22/2021 Paul.  Make use of new procedure spGRIDVIEWS_COLUMNS_UpdateFormat.
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'EditCustomFields.ListView';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'EditCustomFields.ListView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS EditCustomFields.ListView';
	exec dbo.spGRIDVIEWS_InsertOnly           'EditCustomFields.ListView', 'EditCustomFields', 'vwFIELDS_META_DATA_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'EditCustomFields.ListView',  2, 'EditCustomFields.COLUMN_TITLE_NAME'           , 'NAME'            , 'NAME'           , '22%', 'listViewTdLinkS1', 'ID', '~/Administration/EditCustomFields/edit.aspx?id={0}', null, 'EditCustomFields', null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'EditCustomFields.ListView',  3, 'EditCustomFields.COLUMN_TITLE_LABEL'          , 'LABEL'           , 'LABEL'          , '22%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'EditCustomFields.ListView',  4, 'EditCustomFields.COLUMN_TITLE_DATA_TYPE'      , 'DATA_TYPE'       , 'DATA_TYPE'      , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'EditCustomFields.ListView',  5, 'EditCustomFields.COLUMN_TITLE_MAX_SIZE'       , 'MAX_SIZE'        , 'MAX_SIZE'       , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'EditCustomFields.ListView',  6, 'EditCustomFields.COLUMN_TITLE_REQUIRED_OPTION', 'REQUIRED_OPTION' , 'REQUIRED_OPTION', '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'EditCustomFields.ListView',  7, 'EditCustomFields.COLUMN_TITLE_DEFAULT_VALUE'  , 'DEFAULT_VALUE'   , 'DEFAULT_VALUE'  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'EditCustomFields.ListView',  8, 'EditCustomFields.COLUMN_TITLE_DROPDOWN'       , 'EXT1'            , 'EXT1'           , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_UpdateFormat null, 'EditCustomFields.ListView',  'MAX_SIZE', '{0:N0}';
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 09/12/2009 Paul.  Allow editing of Field Validators. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'FieldValidators.ListView' and DELETED = 0;
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'FieldValidators.ListView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS FieldValidators.ListView';
	exec dbo.spGRIDVIEWS_InsertOnly           'FieldValidators.ListView', 'FieldValidators', 'vwFIELD_VALIDATORS';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'FieldValidators.ListView'   , 2, 'FieldValidators.LBL_LIST_NAME'             , 'NAME'            , 'NAME'            , '50%', 'listViewTdLinkS1', 'ID', '~/Administration/FieldValidators/view.aspx?id={0}', null, 'FieldValidators', null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'FieldValidators.ListView'   , 3, 'FieldValidators.LBL_LIST_VALIDATION_TYPE'  , 'VALIDATION_TYPE' , 'VALIDATION_TYPE' , '50%';
end else begin
	exec dbo.spGRIDVIEWS_COLUMNS_ReserveIndex null, 'FieldValidators.ListView', 2;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 05/17/2020 Paul.  The React Client needs access to Import Maps. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'Import.SavedView';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Import.SavedView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Import.SavedView';
	exec dbo.spGRIDVIEWS_InsertOnly           'Import.SavedView', 'Import', 'vwIMPORT_MAPS_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'Import.SavedView'         , 0, 'Import.LBL_LIST_NAME'                       , 'NAME'                   , 'NAME'                         , '95%', 'listViewTdLinkS1', 'ID'   , '~/Import/default.aspx?id={0}', null, null, null;
end -- if;
GO

-- 02/11/2021 Paul.  ACLRoles.Users for the React Client. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'ACLRoles.Users';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'ACLRoles.Users' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS ACLRoles.Users';
	exec dbo.spGRIDVIEWS_InsertOnly           'ACLRoles.Users', 'ACLRoles', 'vwACL_ROLES_USERS';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'ACLRoles.Users'           , 0, 'Users.LBL_LIST_NAME'                        , 'FULL_NAME'              , 'FULL_NAME'              , '22%', 'listViewTdLinkS1', 'USER_ID', '~/Users/view.aspx?id={0}', null, 'Users', null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'ACLRoles.Users'           , 1, 'Users.LBL_LIST_USER_NAME'                   , 'USER_NAME'              , 'USER_NAME'              , '22%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'ACLRoles.Users'           , 2, 'Users.LBL_LIST_EMAIL'                       , 'EMAIL1'                 , 'EMAIL1'                 , '22%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'ACLRoles.Users'           , 3, '.LBL_LIST_PHONE'                            , 'PHONE_WORK'             , 'PHONE_WORK'             , '22%';
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 09/15/2019 Paul.  The React Client sees True/False and the ASP.NET client sees 1/0.  Need a list that supports both, simultaneously. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'Languages.ListView';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Languages.ListView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Languages.ListView';
	exec dbo.spGRIDVIEWS_InsertOnly           'Languages.ListView', 'Languages', 'vwLANGUAGES';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'Languages.ListView'     ,  2, 'Terminology.LBL_LIST_LANG'           , 'NAME'            , 'NAME'            , '20%', 'listViewTdLinkS1', 'ID', '~/Administration/Languages/view.aspx?id={0}', null, 'Languages', null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Languages.ListView'     ,  3, 'Terminology.LBL_LIST_NAME_NAME'      , 'DISPLAY_NAME'    , 'DISPLAY_NAME'    , '30%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Languages.ListView'     ,  4, 'Terminology.LBL_LIST_DISPLAY_NAME'   , 'NATIVE_NAME'     , 'NATIVE_NAME'     , '30%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Languages.ListView'     ,  5, 'Administration.LNK_ENABLED'          , 'ACTIVE'          , 'ACTIVE'          , '5%', 'yesno_list';
end else begin
	-- 09/15/2019 Paul.  The React Client sees True/False and the ASP.NET client sees 1/0.  Need a list that supports both, simultaneously. 
	if exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Languages.ListView' and LIST_NAME = 'yesno_dom' and DELETED = 0) begin -- then
		update GRIDVIEWS_COLUMNS
		   set LIST_NAME          = 'yesno_list'
		     , DATE_MODIFIED      = getdate()
		     , DATE_MODIFIED_UTC  = getutcdate()
		 where GRID_NAME          = 'Languages.ListView'
		   and LIST_NAME          = 'yesno_dom'
		   and DELETED            = 0;
	end -- if;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'ModuleBuilder.PopupView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS ModuleBuilder.PopupView';
	exec dbo.spGRIDVIEWS_InsertOnly           'ModuleBuilder.PopupView', 'ModuleBuilder', 'vwMODULES';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'ModuleBuilder.PopupView',  1, 'Modules.LBL_LIST_MODULE_NAME', 'MODULE_NAME', 'MODULE_NAME', '99%', 'listViewTdLinkS1', 'MODULE_NAME MODULE_NAME', 'SelectModule(''{0}'', ''{1}'');', null, null, null;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 09/09/2009 Paul.  Allow direct editing of the module table. 
-- 06/22/2013 Paul.  Add edit link and move to front. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'Modules.ListView' and DELETED = 0;
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Modules.ListView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Modules.ListView';
	exec dbo.spGRIDVIEWS_InsertOnly           'Modules.ListView', 'Modules', 'vwMODULES';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'Modules.ListView'           ,  0, 'Modules.LBL_LIST_MODULE_NAME'             , 'MODULE_NAME'     , 'MODULE_NAME'     , '30%', 'listViewTdLinkS1', 'ID', '~/Administration/Modules/view.aspx?id={0}', null, 'Modules', null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Modules.ListView'           ,  1, 'Modules.LBL_LIST_TABLE_NAME'              , 'TABLE_NAME'      , 'TABLE_NAME'      , '15%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Modules.ListView'           ,  2, 'Modules.LBL_LIST_RELATIVE_PATH'           , 'RELATIVE_PATH'   , 'RELATIVE_PATH'   , '15%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Modules.ListView'           ,  3, 'Modules.LBL_LIST_MODULE_ENABLED'          , 'MODULE_ENABLED'  , 'MODULE_ENABLED'  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Modules.ListView'           ,  4, 'Modules.LBL_LIST_CUSTOM_PAGING'           , 'CUSTOM_PAGING'   , 'CUSTOM_PAGING'   , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Modules.ListView'           ,  5, 'Modules.LBL_LIST_TAB_ORDER'               , 'TAB_ORDER'       , 'TAB_ORDER'       , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Modules.ListView'           ,  6, 'Modules.LBL_LIST_IS_ADMIN'                , 'IS_ADMIN'        , 'IS_ADMIN'        , '10%';
end else begin
	if exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Modules.ListView' and DATA_FIELD = 'MODULE_NAME' and COLUMN_INDEX = 0 and DELETED = 0) begin -- then
		print 'GRIDVIEWS_COLUMNS Modules.ListView: Move edit link to front. ';
		update GRIDVIEWS_COLUMNS
		   set COLUMN_INDEX      = COLUMN_INDEX + 1
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		 where GRID_NAME         = 'Modules.ListView'
		   and DELETED           = 0;
	end -- if;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'Schedulers.ListView';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Schedulers.ListView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Schedulers.ListView';
	exec dbo.spGRIDVIEWS_InsertOnly           'Schedulers.ListView', 'Schedulers', 'vwSCHEDULERS';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'Schedulers.ListView'    ,  2, 'Schedulers.LBL_SCHEDULER'            , 'NAME'            , 'NAME'            , '35%', 'listViewTdLinkS1', 'ID', '~/Administration/Schedulers/view.aspx?id={0}', null, 'Schedulers', null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Schedulers.ListView'    ,  3, 'Schedulers.LBL_INTERVAL'             , 'JOB_INTERVAL'    , 'JOB_INTERVAL'    , '15%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Schedulers.ListView'    ,  4, 'Schedulers.LBL_DATE_TIME_START'      , 'DATE_TIME_START' , 'DATE_TIME_START' , '15%', 'Date';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Schedulers.ListView'    ,  5, 'Schedulers.LBL_DATE_TIME_END'        , 'DATE_TIME_END'   , 'DATE_TIME_END'   , '15%', 'Date';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Schedulers.ListView'    ,  6, 'Schedulers.LBL_LIST_STATUS'          , 'STATUS'          , 'STATUS'          , '5%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Schedulers.ListView'    ,  7, 'Schedulers.LBL_LAST_RUN'             , 'LAST_RUN'        , 'LAST_RUN'        , '15%', 'DateTime';
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 02/20/2021 Paul.  HyperLink on DISPLAY_NAME. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'Shortcuts.ListView';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Shortcuts.ListView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Shortcuts.ListView';
	exec dbo.spGRIDVIEWS_InsertOnly           'Shortcuts.ListView', 'Shortcuts', 'vwCONFIG_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Shortcuts.ListView'     ,  2, 'Shortcuts.LBL_LIST_MODULE_NAME'      , 'MODULE_NAME'     , 'MODULE_NAME'     , '25%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'Shortcuts.ListView'     ,  3, 'Shortcuts.LBL_LIST_DISPLAY_NAME'     , 'DISPLAY_NAME'    , 'DISPLAY_NAME'    , '30%', 'listViewTdLinkS1', 'ID', '~/Administration/Shortcuts/edit.aspx?id={0}', null, 'Shortcuts', null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Shortcuts.ListView'     ,  4, 'Shortcuts.LBL_LIST_RELATIVE_PATH'    , 'RELATIVE_PATH'   , 'RELATIVE_PATH'   , '30%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Shortcuts.ListView'     ,  5, 'Shortcuts.LBL_LIST_SHORTCUT_ORDER'   , 'SHORTCUT_ORDER'  , 'SHORTCUT_ORDER'  , '10%';
end else begin
	-- 02/20/2021 Paul.  HyperLink on DISPLAY_NAME. 
	if exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Shortcuts.ListView' and DATA_FIELD = 'DISPLAY_NAME' and COLUMN_TYPE = 'BoundColumn' and DELETED = 0) begin -- then
		update GRIDVIEWS_COLUMNS
		   set COLUMN_TYPE        = 'TemplateColumn'
		     , ITEMSTYLE_CSSCLASS = 'listViewTdLinkS1'
		     , DATA_FORMAT        = 'HyperLink'
		     , URL_FIELD          = 'ID'
		     , URL_FORMAT         = '~/Administration/Shortcuts/edit.aspx?id={0}'
		     , URL_MODULE         = 'Shortcuts'
		     , DATE_MODIFIED      = getdate()
		     , DATE_MODIFIED_UTC  = getutcdate()
		 where GRID_NAME          = 'Shortcuts.ListView'
		    and DATA_FIELD        = 'DISPLAY_NAME'
		   and COLUMN_TYPE        = 'BoundColumn'
		   and DELETED            = 0;
		update GRIDVIEWS_COLUMNS
		   set COLUMN_TYPE        = 'BoundColumn'
		     , ITEMSTYLE_CSSCLASS = null
		     , DATA_FORMAT        = null
		     , URL_FIELD          = null
		     , URL_FORMAT         = null
		     , URL_MODULE         = null
		     , DATE_MODIFIED      = getdate()
		     , DATE_MODIFIED_UTC  = getutcdate()
		 where GRID_NAME          = 'Shortcuts.ListView'
		    and DATA_FIELD        = 'MODULE_NAME'
		   and COLUMN_TYPE        = 'TemplateColumn'
		   and DELETED            = 0;
	end -- if;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 02/24/2021 Paul.  The React client needs a way to determine the default sort, besides NAME asc. 
-- 08/18/2021 Paul.  Line number should not have any decimal places. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'SystemLog.ListView';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'SystemLog.ListView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS SystemLog.ListView';
	exec dbo.spGRIDVIEWS_InsertOnly           'SystemLog.ListView', 'SystemLog', 'vwSYSTEM_LOG', 'DATE_ENTERED', 'desc';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'SystemLog.ListView'     ,  0, '.LBL_LIST_DATE_ENTERED'              , 'DATE_ENTERED'    , 'DATE_ENTERED'    , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'SystemLog.ListView'     ,  1, 'SystemLog.LBL_LIST_USER_NAME'        , 'USER_NAME'       , 'USER_NAME'       , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'SystemLog.ListView'     ,  2, 'SystemLog.LBL_LIST_ERROR_TYPE'       , 'ERROR_TYPE'      , 'ERROR_TYPE'      , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'SystemLog.ListView'     ,  3, 'SystemLog.LBL_LIST_MESSAGE'          , 'MESSAGE'         , 'MESSAGE'         , '20%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'SystemLog.ListView'     ,  4, 'SystemLog.LBL_LIST_FILE_NAME'        , 'FILE_NAME'       , 'FILE_NAME'       , '15%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'SystemLog.ListView'     ,  5, 'SystemLog.LBL_LIST_METHOD'           , 'METHOD'          , 'METHOD'          , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'SystemLog.ListView'     ,  6, 'SystemLog.LBL_LIST_LINE_NUMBER'      , 'LINE_NUMBER'     , 'LINE_NUMBER'     , '5%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'SystemLog.ListView'     ,  7, 'SystemLog.LBL_LIST_RELATIVE_PATH'    , 'RELATIVE_PATH'   , 'RELATIVE_PATH'   , '5%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'SystemLog.ListView'     ,  8, 'SystemLog.LBL_LIST_PARAMETERS'       , 'PARAMETERS'      , 'PARAMETERS'      , '15%';
	exec dbo.spGRIDVIEWS_COLUMNS_UpdateStyle  null, 'SystemLog.ListView'    , 0, null, null, null, null, 0;
	exec dbo.spGRIDVIEWS_COLUMNS_UpdateFormat null, 'SystemLog.ListView', 'LINE_NUMBER', '{0:N}';
end else begin
	-- 02/24/2021 Paul.  The React client needs a way to determine the default sort, besides NAME asc. 
	if exists(select * from GRIDVIEWS where NAME = 'SystemLog.ListView' and SORT_FIELD is null and DELETED = 0) begin -- then
		exec dbo.spGRIDVIEWS_UpdateSort null, 'SystemLog.ListView', 'DATE_ENTERED', 'desc';
	end -- if;
	-- 08/18/2021 Paul.  Line number should not have any decimal places. 
	if exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'SystemLog.ListView' and DATA_FIELD = 'LINE_NUMBER' and DATA_FORMAT is null and DELETED = 0) begin -- then
		exec dbo.spGRIDVIEWS_COLUMNS_UpdateFormat null, 'AzureSystemLog.ListView', 'LINE_NUMBER', '{0:N}';
	end -- if;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 10/30/2020 Paul.  The React Client needs a layout for SystemSyncLog. 
-- 02/24/2021 Paul.  The React client needs a way to determine the default sort, besides NAME asc. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'SystemSyncLog.ListView';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'SystemSyncLog.ListView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS SystemSyncLog.ListView';
	exec dbo.spGRIDVIEWS_InsertOnly           'SystemSyncLog.ListView', 'SystemSyncLog', 'vwSYSTEM_SYNC_LOG', 'DATE_ENTERED', 'desc';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'SystemSyncLog.ListView'     ,  0, '.LBL_LIST_DATE_ENTERED'              , 'DATE_ENTERED'    , 'DATE_ENTERED'    , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'SystemSyncLog.ListView'     ,  2, 'SystemLog.LBL_LIST_ERROR_TYPE'       , 'ERROR_TYPE'      , 'ERROR_TYPE'      , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'SystemSyncLog.ListView'     ,  3, 'SystemLog.LBL_LIST_MESSAGE'          , 'MESSAGE'         , 'MESSAGE'         , '40%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'SystemSyncLog.ListView'     ,  4, 'SystemLog.LBL_LIST_FILE_NAME'        , 'FILE_NAME'       , 'FILE_NAME'       , '25%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'SystemSyncLog.ListView'     ,  5, 'SystemLog.LBL_LIST_METHOD'           , 'METHOD'          , 'METHOD'          , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'SystemSyncLog.ListView'     ,  6, 'SystemLog.LBL_LIST_LINE_NUMBER'      , 'LINE_NUMBER'     , 'LINE_NUMBER'     , '5%';
	exec dbo.spGRIDVIEWS_COLUMNS_UpdateStyle  null, 'SystemSyncLog.ListView'    , 0, null, null, null, null, 0;
end else begin
	-- 02/24/2021 Paul.  The React client needs a way to determine the default sort, besides NAME asc. 
	if exists(select * from GRIDVIEWS where NAME = 'SystemSyncLog.ListView' and SORT_FIELD is null and DELETED = 0) begin -- then
		exec dbo.spGRIDVIEWS_UpdateSort null, 'SystemSyncLog.ListView', 'DATE_ENTERED', 'desc';
	end -- if;
end -- if;
GO

set nocount off;
GO


-- 04/12/2016 Paul.  Add parent team and custom fields. 
-- 04/28/2016 Paul.  Rename parent to PARENT_ID. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'Teams.ListView'
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Teams.ListView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Teams.ListView';
	exec dbo.spGRIDVIEWS_InsertOnly           'Teams.ListView', 'Teams', 'vwTEAMS_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'Teams.ListView'             , 1, 'Teams.LBL_LIST_NAME'                      , 'NAME'            , 'NAME'            , '30%', 'listViewTdLinkS1', 'ID', '~/Administration/Teams/view.aspx?id={0}', null, 'Teams', null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Teams.ListView'             , 2, 'Teams.LBL_LIST_DESCRIPTION'               , 'DESCRIPTION'     , 'DESCRIPTION'     , '45%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Teams.ListView'             , 3, 'Teams.LBL_LIST_PARENT_NAME'               , 'PARENT_NAME'     , 'PARENT_NAME'     , '20%';
end else begin
	exec dbo.spGRIDVIEWS_COLUMNS_ReserveIndex null, 'Teams.ListView', 1;
	-- 04/12/2016 Paul.  Add parent team and custom fields. 
	-- 04/28/2016 Paul.  Rename parent to PARENT_ID. 
	if exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Teams.ListView' and DATA_FIELD = 'PARENT_TEAM_NAME' and DELETED = 0) begin -- then
		update GRIDVIEWS_COLUMNS
		   set DATA_FIELD       = 'PARENT_NAME'
		     , DATE_MODIFIED    = getdate()
		     , DATE_MODIFIED_UTC= getutcdate()
		     , MODIFIED_USER_ID = null
		 where GRID_NAME        = 'Teams.ListView'
		   and DATA_FIELD       = 'PARENT_TEAM_NAME'
		   and DELETED          = 0;
	end -- if;
	-- 02/22/2017 Paul.  Fix filter. 
	if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Teams.ListView' and DATA_FIELD = 'PARENT_NAME' and DELETED = 0) begin -- then
		exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Teams.ListView'             , 3, 'Teams.LBL_LIST_PARENT_NAME'               , 'PARENT_NAME'     , 'PARENT_NAME'     , '20%';
	end -- if;
end -- if;
GO

-- 10/14/2020 Paul.  Teams.Users for the React Client. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'Teams.Users';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Teams.Users' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Teams.Users';
	exec dbo.spGRIDVIEWS_InsertOnly           'Teams.Users', 'Users', 'vwTEAM_MEMBERSHIPS_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'Teams.Users'              , 0, 'Users.LBL_LIST_NAME'                        , 'FULL_NAME'              , 'FULL_NAME'              , '18%', 'listViewTdLinkS1', 'USER_ID', '~/Users/view.aspx?id={0}', null, 'Users', null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Teams.Users'              , 1, 'Users.LBL_LIST_USER_NAME'                   , 'USER_NAME'              , 'USER_NAME'              , '18%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Teams.Users'              , 2, 'Teams.LBL_LIST_MEMBERSHIP'                  , 'EXPLICIT_ASSIGN'        , 'EXPLICIT_ASSIGN'        , '18%', 'team_explicit_assign';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Teams.Users'              , 3, 'Users.LBL_LIST_EMAIL'                       , 'EMAIL1'                 , 'EMAIL1'                 , '18%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Teams.Users'              , 4, '.LBL_LIST_PHONE'                            , 'PHONE_WORK'             , 'PHONE_WORK'             , '15%';
end -- if;
GO

set nocount on;
GO

-- 09/11/2021 Paul.  React client. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'Terminology.LanguagePacks';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Terminology.LanguagePacks' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Terminology.LanguagePacks';
	exec dbo.spGRIDVIEWS_InsertOnly           'Terminology.LanguagePacks', 'Terminology', 'vwTERMINOLOGY', 'Name', 'asc';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'Terminology.LanguagePacks'        ,  0, 'Terminology.LBL_LIST_IMPORT_NAME'          , 'Name'                     , 'Name'                , '25%', 'listViewTdLinkS1', 'Name', '~/Administration/Terminology/import.aspx?Name={0}', null, null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Terminology.LanguagePacks'        ,  1, 'Terminology.LBL_LIST_IMPORT_DATE'          , 'Date'                     , 'Date'                , '15%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Terminology.LanguagePacks'        ,  2, 'Terminology.LBL_LIST_IMPORT_DESCRIPTION'   , 'Description'              , 'Description'         , '60%';
end -- if;
GO

-- 09/11/2021 Paul.  React client. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'Terminology.SplendidLanguagePacks';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Terminology.SplendidLanguagePacks' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Terminology.SplendidLanguagePacks';
	exec dbo.spGRIDVIEWS_InsertOnly           'Terminology.SplendidLanguagePacks', 'Terminology', 'vwTERMINOLOGY', 'Name', 'asc';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'Terminology.SplendidLanguagePacks',  0, 'Terminology.LBL_LIST_IMPORT_NAME'         , 'Name'                     , 'Name'                , '25%', 'listViewTdLinkS1', 'Name', '~/Administration/Terminology/import.aspx?Name={0}', null, null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Terminology.SplendidLanguagePacks',  1, 'Terminology.LBL_LIST_IMPORT_DATE'         , 'Date'                     , 'Date'                , '15%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Terminology.SplendidLanguagePacks',  2, 'Terminology.LBL_LIST_IMPORT_DESCRIPTION'  , 'Description'              , 'Description'         , '60%';
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 03/29/2012 Paul.  Add Rules Wizard support to Terminology module. 
-- 12/05/2012 Paul.  LBL_LIST_NAME is getting confused with the list version, so change to LBL_NAME. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'Terminology.ListView' and DELETED = 0;
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Terminology.ListView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Terminology.ListView';
	exec dbo.spGRIDVIEWS_InsertOnly           'Terminology.ListView', 'Terminology', 'vwTERMINOLOGY';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Terminology.ListView'       ,  1, 'Terminology.LBL_LIST_MODULE_NAME'         , 'MODULE_NAME'     , 'MODULE_NAME'     , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'Terminology.ListView'       ,  2, 'Terminology.LBL_NAME'                     , 'NAME'            , 'NAME'            , '22%', 'listViewTdLinkS1', 'ID', '~/Administration/Terminology/view.aspx?id={0}', null, 'Terminology', null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Terminology.ListView'       ,  3, 'Terminology.LBL_LIST_LANG'                , 'LANG'            , 'LANG'            , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Terminology.ListView'       ,  4, 'Terminology.LBL_LIST_LIST_NAME'           , 'LIST_NAME'       , 'LIST_NAME'       , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Terminology.ListView'       ,  5, 'Terminology.LBL_LIST_LIST_ORDER'          , 'LIST_ORDER'      , 'LIST_ORDER'      , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Terminology.ListView'       ,  6, 'Terminology.LBL_LIST_DISPLAY_NAME'        , 'DISPLAY_NAME'    , 'DISPLAY_NAME'    , '30%';
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 10/17/2020 Paul.  The React Client needs to select from a list of terms. 
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Terminology.PopupView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Terminology.PopupView';
	exec dbo.spGRIDVIEWS_InsertOnly           'Terminology.PopupView', 'Terminology', 'vwTERMINOLOGY_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'Terminology.PopupView'       , 1, 'Terminology.LBL_LIST_NAME'              , 'NAME'            , 'NAME'            , '40%', 'listViewTdLinkS1', 'NAME NAME', 'SelectTerm(''{0}'', ''{1}'');', null, null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Terminology.PopupView'       , 2, 'Terminology.LBL_LIST_DISPLAY_NAME'      , 'DISPLAY_NAME'    , 'DISPLAY_NAME'    , '40%', 'countries_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Terminology.PopupView'       , 3, 'Terminology.LBL_LIST_LIST_ORDER'        , 'LIST_ORDER'      , 'LIST_ORDER'      , '15%';
end -- if;
GO


set nocount off;
GO


set nocount on;
GO

-- 09/14/2021 Paul.  Add Undelete support to React Client. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'Undelete.ListView';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Undelete.ListView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Undelete.ListView';
	exec dbo.spGRIDVIEWS_InsertOnly           'Undelete.ListView', 'Undelete', 'vwCONFIG', 'AUDIT_DATE', 'desc';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Undelete.ListView'   ,  1, 'Undelete.LBL_LIST_NAME'                , 'NAME'            , 'NAME'       , '70%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Undelete.ListView'   ,  2, 'Undelete.LBL_LIST_AUDIT_TOKEN'         , 'AUDIT_TOKEN'     , 'AUDIT_TOKEN', '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Undelete.ListView'   ,  3, 'Undelete.LBL_LIST_MODIFIED_BY'         , 'MODIFIED_BY'     , 'MODIFIED_BY', '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Undelete.ListView'   ,  4, 'Undelete.LBL_LIST_AUDIT_DATE'          , 'AUDIT_DATE'      , 'AUDIT_DATE' , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_UpdateStyle  null, 'Undelete.ListView', 2, null, null, null, null, 0;
	exec dbo.spGRIDVIEWS_COLUMNS_UpdateStyle  null, 'Undelete.ListView', 3, null, null, null, null, 0;
	exec dbo.spGRIDVIEWS_COLUMNS_UpdateStyle  null, 'Undelete.ListView', 4, null, null, null, null, 0;
end -- if;
GO


set nocount off;
GO


set nocount on;
GO

-- 04/02/2021 Paul.  Add support for UserLogins. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'UserLogins.Export';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'UserLogins.Export' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS UserLogins.Export';
	exec dbo.spGRIDVIEWS_InsertOnly           'UserLogins.Export', 'Users', 'vwUSERS_LOGINS', 'DATE_MODIFIED', 'desc';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'UserLogins.Export', 0, 'Users.LBL_LIST_NAME'                  , 'NAME'            , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'UserLogins.Export', 1, 'Users.LBL_LIST_USER_NAME'             , 'USER_NAME'       , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'UserLogins.Export', 2, 'Users.LBL_LIST_LOGIN_DATE'            , 'LOGIN_DATE'      , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'UserLogins.Export', 3, 'Users.LBL_LIST_LOGOUT_DATE'           , 'LOGOUT_DATE'     , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'UserLogins.Export', 4, 'Users.LBL_LIST_LOGIN_STATUS'          , 'LOGIN_STATUS'    , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'UserLogins.Export', 5, 'Users.LBL_LIST_LOGIN_TYPE'            , 'LOGIN_TYPE'      , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'UserLogins.Export', 6, 'Users.LBL_LIST_REMOTE_HOST'           , 'REMOTE_HOST'     , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'UserLogins.Export', 7, 'Users.LBL_LIST_TARGET'                , 'TARGET'          , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'UserLogins.Export', 8, 'Users.LBL_LIST_ASPNET_SESSIONID'      , 'ASPNET_SESSIONID', null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'UserLogins.Export', 9, 'Users.LBL_LIST_IS_ADMIN'              , 'IS_ADMIN'        , null, null;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 03/27/2019 Paul.  Same as UserLogins.ListView, 
-- 02/24/2021 Paul.  The React client needs a way to determine the default sort, besides NAME asc. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'UserLogins.ListView';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'UserLogins.ListView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS UserLogins.ListView';
	exec dbo.spGRIDVIEWS_InsertOnly           'UserLogins.ListView', 'Users', 'vwUSERS_LOGINS', 'DATE_MODIFIED', 'desc';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'UserLogins.ListView'    , 0, 'Users.LBL_LIST_NAME'                  , 'FULL_NAME'       , 'FULL_NAME'       , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'UserLogins.ListView'    , 1, 'Users.LBL_LIST_USER_NAME'             , 'USER_NAME'       , 'USER_NAME'       , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'UserLogins.ListView'    , 2, 'Users.LBL_LIST_LOGIN_DATE'            , 'LOGIN_DATE'      , 'LOGIN_DATE'      , '15%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'UserLogins.ListView'    , 3, 'Users.LBL_LIST_LOGOUT_DATE'           , 'LOGOUT_DATE'     , 'LOGOUT_DATE'     , '15%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'UserLogins.ListView'    , 4, 'Users.LBL_LIST_LOGIN_STATUS'          , 'LOGIN_STATUS'    , 'LOGIN_STATUS'    , '10%', 'login_status_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'UserLogins.ListView'    , 5, 'Users.LBL_LIST_LOGIN_TYPE'            , 'LOGIN_TYPE'      , 'LOGIN_TYPE'      , '10%', 'login_type_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'UserLogins.ListView'    , 6, 'Users.LBL_LIST_REMOTE_HOST'           , 'REMOTE_HOST'     , 'REMOTE_HOST'     , '5%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'UserLogins.ListView'    , 7, 'Users.LBL_LIST_TARGET'                , 'TARGET'          , 'TARGET'          , '5%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'UserLogins.ListView'    , 8, 'Users.LBL_LIST_ASPNET_SESSIONID'      , 'ASPNET_SESSIONID', 'ASPNET_SESSIONID', '10%';
end else begin
	-- 02/24/2021 Paul.  The React client needs a way to determine the default sort, besides NAME asc. 
	if exists(select * from GRIDVIEWS where NAME = 'UserLogins.ListView' and SORT_FIELD is null and DELETED = 0) begin -- then
		exec dbo.spGRIDVIEWS_UpdateSort null, 'UserLogins.ListView', 'DATE_MODIFIED', 'desc';
	end -- if;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 09/12/2019 Paul.  Users.ACLRoles for the React Client. 
-- 11/10/2020 Paul.  Use new CheckBox type. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'Users.ACLRoles'
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Users.ACLRoles' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Users.ACLRoles';
	exec dbo.spGRIDVIEWS_InsertOnly           'Users.ACLRoles', 'ACLRoles', 'vwUSERS_ACL_ROLES';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.ACLRoles'           , 1, 'ACLRoles.LBL_LIST_NAME'                     , 'ROLE_NAME'              , 'ROLE_NAME'                     , '30%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.ACLRoles'           , 2, 'ACLRoles.LBL_LIST_DESCRIPTION'              , 'DESCRIPTION'            , 'DESCRIPTION'                   , '50%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Users.ACLRoles'           , 3, 'ACLRoles.LBL_IS_PRIMARY_ROLE'               , 'IS_PRIMARY_ROLE'        , 'IS_PRIMARY_ROLE'               , '10%', 'CheckBox';
end else begin
	if exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Users.ACLRoles' and DATA_FIELD = 'IS_PRIMARY_ROLE' and COLUMN_TYPE = 'BoundColumn' and DELETED = 0) begin -- then
		update GRIDVIEWS_COLUMNS
		  set COLUMN_TYPE       = 'TemplateColumn'
		    , DATA_FORMAT       = 'CheckBox'
		    , DATE_MODIFIED     = getdate()
		    , DATE_MODIFIED_UTC = getutcdate()
		 where GRID_NAME        = 'Users.ACLRoles'
		   and DATA_FIELD       = 'IS_PRIMARY_ROLE'
		   and COLUMN_TYPE      = 'BoundColumn'
		   and DELETED          = 0;
	end -- if;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Users.Export' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Users.Export';
	exec dbo.spGRIDVIEWS_InsertOnly           'Users.Export'            , 'Users', 'vwUSERS_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            ,  1, 'Users.LBL_LIST_FULL_NAME'                     , 'FULL_NAME'                  , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            ,  2, 'Users.LBL_LIST_NAME'                          , 'NAME'                       , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            ,  3, 'Users.LBL_LIST_USER_NAME'                     , 'USER_NAME'                  , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            ,  4, 'Users.LBL_LIST_FIRST_NAME'                    , 'FIRST_NAME'                 , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            ,  5, 'Users.LBL_LIST_LAST_NAME'                     , 'LAST_NAME'                  , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            ,  6, 'Users.LBL_LIST_REPORTS_TO_NAME'               , 'REPORTS_TO_NAME'            , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            ,  7, 'Users.LBL_LIST_IS_ADMIN'                      , 'IS_ADMIN'                   , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            ,  8, 'Users.LBL_LIST_PORTAL_ONLY'                   , 'PORTAL_ONLY'                , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            ,  9, 'Users.LBL_LIST_RECEIVE_NOTIFICATIONS'         , 'RECEIVE_NOTIFICATIONS'      , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 10, 'Users.LBL_LIST_TITLE'                         , 'TITLE'                      , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 11, 'Users.LBL_LIST_DEPARTMENT'                    , 'DEPARTMENT'                 , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 12, 'Users.LBL_LIST_PHONE_HOME'                    , 'PHONE_HOME'                 , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 13, 'Users.LBL_LIST_PHONE_MOBILE'                  , 'PHONE_MOBILE'               , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 14, 'Users.LBL_LIST_PHONE_WORK'                    , 'PHONE_WORK'                 , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 15, 'Users.LBL_LIST_PHONE_OTHER'                   , 'PHONE_OTHER'                , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 16, 'Users.LBL_LIST_PHONE_FAX'                     , 'PHONE_FAX'                  , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 17, 'Users.LBL_LIST_EMAIL1'                        , 'EMAIL1'                     , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 18, 'Users.LBL_LIST_EMAIL2'                        , 'EMAIL2'                     , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 19, 'Users.LBL_LIST_STATUS'                        , 'STATUS'                     , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 20, 'Users.LBL_LIST_EMPLOYEE_STATUS'               , 'EMPLOYEE_STATUS'            , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 21, 'Users.LBL_LIST_MESSENGER_TYPE'                , 'MESSENGER_TYPE'             , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 22, 'Users.LBL_LIST_ADDRESS_STREET'                , 'ADDRESS_STREET'             , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 23, 'Users.LBL_LIST_ADDRESS_CITY'                  , 'ADDRESS_CITY'               , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 24, 'Users.LBL_LIST_ADDRESS_STATE'                 , 'ADDRESS_STATE'              , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 25, 'Users.LBL_LIST_ADDRESS_COUNTRY'               , 'ADDRESS_COUNTRY'            , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 26, 'Users.LBL_LIST_ADDRESS_POSTALCODE'            , 'ADDRESS_POSTALCODE'         , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 27, 'Users.LBL_LIST_IS_GROUP'                      , 'IS_GROUP'                   , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 28, '.LBL_LIST_DATE_ENTERED'                       , 'DATE_ENTERED'               , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 29, '.LBL_LIST_DATE_MODIFIED'                      , 'DATE_MODIFIED'              , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 30, 'Users.LBL_LIST_DESCRIPTION'                   , 'DESCRIPTION'                , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 31, 'Users.LBL_LIST_USER_PREFERENCES'              , 'USER_PREFERENCES'           , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 32, 'Users.LBL_LIST_DEFAULT_TEAM_NAME'             , 'DEFAULT_TEAM_NAME'          , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 33, 'Users.LBL_LIST_IS_ADMIN_DELEGATE'             , 'IS_ADMIN_DELEGATE'          , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 34, '.LBL_LIST_CREATED_BY_NAME'                    , 'CREATED_BY_NAME'            , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 35, '.LBL_LIST_MODIFIED_BY_NAME'                   , 'MODIFIED_BY_NAME'           , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 36, 'Users.LBL_LIST_GOOGLEAPPS_SYNC_CONTACTS'      , 'GOOGLEAPPS_SYNC_CONTACTS'   , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 37, 'Users.LBL_LIST_GOOGLEAPPS_SYNC_CALENDAR'      , 'GOOGLEAPPS_SYNC_CALENDAR'   , null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Export'            , 38, 'Users.LBL_LIST_GOOGLEAPPS_USERNAME'           , 'GOOGLEAPPS_USERNAME'        , null, null;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 10/21/2020 Paul.  Convert USER_NAME into a hyperlink. 
-- 10/21/2020 Paul.  Correct URL to navigate to Administration pages. 
-- 11/10/2020 Paul.  Can't use ~/Administration/Users as this layout is used on React and ASP.NET, but React is easier to re-route. 
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Users.ListView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Users.ListView';
	exec dbo.spGRIDVIEWS_InsertOnly           'Users.ListView'         , 'Users'         , 'vwUSERS_List'         ;
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'Users.ListView'             , 1, 'Users.LBL_LIST_NAME'                      , 'FULL_NAME'       , 'FULL_NAME'       , '20%', 'listViewTdLinkS1', 'ID'         , '~/Users/view.aspx?id={0}', null, 'Users', null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'Users.ListView'             , 2, 'Users.LBL_LIST_USER_NAME'                 , 'USER_NAME'       , 'USER_NAME'       , '20%', 'listViewTdLinkS1', 'ID'         , '~/Users/view.aspx?id={0}', null, 'Users', null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.ListView'             , 3, 'Users.LBL_LIST_DEPARTMENT'                , 'DEPARTMENT'      , 'DEPARTMENT'      , '20%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'Users.ListView'             , 4, 'Users.LBL_LIST_EMAIL'                     , 'EMAIL1'          , 'EMAIL1'          , '20%', 'listViewTdLinkS1', 'ID'         , '~/Emails/edit.aspx?PARENT_ID={0}', null, null, null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.ListView'             , 5, 'Users.LBL_LIST_PRIMARY_PHONE'             , 'PHONE_WORK'      , 'PHONE_WORK'      , '15%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.ListView'             , 6, 'Users.LBL_LIST_STATUS'                    , 'STATUS'          , 'STATUS'          , '10%';
end else begin
	exec dbo.spGRIDVIEWS_COLUMNS_ReserveIndex null, 'Users.ListView', 1;
	-- 11/29/2010 Paul.  Create Email record instead of using mailto. 
	if exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Users.ListView' and DATA_FIELD = 'EMAIL1' and URL_FORMAT = 'mailto:{0}' and DELETED = 0) begin -- then
		print 'GRIDVIEWS_COLUMNS Users.ListView: Create Email record instead of using mailto. ';
		update GRIDVIEWS_COLUMNS
		   set URL_FIELD        = 'ID'
		     , URL_FORMAT        = '~/Emails/edit.aspx?PARENT_ID={0}'
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		 where GRID_NAME         = 'Users.ListView'
		   and DATA_FIELD        = 'EMAIL1'
		   and URL_FORMAT        = 'mailto:{0}'
		   and DELETED           = 0;
	end -- if;
	-- 10/21/2020 Paul.  Convert USER_NAME into a hyperlink. 
	if exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Users.ListView' and DATA_FIELD = 'USER_NAME' and COLUMN_TYPE = 'BoundColumn' and DELETED = 0) begin -- then
		print 'GRIDVIEWS_COLUMNS Users.ListView: Convert USER_NAME into a hyperlink.  ';
		update GRIDVIEWS_COLUMNS
		   set DELETED           = 1
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		 where GRID_NAME         = 'Users.ListView'
		   and DATA_FIELD        = 'USER_NAME'
		   and COLUMN_TYPE       = 'BoundColumn'
		   and DELETED           = 0;
		exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'Users.ListView'             , 2, 'Users.LBL_LIST_USER_NAME'                 , 'USER_NAME'       , 'USER_NAME'       , '20%', 'listViewTdLinkS1', 'ID'         , '~/Users/view.aspx?id={0}', null, 'Users', null;
	end -- if;
	-- 10/21/2020 Paul.  Correct URL to navigate to Administration pages. 
	-- 11/10/2020 Paul.  Can't use ~/Administration/Users as this layout is used on React and ASP.NET, but React is easier to re-route. 
	if exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Users.ListView' and URL_FORMAT = '~/Administration/Users/view.aspx?id={0}' and DELETED = 0) begin -- then
		print 'GRIDVIEWS_COLUMNS Users.ListView: Correct URL to navigate to Administration pages. ';
		update GRIDVIEWS_COLUMNS
		   set URL_FORMAT        = '~/Users/view.aspx?id={0}'
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		 where GRID_NAME         = 'Users.ListView'
		   and URL_FORMAT        = '~/Administration/Users/view.aspx?id={0}'
		   and DELETED           = 0;
	end -- if;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 01/05/2021 Paul.  Include IS_ADMIN for the React Client. 
-- 01/05/2021 Paul.  Don't wrap name and dates. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'Users.Logins';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Users.Logins' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Users.Logins';
	exec dbo.spGRIDVIEWS_InsertOnly           'Users.Logins', 'Users', 'vwUSERS_LOGINS';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Logins'                    , 0, 'Users.LBL_LIST_NAME'                      , 'FULL_NAME'              , 'FULL_NAME'              , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Logins'                    , 1, 'Users.LBL_LIST_USER_NAME'                 , 'USER_NAME'              , 'USER_NAME'              , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Logins'                    , 2, 'Users.LBL_LIST_LOGIN_DATE'                , 'LOGIN_DATE'             , 'LOGIN_DATE'             , '15%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Logins'                    , 3, 'Users.LBL_LIST_LOGOUT_DATE'               , 'LOGOUT_DATE'            , 'LOGOUT_DATE'            , '15%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Users.Logins'                    , 4, 'Users.LBL_LIST_LOGIN_STATUS'              , 'LOGIN_STATUS'           , 'LOGIN_STATUS'           , '10%', 'login_status_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Users.Logins'                    , 5, 'Users.LBL_LIST_LOGIN_TYPE'                , 'LOGIN_TYPE'             , 'LOGIN_TYPE'             , '10%', 'login_type_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Logins'                    , 6, 'Users.LBL_LIST_REMOTE_HOST'               , 'REMOTE_HOST'            , 'REMOTE_HOST'            , '5%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Logins'                    , 7, 'Users.LBL_LIST_TARGET'                    , 'TARGET'                 , 'TARGET'                 , '5%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Logins'                    , 8, 'Users.LBL_LIST_ASPNET_SESSIONID'          , 'ASPNET_SESSIONID'       , 'ASPNET_SESSIONID'       , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Users.Logins'                    , 9, 'Users.LBL_LIST_ADMIN'                     , 'IS_ADMIN'               , 'IS_ADMIN'               , '5%', 'CheckBox';
	exec dbo.spGRIDVIEWS_COLUMNS_UpdateStyle  null, 'Users.Logins'              , 0, null, null, null, null, 0;
	exec dbo.spGRIDVIEWS_COLUMNS_UpdateStyle  null, 'Users.Logins'              , 2, null, null, null, null, 0;
	exec dbo.spGRIDVIEWS_COLUMNS_UpdateStyle  null, 'Users.Logins'              , 3, null, null, null, null, 0;
end else begin
	-- 01/05/2021 Paul.  Include IS_ADMIN for the React Client. 
	if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Users.Logins' and DATA_FIELD = 'IS_ADMIN' and COLUMN_TYPE = 'BoundColumn' and DELETED = 0) begin -- then
		exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Users.Logins'                    , 9, 'Users.LBL_LIST_ADMIN'                     , 'IS_ADMIN'               , 'IS_ADMIN'               , '5%', 'CheckBox';
		exec dbo.spGRIDVIEWS_COLUMNS_UpdateStyle  null, 'Users.Logins'              , 0, null, null, null, null, 0;
		exec dbo.spGRIDVIEWS_COLUMNS_UpdateStyle  null, 'Users.Logins'              , 2, null, null, null, null, 0;
		exec dbo.spGRIDVIEWS_COLUMNS_UpdateStyle  null, 'Users.Logins'              , 3, null, null, null, null, 0;
	end -- if;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 07/11/2018 Paul.  Increase index to add space for checkboxes. 
-- select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Users.LoginView' order by COLUMN_INDEX
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'Users.LoginView';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Users.LoginView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Users.LoginView';
	exec dbo.spGRIDVIEWS_InsertOnly           'Users.LoginView', 'Users', 'vwUSERS_LOGINS';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.LoginView'            , 1, 'Users.LBL_LIST_NAME'                      , 'FULL_NAME'       , 'FULL_NAME'       , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.LoginView'            , 2, 'Users.LBL_LIST_USER_NAME'                 , 'USER_NAME'       , 'USER_NAME'       , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.LoginView'            , 3, 'Users.LBL_LIST_LOGIN_DATE'                , 'LOGIN_DATE'      , 'LOGIN_DATE'      , '15%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.LoginView'            , 4, 'Users.LBL_LIST_LOGOUT_DATE'               , 'LOGOUT_DATE'     , 'LOGOUT_DATE'     , '15%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Users.LoginView'            , 5, 'Users.LBL_LIST_LOGIN_STATUS'              , 'LOGIN_STATUS'    , 'LOGIN_STATUS'    , '10%', 'login_status_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Users.LoginView'            , 6, 'Users.LBL_LIST_LOGIN_TYPE'                , 'LOGIN_TYPE'      , 'LOGIN_TYPE'      , '10%', 'login_type_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.LoginView'            , 7, 'Users.LBL_LIST_REMOTE_HOST'               , 'REMOTE_HOST'     , 'REMOTE_HOST'     , '5%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.LoginView'            , 8, 'Users.LBL_LIST_TARGET'                    , 'TARGET'          , 'TARGET'          , '5%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.LoginView'            , 9, 'Users.LBL_LIST_ASPNET_SESSIONID'          , 'ASPNET_SESSIONID', 'ASPNET_SESSIONID', '10%';
end else begin
	-- 07/11/2018 Paul.  Increase index to add space for checkboxes. 
	if exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Users.LoginView' and COLUMN_INDEX = 0 and DELETED = 0) begin -- then
		print 'GRIDVIEWS_COLUMNS Users.LoginView: Shift indexes to make space for checkboxes.';
		update GRIDVIEWS_COLUMNS
		   set COLUMN_INDEX      = COLUMN_INDEX + 1
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		 where GRID_NAME         = 'Users.LoginView'
		   and DELETED           = 0;
	end -- if;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 12/02/2009 Paul.  Correct Users.PopupView URL_FIELD.
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'Users.PopupView';
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Users.PopupView' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Users.PopupView';
	exec dbo.spGRIDVIEWS_InsertOnly           'Users.PopupView', 'Users', 'vwUSERS_ASSIGNED_TO_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'Users.PopupView'             , 1, 'Users.LBL_LIST_NAME'                      , 'FULL_NAME'       , 'FULL_NAME'       , '40%', 'listViewTdLinkS1', 'ID USER_NAME', 'SelectUser(''{0}'', ''{1}'');', null, 'Users', null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'Users.PopupView'             , 2, 'Users.LBL_LIST_USER_NAME'                 , 'USER_NAME'       , 'USER_NAME'       , '40%', 'listViewTdLinkS1', 'ID USER_NAME', 'SelectUser(''{0}'', ''{1}'');', null, 'Users', null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.PopupView'             , 3, 'Users.LBL_LIST_DEPARTMENT'                , 'DEPARTMENT'      , 'DEPARTMENT'      , '20%';
end else begin
	if exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Users.PopupView' and URL_FIELD = 'ID FULL_NAME' and DELETED = 0) begin -- then
		print 'Correct Users.PopupView URL_FIELD.';
		update GRIDVIEWS_COLUMNS
		   set URL_FIELD          = 'ID USER_NAME'
		     , DATE_MODIFIED      = getdate()
		     , MODIFIED_USER_ID   = null
		 where GRID_NAME          = 'Users.PopupView'
		   and URL_FIELD          = 'ID FULL_NAME'
		   and DELETED            = 0;
	end -- if;
end -- if;
GO

set nocount off;
GO


set nocount on;
GO

-- 08/01/2010 Paul.  We need a separate view to select the Full Name instead of the User Name. 
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Users.PopupViewName' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Users.PopupViewName';
	exec dbo.spGRIDVIEWS_InsertOnly           'Users.PopupViewName', 'Users', 'vwUSERS_ASSIGNED_TO_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'Users.PopupViewName'         , 1, 'Users.LBL_LIST_NAME'                      , 'FULL_NAME'       , 'FULL_NAME'       , '40%', 'listViewTdLinkS1', 'ID FULL_NAME', 'SelectUser(''{0}'', ''{1}'');', null, 'Users', null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsHyperLink 'Users.PopupViewName'         , 2, 'Users.LBL_LIST_USER_NAME'                 , 'USER_NAME'       , 'USER_NAME'       , '40%', 'listViewTdLinkS1', 'ID FULL_NAME', 'SelectUser(''{0}'', ''{1}'');', null, 'Users', null;
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.PopupViewName'         , 3, 'Users.LBL_LIST_DEPARTMENT'                , 'DEPARTMENT'      , 'DEPARTMENT'      , '20%';
end -- if;
GO

set nocount off;
GO


-- 09/12/2019 Paul.  Users.Teams for the React Client. 
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME = 'Users.Teams'
if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Users.Teams' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Users.Teams';
	exec dbo.spGRIDVIEWS_InsertOnly           'Users.Teams', 'Teams', 'vwUSERS_TEAM_MEMBERSHIPS';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Teams'              , 1, 'Teams.LBL_LIST_NAME'                        , 'TEAM_NAME'              , 'TEAM_NAME'                     , '30%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.Teams'              , 2, 'Teams.LBL_LIST_DESCRIPTION'                 , 'DESCRIPTION'            , 'DESCRIPTION'                   , '60%';
end -- if;
GO



print 'LANGUAGES en-AU';
GO

-- 05/19/2008 Paul.  Unicode strings must be marked as such, otherwise unicode will go in as ???.
-- 03/19/2019 Paul.  Default to inactive. 
exec dbo.spLANGUAGES_InsertOnly N'en-AU'     ,  3081, 0, N'English (Australia)', N'English (Australia)';
GO


/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spLANGUAGES_en_AU()
/

call dbo.spSqlDropProcedure('spLANGUAGES_en_AU')
/

-- #endif IBM_DB2 */



print 'LANGUAGES en-CA';
GO

-- 05/19/2008 Paul.  Unicode strings must be marked as such, otherwise unicode will go in as ???.
-- 03/19/2019 Paul.  Default to inactive. 
exec dbo.spLANGUAGES_InsertOnly N'en-CA'     ,  4105, 0, N'English (Canada)', N'English (Canada)';
GO


/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spLANGUAGES_en_CA()
/

call dbo.spSqlDropProcedure('spLANGUAGES_en_CA')
/

-- #endif IBM_DB2 */



print 'LANGUAGES en-GB';
GO

-- 05/19/2008 Paul.  Unicode strings must be marked as such, otherwise unicode will go in as ???.
-- 03/19/2019 Paul.  Default to inactive. 
exec dbo.spLANGUAGES_InsertOnly N'en-GB'     ,  2057, 0, N'English (United Kingdom)', N'English (United Kingdom)';
GO


/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spLANGUAGES_en_GB()
/

call dbo.spSqlDropProcedure('spLANGUAGES_en_GB')
/

-- #endif IBM_DB2 */



print 'LANGUAGES en-us';
GO

-- 05/19/2008 Paul.  Unicode strings must be marked as such, otherwise unicode will go in as ???.
exec dbo.spLANGUAGES_InsertOnly N'en-US',  1033, 1, N'English (United States)', N'English (United States)';
GO


/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spLANGUAGES_en_US()
/

call dbo.spSqlDropProcedure('spLANGUAGES_en_US')
/

-- #endif IBM_DB2 */

print 'MODULES admin';
GO

set nocount on;
GO

-- 05/02/2006 Paul.  Add TABLE_NAME as direct table queries are required by SOAP and we need a mapping. 
-- 05/20/2006 Paul.  Add REPORT_ENABLED if the module can be the basis of a report. ACL rules will still apply. 
-- 10/06/2006 Paul.  Add IMPORT_ENABLED if the module can allow importing. 
-- 04/11/2007 Paul.  Since we are using InsertOnly procedures, we don't need all the if exists filters. 
-- 02/09/2008 Paul.  Move maintenance code to separate file. 
-- 08/22/2008 Paul.  Move professional modules to a separate file. 
-- 09/17/2008 Paul.  Enable Mobile for the core modules (Accounts, Contacts, Leads, Opportunities, Cases, Bugs, Calls, Meetings).
-- 11/27/2008 Paul.  Re-arrange the tabs to match the order in SugarCRM 5.1b.
-- 01/13/2010 Paul.  Set default for MASS_UPDATE_ENABLED. 
-- 04/01/2010 Paul.  Add Exchange Sync flag. 
-- 05/02/2010 Paul.  Add defaults for Exchange Folders and Exchange Create Parent. 
-- 08/01/2010 Paul.  Reorder to match the latest Sugar release. 
-- 08/02/2010 Paul.  Sugar Activities is now the Calendar.  We will keep the old Calendar name for now. 
-- 09/12/2011 Paul.  REST_ENABLED provides a way to enable/disable a module in the REST API. 

-- 06/16/2017 Paul.  New home page is rendered using javascript. 
-- 05/30/2020 Paul.  Default home is now the React Client.  
exec dbo.spMODULES_InsertOnly null, 'Home'                  , '.moduleList.Home'                     , '~/React/Home/'                      , 1, 1,  1, 0, 0, 0, 0, 0, null             , 0, 0, 0, 0, 0, 0;
-- 01/11/2015 Paul.  Show the dashboard as part of new HTML5 version 9. 
-- 06/01/2017 Paul.  New dashboard is rendered using javascript. 
-- 12/08/2021 Paul.  Disable dashboard tab on SplendidApp. 
exec dbo.spMODULES_InsertOnly null, 'Dashboard'             , '.moduleList.Dashboard'                , '~/Dashboard/html5/'                 , 1, 0,  0, 0, 0, 0, 0, 0, 'DASHBOARDS'     , 0, 0, 0, 0, 0, 0;
-- 06/02/2017 Paul.  DashboardPanels is required for REST API. 
exec dbo.spMODULES_InsertOnly null, 'DashboardPanels'       , '.moduleList.DashboardPanels'          , '~/Dashboard/DashboardPanels/'       , 1, 0,  0, 0, 0, 0, 0, 0, 'DASHBOARDS_PANELS', 0, 0, 0, 0, 0, 0;
exec dbo.spMODULES_InsertOnly null, 'Administration'        , '.moduleList.Administration'           , '~/Administration/'                  , 1, 0,  0, 0, 0, 0, 0, 1, null             , 0, 0, 0, 0, 0, 0;
-- 03/09/2010 Paul.  Add Languages so that admin roles can be applied. 
exec dbo.spMODULES_InsertOnly null, 'Languages'             , 'Administration.LBL_MANAGE_LANGUAGES'  , '~/Administration/Languages/'        , 1, 0,  0, 0, 0, 0, 0, 1, 'LANGUAGES'      , 0, 0, 0, 0, 0, 0;
exec dbo.spMODULES_InsertOnly null, 'AuditEvents'           , 'Administration.LBL_AUDIT_EVENTS_TITLE', '~/Administration/AuditEvents/'      , 1, 0,  0, 0, 0, 0, 0, 1, 'AUDIT_EVENTS'   , 0, 0, 0, 0, 0, 0;
exec dbo.spMODULES_InsertOnly null, 'Dropdown'              , '.moduleList.Dropdown'                 , '~/Administration/Dropdown/'         , 1, 0,  0, 0, 0, 0, 0, 1, null             , 0, 0, 0, 0, 0, 0;
-- 03/03/2010 Paul.  Add the Config module so that shortcuts can be displayed. 
exec dbo.spMODULES_InsertOnly null, 'Config'                , '.moduleList.Config'                   , '~/Administration/Config/'           , 1, 0,  0, 0, 0, 0, 0, 1, 'CONFIG'         , 0, 0, 0, 0, 0, 0;
exec dbo.spMODULES_InsertOnly null, 'Users'                 , '.moduleList.Users'                    , '~/Users/'                           , 1, 0,  0, 0, 1, 1, 0, 1, 'USERS'          , 0, 1, 0, 0, 0, 1;
exec dbo.spMODULES_InsertOnly null, 'Import'                , '.moduleList.Import'                   , '~/Import/'                          , 1, 0,  0, 0, 0, 0, 0, 1, null             , 0, 0, 0, 0, 0, 0;
exec dbo.spMODULES_InsertOnly null, 'EditCustomFields'      , '.moduleList.EditCustomFields'         , '~/Administration/EditCustomFields/' , 1, 0,  0, 0, 0, 0, 0, 1, null             , 0, 0, 0, 0, 0, 0;

-- 02/18/2016 Paul.  Point to new layout editor. 
exec dbo.spMODULES_InsertOnly null, 'DynamicLayout'         , '.moduleList.DynamicLayout'            , '~/Administration/DynamicLayout/html5/', 1, 0,  0, 0, 0, 0, 0, 1, null             , 0, 0, 0, 0, 0, 0;
if exists (select * from MODULES where MODULE_NAME = 'DynamicLayout' and RELATIVE_PATH = '~/Administration/DynamicLayout/' and DELETED = 0) begin -- then
	print 'MODULES: Enable new DynamicLayout editor. ';
	update MODULES
	   set RELATIVE_PATH       = '~/Administration/DynamicLayout/html5/'
	     , DATE_MODIFIED       = getdate()
	     , DATE_MODIFIED_UTC   = getutcdate()
	     , MODIFIED_USER_ID    = null
	 where MODULE_NAME         = 'DynamicLayout'
	   and RELATIVE_PATH       = '~/Administration/DynamicLayout/'
	   and DELETED             = 0;
end -- if;
GO

exec dbo.spMODULES_InsertOnly null, 'Terminology'           , '.moduleList.Terminology'              , '~/Administration/Terminology/'      , 1, 0,  0, 0, 0, 0, 0, 1, 'TERMINOLOGY'    , 0, 0, 0, 0, 0, 0;
-- 02/20/2021 Paul.  React client relies upon MASS_UPDATE_ENABLED
if exists(select * from MODULES where MODULE_NAME = 'Terminology' and MASS_UPDATE_ENABLED is null) begin -- then
	update MODULES
	   set MASS_UPDATE_ENABLED = 1
	     , DATE_MODIFIED       = getdate()
	     , DATE_MODIFIED_UTC   = getutcdate()
	     , MODIFIED_USER_ID    = null
	 where MODULE_NAME         = 'Terminology'
	   and MASS_UPDATE_ENABLED is null;
end -- if;

-- 04/22/2006 Paul.  Add ACLRoles as a module.  Set the CUSTOM_ENABLED flag. 
-- 05/26/2007 Paul.  There is no compelling reason to allow ACLRoles to be customized. 
exec dbo.spMODULES_InsertOnly null, 'ACLRoles'              , '.moduleList.ACLRoles'                 , '~/Administration/ACLRoles/'         , 1, 0,  0, 0, 0, 0, 0, 1, 'ACL_ROLES'      , 0, 0, 0, 0, 0, 0;
-- 10/25/2006 Paul.  Create the Help module so that access rights can be defined. 
exec dbo.spMODULES_InsertOnly null, 'Help'                  , '.moduleList.Help'                     , '~/Help/'                            , 1, 0,  0, 0, 0, 0, 0, 1, null             , 0, 0, 0, 0, 0, 0;
-- 12/14/2007 Paul.  Need to a a module record for Shortcuts so that its own shortcuts will appear. 
-- 07/24/2008 Paul.  Admin modules are not typically reported on.
exec dbo.spMODULES_InsertOnly null, 'Shortcuts'             , '.moduleList.Shortcuts'                , '~/Administration/Shortcuts/'        , 1, 0,  0, 0, 1, 0, 0, 1, 'SHORTCUTS'      , 0, 0, 0, 0, 0, 0;
exec dbo.spMODULES_InsertOnly null, 'Schedulers'            , '.moduleList.Schedulers'               , '~/Administration/Schedulers/'       , 1, 0,  0, 0, 1, 0, 0, 1, 'SCHEDULERS'     , 0, 0, 0, 0, 0, 0;
-- 05/13/2008 Paul.  DynamicButtons should be treated as a module. 
exec dbo.spMODULES_InsertOnly null, 'DynamicButtons'        , '.moduleList.DynamicButtons'           , '~/Administration/DynamicButtons/'   , 1, 0,  0, 0, 0, 0, 0, 1, 'DYNAMIC_BUTTONS', 0, 0, 0, 0, 0, 0;
-- 05/13/2008 Paul.  Currencies module.
exec dbo.spMODULES_InsertOnly null, 'Currencies'            , '.moduleList.Currencies'               , '~/Administration/Currencies/'       , 1, 0,  0, 0, 0, 0, 0, 1, 'CURRENCIES'     , 0, 0, 0, 0, 0, 0;
-- 05/13/2008 Paul.  System Log.
exec dbo.spMODULES_InsertOnly null, 'SystemLog'             , '.moduleList.SystemLog'                , '~/Administration/SystemLog/'        , 1, 0,  0, 0, 0, 0, 0, 1, 'SYSTEM_LOG'     , 0, 0, 0, 0, 0, 0;
-- 05/13/2008 Paul.  User Log.
-- 07/11/2018 Paul.  Default to enable Mass update so that we can export logins. 
exec dbo.spMODULES_InsertOnly null, 'UserLogins'            , '.moduleList.UserLogins'               , '~/Administration/UserLogins/'       , 1, 0,  0, 0, 0, 0, 0, 1, 'USERS_LOGINS'   , 0, 1, 0, 0, 0, 0;
-- 07/11/2018 Paul.  Add export checkboxes to UserLogins. 
if exists (select * from MODULES where MODULE_NAME = 'UserLogins' and isnull(MASS_UPDATE_ENABLED, 0) = 0 and DELETED = 0) begin -- then
	print 'MODULES: Add export checkboxes to UserLogins.  ';
	update MODULES
	   set MASS_UPDATE_ENABLED = 1
	     , DATE_MODIFIED       = getdate()
	     , DATE_MODIFIED_UTC   = getutcdate()
	     , MODIFIED_USER_ID    = null
	 where MODULE_NAME         = 'UserLogins'
	   and isnull(MASS_UPDATE_ENABLED, 0) = 0
	   and DELETED             = 0;
end -- if;
GO

-- 09/09/2009 Paul.  Allow direct editing of the module table. 
exec dbo.spMODULES_InsertOnly null, 'Modules'               , '.moduleList.Modules'                  , '~/Administration/Modules/'          , 1, 0,  0, 0, 0, 0, 0, 1, 'MODULES'        , 0, 0, 0, 0, 0, 0;
-- 09/12/2009 Paul.  Allow editing of the field validators. 
exec dbo.spMODULES_InsertOnly null, 'FieldValidators'       , '.moduleList.FieldValidators'          , '~/Administration/FieldValidators/'  , 1, 0,  0, 0, 0, 0, 0, 1, 'FIELD_VALIDATORS', 0, 0, 0, 0, 0, 0;
-- 11/22/2009 Paul.  System Sync Log.
exec dbo.spMODULES_InsertOnly null, 'SystemSyncLog'         , '.moduleList.SystemSyncLog'            , '~/Administration/SystemSyncLog/'    , 1, 0,  0, 0, 0, 0, 0, 1, 'SYSTEM_SYNC_LOG' , 0, 0, 0, 0, 0, 1;

-- 11/01/2020 Paul.  Enable REST for SystemSyncLog to allow export from React Client.
if exists (select * from MODULES where MODULE_NAME = 'SystemSyncLog' and isnull(REST_ENABLED, 0) = 0 and DELETED = 0) begin -- then
	print 'MODULES: Enable REST for SystemSyncLog to allow export from React Client. ';
	update MODULES
	   set REST_ENABLED        = 1
	     , DATE_MODIFIED       = getdate()
	     , DATE_MODIFIED_UTC   = getutcdate()
	     , MODIFIED_USER_ID    = null
	 where MODULE_NAME         = 'SystemSyncLog'
	   and isnull(REST_ENABLED, 0) = 0
	   and DELETED             = 0;
end -- if;

-- 04/23/2011 Paul.  DetailViewsRelationships should be treated as a module so that the merge modules can be retrieved by the Word Plug-in. 
exec dbo.spMODULES_InsertOnly null, 'DetailViewsRelationships', '.moduleList.DetailViewsRelationships' , '~/Administration/DetailViewsRelationships/'   , 1, 0,  0, 0, 0, 0, 0, 1, 'DETAILVIEWS_RELATIONSHIPS', 0, 0, 0, 0, 0, 0;

-- 06/08/2012 Paul.  Add an images module to make it easier to get the Image name in the DetailView. 
exec dbo.spMODULES_InsertOnly null, 'Images'                , '.moduleList.Images'                   , '~/Images/'                          , 1, 0,  0, 0, 0, 0, 0, 0, 'IMAGES'          , 0, 0, 0, 0, 0, 1;
-- 07/11/2018 Paul.  Correct query to use REST_ENABLED instead of MASS_UPDATE_ENABLED. 
if exists (select * from MODULES where MODULE_NAME = 'Images' and isnull(REST_ENABLED, 0) = 0 and DELETED = 0) begin -- then
	print 'MODULES: Enable REST for Images to allow display in DetailView. ';
	update MODULES
	   set REST_ENABLED        = 1
	     , DATE_MODIFIED       = getdate()
	     , DATE_MODIFIED_UTC   = getutcdate()
	     , MODIFIED_USER_ID    = null
	 where MODULE_NAME         = 'Images'
	   and isnull(REST_ENABLED, 0) = 0
	   and DELETED             = 0;
end -- if;

-- 08/07/2013 Paul.  Add Undelete module. 
exec dbo.spMODULES_InsertOnly null, 'Undelete'               , '.moduleList.Undelete'                , '~/Administration/Undelete/'         , 1, 0,  0, 0, 0, 0, 0, 1, null              , 0, 0, 0, 0, 0, 0;


-- 08/24/2008 Paul.  Reorder the modules. 
exec dbo.spMODULES_Reorder null;
GO

set nocount off;
GO


print 'MODULES admin';
GO

set nocount on;
GO

-- 03/09/2010 Paul.  Add ModuleBuilder so that admin roles can be applied. 
exec dbo.spMODULES_InsertOnly null, 'ModuleBuilder'         , 'ModuleBuilder.LBL_MODULEBUILDER'      , '~/Administration/ModuleBuilder/'    , 1, 0,  0, 0, 0, 0, 0, 1, null                 , 0, 0, 0, 0, 0, 0;


set nocount off;
GO


print 'RELATIONSHIPS admin';
GO

set nocount on;
GO

exec dbo.spRELATIONSHIPS_InsertOnly 'acl_roles_users'             , 'ACLRoles'     , 'acl_roles'     , 'id', 'Users'         , 'users'        , 'id', 'acl_roles_users', 'role_id', 'user_id', 'many-to-many', null, null, 0;
exec dbo.spRELATIONSHIPS_InsertOnly 'user_direct_reports'         , 'Users'        , 'users'         , 'id', 'Users'         , 'users', 'reports_to_id'   , null, null, null, 'one-to-many', null, null, 0;
exec dbo.spRELATIONSHIPS_InsertOnly 'team_memberships'            , 'Teams'     , 'teams'     , 'id', 'Users'         , 'users'        , 'id', 'team_memberships', 'team_id', 'user_id', 'many-to-many', null, null, 0;
exec dbo.spRELATIONSHIPS_InsertOnly 'team_zipcodes'               , 'Teams'     , 'teams'     , 'id', 'ZipCodes'      , 'zipcodes'     , 'id', 'teams_zipcodes'  , 'team_id', 'zipcode_id', 'many-to-many', null, null, 0;
GO

set nocount off;
GO


print 'SCHEDULERS admin';
GO

set nocount on;
GO

exec dbo.spSCHEDULERS_InsertOnly null, N'Backup Database Sunday at 11pm'             , N'function::BackupDatabase'                              , null, null, N'0::23::*::*::0'  , null, null, N'Active'  , 0;
exec dbo.spSCHEDULERS_InsertOnly null, N'Backup Transaction Log Mon-Sat at 11pm'     , N'function::BackupTransactionLog'                        , null, null, N'0::23::*::*::1-6', null, null, N'Inactive', 0;
-- 02/26/2010 Paul.  Clean the SYSTEM_LOG table of warnings once a week. 
exec dbo.spSCHEDULERS_InsertOnly null, N'Clean System Log Sunday at 10pm'            , N'function::CleanSystemLog'                              , null, null, N'0::22::*::*::0'  , null, null, N'Active'  , 0;

set nocount off;
GO


print 'SHORTCUTS admin';
-- delete SHORTCUTS
GO

set nocount on;
GO

if not exists (select * from SHORTCUTS where MODULE_NAME = 'Administration' and DELETED = 0) begin -- then
	exec dbo.spSHORTCUTS_InsertOnly null, 'Administration'        , 'Users.LNK_NEW_USER'                    , '~/Users/edit.aspx'                      , 'CreateUsers.gif'         , 1,  1, 'Users', 'edit';
end -- if;
GO

if not exists (select * from SHORTCUTS where MODULE_NAME = 'Dropdown' and DELETED = 0) begin -- then
	exec dbo.spSHORTCUTS_InsertOnly null, 'Dropdown'              , 'Dropdown.LNK_NEW_DROPDOWN'             , '~/Administration/Dropdown/edit.aspx'    , 'CreateDropdown.gif'      , 1,  1, 'Dropdown', 'edit';
	exec dbo.spSHORTCUTS_InsertOnly null, 'Dropdown'              , 'Dropdown.LNK_DROPDOWNS'                , '~/Administration/Dropdown/default.aspx' , 'CreateDropdown.gif'      , 1,  2, 'Dropdown', 'list';
end -- if;
GO

if not exists (select * from SHORTCUTS where MODULE_NAME = 'EditCustomFields' and DELETED = 0) begin -- then
	exec dbo.spSHORTCUTS_InsertOnly null, 'EditCustomFields'      , 'EditCustomFields.LNK_SELECT_CUSTOM_FIELD'     , '~/Administration/EditCustomFields/default.aspx'         , 'Administration.gif'   , 1,  1, 'EditCustomFields'  , 'list';
end -- if;
GO

-- 09/08/2007 Paul.  All the relationships to be edited. 
-- 04/19/2010 Paul.  Add EditView Relationships. 
-- 02/28/2016 Paul.  Point to new layout editor. 
if not exists (select * from SHORTCUTS where MODULE_NAME = 'DynamicLayout' and DELETED = 0) begin -- then
	exec dbo.spSHORTCUTS_InsertOnly null, 'DynamicLayout'         , 'DynamicLayout.LNK_LAYOUT_EDITOR'              , '~/Administration/DynamicLayout/html5/default.aspx'            , 'Administration.gif'   , 1,  1, 'DynamicLayout'     , 'edit';
	exec dbo.spSHORTCUTS_InsertOnly null, 'DynamicLayout'         , 'DynamicLayout.LNK_LAYOUT_DETAILVIEWS'         , '~/Administration/DynamicLayout/DetailViews/default.aspx'      , 'Administration.gif'   , 1,  2, 'DynamicLayout'     , 'edit';
	exec dbo.spSHORTCUTS_InsertOnly null, 'DynamicLayout'         , 'DynamicLayout.LNK_LAYOUT_EDITVIEWS'           , '~/Administration/DynamicLayout/EditViews/default.aspx'        , 'Administration.gif'   , 1,  3, 'DynamicLayout'     , 'edit';
	exec dbo.spSHORTCUTS_InsertOnly null, 'DynamicLayout'         , 'DynamicLayout.LNK_LAYOUT_GRIDVIEWS'           , '~/Administration/DynamicLayout/GridViews/default.aspx'        , 'Administration.gif'   , 1,  4, 'DynamicLayout'     , 'edit';
	exec dbo.spSHORTCUTS_InsertOnly null, 'DynamicLayout'         , 'DynamicLayout.LNK_LAYOUT_RELATIONSHIPS'       , '~/Administration/DynamicLayout/Relationships/default.aspx'    , 'Administration.gif'   , 1,  5, 'DynamicLayout'     , 'edit';
	exec dbo.spSHORTCUTS_InsertOnly null, 'DynamicLayout'         , 'DynamicLayout.LNK_LAYOUT_EDIT_RELATIONSHIPS'  , '~/Administration/DynamicLayout/EditRelationships/default.aspx', 'Administration.gif'   , 1,  6, 'DynamicLayout'     , 'edit';
end else begin
	if not exists (select * from SHORTCUTS where MODULE_NAME = 'DynamicLayout' and DISPLAY_NAME = 'DynamicLayout.LNK_LAYOUT_RELATIONSHIPS' and DELETED = 0) begin -- then
		exec dbo.spSHORTCUTS_InsertOnly null, 'DynamicLayout'         , 'DynamicLayout.LNK_LAYOUT_RELATIONSHIPS'       , '~/Administration/DynamicLayout/Relationships/default.aspx', 'Administration.gif'   , 1,  4, 'DynamicLayout'     , 'edit';
	end -- if;
	if not exists (select * from SHORTCUTS where MODULE_NAME = 'DynamicLayout' and DISPLAY_NAME = 'DynamicLayout.LNK_LAYOUT_EDIT_RELATIONSHIPS' and DELETED = 0) begin -- then
		exec dbo.spSHORTCUTS_InsertOnly null, 'DynamicLayout'         , 'DynamicLayout.LNK_LAYOUT_EDIT_RELATIONSHIPS'  , '~/Administration/DynamicLayout/EditRelationships/default.aspx', 'Administration.gif'   , 1,  5, 'DynamicLayout'     , 'edit';
	end -- if;
	if not exists (select * from SHORTCUTS where MODULE_NAME = 'DynamicLayout' and DISPLAY_NAME = 'DynamicLayout.LNK_LAYOUT_EDITOR' and DELETED = 0) begin -- then
		update SHORTCUTS
		   set SHORTCUT_ORDER    = SHORTCUT_ORDER + 1
		     , DATE_MODIFIED     = getdate()
		     , DATE_MODIFIED_UTC = getutcdate()
		     , MODIFIED_USER_ID  = null
		 where MODULE_NAME       = 'DynamicLayout'
		   and DELETED           = 0;
		exec dbo.spSHORTCUTS_InsertOnly null, 'DynamicLayout'         , 'DynamicLayout.LNK_LAYOUT_EDITOR'              , '~/Administration/DynamicLayout/html5/default.aspx', 'Administration.gif'   , 1,  1, 'DynamicLayout'     , 'edit';
	end -- if;
end -- if;
GO

if not exists (select * from SHORTCUTS where MODULE_NAME = 'ACLRoles' and DELETED = 0) begin -- then
	exec dbo.spSHORTCUTS_InsertOnly null, 'ACLRoles'              , 'ACLRoles.LIST_ROLES'                          , '~/Administration/ACLRoles/default.aspx'                 , 'Roles.gif'            , 1,  1, 'ACLRoles'          , 'list';
	exec dbo.spSHORTCUTS_InsertOnly null, 'ACLRoles'              , 'ACLRoles.LIST_ROLES_BY_USER'                  , '~/Administration/ACLRoles/ByUser.aspx'                  , 'Roles.gif'            , 1,  2, 'ACLRoles'          , 'list';
	exec dbo.spSHORTCUTS_InsertOnly null, 'ACLRoles'              , 'ACLRoles.LBL_CREATE_ROLE'                     , '~/Administration/ACLRoles/edit.aspx'                    , 'Roles.gif'            , 1,  3, 'ACLRoles'          , 'edit';
end -- if;
GO

-- delete from SHORTCUTS where MODULE_NAME = 'Terminology';
if not exists (select * from SHORTCUTS where MODULE_NAME = 'Terminology' and DELETED = 0) begin -- then
	exec dbo.spSHORTCUTS_InsertOnly null, 'Terminology'           , 'Terminology.LBL_NEW_FORM_TITLE'             , '~/Administration/Terminology/edit.aspx'          , 'Terminology.gif', 1,  1, 'Terminology', 'edit';
	exec dbo.spSHORTCUTS_InsertOnly null, 'Terminology'           , 'Administration.LBL_MANAGE_TERMINOLOGY_TITLE', '~/Administration/Terminology/default.aspx'       , 'Terminology.gif', 1,  2, 'Terminology', 'list';
	exec dbo.spSHORTCUTS_InsertOnly null, 'Terminology'           , '.LBL_IMPORT'                                , '~/Administration/Terminology/import.aspx'        , 'Import.gif'     , 1,  3, 'Terminology', 'import';
	exec dbo.spSHORTCUTS_InsertOnly null, 'Terminology'           , 'Administration.LBL_IMPORT_TERMINOLOGY_TITLE', '~/Administration/Terminology/Import/default.aspx', 'Import.gif'     , 1,  4, 'Terminology', 'import';
end -- if;
GO

-- delete from SHORTCUTS where MODULE_NAME = 'Shortcuts';
if not exists (select * from SHORTCUTS where MODULE_NAME = 'Shortcuts' and DELETED = 0) begin -- then
	exec dbo.spSHORTCUTS_InsertOnly null, 'Shortcuts'             , 'Shortcuts.LNK_NEW_SHORTCUT'            , '~/Administration/Shortcuts/edit.aspx'     , 'CreateShortcuts.gif'   , 1,  1, 'Shortcuts' , 'edit';
	exec dbo.spSHORTCUTS_InsertOnly null, 'Shortcuts'             , 'Shortcuts.LNK_SHORTCUT_LIST'           , '~/Administration/Shortcuts/default.aspx'  , 'Shortcuts.gif'         , 1,  2, 'Shortcuts' , 'list';
end -- if;
GO

-- delete from SHORTCUTS where MODULE_NAME = 'Schedulers'
if not exists (select * from SHORTCUTS where MODULE_NAME = 'Schedulers' and DELETED = 0) begin -- then
	exec dbo.spSHORTCUTS_InsertOnly null, 'Schedulers'            , 'Schedulers.LNK_LIST_SCHEDULER'         , '~/Administration/Schedulers/default.aspx'  , 'Schedulers.gif'        , 1,  1, 'Schedulers', 'list';
	exec dbo.spSHORTCUTS_InsertOnly null, 'Schedulers'            , 'Schedulers.LNK_NEW_SCHEDULER'          , '~/Administration/Schedulers/edit.aspx'     , 'CreateScheduler.gif'   , 1,  2, 'Schedulers', 'edit';
end -- if;
GO

-- delete from SHORTCUTS where MODULE_NAME = 'DynamicButtons';
if not exists (select * from SHORTCUTS where MODULE_NAME = 'DynamicButtons' and DELETED = 0) begin -- then
	exec dbo.spSHORTCUTS_InsertOnly null, 'DynamicButtons'        , 'DynamicButtons.LNK_NEW_DYNAMIC_BUTTON' , '~/Administration/DynamicButtons/edit.aspx'     , 'CreateDynamicButtons.gif', 1,  1, 'DynamicButtons' , 'edit';
	exec dbo.spSHORTCUTS_InsertOnly null, 'DynamicButtons'        , 'DynamicButtons.LNK_DYNAMIC_BUTTON_LIST', '~/Administration/DynamicButtons/default.aspx'  , 'DynamicButtons.gif'      , 1,  2, 'DynamicButtons' , 'list';
end -- if;
GO

-- 09/09/2009 Paul.  Allow direct editing of the module table. 
-- delete from SHORTCUTS where MODULE_NAME = 'Modules'
if not exists (select * from SHORTCUTS where MODULE_NAME = 'Modules' and DELETED = 0) begin -- then
	exec dbo.spSHORTCUTS_InsertOnly null, 'Modules'               , 'Modules.LBL_LIST_FORM_TITLE'           , '~/Administration/Modules/default.aspx'     , 'Administration.gif'    , 1,  1, 'Modules', 'list';
end -- if;
GO

-- 09/12/2009 Paul.  Allow editing of Field Validators. 
-- delete from SHORTCUTS where MODULE_NAME = 'FieldValidators';
if not exists (select * from SHORTCUTS where MODULE_NAME = 'FieldValidators' and DELETED = 0) begin -- then
	exec dbo.spSHORTCUTS_InsertOnly null, 'FieldValidators'       , 'FieldValidators.LNK_NEW_FIELD_VALIDATOR' , '~/Administration/FieldValidators/edit.aspx'             , 'CreateFieldValidators.gif', 1,  1, 'FieldValidators', 'edit';
	exec dbo.spSHORTCUTS_InsertOnly null, 'FieldValidators'       , 'FieldValidators.LNK_FIELD_VALIDATOR_LIST', '~/Administration/FieldValidators/default.aspx'          , 'FieldValidators.gif'      , 1,  2, 'FieldValidators', 'list';
end -- if;
GO

-- 03/03/2010 Paul.  We need a quick access to the config edit link. 
-- delete from SHORTCUTS where MODULE_NAME = 'Config';
if not exists (select * from SHORTCUTS where MODULE_NAME = 'Config' and DELETED = 0) begin -- then
	exec dbo.spSHORTCUTS_InsertOnly null, 'Config'                , 'Config.LNK_NEW_CONFIG'                   , '~/Administration/Config/edit.aspx'                      , 'Config.gif'               , 1,  1, 'Config', 'edit';
	exec dbo.spSHORTCUTS_InsertOnly null, 'Config'                , 'Config.LNK_CONFIG_LIST'                  , '~/Administration/Config/default.aspx'                   , 'Config.gif'               , 1,  2, 'Config', 'list';
end -- if;
GO

-- 05/03/2016 Paul.  Full editing of currencies requires shortcuts.  But, we don't need to allow creation as the list is prepopulated. 
-- delete from SHORTCUTS where MODULE_NAME = 'Currencies';
if not exists (select * from SHORTCUTS where MODULE_NAME = 'Currencies' and DELETED = 0) begin -- then
--	exec dbo.spSHORTCUTS_InsertOnly null, 'Currencies'            , 'Currencies.LNK_NEW_CURRENCY'             , '~/Administration/Currencies/edit.aspx'                    , 'CreateCurrencies.gif'      , 1,  1, 'Currencies'   , 'edit';
	exec dbo.spSHORTCUTS_InsertOnly null, 'Currencies'            , 'Currencies.LNK_CURRENCY_LIST'            , '~/Administration/Currencies/default.aspx'                 , 'Currencies.gif'            , 1,  2, 'Currencies'   , 'list';
	exec dbo.spSHORTCUTS_InsertOnly null, 'Currencies'            , 'CurrencyLayer.LBL_CURRENCYLAYER_SETTINGS', '~/Administration/CurrencyLayer/default.aspx'              , 'CurrencyLayer.gif'         , 1,  3, 'CurrencyLayer', 'edit';
end -- if;
GO

-- delete from SHORTCUTS where MODULE_NAME = 'Teams';
if not exists (select * from SHORTCUTS where MODULE_NAME = 'Teams' and DELETED = 0) begin -- then
	exec dbo.spSHORTCUTS_InsertOnly null, 'Teams'                 , 'Teams.LNK_NEW_TEAM'                           , '~/Administration/Teams/edit.aspx'         , 'CreateTeams.gif'      , 1,  1, 'Teams'             , 'edit';
	exec dbo.spSHORTCUTS_InsertOnly null, 'Teams'                 , 'Teams.LNK_TEAM_LIST'                          , '~/Administration/Teams/default.aspx'      , 'Teams.gif'            , 1,  2, 'Teams'             , 'list';
	exec dbo.spSHORTCUTS_InsertOnly null, 'Teams'                 , 'TeamNotices.LNK_TEAM_NOTICE_LIST'             , '~/Administration/TeamNotices/default.aspx', 'Teams.gif'            , 1,  3, 'TeamNotices'       , 'list';
end -- if;
GO

set nocount off;
GO


print 'SYSTEM_REST_TABLES admin';
-- delete from SYSTEM_REST_TABLES;
--GO

set nocount on;
GO

-- 06/18/2011 Paul.  SYSTEM_REST_TABLES are nearly identical to SYSTEM_SYNC_TABLES,
-- but the Module tables typically refer to the base view instead of the raw table. 
-- 06/18/2011 Paul.  We do not anticipate a need access to all the system tables via the REST API. 

-- System Tables
-- 04/16/2021 Paul.  ACL_ROLES is used by the react client. 
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'ACL_ROLES'                       , 'vwACL_ROLES'                     , 'ACLRoles'                 , null                       , 0, null, 1, 0, null, 0;
-- 10/24/2011 Paul.  The HTML5 Offline Client needs access to the config table. 
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'CONFIG'                          , 'vwCONFIG_Sync'                   , 'Config'                   , null                       , 0, null, 1, 0, null, 0;
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'CURRENCIES'                      , 'vwCURRENCIES'                    , 'Currencies'               , null                       , 0, null, 1, 0, null, 0;
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'LANGUAGES'                       , 'vwLANGUAGES'                     , null                       , null                       , 0, null, 1, 0, null, 0;
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'TIMEZONES'                       , 'vwTIMEZONES'                     , null                       , null                       , 0, null, 1, 0, null, 0;
-- 08/08/2019 Paul.  React Client needs access to the RulesWizard. 
GO

-- System UI Tables
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'DETAILVIEWS_FIELDS'              , 'vwDETAILVIEWS_FIELDS'            , null                       , null                       , 2, 'DETAIL_NAME', 1, 0, null, 0;
-- 08/31/2011 Paul.  DETAILVIEWS_RELATIONSHIPS does have a module associated with it. 
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'DETAILVIEWS_RELATIONSHIPS'       , 'vwDETAILVIEWS_RELATIONSHIPS'     , 'DetailViewsRelationships' , null                       , 2, 'DETAIL_NAME', 1, 0, null, 0;
if exists(select * from vwMODULES where MODULE_NAME = 'DetailViewsRelationships' and (REST_ENABLED = 0 or REST_ENABLED is null)) begin -- then
	update MODULES
	   set REST_ENABLED         = 1
	     , MODIFIED_USER_ID     = null    
	     , DATE_MODIFIED        =  getdate()           
	     , DATE_MODIFIED_UTC    =  getutcdate()        
	 where MODULE_NAME          = 'DetailViewsRelationships'
	   and DELETED              = 0;
end -- if;
GO

exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'DYNAMIC_BUTTONS'                 , 'vwDYNAMIC_BUTTONS'               , 'DynamicButtons'           , null                       , 1, 'MODULE_NAME', 1, 0, null, 0;
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'EDITVIEWS_FIELDS'                , 'vwEDITVIEWS_FIELDS'              , null                       , null                       , 2, 'EDIT_NAME'  , 1, 0, null, 0;
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'GRIDVIEWS_COLUMNS'               , 'vwGRIDVIEWS_COLUMNS'             , null                       , null                       , 2, 'GRID_NAME'  , 1, 0, null, 0;
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'MODULES'                         , 'vwMODULES'                       , 'Modules'                  , null                       , 1, 'MODULE_NAME', 1, 0, null, 0;
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'SHORTCUTS'                       , 'vwSHORTCUTS'                     , 'Shortcuts'                , null                       , 1, 'MODULE_NAME', 1, 0, null, 0;
-- 04/28/2021 Paul.  React needs access to the help text. 
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'TERMINOLOGY_HELP'                , 'vwTERMINOLOGY_HELP'              , 'Terminology'              , null                       , 1, 'MODULE_NAME', 1, 0, null, 0;
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'TERMINOLOGY'                     , 'vwTERMINOLOGY'                   , 'Terminology'              , null                       , 3, 'MODULE_NAME', 1, 0, null, 0;
GO

-- User Tables
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'TAB_MENUS'                       , 'vwMODULES_TabMenu_ByUser'        , 'Modules'                  , null                       , 0, null, 1, 1, 'USER_ID'         , 0;
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'vwUSERS_TEAM_MEMBERSHIPS'        , 'vwUSERS_TEAM_MEMBERSHIPS'        , 'Users'                    , 'Teams'                    , 0, null, 0, 0, 'USER_ID', 1, 'USER_ID';
-- 10/14/2020 Paul.  vwTEAM_MEMBERSHIPS_List is needed by the React Client. 
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'vwTEAM_MEMBERSHIPS_List'         , 'vwTEAM_MEMBERSHIPS_List'         , 'Teams'                    , 'Users'                    , 0, null, 1, 0, null, 1;

-- 12/31/2017 Paul.  We should not sync the USERS view directly as it can contain encrypted passwords. 
-- Use vwUSERS_Sync instead as it filters these fields. 
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'USERS'                           , 'vwUSERS_Sync'                    , 'Users'                    , null                       , 0, null, 1, 0, null, 0;
-- 10/04/2020 Paul.  The React Client needs access to users for assigned to selection. 
-- Do not tie to the users module as a user that cannot access the Users module can still select a user.  
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'vwUSERS_ASSIGNED_TO_List'        , 'vwUSERS_ASSIGNED_TO_List'        , null                       , null                       , 0, null, 0, 0, null, 0;
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'vwTEAMS_ASSIGNED_TO_List'        , 'vwTEAMS_ASSIGNED_TO_List'        , null                       , null                       , 0, null, 0, 1, 'MEMBERSHIP_USER_ID', 0, null;

exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'IMAGES'                          , 'vwIMAGES'                        , 'Images'                   , null                       , 0, null, 0, 0, null, 0;

-- 09/12/2019 Paul.  Users.ACLRoles is used in the React Client.  USER_ID will be a required field. 
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'vwUSERS_ACL_ROLES'                 , 'vwUSERS_ACL_ROLES'               , 'Users'                    , null                       , 0, null, 0, 0, 'USER_ID', 1, 'USER_ID';
-- 09/13/2019 Paul.  Users.Logins is used in the React Client.  USER_ID will be a required field. 
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'vwUSERS_LOGINS'                    , 'vwUSERS_LOGINS'                  , 'Users'                    , null                       , 0, null, 0, 0, 'USER_ID', 1, 'USER_ID';

-- 05/12/2017 Paul.  Add HTML5 Dashboard. 
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'DASHBOARD_APPS'                    , 'vwDASHBOARD_APPS'                , null                       , null                       , 1, 'MODULE_NAME', 1, 0, null, 0;
-- update SYSTEM_REST_TABLES set ASSIGNED_FIELD_NAME = null, IS_ASSIGNED = 0, DATE_MODIFIED = getdate() where TABLE_NAME = 'DASHBOARDS' and ASSIGNED_FIELD_NAME = 'ASSIGNED_USER_ID'
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'DASHBOARDS'                        , 'vwDASHBOARDS'                    , 'Dashboard'                , null                       , 0, null, 0, 0, null, 0;
-- delete from SYSTEM_REST_TABLES where TABLE_NAME = 'DASHBOARDS_PANELS';
-- update SYSTEM_REST_TABLES set ASSIGNED_FIELD_NAME = null, IS_ASSIGNED = 0, DATE_MODIFIED = getdate() where TABLE_NAME = 'DASHBOARDS_PANELS' and ASSIGNED_FIELD_NAME = 'PARENT_ASSIGNED_USER_ID'
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'DASHBOARDS_PANELS'                 , 'vwDASHBOARDS_PANELS'             , 'DashboardPanels'          , null                       , 1, 'MODULE_NAME', 0, 0, null, 0;

-- 05/07/019 Paul.  Allow access to SAVED_SEARCH for the React client. 
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'SAVED_SEARCH'                      , 'vwSAVED_SEARCH'                  , null                       , null                       , 0, 'SEARCH_MODULE', 0, 1, 'ASSIGNED_USER_ID', 0;

-- 09/17/2019 Paul.  Allow access to SystemLog for the React client. 
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'SYSTEM_LOG'                        , 'vwSYSTEM_LOG'                    , 'SystemLog'                , null                       , 0, null, 1, 0, null, 0;
-- 03/10/2021 Paul.  Instead of allowing access to all tables to an admin, require that the table be registerd and admin acces to module. 
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'SYSTEM_SYNC_LOG'                   , 'vwSYSTEM_SYNC_LOG'               , 'SystemSyncLog'            , null                       , 0, null, 1, 0, null, 0;
GO

-- 11/25/2020 Paul.  We need a way to call a generic procedure.  Security is still managed through SYSTEM_REST_TABLES. 
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'spTERMINOLOGY_LIST_Insert'         , 'spTERMINOLOGY_LIST_Insert'       , 'Terminology'              , null                       , 0, null, 1, 0, null, 0, 'LANG LIST_NAME';
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'spTERMINOLOGY_LIST_Delete'         , 'spTERMINOLOGY_LIST_Delete'       , 'Terminology'              , null                       , 0, null, 1, 0, null, 0, 'ID';
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'spTERMINOLOGY_LIST_MoveItem'       , 'spTERMINOLOGY_LIST_MoveItem'     , 'Terminology'              , null                       , 0, null, 1, 0, null, 0, 'LANG LIST_NAME';
-- 02/20/2021 Paul.  Configure Tabs. 
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'spMODULES_TAB_ORDER_MoveItem'      , 'spMODULES_TAB_ORDER_MoveItem'    , 'Modules'                  , null                       , 0, null, 1, 0, null, 0, 'OLD_INDEX NEW_INDEX';
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'spMODULES_TAB_Show'                , 'spMODULES_TAB_Show'              , 'Modules'                  , null                       , 0, null, 1, 0, null, 0, 'ID';
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'spMODULES_TAB_Hide'                , 'spMODULES_TAB_Hide'              , 'Modules'                  , null                       , 0, null, 1, 0, null, 0, 'ID';
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'spMODULES_TAB_ShowMobile'          , 'spMODULES_TAB_ShowMobile'        , 'Modules'                  , null                       , 0, null, 1, 0, null, 0, 'ID';
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'spMODULES_TAB_HideMobile'          , 'spMODULES_TAB_HideMobile'        , 'Modules'                  , null                       , 0, null, 1, 0, null, 0, 'ID';
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'spMODULES_Enable'                  , 'spMODULES_Enable'                , 'Modules'                  , null                       , 0, null, 1, 0, null, 0, 'ID';
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'spMODULES_Disable'                 , 'spMODULES_Disable'               , 'Modules'                  , null                       , 0, null, 1, 0, null, 0, 'ID';
-- 02/21/2021 Paul.  Languages. 
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'spLANGUAGES_Enable'                 , 'spLANGUAGES_Enable'             , 'Languages'                , null                       , 0, null, 1, 0, null, 0, 'NAME';
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'spLANGUAGES_Disable'                , 'spLANGUAGES_Disable'            , 'Languages'                , null                       , 0, null, 1, 0, null, 0, 'NAME';
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'spLANGUAGES_Delete'                 , 'spLANGUAGES_Delete'             , 'Languages'                , null                       , 0, null, 1, 0, null, 0, 'NAME';

-- 01/19/2021 Paul.  System tables need by the React client. 
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'vwACL_ROLES_USERS'                 , 'vwACL_ROLES_USERS'               , 'ACLRoles'                 , 'Users'                    , 0, null, 1, 0, null, 1, null;
-- 01/29/2021 Paul.  Add EditCustomFields to React client. 
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'vwFIELDS_META_DATA_List'           , 'vwFIELDS_META_DATA_List'         , 'EditCustomFields'         , null                       , 0, null, 1, 0, null, 0, null;
-- 02/18/2021 Paul.  System tables need by the React client. 
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'vwMODULES_RenameTabs'              , 'vwMODULES_RenameTabs'            , null                       , null                       , 0, null, 1, 0, null, 0, 'LANG';
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'vwMODULES_CONFIGURE_TABS'          , 'vwMODULES_CONFIGURE_TABS'        , null                       , null                       , 0, null, 1, 0, null, 0, null;
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'vwSYSTEM_CURRENCY_LOG'             , 'vwSYSTEM_CURRENCY_LOG'           , null                       , null                       , 0, null, 1, 0, null, 0, null;
GO

-- 03/11/2021 Paul.  All system tables will require registration. 
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'SCHEDULERS'                        , 'vwSCHEDULERS'                    , 'Schedulers'               , null                       , 0, null, 1, 0, null, 0, null;
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'USERS_LOGINS'                      , 'vwUSERS_LOGINS'                  , 'UserLogins'               , null                       , 0, null, 1, 0, null, 0, null;
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'AUDIT_EVENTS'                      , 'vwAUDIT_EVENTS'                  , 'AuditEvents'              , null                       , 0, null, 1, 0, null, 0, null;
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'FIELD_VALIDATORS'                  , 'vwFIELD_VALIDATORS'              , 'FieldValidators'          , null                       , 0, null, 1, 0, null, 0, null;
-- 07/06/2021 Paul.  Provide an quick and easy way to enable/disable React client. 
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'spMODULES_UpdateRelativePath'    , 'spMODULES_UpdateRelativePath'    , 'Modules'                  , null                       , 0, null, 1, 0, null, 0, 'MODULE_NAME RELATIVE_PATH';

-- 09/09/2021 Paul.  System tables need by the React client. 
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'spSqlBackupDatabase'               , 'spSqlBackupDatabase'             , 'Administration'           , null                       , 0, null, 1, 0, null, 0, null;
exec dbo.spSYSTEM_REST_TABLES_InsertOnly null, 'spSCHEDULERS_UpdateStatus'         , 'spSCHEDULERS_UpdateStatus'       , 'Schedulers'               , null                       , 0, null, 1, 0, null, 0, null;
GO


set nocount off;
GO




print 'TIMEZONES defaults';
GO
-- delete TIMEZONES
set nocount on;
GO

-- 12/05/2005 Paul.  TimeZone GUIDs must never change.
-- 02/22/2007 Paul.  2007 time zone update for Microsoft Windows operating systems
-- 01/02/2012 Paul.  Add iCal TZID. 
-- http://support.microsoft.com/kb/928388
exec dbo.spTIMEZONES_InsertOnly 'F36A41C1-9629-49BC-B6FE-2803E0F2B1F4', null, '(GMT-12:00) International Date Line West'                     , 'Dateline Standard Time'         , ''    , 'Dateline Daylight Time'         , ''    ,  720, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, '', null;
exec dbo.spTIMEZONES_InsertOnly '24DFE12E-FE3A-4155-8DB0-63589DAFFCDF', null, '(GMT-11:00) Samoa'                                            , 'Samoa Standard Time'            , ''    , 'Samoa Daylight Time'            , ''    ,  660, 0, -60, 0,  1, 1, 5,  0,  0, 0,  9, 5, 6, 23, 59, 'Pacific/Niue', null;
exec dbo.spTIMEZONES_InsertOnly '41F562C7-5F39-4E14-B5A9-B3956C4D3131', null, '(GMT-11:00) Coordinated Universal Time-11'                    , 'UTC-11'                         , ''    , 'UTC-11'                         , ''    ,  660, 0,   0, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Pacific/Midway', null;
exec dbo.spTIMEZONES_InsertOnly 'C967283B-CD20-489E-897F-AC65A2862402', null, '(GMT-10:00) Hawaii'                                           , 'Hawaiian Standard Time'         , 'HAST', 'Hawaiian Daylight Time'         , 'HADT',  600, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Pacific/Honolulu', 'US/Hawaii';
exec dbo.spTIMEZONES_InsertOnly '9A7158B7-00EE-48FC-8248-DEC3110D178A', null, '(GMT-09:00) Alaska'                                           , 'Alaskan Standard Time'          , ''    , 'Alaskan Daylight Time'          , ''    ,  540, 0, -60, 0, 11, 1, 0,  2,  0, 0,  3, 2, 0,  2,  0, 'America/Anchorage', 'US/Alaska';
exec dbo.spTIMEZONES_InsertOnly 'C673A14F-A5A5-4E20-9EBC-B30E8D947724', null, '(GMT-08:00) Baja California'                                  , 'Pacific Standard Time (Mexico)' , ''    , 'Pacific Daylight Time (Mexico)' , ''    ,  480, 0, -60, 0, 10, 5, 0,  2,  0, 0,  4, 1, 0,  2,  0, 'America/Tijuana', null;
exec dbo.spTIMEZONES_InsertOnly '268F59E2-F97E-405C-B2A4-A121717F5BAC', null, '(GMT-08:00) Pacific Time (US & Canada)'                       , 'Pacific Standard Time'          , ''    , 'Pacific Daylight Time'          , ''    ,  480, 0, -60, 0, 11, 1, 0,  2,  0, 0,  3, 2, 0,  2,  0, 'America/Los_Angeles', 'US/Pacific';
exec dbo.spTIMEZONES_InsertOnly '1D9BE131-AA9F-47D8-8D29-533274C0C489', null, '(GMT-08:00) Tijuana'                                          , 'Pacific Standard Time (Mexico)' , ''    , 'Pacific Daylight Time (Mexico)' , ''    ,  480, 0, -60, 0, 10, 5, 0,  2,  0, 0,  4, 1, 0,  2,  0, 'America/Tijuana', null;
exec dbo.spTIMEZONES_InsertOnly '550973B0-80C5-4292-9246-164DFCED2D29', null, '(GMT-07:00) Chihuahua, La Paz, Mazatlan - Old'                , 'Mexico Standard Time 2'         , ''    , 'Mexico Daylight Time 2'         , ''    ,  420, 0, -60, 0, 10, 5, 0,  2,  0, 0,  4, 1, 0,  2,  0, 'America/Chihuahua', null;
exec dbo.spTIMEZONES_InsertOnly '8438B47D-71D9-4E91-B230-8630FF73C9D0', null, '(GMT-07:00) Mountain Time (US & Canada)'                      , 'Mountain Standard Time'         , ''    , 'Mountain Daylight Time'         , ''    ,  420, 0, -60, 0, 11, 1, 0,  2,  0, 0,  3, 2, 0,  2,  0, 'America/Denver', 'US/Mountain';
exec dbo.spTIMEZONES_InsertOnly 'D2F9936C-3EA8-4F66-A64B-7CB06E86BC87', null, '(GMT-07:00) Arizona'                                          , 'US Mountain Standard Time'      , ''    , 'US Mountain Daylight Time'      , ''    ,  420, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'America/Phoenix', 'US/Arizona';
exec dbo.spTIMEZONES_InsertOnly '4D4E313A-4328-4A50-95F9-7E52A3093245', null, '(GMT-07:00) Chihuahua, La Paz, Mazatlan - New'                , 'Mountain Standard Time (Mexico)', ''    , 'Mountain Daylight Time (Mexico)', ''    ,  420, 0, -60, 0, 10, 5, 0,  2,  0, 0,  4, 1, 0,  2,  0, 'America/Mazatlan', null;
exec dbo.spTIMEZONES_InsertOnly '58221B6D-1E37-4FD4-A763-4FD4166BFE22', null, '(GMT-06:00) Central Time (US & Canada)'                       , 'Central Standard Time'          , ''    , 'Central Daylight Time'          , ''    ,  360, 0, -60, 0, 11, 1, 0,  2,  0, 0,  3, 2, 0,  2,  0, 'America/Chicago', 'US/Central';
exec dbo.spTIMEZONES_InsertOnly '0DCB0439-AB37-42FA-976D-8C12D9057BF8', null, '(GMT-06:00) Central America'                                  , 'Central America Standard Time'  , ''    , 'Central America Daylight Time'  , ''    ,  360, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'America/Costa_Rica', null;
exec dbo.spTIMEZONES_InsertOnly '6D05E182-D39F-416C-829E-27CB5259A76C', null, '(GMT-06:00) Saskatchewan'                                     , 'Canada Central Standard Time'   , ''    , 'Canada Central Daylight Time'   , ''    ,  360, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'America/Regina', null;
exec dbo.spTIMEZONES_InsertOnly 'F3AB7C85-482C-4D04-9D7F-D5D90225E236', null, '(GMT-06:00) Guadalajara, Mexico City, Monterrey - New'        , 'Central Standard Time (Mexico)' , ''    , 'Central Daylight Time (Mexico)' , ''    ,  360, 0, -60, 0, 10, 5, 0,  2,  0, 0,  4, 1, 0,  2,  0, 'America/Mexico_City', null;
exec dbo.spTIMEZONES_InsertOnly 'D263A763-1FCC-41DA-9637-B8EFB72B625B', null, '(GMT-06:00) Guadalajara, Mexico City, Monterrey - Old'        , 'Mexico Standard Time'           , ''    , 'Mexico Daylight Time'           , ''    ,  360, 0, -60, 0, 10, 5, 0,  2,  0, 0,  4, 1, 0,  2,  0, 'America/Monterrey', null;
exec dbo.spTIMEZONES_InsertOnly 'BFA61AF7-26ED-4020-A0C1-39A15E4E9E0A', null, '(GMT-05:00) Eastern Time (US & Canada)'                       , 'Eastern Standard Time'          , ''    , 'Eastern Daylight Time'          , ''    ,  300, 0, -60, 0, 11, 1, 0,  2,  0, 0,  3, 2, 0,  2,  0, 'America/New_York', 'US/Eastern';
exec dbo.spTIMEZONES_InsertOnly 'B511FC87-1220-43F1-BEE7-AF6CF387EE41', null, '(GMT-05:00) Indiana (East)'                                   , 'US Eastern Standard Time'       , ''    , 'US Eastern Daylight Time'       , ''    ,  300, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'America/Indiana/Indianapolis', 'US/East-Indiana';
exec dbo.spTIMEZONES_InsertOnly 'EA19DA01-0490-46E7-8424-78D4193C9CAC', null, '(GMT-05:00) Bogota, Lima, Quito'                              , 'SA Pacific Standard Time'       , ''    , 'SA Pacific Daylight Time'       , ''    ,  300, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'America/Bogota', null;
exec dbo.spTIMEZONES_InsertOnly '43017557-D77B-4616-8CF3-0262D6ED86CE', null, '(GMT-04:30) Caracas'                                          , 'Venezuela Standard Time'        , ''    , 'Venezuela Daylight Time'        , ''    ,  270, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'America/Caracas', null;
exec dbo.spTIMEZONES_InsertOnly '5CD19170-0CC5-47C0-A384-35E8C25760DE', null, '(GMT-04:00) Georgetown, La Paz, Manaus, San Juan'             , 'SA Western Standard Time'       , ''    , 'SA Western Daylight Time'       , ''    ,  240, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'America/La_Paz', null;
exec dbo.spTIMEZONES_InsertOnly '75A179F9-B4CC-4182-8CB4-46EF0094964B', null, '(GMT-04:00) Cuiaba'                                           , 'Central Brazilian Standard Time', ''    , 'Central Brazilian Daylight Time', ''    ,  240, 0, -60, 0,  2, 3, 6, 23, 59, 0, 10, 3, 6, 23, 59, 'America/Cuiaba', null;
exec dbo.spTIMEZONES_InsertOnly '4FCD4D7A-F83E-4642-99C8-4D8D78C98BAE', null, '(GMT-04:00) Asuncion'                                         , 'Paraguay Standard Time'         , ''    , 'Paraguay Daylight Time'         , ''    ,  240, 0, -60, 0,  3, 2, 6, 23, 59, 0, 10, 3, 6, 23, 59, 'America/Asuncion', null;
exec dbo.spTIMEZONES_InsertOnly '50A0B70B-1ADF-4E91-988A-99C33BD5C882', null, '(GMT-04:00) Atlantic Time (Canada)'                           , 'Atlantic Standard Time'         , ''    , 'Atlantic Daylight Time'         , ''    ,  240, 0, -60, 0, 11, 1, 0,  2,  0, 0,  3, 2, 0,  2,  0, 'America/Montreal', null;
exec dbo.spTIMEZONES_InsertOnly '8672F957-6CCA-4693-9F94-D4C5BEBC8409', null, '(GMT-04:00) Manaus'                                           , 'Central Brazilian Standard Time', ''    , 'Central Brazilian Daylight Time', ''    ,  240, 0, -60, 0,  2, 5, 0,  0,  0, 0, 11, 1, 0,  0,  0, 'America/Manaus', null;
exec dbo.spTIMEZONES_InsertOnly '888A2212-E23F-4A50-8D0E-FDAB4449F0E0', null, '(GMT-04:00) Santiago'                                         , 'Pacific SA Standard Time'       , ''    , 'Pacific SA Daylight Time'       , ''    ,  240, 0, -60, 0,  3, 2, 6, 23, 59, 0, 10, 2, 6, 23, 59, 'America/Santiago', null;
exec dbo.spTIMEZONES_InsertOnly '520DE762-8EFC-48D3-BAAD-0B609C076F9E', null, '(GMT-03:30) Newfoundland'                                     , 'Newfoundland Standard Time'     , ''    , 'Newfoundland Daylight Time'     , ''    ,  210, 0, -60, 0, 11, 1, 0,  0,  1, 0,  3, 2, 0,  0,  1, 'America/St_Johns', null;
exec dbo.spTIMEZONES_InsertOnly '42FA192A-0F75-4F90-B061-062DBEC39B1A', null, '(GMT-03:00) Brasilia'                                         , 'E. South America Standard Time' , ''    , 'E. South America Daylight Time' , ''    ,  180, 0, -60, 0,  2, 3, 6, 23, 59, 0, 10, 3, 6, 23, 59, 'America/Santiago', null;
exec dbo.spTIMEZONES_InsertOnly '1DD760BE-F248-4561-BA7D-5F652A3DF86E', null, '(GMT-03:00) Cayenne, Fortaleza'                               , 'SA Eastern Standard Time'       , ''    , 'SA Eastern Daylight Time'       , ''    ,  180, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'America/Fortaleza', null;
exec dbo.spTIMEZONES_InsertOnly '2082EFF9-2AF0-446C-A0AC-5FA4065BFC74', null, '(GMT-03:00) Buenos Aires'                                     , 'Argentina Standard Time'        , ''    , 'Argentina Daylight Time'        , ''    ,  180, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'America/Argentina/Buenos_Aires', null;
exec dbo.spTIMEZONES_InsertOnly '73607FE7-BCCB-4F99-812D-896FE09B4B74', null, '(GMT-03:00) Montevideo'                                       , 'Montevideo Standard Time'       , ''    , 'Montevideo Daylight Time'       , ''    ,  180, 0, -60, 0,  3, 2, 0,  2,  0, 0, 10, 1, 0,  2,  0, 'America/Montevideo', null;
exec dbo.spTIMEZONES_InsertOnly '58C1E56E-D865-416A-974E-F658B2F3ECD7', null, '(GMT-03:00) Greenland'                                        , 'Greenland Standard Time'        , ''    , 'Greenland Daylight Time'        , ''    ,  180, 0, -60, 0, 10, 5, 6, 23,  0, 0,  3, 5, 6, 22,  0, 'America/Godthab', null;
exec dbo.spTIMEZONES_InsertOnly '8DB3A600-5241-4E6B-A828-82F4EFCD144F', null, '(GMT-02:00) Mid-Atlantic'                                     , 'Mid-Atlantic Standard Time'     , ''    , 'Mid-Atlantic Daylight Time'     , ''    ,  120, 0, -60, 0,  9, 5, 0,  2,  0, 0,  3, 5, 0,  2,  0, 'America/Noronha', null;
exec dbo.spTIMEZONES_InsertOnly '86111DF9-0EAE-411F-A576-1BB9C0DD4E96', null, '(GMT-02:00) Coordinated Universal Time-02'                    , 'UTC-02'                         , ''    , 'UTC-02'                         , ''    ,  120, 0,   0, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Atlantic/South_Georgia', null;
exec dbo.spTIMEZONES_InsertOnly '7D0A1F29-7C41-48B0-9F7B-3D48200FE9DB', null, '(GMT-01:00) Azores'                                           , 'Azores Standard Time'           , ''    , 'Azores Daylight Time'           , ''    ,   60, 0, -60, 0, 10, 5, 0,  3,  0, 0,  3, 5, 0,  2,  0, 'Atlantic/Azores', null;
exec dbo.spTIMEZONES_InsertOnly '1B85B353-5C04-424F-9A03-832D52346A2C', null, '(GMT-01:00) Cape Verde Is.'                                   , 'Cape Verde Standard Time'       , ''    , 'Cape Verde Daylight Time'       , ''    ,   60, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Atlantic/Cape_Verde', null;
exec dbo.spTIMEZONES_InsertOnly 'A117C298-D47B-4109-8D74-8ACF1E15DD5D', null, '(GMT) Monrovia, Reykjavik'                                    , 'Greenwich Standard Time'        , ''    , 'Greenwich Daylight Time'        , ''    ,    0, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Africa/Monrovia', null;
exec dbo.spTIMEZONES_InsertOnly 'F508954A-7266-4AF2-8647-79B2608553EA', null, '(GMT) Coordinated Universal Time'                             , 'Coordinated Universal Time'     , ''    , 'Coordinated Universal Time'     , ''    ,    0, 0,   0, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Atlantic/St_Helena', null;
exec dbo.spTIMEZONES_InsertOnly '31B9CD5F-786C-43E5-931E-01F44F97870A', null, '(GMT) Casablanca'                                             , 'Morocco Standard Time'          , ''    , 'Morocco Daylight Time'          , ''    ,    0, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Africa/Casablanca', null;
exec dbo.spTIMEZONES_InsertOnly '3A839968-3BBD-4EA9-BDBC-D71F0A2C72E0', null, '(GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London', 'GMT Standard Time'              , 'GMT' , 'GMT Daylight Time'              , 'BST' ,    0, 0, -60, 0, 10, 5, 0,  2,  0, 0,  3, 5, 0,  1,  0, 'Europe/London', null;
exec dbo.spTIMEZONES_InsertOnly '81136573-67F1-4419-8E9B-EA67F355D8DC', null, '(GMT+01:00) West Central Africa'                              , 'W. Central Africa Standard Time', ''    , 'W. Central Africa Daylight Time', ''    ,  -60, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Africa/Algiers', null;
exec dbo.spTIMEZONES_InsertOnly '9D878C30-D8F5-4F2C-8426-FD5D7A05B64D', null, '(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague', 'Central Europe Standard Time'   , 'CET' , 'Central Europe Daylight Time'   , 'CEST',  -60, 0, -60, 0, 10, 5, 0,  3,  0, 0,  3, 5, 0,  2,  0, 'Europe/Belgrade', null;
exec dbo.spTIMEZONES_InsertOnly 'DAD36AE6-BCC5-4019-946A-428CE8D0D1E5', null, '(GMT+01:00) Brussels, Copenhagen, Madrid, Paris'              , 'Romance Standard Time'          , ''    , 'Romance Daylight Time'          , ''    ,  -60, 0, -60, 0, 10, 5, 0,  3,  0, 0,  3, 5, 0,  2,  0, 'Europe/Paris', null;
exec dbo.spTIMEZONES_InsertOnly 'E514F96A-F21F-461B-9275-615084D78724', null, '(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb'                 , 'Central European Standard Time' , 'CET' , 'Central European Daylight Time' , 'CEST',  -60, 0, -60, 0, 10, 5, 0,  3,  0, 0,  3, 5, 0,  2,  0, 'Europe/Sarajevo', null;
exec dbo.spTIMEZONES_InsertOnly 'CAEBF7EF-E317-4421-8036-64F44C985A07', null, '(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna' , 'W. Europe Standard Time'        , 'WET' , 'W. Europe Daylight Time'        , 'WEST',  -60, 0, -60, 0, 10, 5, 0,  3,  0, 0,  3, 5, 0,  2,  0, 'Europe/Berlin', null;
exec dbo.spTIMEZONES_InsertOnly '7D08E8D0-E259-4721-AF5F-65046D98C854', null, '(GMT+02:00) Cairo'                                            , 'Egypt Standard Time'            , ''    , 'Egypt Daylight Time'            , ''    , -120, 0, -60, 0,  9, 5, 4, 23, 59, 0,  4, 5, 4, 23, 59, 'Africa/Cairo', null;
exec dbo.spTIMEZONES_InsertOnly 'BBFD3CF5-C990-4EE1-9D2D-6B67A208303E', null, '(GMT+02:00) Bucharest'                                        , 'E. Europe Standard Time'        , 'EET' , 'E. Europe Daylight Time'        , 'EEST', -120, 0, -60, 0, 10, 5, 0,  1,  0, 0,  3, 5, 0,  0,  0, 'Europe/Bucharest', null;
exec dbo.spTIMEZONES_InsertOnly '858C2109-EC3A-4FF0-93A3-53C714C4264B', null, '(GMT+02:00) Windhoek'                                         , 'Namibia Standard Time'          , ''    , 'Namibia Daylight Time'          , ''    , -120, 0,  60, 0,  9, 1, 0,  2,  0, 0,  4, 1, 0,  2,  0, 'Africa/Windhoek', null;
exec dbo.spTIMEZONES_InsertOnly '194765E4-1C6E-4C3E-A3F0-4EA9668B57D2', null, '(GMT+02:00) Amman'                                            , 'Jordan Standard Time'           , ''    , 'Jordan Daylight Time'           , ''    , -120, 0, -60, 0, 10, 5, 5,  1,  0, 0,  3, 5, 4, 23, 59, 'Asia/Amman', null;
exec dbo.spTIMEZONES_InsertOnly 'E5E14949-2667-4655-B57F-4B77054A5912', null, '(GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius'    , 'FLE Standard Time'              , ''    , 'FLE Daylight Time'              , ''    , -120, 0, -60, 0, 10, 5, 0,  4,  0, 0,  3, 5, 0,  3,  0, 'Europe/Helsinki', null;
exec dbo.spTIMEZONES_InsertOnly '19929269-9524-4623-A6E6-1E55750283A2', null, '(GMT+02:00) Minsk'                                            , 'E. Europe Standard Time'        , ''    , 'E. Europe Daylight Time'        , ''    , -120, 0, -60, 0, 10, 5, 0,  3,  0, 0,  3, 5, 0,  2,  0, 'Europe/Minsk', null;
exec dbo.spTIMEZONES_InsertOnly '44E44D65-2EB9-4287-BCF3-25C27AD2009A', null, '(GMT+02:00) Harare, Pretoria'                                 , 'South Africa Standard Time'     , ''    , 'South Africa Daylight Time'     , ''    , -120, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Africa/Harare', null;
exec dbo.spTIMEZONES_InsertOnly '6F89AC63-2AC6-4824-B136-FF0CDD2155BF', null, '(GMT+02:00) Jerusalem'                                        , 'Jerusalem Standard Time'        , ''    , 'Jerusalem Daylight Time'        , ''    , -120, 0, -60, 0,  9, 2, 0,  2,  0, 0,  3, 5, 5,  2,  0, 'Asia/Jerusalem', null;
exec dbo.spTIMEZONES_InsertOnly 'D16F0AB4-FE3B-4C64-A23C-D3DF1B5ECC7C', null, '(GMT+02:00) Athens, Bucharest, Istanbul'                      , 'GTB Standard Time'              , ''    , 'GTB Daylight Time'              , ''    , -120, 0, -60, 0, 10, 5, 0,  4,  0, 0,  3, 5, 0,  3,  0, 'Europe/Athens', null;
exec dbo.spTIMEZONES_InsertOnly '4DF3C0B2-D6DD-4F58-A98E-C417C3EE5B0F', null, '(GMT+02:00) Beirut'                                           , 'Middle East Standard Time'      , ''    , 'Middle East Daylight Time'      , ''    , -120, 0, -60, 0, 10, 5, 6, 23, 59, 0,  3, 5, 0,  0,  0, 'Asia/Beirut', null;
exec dbo.spTIMEZONES_InsertOnly 'C273A271-8FF1-4075-9032-CD9E673DDF23', null, '(GMT+03:00) Kuwait, Riyadh'                                   , 'Arab Standard Time'             , ''    , 'Arab Daylight Time'             , ''    , -180, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Asia/Kuwait', null;
exec dbo.spTIMEZONES_InsertOnly '7636D339-6DF9-4718-BE9F-F86598DD3D66', null, '(GMT+03:00) Moscow, St. Petersburg, Volgograd'                , 'Russian Standard Time'          , ''    , 'Russian Daylight Time'          , ''    , -180, 0, -60, 0, 10, 5, 0,  3,  0, 0,  3, 5, 0,  2,  0, 'Europe/Moscow', null;
exec dbo.spTIMEZONES_InsertOnly '1B7F6672-9B86-40ED-927A-394FC542722C', null, '(GMT+03:00) Nairobi'                                          , 'E. Africa Standard Time'        , ''    , 'E. Africa Daylight Time'        , ''    , -180, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Africa/Nairobi', null;
exec dbo.spTIMEZONES_InsertOnly '0DC199F6-A5B2-4BCD-A8E1-826AB8FEEB32', null, '(GMT+03:00) Baghdad'                                          , 'Arabic Standard Time'           , ''    , 'Arabic Daylight Time'           , ''    , -180, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Asia/Baghdad', null;
exec dbo.spTIMEZONES_InsertOnly 'C05F69F6-F919-4E9B-A707-AF5D6C3E7C7A', null, '(GMT+03:30) Tehran'                                           , 'Iran Standard Time'             , ''    , 'Iran Daylight Time'             , ''    , -210, 0, -60, 0,  9, 3, 1, 23, 59, 0,  3, 3, 6, 23, 59, 'Asia/Tehran', null;
exec dbo.spTIMEZONES_InsertOnly '91381A1B-34C1-4052-BD91-9D360238FC0E', null, '(GMT+04:00) Caucasus Standard Time'                           , 'Caucasus Standard Time'         , ''    , 'Caucasus Daylight Time'         , ''    , -240, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Europe/Volgograd', null;
exec dbo.spTIMEZONES_InsertOnly '58F79ED0-C52A-442D-A612-7E74F33000A7', null, '(GMT+04:00) Port Louis'                                       , 'Mauritius Standard Time'        , ''    , 'Mauritius Daylight Time'        , ''    , -240, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Indian/Mauritius', null;
exec dbo.spTIMEZONES_InsertOnly '9FA1C3B6-B599-42AD-9D0B-3A7689CB381B', null, '(GMT+04:00) Abu Dhabi, Muscat'                                , 'Arabian Standard Time'          , ''    , 'Arabian Daylight Time'          , ''    , -240, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Asia/Dubai', null;
exec dbo.spTIMEZONES_InsertOnly 'D4668305-8FA5-4096-B569-0DCF5E8CE954', null, '(GMT+04:00) Tbilisi'                                          , 'Georgian Standard Time'         , ''    , 'Georgian Daylight Time'         , ''    , -240, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Asia/Tbilisi', null;
exec dbo.spTIMEZONES_InsertOnly '62483F7A-12EC-49CB-B5F9-EF6B81B5F3AB', null, '(GMT+04:00) Baku'                                             , 'Azerbaijan Standard Time'       , ''    , 'Azerbaijan Daylight Time'       , ''    , -240, 0, -60, 0, 10, 5, 0,  5,  0, 0,  3, 5, 0,  4,  0, 'Asia/Baku', null;
exec dbo.spTIMEZONES_InsertOnly '073973E6-14AD-4C67-9669-DEB57D554DD8', null, '(GMT+04:00) Yerevan'                                          , 'Armenian Standard Time'         , ''    , 'Armenian Daylight Time'         , ''    , -240, 0, -60, 0, 10, 5, 0,  3,  0, 0,  3, 5, 0,  2,  0, 'Asia/Yerevan', null;
exec dbo.spTIMEZONES_InsertOnly '07C11BFF-33FB-40D6-B2D6-65ED7B19FA5D', null, '(GMT+04:30) Kabul'                                            , 'Afghanistan Standard Time'      , ''    , 'Afghanistan Daylight Time'      , ''    , -270, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Asia/Kabul', null;
exec dbo.spTIMEZONES_InsertOnly '4AACC165-7793-4605-9EC2-6147522E9E76', null, '(GMT+05:00) Ekaterinburg'                                     , 'Ekaterinburg Standard Time'     , ''    , 'Ekaterinburg Daylight Time'     , ''    , -300, 0, -60, 0, 10, 5, 0,  3,  0, 0,  3, 5, 0,  2,  0, 'Asia/Yekaterinburg', null;
exec dbo.spTIMEZONES_InsertOnly 'CA16333F-349C-43E4-9957-CEDA2D356317', null, '(GMT+05:00) Tashkent'                                         , 'West Asia Standard Time'        , ''    , 'West Asia Daylight Time'        , ''    , -300, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Asia/Tashkent', null;
exec dbo.spTIMEZONES_InsertOnly '49BDFA0A-1063-4D43-BC96-D04A4A7EB8AD', null, '(GMT+05:00) Islamabad, Karachi'                               , 'Pakistan Standard Time'         , ''    , 'Pakistan Daylight Time'         , ''    , -300, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Asia/Karachi', null;
exec dbo.spTIMEZONES_InsertOnly '0EAB21AC-F270-471F-A108-1EF4F22C4820', null, '(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi'              , 'India Standard Time'            , ''    , 'India Daylight Time'            , ''    , -330, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Asia/Kolkata', null;
exec dbo.spTIMEZONES_InsertOnly '12239B05-FC89-4F55-B497-173A7D079721', null, '(GMT+05:30) Sri Jayawardenepura'                              , 'Sri Lanka Standard Time'        , ''    , 'Sri Lanka Daylight Time'        , ''    , -330, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Asia/Colombo', null;
exec dbo.spTIMEZONES_InsertOnly '715426FF-8D54-42EC-AD18-99FD237DCAFD', null, '(GMT+05:45) Kathmandu'                                        , 'Nepal Standard Time'            , ''    , 'Nepal Daylight Time'            , ''    , -345, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Asia/Kathmandu', null;
exec dbo.spTIMEZONES_InsertOnly '593A2F50-2B4F-4DF3-AC08-0C2ACF83D32E', null, '(GMT+06:00) Astana'                                           , 'Central Asia Standard Time'     , ''    , 'Central Asia Daylight Time'     , ''    , -360, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Asia/Qyzylorda', null;
exec dbo.spTIMEZONES_InsertOnly '9865D94B-28E0-41AD-877C-48AC3C677BC5', null, '(GMT+06:00) Dhaka'                                            , 'Bangladesh Standard Time'       , ''    , 'Bangladesh Daylight Time'       , ''    , -360, 0, -60, 0, 10, 5, 0, 23, 59, 0,  3, 5, 3, 22, 59, 'Asia/Dhaka', null;
exec dbo.spTIMEZONES_InsertOnly '927BD691-EC59-48AB-BB68-D5AA4EDE4B95', null, '(GMT+06:00) Novosibirsk'                                      , 'N. Central Asia Standard Time'  , ''    , 'N. Central Asia Daylight Time'  , ''    , -360, 0, -60, 0, 10, 5, 0,  3,  0, 0,  3, 5, 0,  2,  0, 'Asia/Novosibirsk', null;
exec dbo.spTIMEZONES_InsertOnly 'A76F0770-D7A3-415B-A6C9-DBA4F03EBF7E', null, '(GMT+06:30) Yangon (Rangoon)'                                 , 'Myanmar Standard Time'          , ''    , 'Myanmar Daylight Time'          , ''    , -390, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Asia/Rangoon', null;
exec dbo.spTIMEZONES_InsertOnly '57F7596F-28DD-4284-BACF-3BB701E2347A', null, '(GMT+06:30) Rangoon'                                          , 'Myanmar Standard Time'          , ''    , 'Myanmar Daylight Time'          , ''    , -390, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Asia/Rangoon', null;
exec dbo.spTIMEZONES_InsertOnly '57B7E1A1-929E-45B5-8D89-D8D7BA7E5ED4', null, '(GMT+07:00) Krasnoyarsk'                                      , 'North Asia Standard Time'       , ''    , 'North Asia Daylight Time'       , ''    , -420, 0, -60, 0, 10, 5, 0,  3,  0, 0,  3, 5, 0,  2,  0, 'Asia/Krasnoyarsk', null;
exec dbo.spTIMEZONES_InsertOnly '207AB644-0B6B-4E8E-8316-E68AD7B9F924', null, '(GMT+07:00) Bangkok, Hanoi, Jakarta'                          , 'SE Asia Standard Time'          , ''    , 'SE Asia Daylight Time'          , ''    , -420, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Asia/Bangkok', null;
exec dbo.spTIMEZONES_InsertOnly 'C8EEB9EF-6930-45F7-9D0F-E988103E06F7', null, '(GMT+08:00) Perth'                                            , 'W. Australia Standard Time'     , ''    , 'W. Australia Daylight Time'     , ''    , -480, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Australia/Perth', null;
exec dbo.spTIMEZONES_InsertOnly 'CD14F03B-3F04-439C-A0C8-DC9EB9ED79AC', null, '(GMT+08:00) Ulaanbaatar'                                      , 'Ulaanbaatar Standard Time'      , ''    , 'Ulaanbaatar Daylight Time'      , ''    , -480, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Asia/Ulaanbaatar', null;
exec dbo.spTIMEZONES_InsertOnly 'A33D194B-3380-4D0B-B8E9-CDF4A860987F', null, '(GMT+08:00) Irkutsk'                                          , 'North Asia East Standard Time'  , ''    , 'North Asia East Daylight Time'  , ''    , -480, 0, -60, 0, 10, 5, 0,  3,  0, 0,  3, 5, 0,  2,  0, 'Asia/Macau', null;
exec dbo.spTIMEZONES_InsertOnly 'DE4275F1-D549-4F7A-9CEF-C770A14E91E5', null, '(GMT+08:00) Taipei'                                           , 'Taipei Standard Time'           , ''    , 'Taipei Daylight Time'           , ''    , -480, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Asia/Taipei', null;
exec dbo.spTIMEZONES_InsertOnly 'D3D9FDE4-5E20-4A62-8CCF-666B0EC2018E', null, '(GMT+08:00) Kuala Lumpur, Singapore'                          , 'Malay Peninsula Standard Time'  , ''    , 'Malay Peninsula Daylight Time'  , ''    , -480, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Asia/Singapore', null;
exec dbo.spTIMEZONES_InsertOnly 'E6324E74-9851-41FF-9A4F-6B3D963BAB6D', null, '(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi'            , 'China Standard Time'            , ''    , 'China Daylight Time'            , ''    , -480, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Asia/Hong_Kong', null;
exec dbo.spTIMEZONES_InsertOnly '7B1FBF3C-E277-4E89-ACEB-66AEAED276BA', null, '(GMT+09:00) Seoul'                                            , 'Korea Standard Time'            , ''    , 'Korea Daylight Time'            , ''    , -540, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Asia/Seoul', null;
exec dbo.spTIMEZONES_InsertOnly '6F8EC4F0-80FE-4FB9-A4AE-01989F2D2D15', null, '(GMT+09:00) Osaka, Sapporo, Tokyo'                            , 'Tokyo Standard Time'            , ''    , 'Tokyo Daylight Time'            , ''    , -540, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Asia/Tokyo', null;
exec dbo.spTIMEZONES_InsertOnly '6EB27FA5-09A3-44EE-AC05-EEF4830E8205', null, '(GMT+09:00) Yakutsk'                                          , 'Yakutsk Standard Time'          , ''    , 'Yakutsk Daylight Time'          , ''    , -540, 0, -60, 0, 10, 5, 0,  3,  0, 0,  3, 5, 0,  2,  0, 'Asia/Yakutsk', null;
exec dbo.spTIMEZONES_InsertOnly '6BA48BB0-1172-46D1-BE2A-37E16BB81474', null, '(GMT+09:30) Adelaide'                                         , 'Cen. Australia Standard Time'   , ''    , 'Cen. Australia Daylight Time'   , ''    , -570, 0, -60, 0,  4, 1, 0,  3,  0, 0, 10, 1, 0,  2,  0, 'Australia/Adelaide', null;
exec dbo.spTIMEZONES_InsertOnly '168E4F1D-3F3D-48D8-9E7F-A43415AA1376', null, '(GMT+09:30) Darwin'                                           , 'AUS Central Standard Time'      , ''    , 'AUS Central Daylight Time'      , ''    , -570, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Australia/Darwin', null;
exec dbo.spTIMEZONES_InsertOnly '8F20CEDC-E4E9-47C3-BC00-66FA26B92E9B', null, '(GMT+10:00) Brisbane'                                         , 'E. Australia Standard Time'     , 'EST' , 'E. Australia Daylight Time'     , 'EDT' , -600, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Australia/Brisbane', null;
exec dbo.spTIMEZONES_InsertOnly 'ADC7E154-0F5C-425F-B1EC-287E24CAFBDB', null, '(GMT+10:00) Vladivostok'                                      , 'Vladivostok Standard Time'      , ''    , 'Vladivostok Daylight Time'      , ''    , -600, 0, -60, 0, 10, 5, 0,  3,  0, 0,  3, 5, 0,  2,  0, 'Asia/Vladivostok', null;
exec dbo.spTIMEZONES_InsertOnly '503ED687-9D4D-422D-984B-F3651731878F', null, '(GMT+10:00) Hobart'                                           , 'Tasmania Standard Time'         , ''    , 'Tasmania Daylight Time'         , ''    , -600, 0, -60, 0,  4, 1, 0,  3,  0, 0, 10, 1, 0,  2,  0, 'Australia/Hobart', null;
exec dbo.spTIMEZONES_InsertOnly '1BF9FD47-DBA6-4362-9763-C878D40C2CF1', null, '(GMT+10:00) Guam, Port Moresby'                               , 'West Pacific Standard Time'     , ''    , 'West Pacific Daylight Time'     , ''    , -600, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Pacific/Guam', null;
exec dbo.spTIMEZONES_InsertOnly 'B0F186A9-5875-4A06-92CC-B59156020D7D', null, '(GMT+10:00) Canberra, Melbourne, Sydney'                      , 'AUS Eastern Standard Time'      , ''    , 'AUS Eastern Daylight Time'      , ''    , -600, 0, -60, 0,  4, 1, 0,  3,  0, 0, 10, 1, 0,  2,  0, 'Australia/Sydney', null;
exec dbo.spTIMEZONES_InsertOnly 'EC6C359D-18A4-4BC8-AF31-D175745C0DF9', null, '(GMT+11:00) Magadan, Solomon Is., New Caledonia'              , 'Central Pacific Standard Time'  , ''    , 'Central Pacific Daylight Time'  , ''    , -660, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Pacific/Guadalcanal', null;
exec dbo.spTIMEZONES_InsertOnly 'A9E23A77-8F4F-4E3E-A55F-D62F1FB12BA2', null, '(GMT+12:00) Fiji'                                             , 'Fiji Standard Time'             , ''    , 'Fiji Daylight Time'             , ''    , -720, 0, -60, 0,  4, 5, 0,  3,  0, 0, 11, 5, 0,  2,  0, 'Pacific/Fiji', null;
exec dbo.spTIMEZONES_InsertOnly '608F0C8B-A6C7-41C6-A439-1E5F31F27C8D', null, '(GMT+12:00) Petropavlovsk-Kamchatsky'                         , 'Kamchatka Standard Time'        , ''    , 'Kamchatka Daylight Time'        , ''    , -720, 0, -60, 0, 10, 5, 0,  3,  0, 0,  3, 5, 0,  2,  0, 'Asia/Kamchatka', null;
exec dbo.spTIMEZONES_InsertOnly 'B3072E27-3E77-45DF-BED6-A10180AF3FAE', null, '(GMT+12:00) Coordinated Universal Time+12'                    , 'UTC+12'                         , ''    , 'UTC+12'                         , ''    , -720, 0,   0, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, '', null;
exec dbo.spTIMEZONES_InsertOnly '51962774-7C14-467E-8786-9BC88ADE8949', null, '(GMT+12:00) Auckland, Wellington'                             , 'New Zealand Standard Time'      , ''    , 'New Zealand Daylight Time'      , ''    , -720, 0, -60, 0,  4, 1, 0,  3,  0, 0,  9, 5, 0,  2,  0, 'Pacific/Auckland', null;
exec dbo.spTIMEZONES_InsertOnly '007B3F01-49A6-4990-89DB-6B012C450ABD', null, '(GMT+13:00) Nuku''alofa'                                      , 'Tonga Standard Time'            , ''    , 'Tonga Daylight Time'            , ''    , -780, 0, -60, 0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,  0, 'Pacific/Tongatapu', null;
GO


set nocount off;
GO


/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTIMEZONES_Defaults()
/

call dbo.spSqlDropProcedure('spTIMEZONES_Defaults')
/

-- #endif IBM_DB2 */




print 'ACL_ACTIONS defaults';
GO

set nocount on;
GO

exec dbo.spACL_ACTIONS_Initialize;
GO

-- 05/28/2007 Paul.  Delete duplicate ProjectTasks categories. 
if exists (select * from ACL_ACTIONS where Category = 'ProjectTasks' and DELETED = 0) begin -- then
	print 'Delete the invalid ProjectTasks category from ACL_ACTIONS.';
	update ACL_ACTIONS
	   set DATE_MODIFIED    = getdate()
	     , MODIFIED_USER_ID = null
	     , DELETED          = 1
	 where Category         = 'ProjectTasks'
	   and DELETED          = 0;
end -- if;
GO


set nocount off;
GO

/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spACL_ACTIONS_Defaults()
/

call dbo.spSqlDropProcedure('spACL_ACTIONS_Defaults')
/

-- #endif IBM_DB2 */



print 'CONFIG defaults';
GO

set nocount on;
GO

exec dbo.spCONFIG_InsertOnly null, 'system', 'disable_favorites'              , 'true';
exec dbo.spCONFIG_InsertOnly null, 'system', 'disable_following'              , 'true';
exec dbo.spCONFIG_InsertOnly null, 'system', 'enable_activity_streams'        , 'false';
GO

set nocount off;
GO

/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spCONFIG_SplendidApp()
/

call dbo.spSqlDropProcedure('spCONFIG_SplendidApp')
/

-- #endif IBM_DB2 */



set nocount on;
GO

if exists(select distinct DETAILVIEWS_FIELDS.DETAIL_NAME
            from           DETAILVIEWS_FIELDS
           left outer join DETAILVIEWS_FIELDS DETAILVIEWS_FIELDS_DEFAULTS
                        on DETAILVIEWS_FIELDS_DEFAULTS.DETAIL_NAME    = DETAILVIEWS_FIELDS.DETAIL_NAME
                       and DETAILVIEWS_FIELDS_DEFAULTS.DEFAULT_VIEW = 1
                       and DETAILVIEWS_FIELDS_DEFAULTS.DELETED      = 0
           where DETAILVIEWS_FIELDS_DEFAULTS.ID is null
             and DETAILVIEWS_FIELDS.DELETED = 0) begin -- then

	-- 09/19/2012 Paul.  Add new fields.  Should have done this long ago. 
	insert into DETAILVIEWS_FIELDS(ID, DEFAULT_VIEW, CREATED_BY, DATE_ENTERED, MODIFIED_USER_ID, DATE_MODIFIED, DATE_MODIFIED_UTC, DETAIL_NAME, FIELD_INDEX, FIELD_TYPE, DATA_LABEL, DATA_FIELD, DATA_FORMAT, URL_FIELD, URL_FORMAT, URL_TARGET, LIST_NAME, COLSPAN, MODULE_TYPE, TOOL_TIP, PARENT_FIELD)
	select                    newid(), 1           , CREATED_BY, DATE_ENTERED, MODIFIED_USER_ID, DATE_MODIFIED, DATE_MODIFIED_UTC, DETAIL_NAME, FIELD_INDEX, FIELD_TYPE, DATA_LABEL, DATA_FIELD, DATA_FORMAT, URL_FIELD, URL_FORMAT, URL_TARGET, LIST_NAME, COLSPAN, MODULE_TYPE, TOOL_TIP, PARENT_FIELD
	  from DETAILVIEWS_FIELDS
	 where DELETED = 0
	   and DETAIL_NAME in (select distinct DETAILVIEWS_FIELDS.DETAIL_NAME
	                       from           DETAILVIEWS_FIELDS
	                      left outer join DETAILVIEWS_FIELDS DETAILVIEWS_FIELDS_DEFAULTS
	                                   on DETAILVIEWS_FIELDS_DEFAULTS.DETAIL_NAME    = DETAILVIEWS_FIELDS.DETAIL_NAME
	                                  and DETAILVIEWS_FIELDS_DEFAULTS.DEFAULT_VIEW = 1
	                                  and DETAILVIEWS_FIELDS_DEFAULTS.DELETED      = 0
	                      where DETAILVIEWS_FIELDS_DEFAULTS.ID is null
	                        and DETAILVIEWS_FIELDS.DELETED = 0);
end -- if;
GO

set nocount off;
GO

/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spDETAILVIEWS_FIELDS_DefaultViews()
/

call dbo.spSqlDropProcedure('spDETAILVIEWS_FIELDS_DefaultViews')
/

-- #endif IBM_DB2 */


print 'DYNAMIC_BUTTONS ModuleBuilder';
GO

set nocount on;
GO

-- delete from DYNAMIC_BUTTONS where VIEW_NAME = 'ModuleBuilder.WizardView';
if not exists(select * from DYNAMIC_BUTTONS where VIEW_NAME = 'ModuleBuilder.WizardView' and COMMAND_NAME = 'SelectTemplate' and DELETED = 0) begin -- then
	print 'DYNAMIC_BUTTONS ModuleBuilder.WizardView SplendidApp';
	exec dbo.spDYNAMIC_BUTTONS_InsButton 'ModuleBuilder.WizardView'  , 3, 'ModuleBuilder'   , 'edit', null, null, 'SelectTemplate', null, 'ModuleBuilder.LBL_SELECT_TEMPLATE_LABEL', 'ModuleBuilder.LBL_SELECT_TEMPLATE_LABEL', null, null, null;
end -- if;
GO


set nocount off;
GO


/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spDYNAMIC_BUTTONS_ModuleBuilder()
/

call dbo.spSqlDropProcedure('spDYNAMIC_BUTTONS_ModuleBuilder')
/

-- #endif IBM_DB2 */



set nocount on;
GO

if exists(select distinct EDITVIEWS_FIELDS.EDIT_NAME
            from           EDITVIEWS_FIELDS
           left outer join EDITVIEWS_FIELDS EDITVIEWS_FIELDS_DEFAULTS
                        on EDITVIEWS_FIELDS_DEFAULTS.EDIT_NAME    = EDITVIEWS_FIELDS.EDIT_NAME
                       and EDITVIEWS_FIELDS_DEFAULTS.DEFAULT_VIEW = 1
                       and EDITVIEWS_FIELDS_DEFAULTS.DELETED      = 0
           where EDITVIEWS_FIELDS_DEFAULTS.ID is null
             and EDITVIEWS_FIELDS.DELETED = 0) begin -- then

	-- 09/19/2012 Paul.  Add new fields.  Should have done this long ago. 
	insert into EDITVIEWS_FIELDS(ID, DEFAULT_VIEW, CREATED_BY, DATE_ENTERED, MODIFIED_USER_ID, DATE_MODIFIED, DATE_MODIFIED_UTC, EDIT_NAME, FIELD_INDEX, FIELD_TYPE, DATA_LABEL, DATA_FIELD, DATA_FORMAT, DISPLAY_FIELD, CACHE_NAME, DATA_REQUIRED, UI_REQUIRED, ONCLICK_SCRIPT, FORMAT_SCRIPT, FORMAT_TAB_INDEX, FORMAT_MAX_LENGTH, FORMAT_SIZE, FORMAT_ROWS, FORMAT_COLUMNS, COLSPAN, ROWSPAN, FIELD_VALIDATOR_ID, FIELD_VALIDATOR_MESSAGE, MODULE_TYPE, TOOL_TIP, RELATED_SOURCE_MODULE_NAME, RELATED_SOURCE_VIEW_NAME, RELATED_SOURCE_ID_FIELD, RELATED_SOURCE_NAME_FIELD, RELATED_VIEW_NAME, RELATED_ID_FIELD, RELATED_NAME_FIELD, RELATED_JOIN_FIELD, PARENT_FIELD)
	select                  newid(), 1           , CREATED_BY, DATE_ENTERED, MODIFIED_USER_ID, DATE_MODIFIED, DATE_MODIFIED_UTC, EDIT_NAME, FIELD_INDEX, FIELD_TYPE, DATA_LABEL, DATA_FIELD, DATA_FORMAT, DISPLAY_FIELD, CACHE_NAME, DATA_REQUIRED, UI_REQUIRED, ONCLICK_SCRIPT, FORMAT_SCRIPT, FORMAT_TAB_INDEX, FORMAT_MAX_LENGTH, FORMAT_SIZE, FORMAT_ROWS, FORMAT_COLUMNS, COLSPAN, ROWSPAN, FIELD_VALIDATOR_ID, FIELD_VALIDATOR_MESSAGE, MODULE_TYPE, TOOL_TIP, RELATED_SOURCE_MODULE_NAME, RELATED_SOURCE_VIEW_NAME, RELATED_SOURCE_ID_FIELD, RELATED_SOURCE_NAME_FIELD, RELATED_VIEW_NAME, RELATED_ID_FIELD, RELATED_NAME_FIELD, RELATED_JOIN_FIELD, PARENT_FIELD
	  from EDITVIEWS_FIELDS
	 where DELETED = 0
	   and EDIT_NAME in (select distinct EDITVIEWS_FIELDS.EDIT_NAME
	                       from           EDITVIEWS_FIELDS
	                      left outer join EDITVIEWS_FIELDS EDITVIEWS_FIELDS_DEFAULTS
	                                   on EDITVIEWS_FIELDS_DEFAULTS.EDIT_NAME    = EDITVIEWS_FIELDS.EDIT_NAME
	                                  and EDITVIEWS_FIELDS_DEFAULTS.DEFAULT_VIEW = 1
	                                  and EDITVIEWS_FIELDS_DEFAULTS.DELETED      = 0
	                      where EDITVIEWS_FIELDS_DEFAULTS.ID is null
	                        and EDITVIEWS_FIELDS.DELETED = 0);
end -- if;
GO

set nocount off;
GO

/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spEDITVIEWS_FIELDS_DefaultViews()
/

call dbo.spSqlDropProcedure('spEDITVIEWS_FIELDS_DefaultViews')
/

-- #endif IBM_DB2 */



set nocount on;
GO

-- 04/27/2006 Paul.  Add URL_MODULE to support ACL.
-- 05/02/2006 Paul.  Add URL_ASSIGNED_FIELD to support ACL. 
if exists(select distinct GRIDVIEWS_COLUMNS.GRID_NAME
            from           GRIDVIEWS_COLUMNS
           left outer join GRIDVIEWS_COLUMNS GRIDVIEWS_COLUMNS_DEFAULTS
                        on GRIDVIEWS_COLUMNS_DEFAULTS.GRID_NAME    = GRIDVIEWS_COLUMNS.GRID_NAME
                       and GRIDVIEWS_COLUMNS_DEFAULTS.DEFAULT_VIEW = 1
                       and GRIDVIEWS_COLUMNS_DEFAULTS.DELETED      = 0
           where GRIDVIEWS_COLUMNS_DEFAULTS.ID is null
             and GRIDVIEWS_COLUMNS.DELETED = 0) begin -- then

	-- 09/19/2012 Paul.  Add new fields.  Should have done this long ago. 
	insert into GRIDVIEWS_COLUMNS(ID, DEFAULT_VIEW, CREATED_BY, DATE_ENTERED, MODIFIED_USER_ID, DATE_MODIFIED, DATE_MODIFIED_UTC, GRID_NAME, COLUMN_INDEX, COLUMN_TYPE, HEADER_TEXT, SORT_EXPRESSION, ITEMSTYLE_WIDTH, ITEMSTYLE_CSSCLASS, ITEMSTYLE_HORIZONTAL_ALIGN, ITEMSTYLE_VERTICAL_ALIGN, ITEMSTYLE_WRAP, DATA_FIELD, DATA_FORMAT, URL_FIELD, URL_FORMAT, URL_TARGET, LIST_NAME, URL_MODULE, URL_ASSIGNED_FIELD, MODULE_TYPE, PARENT_FIELD)
	select                   newid(), 1           , CREATED_BY, DATE_ENTERED, MODIFIED_USER_ID, DATE_MODIFIED, DATE_MODIFIED_UTC, GRID_NAME, COLUMN_INDEX, COLUMN_TYPE, HEADER_TEXT, SORT_EXPRESSION, ITEMSTYLE_WIDTH, ITEMSTYLE_CSSCLASS, ITEMSTYLE_HORIZONTAL_ALIGN, ITEMSTYLE_VERTICAL_ALIGN, ITEMSTYLE_WRAP, DATA_FIELD, DATA_FORMAT, URL_FIELD, URL_FORMAT, URL_TARGET, LIST_NAME, URL_MODULE, URL_ASSIGNED_FIELD, MODULE_TYPE, PARENT_FIELD
	  from GRIDVIEWS_COLUMNS
	 where DELETED = 0
	   and GRID_NAME in (select distinct GRIDVIEWS_COLUMNS.GRID_NAME
	                       from           GRIDVIEWS_COLUMNS
	                      left outer join GRIDVIEWS_COLUMNS GRIDVIEWS_COLUMNS_DEFAULTS
	                                   on GRIDVIEWS_COLUMNS_DEFAULTS.GRID_NAME    = GRIDVIEWS_COLUMNS.GRID_NAME
	                                  and GRIDVIEWS_COLUMNS_DEFAULTS.DEFAULT_VIEW = 1
	                                  and GRIDVIEWS_COLUMNS_DEFAULTS.DELETED      = 0
	                      where GRIDVIEWS_COLUMNS_DEFAULTS.ID is null
	                        and GRIDVIEWS_COLUMNS.DELETED = 0);
end -- if;
GO

set nocount off;
GO

/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spGRIDVIEWS_COLUMNS_DefaultViews()
/

call dbo.spSqlDropProcedure('spGRIDVIEWS_COLUMNS_DefaultViews')
/

-- #endif IBM_DB2 */



print 'GRIDVIEWS_COLUMNS ListView Available';
-- delete from GRIDVIEWS_COLUMNS where GRID_NAME like '%.ListView.Available'
--GO

set nocount on;
GO

if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Accounts.ListView.Available' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Accounts.ListView.Available';
	exec dbo.spGRIDVIEWS_InsertOnly           'Accounts.ListView.Available'        , 'Accounts', 'vwACCOUNTS_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Accounts.ListView.Available'        , null, 'Accounts.LBL_LIST_WEBSITE'                            , 'WEBSITE'                    , 'WEBSITE'                    , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Accounts.ListView.Available'        , null, 'Accounts.LBL_LIST_PHONE_FAX'                          , 'PHONE_FAX'                  , 'PHONE_FAX'                  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Accounts.ListView.Available'        , null, 'Accounts.LBL_LIST_ACCOUNT_TYPE'                       , 'ACCOUNT_TYPE'               , 'ACCOUNT_TYPE'               , '10%', 'account_type_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Accounts.ListView.Available'        , null, 'Accounts.LBL_LIST_PHONE_ALTERNATE'                    , 'PHONE_ALTERNATE'            , 'PHONE_ALTERNATE'            , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Accounts.ListView.Available'        , null, 'Accounts.LBL_LIST_EMAIL1'                             , 'EMAIL1'                     , 'EMAIL1'                     , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Accounts.ListView.Available'        , null, 'Accounts.LBL_LIST_EMPLOYEES'                          , 'EMPLOYEES'                  , 'EMPLOYEES'                  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Accounts.ListView.Available'        , null, 'Accounts.LBL_LIST_EMAIL2'                             , 'EMAIL2'                     , 'EMAIL2'                     , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Accounts.ListView.Available'        , null, 'Accounts.LBL_LIST_EMAIL_OPT_OUT'                      , 'EMAIL_OPT_OUT'              , 'EMAIL_OPT_OUT'              , '10%', 'CheckBox';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Accounts.ListView.Available'        , null, 'Accounts.LBL_LIST_OWNERSHIP'                          , 'OWNERSHIP'                  , 'OWNERSHIP'                  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Accounts.ListView.Available'        , null, 'Accounts.LBL_LIST_RATING'                             , 'RATING'                     , 'RATING'                     , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Accounts.ListView.Available'        , null, 'Accounts.LBL_LIST_INDUSTRY'                           , 'INDUSTRY'                   , 'INDUSTRY'                   , '10%', 'industry_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Accounts.ListView.Available'        , null, 'Accounts.LBL_LIST_SIC_CODE'                           , 'SIC_CODE'                   , 'SIC_CODE'                   , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Accounts.ListView.Available'        , null, 'Accounts.LBL_LIST_PARENT_NAME'                        , 'PARENT_NAME'                , 'PARENT_NAME'                , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Accounts.ListView.Available'        , null, 'Accounts.LBL_LIST_ANNUAL_REVENUE'                     , 'ANNUAL_REVENUE'             , 'ANNUAL_REVENUE'             , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Accounts.ListView.Available'        , null, 'Accounts.LBL_LIST_EXCHANGE_FOLDER'                    , 'EXCHANGE_FOLDER'            , 'EXCHANGE_FOLDER'            , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Accounts.ListView.Available'        , null, 'Accounts.LBL_LIST_NAICS_SET_NAME'                     , 'NAICS_SET_NAME'             , 'NAICS_SET_NAME'             , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Accounts.ListView.Available'        , null, 'Accounts.LBL_LIST_BILLING_ADDRESS_STREET'             , 'BILLING_ADDRESS_STREET'     , 'BILLING_ADDRESS_STREET'     , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Accounts.ListView.Available'        , null, 'Accounts.LBL_LIST_SHIPPING_ADDRESS_STREET'            , 'SHIPPING_ADDRESS_STREET'    , 'SHIPPING_ADDRESS_STREET'    , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Accounts.ListView.Available'        , null, 'Accounts.LBL_LIST_SHIPPING_ADDRESS_CITY'              , 'SHIPPING_ADDRESS_CITY'      , 'SHIPPING_ADDRESS_CITY'      , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Accounts.ListView.Available'        , null, 'Accounts.LBL_LIST_SHIPPING_ADDRESS_STATE'             , 'SHIPPING_ADDRESS_STATE'     , 'SHIPPING_ADDRESS_STATE'     , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Accounts.ListView.Available'        , null, 'Accounts.LBL_LIST_BILLING_ADDRESS_POSTALCODE'         , 'BILLING_ADDRESS_POSTALCODE' , 'BILLING_ADDRESS_POSTALCODE' , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Accounts.ListView.Available'        , null, 'Accounts.LBL_LIST_SHIPPING_ADDRESS_POSTALCODE'        , 'SHIPPING_ADDRESS_POSTALCODE', 'SHIPPING_ADDRESS_POSTALCODE', '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Accounts.ListView.Available'        , null, 'Accounts.LBL_LIST_BILLING_ADDRESS_COUNTRY'            , 'BILLING_ADDRESS_COUNTRY'    , 'BILLING_ADDRESS_COUNTRY'    , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Accounts.ListView.Available'        , null, 'Accounts.LBL_LIST_SHIPPING_ADDRESS_COUNTRY'           , 'SHIPPING_ADDRESS_COUNTRY'   , 'SHIPPING_ADDRESS_COUNTRY'   , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Accounts.ListView.Available'        , null, '.LBL_LIST_DATE_MODIFIED'                              , 'DATE_MODIFIED'              , 'DATE_MODIFIED'              , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Accounts.ListView.Available'        , null, '.LBL_LIST_DATE_ENTERED'                               , 'DATE_ENTERED'               , 'DATE_ENTERED'               , '10%', 'DateTime';
end -- if;
GO

if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Bugs.ListView.Available' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Bugs.ListView.Available';
	exec dbo.spGRIDVIEWS_InsertOnly           'Bugs.ListView.Available'            , 'Bugs', 'vwBUGS_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Bugs.ListView.Available'            , null, 'Bugs.LBL_LIST_LAST_ACTIVITY_DATE'                     , 'LAST_ACTIVITY_DATE'         , 'LAST_ACTIVITY_DATE'         , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Bugs.ListView.Available'            , null, '.LBL_LIST_DATE_MODIFIED'                              , 'DATE_MODIFIED'              , 'DATE_MODIFIED'              , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Bugs.ListView.Available'            , null, 'Bugs.LBL_LIST_SOURCE'                                 , 'SOURCE'                     , 'SOURCE'                     , '10%', 'source_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Bugs.ListView.Available'            , null, '.LBL_LIST_DATE_ENTERED'                               , 'DATE_ENTERED'               , 'DATE_ENTERED'               , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Bugs.ListView.Available'            , null, 'Bugs.LBL_LIST_PRODUCT_CATEGORY'                       , 'PRODUCT_CATEGORY'           , 'PRODUCT_CATEGORY'           , '10%', 'product_category_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Bugs.ListView.Available'            , null, 'Bugs.LBL_LIST_RESOLUTION'                             , 'RESOLUTION'                 , 'RESOLUTION'                 , '10%', 'bug_resolution_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Bugs.ListView.Available'            , null, 'Bugs.LBL_LIST_FIXED_IN_RELEASE'                       , 'FIXED_IN_RELEASE'           , 'FIXED_IN_RELEASE'           , '10%';
end -- if;
GO

if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Calls.ListView.Available' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Calls.ListView.Available';
	exec dbo.spGRIDVIEWS_InsertOnly           'Calls.ListView.Available'           , 'Calls', 'vwCALLS_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Calls.ListView.Available'           , null, 'Calls.LBL_LIST_DIRECTION STATUS'                      , 'DIRECTION STATUS'           , 'DIRECTION STATUS'           , '10%', 'call_direction_dom call_status_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Calls.ListView.Available'           , null, 'Calls.LBL_LIST_DURATION_HOURS'                        , 'DURATION_HOURS'             , 'DURATION_HOURS'             , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Calls.ListView.Available'           , null, 'Calls.LBL_LIST_DURATION_MINUTES'                      , 'DURATION_MINUTES'           , 'DURATION_MINUTES'           , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Calls.ListView.Available'           , null, '.LBL_LIST_DATE_MODIFIED'                              , 'DATE_MODIFIED'              , 'DATE_MODIFIED'              , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Calls.ListView.Available'           , null, '.LBL_LIST_DATE_ENTERED'                               , 'DATE_ENTERED'               , 'DATE_ENTERED'               , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Calls.ListView.Available'           , null, 'Calls.LBL_LIST_REPEAT_TYPE'                           , 'REPEAT_TYPE'                , 'REPEAT_TYPE'                , '10%', 'repeat_type_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Calls.ListView.Available'           , null, 'Calls.LBL_LIST_REPEAT_COUNT'                          , 'REPEAT_COUNT'               , 'REPEAT_COUNT'               , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Calls.ListView.Available'           , null, 'Calls.LBL_LIST_REPEAT_INTERVAL'                       , 'REPEAT_INTERVAL'            , 'REPEAT_INTERVAL'            , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Calls.ListView.Available'           , null, 'Calls.LBL_LIST_REPEAT_UNTIL'                          , 'REPEAT_UNTIL'               , 'REPEAT_UNTIL'               , '10%';
end -- if;
GO

if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Campaigns.ListView.Available' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Campaigns.ListView.Available';
	exec dbo.spGRIDVIEWS_InsertOnly           'Campaigns.ListView.Available'       , 'Campaigns', 'vwCAMPAIGNS_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Campaigns.ListView.Available'       , null, 'Campaigns.LBL_LIST_START_DATE'                        , 'START_DATE'                 , 'START_DATE'                 , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Campaigns.ListView.Available'       , null, '.LBL_LIST_DATE_MODIFIED'                              , 'DATE_MODIFIED'              , 'DATE_MODIFIED'              , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Campaigns.ListView.Available'       , null, '.LBL_LIST_DATE_ENTERED'                               , 'DATE_ENTERED'               , 'DATE_ENTERED'               , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Campaigns.ListView.Available'       , null, 'Campaigns.LBL_LIST_BUDGET_USDOLLAR'                   , 'BUDGET_USDOLLAR'            , 'BUDGET_USDOLLAR'            , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Campaigns.ListView.Available'       , null, 'Campaigns.LBL_LIST_ACTUAL_COST_USDOLLAR'              , 'ACTUAL_COST_USDOLLAR'       , 'ACTUAL_COST_USDOLLAR'       , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Campaigns.ListView.Available'       , null, 'Campaigns.LBL_LIST_EXPECTED_REVENUE_USDOLLAR'         , 'EXPECTED_REVENUE_USDOLLAR'  , 'EXPECTED_REVENUE_USDOLLAR'  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Campaigns.ListView.Available'       , null, 'Campaigns.LBL_LIST_EXPECTED_COST_USDOLLAR'            , 'EXPECTED_COST_USDOLLAR'     , 'EXPECTED_COST_USDOLLAR'     , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Campaigns.ListView.Available'       , null, 'Campaigns.LBL_LIST_IMPRESSIONS'                       , 'IMPRESSIONS'                , 'IMPRESSIONS'                , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Campaigns.ListView.Available'       , null, 'Campaigns.LBL_LIST_OBJECTIVE'                         , 'OBJECTIVE'                  , 'OBJECTIVE'                  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Campaigns.ListView.Available'       , null, 'Campaigns.LBL_LIST_CONTENT'                           , 'CONTENT'                    , 'CONTENT'                    , '10%';
end -- if;
GO

if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Cases.ListView.Available' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Cases.ListView.Available';
	exec dbo.spGRIDVIEWS_InsertOnly           'Cases.ListView.Available'           , 'Cases', 'vwCASES_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Cases.ListView.Available'           , null, 'Cases.LBL_LIST_TYPE'                                  , 'TYPE'                       , 'TYPE'                       , '10%', 'case_type_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Cases.ListView.Available'           , null, '.LBL_LIST_DATE_MODIFIED'                              , 'DATE_MODIFIED'              , 'DATE_MODIFIED'              , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Cases.ListView.Available'           , null, 'Cases.LBL_LIST_LAST_ACTIVITY_DATE'                    , 'LAST_ACTIVITY_DATE'         , 'LAST_ACTIVITY_DATE'         , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Cases.ListView.Available'           , null, '.LBL_LIST_DATE_ENTERED'                               , 'DATE_ENTERED'               , 'DATE_ENTERED'               , '10%', 'DateTime';
end -- if;
GO

if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Contacts.ListView.Available' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Contacts.ListView.Available';
	exec dbo.spGRIDVIEWS_InsertOnly           'Contacts.ListView.Available'        , 'Contacts', 'vwCONTACTS_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Contacts.ListView.Available'        , null, 'Contacts.LBL_LIST_FIRST_NAME'                         , 'FIRST_NAME'                 , 'FIRST_NAME'                 , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Contacts.ListView.Available'        , null, 'Contacts.LBL_LIST_LAST_NAME'                          , 'LAST_NAME'                  , 'LAST_NAME'                  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Contacts.ListView.Available'        , null, 'Contacts.LBL_LIST_LAST_ACTIVITY_DATE'                 , 'LAST_ACTIVITY_DATE'         , 'LAST_ACTIVITY_DATE'         , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Contacts.ListView.Available'        , null, 'Contacts.LBL_LIST_PHONE_MOBILE'                       , 'PHONE_MOBILE'               , 'PHONE_MOBILE'               , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Contacts.ListView.Available'        , null, 'Contacts.LBL_LIST_PHONE_HOME'                         , 'PHONE_HOME'                 , 'PHONE_HOME'                 , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Contacts.ListView.Available'        , null, 'Contacts.LBL_LIST_LEAD_SOURCE'                        , 'LEAD_SOURCE'                , 'LEAD_SOURCE'                , '10%', 'lead_source_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Contacts.ListView.Available'        , null, 'Contacts.LBL_LIST_PHONE_OTHER'                        , 'PHONE_OTHER'                , 'PHONE_OTHER'                , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Contacts.ListView.Available'        , null, 'Contacts.LBL_LIST_PHONE_FAX'                          , 'PHONE_FAX'                  , 'PHONE_FAX'                  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Contacts.ListView.Available'        , null, 'Contacts.LBL_LIST_DEPARTMENT'                         , 'DEPARTMENT'                 , 'DEPARTMENT'                 , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Contacts.ListView.Available'        , null, 'Contacts.LBL_LIST_BIRTHDATE'                          , 'BIRTHDATE'                  , 'BIRTHDATE'                  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Contacts.ListView.Available'        , null, 'Contacts.LBL_LIST_EMAIL2'                             , 'EMAIL2'                     , 'EMAIL2'                     , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Contacts.ListView.Available'        , null, 'Contacts.LBL_LIST_REPORTS_TO_NAME'                    , 'REPORTS_TO_NAME'            , 'REPORTS_TO_NAME'            , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Contacts.ListView.Available'        , null, 'Contacts.LBL_LIST_ASSISTANT'                          , 'ASSISTANT'                  , 'ASSISTANT'                  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Contacts.ListView.Available'        , null, 'Contacts.LBL_LIST_SYNC_CONTACT'                       , 'SYNC_CONTACT'               , 'SYNC_CONTACT'               , '10%', 'CheckBox';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Contacts.ListView.Available'        , null, 'Contacts.LBL_LIST_ASSISTANT_PHONE'                    , 'ASSISTANT_PHONE'            , 'ASSISTANT_PHONE'            , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Contacts.ListView.Available'        , null, 'Contacts.LBL_LIST_DO_NOT_CALL'                        , 'DO_NOT_CALL'                , 'DO_NOT_CALL'                , '10%', 'CheckBox';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Contacts.ListView.Available'        , null, 'Contacts.LBL_LIST_EMAIL_OPT_OUT'                      , 'EMAIL_OPT_OUT'              , 'EMAIL_OPT_OUT'              , '10%', 'CheckBox';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Contacts.ListView.Available'        , null, '.LBL_LIST_DATE_MODIFIED'                              , 'DATE_MODIFIED'              , 'DATE_MODIFIED'              , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Contacts.ListView.Available'        , null, '.LBL_LIST_DATE_ENTERED'                               , 'DATE_ENTERED'               , 'DATE_ENTERED'               , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Contacts.ListView.Available'        , null, 'Contacts.LBL_LIST_PRIMARY_ADDRESS_HTML'               , 'PRIMARY_ADDRESS_HTML'       , 'PRIMARY_ADDRESS_HTML'       , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Contacts.ListView.Available'        , null, 'Contacts.LBL_LIST_ALT_ADDRESS_HTML'                   , 'ALT_ADDRESS_HTML'           , 'ALT_ADDRESS_HTML'           , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Contacts.ListView.Available'        , null, 'Contacts.LBL_LIST_PROBABILITY'                        , 'PROBABILITY'                , 'PROBABILITY'                , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Contacts.ListView.Available'        , null, 'Contacts.LBL_LIST_SCORE'                              , 'SCORE'                      , 'SCORE'                      , '10%';
end -- if;
GO

if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Documents.ListView.Available' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Documents.ListView.Available';
	exec dbo.spGRIDVIEWS_InsertOnly           'Documents.ListView.Available'       , 'Documents', 'vwDOCUMENTS_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Documents.ListView.Available'       , null, 'Documents.LBL_LIST_DOCUMENT_NAME'                     , 'DOCUMENT_NAME'              , 'DOCUMENT_NAME'              , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Documents.ListView.Available'       , null, 'Documents.LBL_LIST_TEMPLATE_TYPE'                     , 'TEMPLATE_TYPE'              , 'TEMPLATE_TYPE'              , '10%', 'document_template_type_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Documents.ListView.Available'       , null, 'Documents.LBL_LIST_IS_TEMPLATE'                       , 'IS_TEMPLATE'                , 'IS_TEMPLATE'                , '10%', 'CheckBox';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Documents.ListView.Available'       , null, 'Documents.LBL_LIST_STATUS_ID'                         , 'STATUS_ID'                  , 'STATUS_ID'                  , '10%', 'document_status_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Documents.ListView.Available'       , null, 'Documents.LBL_LIST_FILENAME'                          , 'FILENAME'                   , 'FILENAME'                   , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Documents.ListView.Available'       , null, 'Documents.LBL_LIST_PRIMARY_MODULE'                    , 'PRIMARY_MODULE'             , 'PRIMARY_MODULE'             , '10%', 'Modules';
end -- if;
GO

if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Emails.ListView.Available' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Emails.ListView.Available';
	exec dbo.spGRIDVIEWS_InsertOnly           'Emails.ListView.Available'          , 'Emails', 'vwEMAILS_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Emails.ListView.Available'          , null, 'Emails.LBL_LIST_DATE_START'                           , 'DATE_START'                 , 'DATE_START'                 , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Emails.ListView.Available'          , null, 'Emails.LBL_LIST_TEAM_NAME'                            , 'TEAM_NAME'                  , 'TEAM_NAME'                  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Emails.ListView.Available'          , null, '.LBL_LIST_DATE_MODIFIED'                              , 'DATE_MODIFIED'              , 'DATE_MODIFIED'              , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Emails.ListView.Available'          , null, '.LBL_LIST_DATE_ENTERED'                               , 'DATE_ENTERED'               , 'DATE_ENTERED'               , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Emails.ListView.Available'          , null, 'Emails.LBL_LIST_FROM_NAME'                            , 'FROM_NAME'                  , 'FROM_NAME'                  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Emails.ListView.Available'          , null, 'Emails.LBL_LIST_FROM_ADDR'                            , 'FROM_ADDR'                  , 'FROM_ADDR'                  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Emails.ListView.Available'          , null, 'Emails.LBL_LIST_TO_ADDRS'                             , 'TO_ADDRS'                   , 'TO_ADDRS'                   , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Emails.ListView.Available'          , null, 'Emails.LBL_LIST_CC_ADDRS'                             , 'CC_ADDRS'                   , 'CC_ADDRS'                   , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Emails.ListView.Available'          , null, 'Emails.LBL_LIST_BCC_ADDRS'                            , 'BCC_ADDRS'                  , 'BCC_ADDRS'                  , '10%';
end -- if;
GO

if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'EmailTemplates.ListView.Available' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS EmailTemplates.ListView.Available';
	exec dbo.spGRIDVIEWS_InsertOnly           'EmailTemplates.ListView.Available'  , 'EmailTemplates', 'vwEMAIL_TEMPLATES_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'EmailTemplates.ListView.Available'  , null, '.LBL_LIST_DATE_MODIFIED'                              , 'DATE_MODIFIED'              , 'DATE_MODIFIED'              , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'EmailTemplates.ListView.Available'  , null, '.LBL_LIST_DATE_ENTERED'                               , 'DATE_ENTERED'               , 'DATE_ENTERED'               , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'EmailTemplates.ListView.Available'  , null, 'EmailTemplates.LBL_LIST_SUBJECT'                      , 'SUBJECT'                    , 'SUBJECT'                    , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'EmailTemplates.ListView.Available'  , null, 'EmailTemplates.LBL_LIST_TEAM_NAME'                    , 'TEAM_NAME'                  , 'TEAM_NAME'                  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'EmailTemplates.ListView.Available'  , null, 'EmailTemplates.LBL_LIST_ASSIGNED_TO_NAME'             , 'ASSIGNED_TO_NAME'           , 'ASSIGNED_TO_NAME'           , '10%';
end -- if;
GO

if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Employees.ListView.Available' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Employees.ListView.Available';
	exec dbo.spGRIDVIEWS_InsertOnly           'Employees.ListView.Available'       , 'Employees', 'vwEMPLOYEES_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Employees.ListView.Available'       , null, 'Employees.LBL_LIST_TITLE'                             , 'TITLE'                      , 'TITLE'                      , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Employees.ListView.Available'       , null, 'Employees.LBL_LIST_PHONE_MOBILE'                      , 'PHONE_MOBILE'               , 'PHONE_MOBILE'               , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Employees.ListView.Available'       , null, 'Employees.LBL_LIST_PHONE_OTHER'                       , 'PHONE_OTHER'                , 'PHONE_OTHER'                , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Employees.ListView.Available'       , null, 'Employees.LBL_LIST_PHONE_FAX'                         , 'PHONE_FAX'                  , 'PHONE_FAX'                  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Employees.ListView.Available'       , null, 'Employees.LBL_LIST_PHONE_HOME'                        , 'PHONE_HOME'                 , 'PHONE_HOME'                 , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Employees.ListView.Available'       , null, 'Employees.LBL_LIST_EMAIL2'                            , 'EMAIL2'                     , 'EMAIL2'                     , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Employees.ListView.Available'       , null, 'Employees.LBL_LIST_MESSENGER_TYPE'                    , 'MESSENGER_TYPE'             , 'MESSENGER_TYPE'             , '10%', 'messenger_type_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Employees.ListView.Available'       , null, 'Employees.LBL_LIST_MESSENGER_ID'                      , 'MESSENGER_ID'               , 'MESSENGER_ID'               , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Employees.ListView.Available'       , null, 'Employees.LBL_LIST_ADDRESS_HTML'                      , 'ADDRESS_HTML'               , 'ADDRESS_HTML'               , '10%';
end -- if;
GO

if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Leads.ListView.Available' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Leads.ListView.Available';
	exec dbo.spGRIDVIEWS_InsertOnly           'Leads.ListView.Available'           , 'Leads', 'vwLEADS_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Leads.ListView.Available'           , null, 'Leads.LBL_LIST_WEBSITE'                               , 'WEBSITE'                    , 'WEBSITE'                    , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Leads.ListView.Available'           , null, 'Leads.LBL_LIST_LEAD_SOURCE'                           , 'LEAD_SOURCE'                , 'LEAD_SOURCE'                , '10%', 'lead_source_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Leads.ListView.Available'           , null, 'Leads.LBL_LIST_LEAD_SOURCE_DESCRIPTION'               , 'LEAD_SOURCE_DESCRIPTION'    , 'LEAD_SOURCE_DESCRIPTION'    , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Leads.ListView.Available'           , null, 'Leads.LBL_LIST_STATUS_DESCRIPTION'                    , 'STATUS_DESCRIPTION'         , 'STATUS_DESCRIPTION'         , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Leads.ListView.Available'           , null, 'Leads.LBL_LIST_REFERED_BY'                            , 'REFERED_BY'                 , 'REFERED_BY'                 , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Leads.ListView.Available'           , null, 'Leads.LBL_LIST_FIRST_NAME'                            , 'FIRST_NAME'                 , 'FIRST_NAME'                 , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Leads.ListView.Available'           , null, 'Leads.LBL_LIST_LAST_NAME'                             , 'LAST_NAME'                  , 'LAST_NAME'                  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Leads.ListView.Available'           , null, 'Leads.LBL_LIST_PHONE_MOBILE'                          , 'PHONE_MOBILE'               , 'PHONE_MOBILE'               , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Leads.ListView.Available'           , null, 'Leads.LBL_LIST_LAST_ACTIVITY_DATE'                    , 'LAST_ACTIVITY_DATE'         , 'LAST_ACTIVITY_DATE'         , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Leads.ListView.Available'           , null, 'Leads.LBL_LIST_PHONE_HOME'                            , 'PHONE_HOME'                 , 'PHONE_HOME'                 , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Leads.ListView.Available'           , null, 'Leads.LBL_LIST_PHONE_OTHER'                           , 'PHONE_OTHER'                , 'PHONE_OTHER'                , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Leads.ListView.Available'           , null, 'Leads.LBL_LIST_PHONE_FAX'                             , 'PHONE_FAX'                  , 'PHONE_FAX'                  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Leads.ListView.Available'           , null, 'Leads.LBL_LIST_TITLE'                                 , 'TITLE'                      , 'TITLE'                      , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Leads.ListView.Available'           , null, 'Leads.LBL_LIST_DEPARTMENT'                            , 'DEPARTMENT'                 , 'DEPARTMENT'                 , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Leads.ListView.Available'           , null, 'Leads.LBL_LIST_EMAIL2'                                , 'EMAIL2'                     , 'EMAIL2'                     , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Leads.ListView.Available'           , null, 'Leads.LBL_LIST_DO_NOT_CALL'                           , 'DO_NOT_CALL'                , 'DO_NOT_CALL'                , '10%', 'CheckBox';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Leads.ListView.Available'           , null, 'Leads.LBL_LIST_EMAIL_OPT_OUT'                         , 'EMAIL_OPT_OUT'              , 'EMAIL_OPT_OUT'              , '10%', 'CheckBox';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Leads.ListView.Available'           , null, '.LBL_LIST_DATE_MODIFIED'                              , 'DATE_MODIFIED'              , 'DATE_MODIFIED'              , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Leads.ListView.Available'           , null, '.LBL_LIST_DATE_ENTERED'                               , 'DATE_ENTERED'               , 'DATE_ENTERED'               , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Leads.ListView.Available'           , null, 'Leads.LBL_LIST_PRIMARY_ADDRESS_HTML'                  , 'PRIMARY_ADDRESS_HTML'       , 'PRIMARY_ADDRESS_HTML'       , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Leads.ListView.Available'           , null, 'Leads.LBL_LIST_ALT_ADDRESS_HTML'                      , 'ALT_ADDRESS_HTML'           , 'ALT_ADDRESS_HTML'           , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Leads.ListView.Available'           , null, 'Leads.LBL_LIST_PROBABILITY'                           , 'PROBABILITY'                , 'PROBABILITY'                , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Leads.ListView.Available'           , null, 'Leads.LBL_LIST_SCORE'                                 , 'SCORE'                      , 'SCORE'                      , '10%';
end -- if;
GO

if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Meetings.ListView.Available' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Meetings.ListView.Available';
	exec dbo.spGRIDVIEWS_InsertOnly           'Meetings.ListView.Available'        , 'Meetings', 'vwMEETINGS_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Meetings.ListView.Available'        , null, 'Meetings.LBL_LIST_LOCATION'                           , 'LOCATION'                   , 'LOCATION'                   , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Meetings.ListView.Available'        , null, 'Meetings.LBL_LIST_DURATION_HOURS'                     , 'DURATION_HOURS'             , 'DURATION_HOURS'             , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Meetings.ListView.Available'        , null, 'Meetings.LBL_LIST_DURATION_MINUTES'                   , 'DURATION_MINUTES'           , 'DURATION_MINUTES'           , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Meetings.ListView.Available'        , null, '.LBL_LIST_DATE_MODIFIED'                              , 'DATE_MODIFIED'              , 'DATE_MODIFIED'              , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Meetings.ListView.Available'        , null, '.LBL_LIST_DATE_ENTERED'                               , 'DATE_ENTERED'               , 'DATE_ENTERED'               , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Meetings.ListView.Available'        , null, 'Meetings.LBL_LIST_REPEAT_TYPE'                        , 'REPEAT_TYPE'                , 'REPEAT_TYPE'                , '10%', 'repeat_type_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Meetings.ListView.Available'        , null, 'Meetings.LBL_LIST_REPEAT_COUNT'                       , 'REPEAT_COUNT'               , 'REPEAT_COUNT'               , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Meetings.ListView.Available'        , null, 'Meetings.LBL_LIST_REPEAT_INTERVAL'                    , 'REPEAT_INTERVAL'            , 'REPEAT_INTERVAL'            , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Meetings.ListView.Available'        , null, 'Meetings.LBL_LIST_REPEAT_UNTIL'                       , 'REPEAT_UNTIL'               , 'REPEAT_UNTIL'               , '10%';
end -- if;
GO

if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Notes.ListView.Available' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Notes.ListView.Available';
	exec dbo.spGRIDVIEWS_InsertOnly           'Notes.ListView.Available'           , 'Notes', 'vwNOTES_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Notes.ListView.Available'           , null, 'Notes.LBL_LIST_CONTACT_PHONE'                         , 'CONTACT_PHONE'              , 'CONTACT_PHONE'              , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Notes.ListView.Available'           , null, '.LBL_LIST_DATE_MODIFIED'                              , 'DATE_MODIFIED'              , 'DATE_MODIFIED'              , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Notes.ListView.Available'           , null, 'Notes.LBL_LIST_CONTACT_EMAIL'                         , 'CONTACT_EMAIL'              , 'CONTACT_EMAIL'              , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Notes.ListView.Available'           , null, '.LBL_LIST_DATE_ENTERED'                               , 'DATE_ENTERED'               , 'DATE_ENTERED'               , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Notes.ListView.Available'           , null, 'Notes.LBL_LIST_TEAM_NAME'                             , 'TEAM_NAME'                  , 'TEAM_NAME'                  , '10%';
end -- if;
GO

if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Opportunities.ListView.Available' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Opportunities.ListView.Available';
	exec dbo.spGRIDVIEWS_InsertOnly           'Opportunities.ListView.Available'   , 'Opportunities', 'vwOPPORTUNITIES_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Opportunities.ListView.Available'   , null, '.LBL_LIST_DATE_MODIFIED'                              , 'DATE_MODIFIED'              , 'DATE_MODIFIED'              , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Opportunities.ListView.Available'   , null, 'Opportunities.LBL_LIST_LAST_ACTIVITY_DATE'            , 'LAST_ACTIVITY_DATE'         , 'LAST_ACTIVITY_DATE'         , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Opportunities.ListView.Available'   , null, 'Opportunities.LBL_LIST_CAMPAIGN_NAME'                 , 'CAMPAIGN_NAME'              , 'CAMPAIGN_NAME'              , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Opportunities.ListView.Available'   , null, '.LBL_LIST_DATE_ENTERED'                               , 'DATE_ENTERED'               , 'DATE_ENTERED'               , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Opportunities.ListView.Available'   , null, 'Opportunities.LBL_LIST_OPPORTUNITY_TYPE'              , 'OPPORTUNITY_TYPE'           , 'OPPORTUNITY_TYPE'           , '10%', 'opportunity_type_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Opportunities.ListView.Available'   , null, 'Opportunities.LBL_LIST_NEXT_STEP'                     , 'NEXT_STEP'                  , 'NEXT_STEP'                  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Opportunities.ListView.Available'   , null, 'Opportunities.LBL_LIST_LEAD_SOURCE'                   , 'LEAD_SOURCE'                , 'LEAD_SOURCE'                , '10%', 'lead_source_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Opportunities.ListView.Available'   , null, 'Opportunities.LBL_LIST_PROBABILITY'                   , 'PROBABILITY'                , 'PROBABILITY'                , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Opportunities.ListView.Available'   , null, 'Opportunities.LBL_LIST_ML_PROBABILITY'                , 'ML_PROBABILITY'             , 'ML_PROBABILITY'             , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Opportunities.ListView.Available'   , null, 'Opportunities.LBL_LIST_SCORE'                         , 'SCORE'                      , 'SCORE'                      , '10%';
end -- if;
GO

if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Project.ListView.Available' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Project.ListView.Available';
	exec dbo.spGRIDVIEWS_InsertOnly           'Project.ListView.Available'         , 'Project', 'vwPROJECTS_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Project.ListView.Available'         , null, 'Project.LBL_LIST_LAST_ACTIVITY_DATE'                  , 'LAST_ACTIVITY_DATE'         , 'LAST_ACTIVITY_DATE'         , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Project.ListView.Available'         , null, 'Project.LBL_LIST_PRIORITY'                            , 'PRIORITY'                   , 'PRIORITY'                   , '10%', 'projects_priority_options';
end -- if;
GO

if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'ProjectTask.ListView.Available' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS ProjectTask.ListView.Available';
	exec dbo.spGRIDVIEWS_InsertOnly           'ProjectTask.ListView.Available'     , 'ProjectTask', 'vwPROJECT_TASKS_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'ProjectTask.ListView.Available'     , null, 'ProjectTask.LBL_LIST_TASK_NUMBER'                     , 'TASK_NUMBER'                , 'TASK_NUMBER'                , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'ProjectTask.ListView.Available'     , null, 'ProjectTask.LBL_LIST_DEPENDS_ON_NAME'                 , 'DEPENDS_ON_NAME'            , 'DEPENDS_ON_NAME'            , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'ProjectTask.ListView.Available'     , null, 'ProjectTask.LBL_LIST_PRIORITY'                        , 'PRIORITY'                   , 'PRIORITY'                   , '10%', 'project_task_priority_options';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'ProjectTask.ListView.Available'     , null, 'ProjectTask.LBL_LIST_MILESTONE_FLAG'                  , 'MILESTONE_FLAG'             , 'MILESTONE_FLAG'             , '10%', 'CheckBox';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'ProjectTask.ListView.Available'     , null, 'ProjectTask.LBL_LIST_PERCENT_COMPLETE'                , 'PERCENT_COMPLETE'           , 'PERCENT_COMPLETE'           , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'ProjectTask.ListView.Available'     , null, 'ProjectTask.LBL_LIST_UTILIZATION'                     , 'UTILIZATION'                , 'UTILIZATION'                , '10%', 'project_task_utilization_options';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'ProjectTask.ListView.Available'     , null, 'ProjectTask.LBL_LIST_DATE_START'                      , 'DATE_START'                 , 'DATE_START'                 , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'ProjectTask.ListView.Available'     , null, 'ProjectTask.LBL_LIST_ESTIMATED_EFFORT'                , 'ESTIMATED_EFFORT'           , 'ESTIMATED_EFFORT'           , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'ProjectTask.ListView.Available'     , null, 'ProjectTask.LBL_LIST_ACTUAL_EFFORT'                   , 'ACTUAL_EFFORT'              , 'ACTUAL_EFFORT'              , '10%';
end -- if;
GO

if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'ProspectLists.ListView.Available' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS ProspectLists.ListView.Available';
	exec dbo.spGRIDVIEWS_InsertOnly           'ProspectLists.ListView.Available'   , 'ProspectLists', 'vwPROSPECT_LISTS_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'ProspectLists.ListView.Available'   , null, 'ProspectLists.LBL_LIST_DYNAMIC_LIST'                  , 'DYNAMIC_LIST'               , 'DYNAMIC_LIST'               , '10%', 'CheckBox';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'ProspectLists.ListView.Available'   , null, 'ProspectLists.LBL_LIST_DOMAIN_NAME'                   , 'DOMAIN_NAME'                , 'DOMAIN_NAME'                , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'ProspectLists.ListView.Available'   , null, 'ProspectLists.LBL_LIST_CREATED_BY_NAME'               , 'CREATED_BY_NAME'            , 'CREATED_BY_NAME'            , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'ProspectLists.ListView.Available'   , null, 'ProspectLists.LBL_LIST_MODIFIED_BY_NAME'              , 'MODIFIED_BY_NAME'           , 'MODIFIED_BY_NAME'           , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'ProspectLists.ListView.Available'   , null, '.LBL_LIST_DATE_ENTERED'                               , 'DATE_ENTERED'               , 'DATE_ENTERED'               , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'ProspectLists.ListView.Available'   , null, '.LBL_LIST_DATE_MODIFIED'                              , 'DATE_MODIFIED'              , 'DATE_MODIFIED'              , '10%', 'DateTime';
end -- if;
GO

if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Prospects.ListView.Available' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Prospects.ListView.Available';
	exec dbo.spGRIDVIEWS_InsertOnly           'Prospects.ListView.Available'       , 'Prospects', 'vwPROSPECTS_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Prospects.ListView.Available'       , null, 'Prospects.LBL_LIST_FIRST_NAME'                        , 'FIRST_NAME'                 , 'FIRST_NAME'                 , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Prospects.ListView.Available'       , null, 'Prospects.LBL_LIST_LAST_NAME'                         , 'LAST_NAME'                  , 'LAST_NAME'                  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Prospects.ListView.Available'       , null, 'Prospects.LBL_LIST_LAST_ACTIVITY_DATE'                , 'LAST_ACTIVITY_DATE'         , 'LAST_ACTIVITY_DATE'         , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Prospects.ListView.Available'       , null, 'Prospects.LBL_LIST_PHONE_MOBILE'                      , 'PHONE_MOBILE'               , 'PHONE_MOBILE'               , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Prospects.ListView.Available'       , null, 'Prospects.LBL_LIST_PHONE_HOME'                        , 'PHONE_HOME'                 , 'PHONE_HOME'                 , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Prospects.ListView.Available'       , null, 'Prospects.LBL_LIST_PHONE_OTHER'                       , 'PHONE_OTHER'                , 'PHONE_OTHER'                , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Prospects.ListView.Available'       , null, 'Prospects.LBL_LIST_PHONE_FAX'                         , 'PHONE_FAX'                  , 'PHONE_FAX'                  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Prospects.ListView.Available'       , null, 'Prospects.LBL_LIST_DEPARTMENT'                        , 'DEPARTMENT'                 , 'DEPARTMENT'                 , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Prospects.ListView.Available'       , null, 'Prospects.LBL_LIST_BIRTHDATE'                         , 'BIRTHDATE'                  , 'BIRTHDATE'                  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Prospects.ListView.Available'       , null, 'Prospects.LBL_LIST_EMAIL2'                            , 'EMAIL2'                     , 'EMAIL2'                     , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Prospects.ListView.Available'       , null, 'Prospects.LBL_LIST_ASSISTANT'                         , 'ASSISTANT'                  , 'ASSISTANT'                  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Prospects.ListView.Available'       , null, 'Prospects.LBL_LIST_ASSISTANT_PHONE'                   , 'ASSISTANT_PHONE'            , 'ASSISTANT_PHONE'            , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Prospects.ListView.Available'       , null, 'Prospects.LBL_LIST_DO_NOT_CALL'                       , 'DO_NOT_CALL'                , 'DO_NOT_CALL'                , '10%', 'CheckBox';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Prospects.ListView.Available'       , null, 'Prospects.LBL_LIST_EMAIL_OPT_OUT'                     , 'EMAIL_OPT_OUT'              , 'EMAIL_OPT_OUT'              , '10%', 'CheckBox';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Prospects.ListView.Available'       , null, 'Prospects.LBL_LIST_INVALID_EMAIL'                     , 'INVALID_EMAIL'              , 'INVALID_EMAIL'              , '10%', 'CheckBox';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Prospects.ListView.Available'       , null, '.LBL_LIST_DATE_MODIFIED'                              , 'DATE_MODIFIED'              , 'DATE_MODIFIED'              , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Prospects.ListView.Available'       , null, '.LBL_LIST_DATE_ENTERED'                               , 'DATE_ENTERED'               , 'DATE_ENTERED'               , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Prospects.ListView.Available'       , null, 'Prospects.LBL_LIST_PRIMARY_ADDRESS_HTML'              , 'PRIMARY_ADDRESS_HTML'       , 'PRIMARY_ADDRESS_HTML'       , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Prospects.ListView.Available'       , null, 'Prospects.LBL_LIST_ALT_ADDRESS_HTML'                  , 'ALT_ADDRESS_HTML'           , 'ALT_ADDRESS_HTML'           , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Prospects.ListView.Available'       , null, 'Prospects.LBL_LIST_PROBABILITY'                       , 'PROBABILITY'                , 'PROBABILITY'                , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Prospects.ListView.Available'       , null, 'Prospects.LBL_LIST_SCORE'                             , 'SCORE'                      , 'SCORE'                      , '10%';
end -- if;
GO

if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'SmsMessages.ListView.Available' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS SmsMessages.ListView.Available';
	exec dbo.spGRIDVIEWS_InsertOnly           'SmsMessages.ListView.Available'     , 'SmsMessages', 'vwSMS_MESSAGES_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'SmsMessages.ListView.Available'     , null, 'SmsMessages.LBL_LIST_FROM_LOCATION'                   , 'FROM_LOCATION'              , 'FROM_LOCATION'              , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'SmsMessages.ListView.Available'     , null, 'SmsMessages.LBL_LIST_TO_LOCATION'                     , 'TO_LOCATION'                , 'TO_LOCATION'                , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'SmsMessages.ListView.Available'     , null, 'SmsMessages.LBL_LIST_TEAM_NAME'                       , 'TEAM_NAME'                  , 'TEAM_NAME'                  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'SmsMessages.ListView.Available'     , null, '.LBL_LIST_DATE_MODIFIED'                              , 'DATE_MODIFIED'              , 'DATE_MODIFIED'              , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'SmsMessages.ListView.Available'     , null, '.LBL_LIST_DATE_ENTERED'                               , 'DATE_ENTERED'               , 'DATE_ENTERED'               , '10%', 'DateTime';
end -- if;
GO

if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Tasks.ListView.Available' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Tasks.ListView.Available';
	exec dbo.spGRIDVIEWS_InsertOnly           'Tasks.ListView.Available'           , 'Tasks', 'vwTASKS_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Tasks.ListView.Available'           , null, 'Tasks.LBL_LIST_STATUS'                                , 'STATUS'                     , 'STATUS'                     , '10%', 'task_status_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Tasks.ListView.Available'           , null, 'Tasks.LBL_LIST_DATE_START'                            , 'DATE_START'                 , 'DATE_START'                 , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Tasks.ListView.Available'           , null, 'Tasks.LBL_LIST_PRIORITY'                              , 'PRIORITY'                   , 'PRIORITY'                   , '10%', 'task_priority_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Tasks.ListView.Available'           , null, 'Tasks.LBL_LIST_CONTACT_EMAIL'                         , 'CONTACT_EMAIL'              , 'CONTACT_EMAIL'              , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Tasks.ListView.Available'           , null, 'Tasks.LBL_LIST_CONTACT_PHONE'                         , 'CONTACT_PHONE'              , 'CONTACT_PHONE'              , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Tasks.ListView.Available'           , null, '.LBL_LIST_DATE_MODIFIED'                              , 'DATE_MODIFIED'              , 'DATE_MODIFIED'              , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'Tasks.ListView.Available'           , null, '.LBL_LIST_DATE_ENTERED'                               , 'DATE_ENTERED'               , 'DATE_ENTERED'               , '10%', 'DateTime';
end -- if;
GO

if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'TwitterMessages.ListView.Available' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS TwitterMessages.ListView.Available';
	exec dbo.spGRIDVIEWS_InsertOnly           'TwitterMessages.ListView.Available' , 'TwitterMessages', 'vwTWITTER_MESSAGES_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'TwitterMessages.ListView.Available' , null, 'TwitterMessages.LBL_LIST_DESCRIPTION'                 , 'DESCRIPTION'                , 'DESCRIPTION'                , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'TwitterMessages.ListView.Available' , null, 'TwitterMessages.LBL_LIST_TWITTER_FULL_NAME'           , 'TWITTER_FULL_NAME'          , 'TWITTER_FULL_NAME'          , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'TwitterMessages.ListView.Available' , null, '.LBL_LIST_DATE_MODIFIED'                              , 'DATE_MODIFIED'              , 'DATE_MODIFIED'              , '10%', 'DateTime';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundDate 'TwitterMessages.ListView.Available' , null, '.LBL_LIST_DATE_ENTERED'                               , 'DATE_ENTERED'               , 'DATE_ENTERED'               , '10%', 'DateTime';
end -- if;
GO

if not exists(select * from GRIDVIEWS_COLUMNS where GRID_NAME = 'Users.ListView.Available' and DELETED = 0) begin -- then
	print 'GRIDVIEWS_COLUMNS Users.ListView.Available';
	exec dbo.spGRIDVIEWS_InsertOnly           'Users.ListView.Available'           , 'Users', 'vwUSERS_List';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBoundList 'Users.ListView.Available'           , null, 'Users.LBL_LIST_EMPLOYEE_STATUS'                       , 'EMPLOYEE_STATUS'            , 'EMPLOYEE_STATUS'            , '10%', 'employee_status_dom';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.ListView.Available'           , null, 'Users.LBL_LIST_TITLE'                                 , 'TITLE'                      , 'TITLE'                      , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.ListView.Available'           , null, 'Users.LBL_LIST_PHONE_MOBILE'                          , 'PHONE_MOBILE'               , 'PHONE_MOBILE'               , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.ListView.Available'           , null, 'Users.LBL_LIST_PHONE_OTHER'                           , 'PHONE_OTHER'                , 'PHONE_OTHER'                , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.ListView.Available'           , null, 'Users.LBL_LIST_EXTENSION'                             , 'EXTENSION'                  , 'EXTENSION'                  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.ListView.Available'           , null, 'Users.LBL_LIST_PHONE_FAX'                             , 'PHONE_FAX'                  , 'PHONE_FAX'                  , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.ListView.Available'           , null, 'Users.LBL_LIST_PHONE_HOME'                            , 'PHONE_HOME'                 , 'PHONE_HOME'                 , '10%';
	exec dbo.spGRIDVIEWS_COLUMNS_InsBound     'Users.ListView.Available'           , null, 'Users.LBL_LIST_ADDRESS_HTML'                          , 'ADDRESS_HTML'               , 'ADDRESS_HTML'               , '10%';
end -- if;
GO


set nocount off;
GO


/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spGRIDVIEWS_COLUMNS_ListViewsAvailable()
/

call dbo.spSqlDropProcedure('spGRIDVIEWS_COLUMNS_ListViewsAvailable')
/

-- #endif IBM_DB2 */



print 'LANGUAGES.2';
GO

-- 05/19/2008 Paul.  Unicode strings must be marked as such, otherwise unicode will go in as ???.
-- 05/20/2008 Paul.  The configuration wizard allows languages to be enabled, so we can default to disabling these.
-- 04/06/2010 Paul.  Add support for Farsi/Persian. 
-- 08/01/2013 Paul.  We are using Microsoft Translator instead of Google, so the supported languages have changed. 
-- http://msdn.microsoft.com/en-us/library/hh456380.aspx
exec dbo.spLANGUAGES_InsertOnly N'ar-SA'     ,  1025, 0, N'العربية (المملكة العربية السعودية)', N'Arabic (Saudi Arabia)';
exec dbo.spLANGUAGES_InsertOnly N'bg-BG'     ,  1026, 0, N'български (България)', N'Bulgarian (Bulgaria)';
exec dbo.spLANGUAGES_InsertOnly N'ca-ES'     ,  1027, 0, N'català (català)', N'Catalan (Catalan)';
exec dbo.spLANGUAGES_InsertOnly N'zh-TW'     ,  1028, 0, N'中文(繁體) (台灣)', N'Chinese (Taiwan)';
exec dbo.spLANGUAGES_InsertOnly N'zh-CN'     ,  2052, 0, N'中文(简体) (中华人民共和国)', N'Chinese (People''s Republic of China)';
exec dbo.spLANGUAGES_InsertOnly N'cs-CZ'     ,  1029, 0, N'čeština (Česká republika)', N'Czech (Czech Republic)';
exec dbo.spLANGUAGES_InsertOnly N'da-DK'     ,  1030, 0, N'dansk (Danmark)', N'Danish (Denmark)';
exec dbo.spLANGUAGES_InsertOnly N'nl-NL'     ,  1043, 0, N'Nederlands (Nederland)', N'Dutch (Netherlands)';
exec dbo.spLANGUAGES_InsertOnly N'en-US'     ,  1033, 1, N'English (United States)', N'English (United States)';
exec dbo.spLANGUAGES_InsertOnly N'en-AU'     ,  3081, 1, N'English (Australia)', N'English (Australia)';
exec dbo.spLANGUAGES_InsertOnly N'en-CA'     ,  4105, 1, N'English (Canada)', N'English (Canada)';
exec dbo.spLANGUAGES_InsertOnly N'en-GB'     ,  2057, 1, N'English (United Kingdom)', N'English (United Kingdom)';
exec dbo.spLANGUAGES_InsertOnly N'et-EE'     ,  1061, 0, N'eesti (Eesti)', N'Estonian (Estonia)';
exec dbo.spLANGUAGES_InsertOnly N'fa-IR'     ,  1065, 0, N'فارسى (ايران)', N'Persian (Iran)';
exec dbo.spLANGUAGES_InsertOnly N'fi-FI'     ,  1035, 0, N'suomi (Suomi)', N'Finnish (Finland)';
exec dbo.spLANGUAGES_InsertOnly N'fr-FR'     ,  1036, 0, N'français (France)', N'French (France)';
exec dbo.spLANGUAGES_InsertOnly N'de-DE'     ,  1031, 0, N'Deutsch (Deutschland)', N'German (Germany)';
exec dbo.spLANGUAGES_InsertOnly N'de-CH'     ,  2055, 0, N'Deutsch (Schweiz)', N'German (Switzerland)';
exec dbo.spLANGUAGES_InsertOnly N'de-AT'     ,  3079, 0, N'Deutsch (Österreich)', N'German (Austria)';
exec dbo.spLANGUAGES_InsertOnly N'el-GR'     ,  1032, 0, N'ελληνικά (Ελλάδα)', N'Greek (Greece)';
exec dbo.spLANGUAGES_InsertOnly N'he-IL'     ,  1037, 0, N'עברית (ישראל)', N'Hebrew (Israel)';
exec dbo.spLANGUAGES_InsertOnly N'hi-IN'     ,  1081, 0, N'हिंदी (भारत)', N'Hindi (India)';
exec dbo.spLANGUAGES_InsertOnly N'hu-HU'     ,  1038, 0, N'Magyar (Magyarország)', N'Hungarian (Hungary)';
exec dbo.spLANGUAGES_InsertOnly N'id-ID'     ,  1057, 0, N'Bahasa Indonesia (Indonesia)', N'Indonesian (Indonesia)';
exec dbo.spLANGUAGES_InsertOnly N'it-IT'     ,  1040, 0, N'italiano (Italia)', N'Italian (Italy)';
exec dbo.spLANGUAGES_InsertOnly N'ja-JP'     ,  1041, 0, N'日本語 (日本)', N'Japanese (Japan)';
exec dbo.spLANGUAGES_InsertOnly N'ko-KR'     ,  1042, 0, N'한국어 (대한민국)', N'Korean (Korea)';
exec dbo.spLANGUAGES_InsertOnly N'lv-LV'     ,  1062, 0, N'latviešu (Latvija)', N'Latvian (Latvia)';
exec dbo.spLANGUAGES_InsertOnly N'lt-LT'     ,  1063, 0, N'lietuvių (Lietuva)', N'Lithuanian (Lithuania)';
exec dbo.spLANGUAGES_InsertOnly N'ms-MY'     ,  1086, 0, N'Bahasa Malaysia (Malaysia)', 'Malay (Malaysia)';
exec dbo.spLANGUAGES_InsertOnly N'nb-NO'     ,  1044, 0, N'norsk (bokmål) (Norge)', N'Norwegian (Bokmål) (Norway)';
exec dbo.spLANGUAGES_InsertOnly N'nn-NO'     ,  2068, 0, N'norsk (nynorsk) (Noreg)', N'Norwegian (Nynorsk) (Norway)';
exec dbo.spLANGUAGES_InsertOnly N'pl-PL'     ,  1045, 0, N'polski (Polska)', N'Polish (Poland)';
exec dbo.spLANGUAGES_InsertOnly N'pt-PT'     ,  2070, 0, N'português (Portugal)', N'Portuguese (Portugal)';
exec dbo.spLANGUAGES_InsertOnly N'pt-BR'     ,  1046, 0, N'Português (Brasil)', N'Portuguese (Brazil)';
exec dbo.spLANGUAGES_InsertOnly N'ro-RO'     ,  1048, 0, N'română (România)', N'Romanian (Romania)';
exec dbo.spLANGUAGES_InsertOnly N'ru-RU'     ,  1049, 0, N'русский (Россия)', N'Russian (Russia)';
exec dbo.spLANGUAGES_InsertOnly N'sk-SK'     ,  1051, 0, N'slovenčina (Slovenská republika)', N'Slovak (Slovakia)';
exec dbo.spLANGUAGES_InsertOnly N'sl-SI'     ,  1060, 0, N'slovenski (Slovenija)', N'Slovenian (Slovenia)';
exec dbo.spLANGUAGES_InsertOnly N'es-ES'     ,  3082, 0, N'español (España)', N'Spanish (Spain)';
exec dbo.spLANGUAGES_InsertOnly N'es-VE'     ,  8202, 0, N'Español (Republica Bolivariana de Venezuela)', N'Spanish (Venezuela)';
exec dbo.spLANGUAGES_InsertOnly N'sv-SE'     ,  1053, 0, N'svenska (Sverige)', N'Swedish (Sweden)';
exec dbo.spLANGUAGES_InsertOnly N'th-TH'     ,  1054, 0, N'ไทย (ไทย)', N'Thai (Thailand)';
exec dbo.spLANGUAGES_InsertOnly N'tr-TR'     ,  1055, 0, N'Türkçe (Türkiye)', N'Turkish (Turkey)';
exec dbo.spLANGUAGES_InsertOnly N'uk-UA'     ,  1058, 0, N'україньска (Україна)', N'Ukrainian (Ukraine)';
exec dbo.spLANGUAGES_InsertOnly N'ur-PK'     ,  1056, 0, N'اُردو (پاکستان)', 'Urdu (Islamic Republic of Pakistan)';
exec dbo.spLANGUAGES_InsertOnly N'vi-VN'     ,  1066, 0, N'Tiếng Việt Nam (Việt Nam)', N'Vietnamese (Viet Nam)';
GO

-- 08/01/2013 Paul.  We are using Microsoft Translator instead of Google, so the supported languages have changed. 
--exec dbo.spLANGUAGES_InsertOnly N'gl-ES'     ,  1110, 0, N'galego (galego)', N'Galician (Galician)';
--exec dbo.spLANGUAGES_InsertOnly N'sq-AL'     ,  1052, 0, N'shqipe (Shqipëria)', N'Albanian (Albania)';
--if exists(select * from vwLANGUAGES where NAME = 'fil-PH') begin -- then
--	if not exists(select * from vwTERMINOLOGY where LANG = 'fil-PH') begin -- then
--		print 'LANGUAGES: Deleting fil-PH';
--		exec dbo.spLANGUAGES_Delete null, 'fil-PH';
--	end -- if;
--end -- if;
if exists(select * from vwLANGUAGES where NAME = 'gl-ES') begin -- then
	if not exists(select * from vwTERMINOLOGY where LANG = 'gl-ES') begin -- then
		print 'LANGUAGES: Deleting gl-ES';
		exec dbo.spLANGUAGES_Delete null, 'gl-ES';
	end -- if;
end -- if;
--if exists(select * from vwLANGUAGES where NAME = 'hr-HR') begin -- then
--	if not exists(select * from vwTERMINOLOGY where LANG = 'hr-HR') begin -- then
--		print 'LANGUAGES: Deleting hr-HR';
--		exec dbo.spLANGUAGES_Delete null, 'hr-HR';
--	end -- if;
--end -- if;
--if exists(select * from vwLANGUAGES where NAME = 'mt-MT') begin -- then
--	if not exists(select * from vwTERMINOLOGY where LANG = 'mt-MT') begin -- then
--		print 'LANGUAGES: Deleting mt-MT';
--		exec dbo.spLANGUAGES_Delete null, 'mt-MT';
--	end -- if;
--end -- if;
if exists(select * from vwLANGUAGES where NAME = 'sq-AL') begin -- then
	if not exists(select * from vwTERMINOLOGY where LANG = 'sq-AL') begin -- then
		print 'LANGUAGES: Deleting sq-AL';
		exec dbo.spLANGUAGES_Delete null, 'sq-AL';
	end -- if;
end -- if;
GO

-- 07/21/2017 Paul.  New languages supported by MS Translator. 
exec dbo.spLANGUAGES_InsertOnly 'af-ZA'      ,  1078, 0, 'Afrikaans (Suid-Afrika)', 'Afrikaans (South Africa)'
exec dbo.spLANGUAGES_InsertOnly 'bn-BD'      ,  2117, 0, 'বাংলা (বাংলাদেশ)', 'Bangla (Bangladesh)'
exec dbo.spLANGUAGES_InsertOnly 'bs-Latn'    ,  5146, 0, 'bosanski (Bosna i Hercegovina)', 'Bosnian (Latin, Bosnia and Herzegovina)'
exec dbo.spLANGUAGES_InsertOnly 'hr-HR'      ,  1050, 0, 'hrvatski (Hrvatska)', 'Croatian (Croatia)'
exec dbo.spLANGUAGES_InsertOnly 'fil-PH'     ,  1124, 0, 'Filipino (Pilipinas)', 'Filipino (Philippines)'
exec dbo.spLANGUAGES_InsertOnly 'sw-KE'      ,  1089, 0, 'Kiswahili (Kenya)', 'Kiswahili (Kenya)'
exec dbo.spLANGUAGES_InsertOnly 'mt-MT'      ,  1082, 0, 'Malti (Malta)', 'Maltese (Malta)'
exec dbo.spLANGUAGES_InsertOnly 'sr-Cyrl'    ,  4096, 0, 'српски (Косово)', 'Serbian (Cyrillic, Kosovo)'
exec dbo.spLANGUAGES_InsertOnly 'sr-Latn'    ,  9242, 0, 'srpski (Srbija)', 'Serbian (Latin, Serbia)'
exec dbo.spLANGUAGES_InsertOnly 'cy-GB'      ,  1106, 0, 'Cymraeg (Y Deyrnas Unedig)', 'Welsh (United Kingdom)'
-- 07/21/2017 Paul.  Unknown languages supported by MS Translator. 
-- yue, fj, ht, mww, tlh, tlh-Qaak, yua, otq, sm, ty
GO

-- 08/01/2013 Paul.  We are using Microsoft T
/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spLANGUAGES_Defaults()
/

call dbo.spSqlDropProcedure('spLANGUAGES_Defaults')
/

-- #endif IBM_DB2 */



print 'TIMEZONES 2007 Updates';
GO
-- delete TIMEZONES
set nocount on;
GO

-- 02/22/2007 Paul.  2007 time zone update for Microsoft Windows operating systems
-- http://support.microsoft.com/kb/928388

-- 02/22/2007 Paul.  Only update the timezone data that has changed. This is informational as spTIMEZONES_UpdateByName has been modified to only update a record if it has changed. 
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+04:30) Kabul'                                            , 'Afghanistan Standard Time'      , '', 'Afghanistan Daylight Time'      , '', -270, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-09:00) Alaska'                                           , 'Alaskan Standard Time'          , '', 'Alaskan Daylight Time'          , '', 540, 0, -60, 0, 11, 1, 0, 2, 0, 0, 3, 2, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+03:00) Kuwait, Riyadh'                                   , 'Arab Standard Time'             , '', 'Arab Daylight Time'             , '', -180, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+04:00) Abu Dhabi, Muscat'                                , 'Arabian Standard Time'          , '', 'Arabian Daylight Time'          , '', -240, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+03:00) Baghdad'                                          , 'Arabic Standard Time'           , '', 'Arabic Daylight Time'           , '', -180, 0, -60, 0, 10, 1, 0, 4, 0, 0, 4, 1, 0, 3, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-04:00) Atlantic Time (Canada)'                           , 'Atlantic Standard Time'         , '', 'Atlantic Daylight Time'         , '', 240, 0, -60, 0, 11, 1, 0, 2, 0, 0, 3, 2, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+09:30) Darwin'                                           , 'AUS Central Standard Time'      , '', 'AUS Central Daylight Time'      , '', -570, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+10:00) Canberra, Melbourne, Sydney'                      , 'AUS Eastern Standard Time'      , '', 'AUS Eastern Daylight Time'      , '', -600, 0, -60, 0, 3, 5, 0, 3, 0, 0, 10, 5, 0, 2, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+04:00) Baku'                                             , 'Azerbaijan Standard Time'       , '', 'Azerbaijan Daylight Time'       , '', -240, 0, -60, 0, 10, 5, 0, 5, 0, 0, 3, 5, 0, 4, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-01:00) Azores'                                           , 'Azores Standard Time'           , '', 'Azores Daylight Time'           , '', 60, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-06:00) Saskatchewan'                                     , 'Canada Central Standard Time'   , '', 'Canada Central Daylight Time'   , '', 360, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-01:00) Cape Verde Is.'                                   , 'Cape Verde Standard Time'       , '', 'Cape Verde Daylight Time'       , '', 60, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
-- 04/08/2010 Paul.  Yerevan changes in 2010. 
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+04:00) Yerevan'                                          , 'Caucasus Standard Time'         , '', 'Caucasus Daylight Time'         , '', -240, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+09:30) Adelaide'                                         , 'Cen. Australia Standard Time'   , '', 'Cen. Australia Daylight Time'   , '', -570, 0, -60, 0, 3, 5, 0, 3, 0, 0, 10, 5, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-06:00) Central America'                                  , 'Central America Standard Time'  , '', 'Central America Daylight Time'  , '', 360, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+06:00) Astana, Dhaka'                                    , 'Central Asia Standard Time'     , '', 'Central Asia Daylight Time'     , '', -360, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-04:00) Manaus'                                           , 'Central Brazilian Standard Time', '', 'Central Brazilian Daylight Time', '', 240, 0, -60, 0, 2, 5, 0, 0, 0, 0, 11, 1, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague', 'Central Europe Standard Time'   , '', 'Central Europe Daylight Time'   , '', -60, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb'                 , 'Central European Standard Time' , '', 'Central European Daylight Time' , '', -60, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+11:00) Magadan, Solomon Is., New Caledonia'              , 'Central Pacific Standard Time'  , '', 'Central Pacific Daylight Time'  , '', -660, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-06:00) Central Time (US & Canada)'                       , 'Central Standard Time'          , '', 'Central Daylight Time'          , '', 360, 0, -60, 0, 11, 1, 0, 2, 0, 0, 3, 2, 0, 2, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-06:00) Guadalajara, Mexico City, Monterrey - New'        , 'Central Standard Time (Mexico)' , '', 'Central Daylight Time (Mexico)' , '', 360, 0, -60, 0, 10, 5, 0, 2, 0, 0, 4, 1, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi'            , 'China Standard Time'            , '', 'China Daylight Time'            , '', -480, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-12:00) International Date Line West'                     , 'Dateline Standard Time'         , '', 'Dateline Daylight Time'         , '', 720, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+03:00) Nairobi'                                          , 'E. Africa Standard Time'        , '', 'E. Africa Daylight Time'        , '', -180, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+10:00) Brisbane'                                         , 'E. Australia Standard Time'     , '', 'E. Australia Daylight Time'     , '', -600, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+02:00) Minsk'                                            , 'E. Europe Standard Time'        , '', 'E. Europe Daylight Time'        , '', -120, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
-- 04/08/2010 Paul.  Brasilia changes in 2010. 
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-03:00) Brasilia'                                         , 'E. South America Standard Time' , '', 'E. South America Daylight Time' , '', 180, 0, -60, 0, 2, 5, 0, 0, 0, 0, 11, 1, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-05:00) Eastern Time (US & Canada)'                       , 'Eastern Standard Time'          , '', 'Eastern Daylight Time'          , '', 300, 0, -60, 0, 11, 1, 0, 2, 0, 0, 3, 2, 0, 2, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+02:00) Cairo'                                            , 'Egypt Standard Time'            , '', 'Egypt Daylight Time'            , '', -120, 0, -60, 0, 9, 5, 4, 23, 59, 0, 4, 5, 4, 23, 59;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+05:00) Ekaterinburg'                                     , 'Ekaterinburg Standard Time'     , '', 'Ekaterinburg Daylight Time'     , '', -300, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+12:00) Fiji, Kamchatka, Marshall Is.'                    , 'Fiji Standard Time'             , '', 'Fiji Daylight Time'             , '', -720, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius'    , 'FLE Standard Time'              , '', 'FLE Daylight Time'              , '', -120, 0, -60, 0, 10, 5, 0, 4, 0, 0, 3, 5, 0, 3, 0;
-- 04/08/2010 Paul.  Tbilisi changes in 2010. 
-- exec dbo.spTIMEZONES_UpdateByName null, '(GMT+03:00) Tbilisi'                                          , 'Georgian Standard Time'         , '', 'Georgian Daylight Time'         , '', -180, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London', 'GMT Standard Time'              , '', 'GMT Daylight Time'              , '', 0, 0, -60, 0, 10, 5, 0, 2, 0, 0, 3, 5, 0, 1, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-03:00) Greenland'                                        , 'Greenland Standard Time'        , '', 'Greenland Daylight Time'        , '', 180, 0, -60, 0, 10, 5, 0, 2, 0, 0, 4, 1, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT) Casablanca, Monrovia, Reykjavik'                        , 'Greenwich Standard Time'        , '', 'Greenwich Daylight Time'        , '', 0, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+02:00) Athens, Bucharest, Istanbul'                      , 'GTB Standard Time'              , '', 'GTB Daylight Time'              , '', -120, 0, -60, 0, 10, 5, 0, 4, 0, 0, 3, 5, 0, 3, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-10:00) Hawaii'                                           , 'Hawaiian Standard Time'         , '', 'Hawaiian Daylight Time'         , '', 600, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi'              , 'India Standard Time'            , '', 'India Daylight Time'            , '', -330, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
-- 04/08/2010 Paul.  Tehran changes in 2010. 
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+03:30) Tehran'                                           , 'Iran Standard Time'             , '', 'Iran Daylight Time'             , '', -210, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
-- 04/08/2010 Paul.  Jerusalem changes in 2010. 
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+02:00) Jerusalem'                                        , 'Jerusalem Standard Time'        , '', 'Jerusalem Daylight Time'        , '', -120, 0, -60, 0, 9, 3, 0, 2, 0, 0, 3, 5, 5, 2, 0;
-- 04/08/2010 Paul.  Amman changes in 2010. 
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+02:00) Amman'                                            , 'Jordan Standard Time'           , '', 'Jordan Daylight Time'           , '', -120, 0, -60, 0, 9, 5, 5, 1, 0, 0, 3, 5, 4, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+09:00) Seoul'                                            , 'Korea Standard Time'            , '', 'Korea Daylight Time'            , '', -540, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-06:00) Guadalajara, Mexico City, Monterrey - Old'        , 'Mexico Standard Time'           , '', 'Mexico Daylight Time'           , '', 360, 0, -60, 0, 10, 5, 0, 2, 0, 0, 4, 1, 0, 2, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-07:00) Chihuahua, La Paz, Mazatlan - Old'                , 'Mexico Standard Time 2'         , '', 'Mexico Daylight Time 2'         , '', 420, 0, -60, 0, 10, 5, 0, 2, 0, 0, 4, 1, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-02:00) Mid-Atlantic'                                     , 'Mid-Atlantic Standard Time'     , '', 'Mid-Atlantic Daylight Time'     , '', 120, 0, -60, 0, 9, 5, 0, 2, 0, 0, 3, 5, 0, 2, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+02:00) Beirut'                                           , 'Middle East Standard Time'      , '', 'Middle East Daylight Time'      , '', -120, 0, -60, 0, 10, 5, 6, 23, 59, 0, 3, 5, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-03:00) Montevideo'                                       , 'Montevideo Standard Time'       , '', 'Montevideo Daylight Time'       , '', 180, 0, -60, 0, 3, 2, 0, 2, 0, 0, 10, 1, 0, 2, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-07:00) Mountain Time (US & Canada)'                      , 'Mountain Standard Time'         , '', 'Mountain Daylight Time'         , '', 420, 0, -60, 0, 11, 1, 0, 2, 0, 0, 3, 2, 0, 2, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-07:00) Chihuahua, La Paz, Mazatlan - New'                , 'Mountain Standard Time (Mexico)', '', 'Mountain Daylight Time (Mexico)', '', 420, 0, -60, 0, 10, 5, 0, 2, 0, 0, 4, 1, 0, 2, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+06:30) Yangon (Rangoon)'                                 , 'Myanmar Standard Time'          , '', 'Myanmar Daylight Time'          , '', -390, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+06:00) Almaty, Novosibirsk'                              , 'N. Central Asia Standard Time'  , '', 'N. Central Asia Daylight Time'  , '', -360, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+02:00) Windhoek'                                         , 'Namibia Standard Time'          , '', 'Namibia Daylight Time'          , '', -120, 0, 60, 0, 9, 1, 0, 2, 0, 0, 4, 1, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+05:45) Kathmandu'                                        , 'Nepal Standard Time'            , '', 'Nepal Daylight Time'            , '', -345, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
-- 04/08/2010 Paul.  Auckland changes in 2010. 
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+12:00) Auckland, Wellington'                             , 'New Zealand Standard Time'      , '', 'New Zealand Daylight Time'      , '', -720, 0, -60, 0, 3, 3, 0, 3, 0, 0, 10, 1, 0, 2, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-03:30) Newfoundland'                                     , 'Newfoundland Standard Time'     , '', 'Newfoundland Daylight Time'     , '', 210, 0, -60, 0, 11, 1, 0, 0, 1, 0, 3, 2, 0, 0, 1;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+08:00) Irkutsk, Ulaan Bataar'                            , 'North Asia East Standard Time'  , '', 'North Asia East Daylight Time'  , '', -480, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+07:00) Krasnoyarsk'                                      , 'North Asia Standard Time'       , '', 'North Asia Daylight Time'       , '', -420, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-04:00) Santiago'                                         , 'Pacific SA Standard Time'       , '', 'Pacific SA Daylight Time'       , '', 240, 0, -60, 0, 3, 2, 6, 23, 59, 0, 10, 2, 6, 23, 59;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-08:00) Pacific Time (US & Canada)'                       , 'Pacific Standard Time'          , '', 'Pacific Daylight Time'          , '', 480, 0, -60, 0, 11, 1, 0, 2, 0, 0, 3, 2, 0, 2, 0;
-- 04/08/2010 Paul.  Tijuana changes in 2010. 
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-08:00) Tijuana, Baja California'                         , 'Pacific Standard Time (Mexico)' , '', 'Pacific Daylight Time (Mexico)' , '', 480, 0, -60, 0, 10, 5, 0, 2, 0, 0, 4, 1, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+01:00) Brussels, Copenhagen, Madrid, Paris'              , 'Romance Standard Time'          , '', 'Romance Daylight Time'          , '', -60, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+03:00) Moscow, St. Petersburg, Volgograd'                , 'Russian Standard Time'          , '', 'Russian Daylight Time'          , '', -180, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-03:00) Buenos Aires, Georgetown'                         , 'SA Eastern Standard Time'       , '', 'SA Eastern Daylight Time'       , '', 180, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-05:00) Bogota, Lima, Quito, Rio Branco'                  , 'SA Pacific Standard Time'       , '', 'SA Pacific Daylight Time'       , '', 300, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-04:00) Caracas, La Paz'                                  , 'SA Western Standard Time'       , '', 'SA Western Daylight Time'       , '', 240, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-11:00) Midway Island, Samoa'                             , 'Samoa Standard Time'            , '', 'Samoa Daylight Time'            , '', 660, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+07:00) Bangkok, Hanoi, Jakarta'                          , 'SE Asia Standard Time'          , '', 'SE Asia Daylight Time'          , '', -420, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+08:00) Kuala Lumpur, Singapore'                          , 'Malay Peninsula Standard Time'  , '', 'Malay Peninsula Daylight Time'  , '', -480, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+02:00) Harare, Pretoria'                                 , 'South Africa Standard Time'     , '', 'South Africa Daylight Time'     , '', -120, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+05:30) Sri Jayawardenepura'                              , 'Sri Lanka Standard Time'        , '', 'Sri Lanka Daylight Time'        , '', -330, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+08:00) Taipei'                                           , 'Taipei Standard Time'           , '', 'Taipei Daylight Time'           , '', -480, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+10:00) Hobart'                                           , 'Tasmania Standard Time'         , '', 'Tasmania Daylight Time'         , '', -600, 0, -60, 0, 3, 5, 0, 3, 0, 0, 10, 1, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+09:00) Osaka, Sapporo, Tokyo'                            , 'Tokyo Standard Time'            , '', 'Tokyo Daylight Time'            , '', -540, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+13:00) Nuku''alofa'                                       , 'Tonga Standard Time'            , '', 'Tonga Daylight Time'            , '', -780, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-05:00) Indiana (East)'                                   , 'US Eastern Standard Time'       , '', 'US Eastern Daylight Time'       , '', 300, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-07:00) Arizona'                                          , 'US Mountain Standard Time'      , '', 'US Mountain Daylight Time'      , '', 420, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+10:00) Vladivostok'                                      , 'Vladivostok Standard Time'      , '', 'Vladivostok Daylight Time'      , '', -600, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
-- 04/08/2010 Paul.  Perth changes in 2010. 
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+08:00) Perth'                                            , 'W. Australia Standard Time'     , '', 'W. Australia Daylight Time'     , '', -480, 0, -60, 0, 3, 5, 0, 3, 0, 0, 10, 5, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+01:00) West Central Africa'                              , 'W. Central Africa Standard Time', '', 'W. Central Africa Daylight Time', '', -60, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna' , 'W. Europe Standard Time'        , '', 'W. Europe Daylight Time'        , '', -60, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+05:00) Islamabad, Karachi, Tashkent'                     , 'West Asia Standard Time'        , '', 'West Asia Daylight Time'        , '', -300, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+10:00) Guam, Port Moresby'                               , 'West Pacific Standard Time'     , '', 'West Pacific Daylight Time'     , '', -600, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+09:00) Yakutsk'                                          , 'Yakutsk Standard Time'          , '', 'Yakutsk Daylight Time'          , '', -540, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
GO


set nocount off;
GO


/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTIMEZONES_2007Updates()
/

call dbo.spSqlDropProcedure('spTIMEZONES_2007Updates')
/

-- #endif IBM_DB2 */




print 'ACL_ROLES ReadOnly';
GO
-- delete ACL_ROLES
set nocount on;
GO

if exists(select *
	    from            MODULES
	         inner join ACL_ACTIONS
	                 on ACL_ACTIONS.CATEGORY = MODULE_NAME
	                and ACL_ACTIONS.DELETED  = 0
	    left outer join ACL_ROLES_ACTIONS
	                 on ACL_ROLES_ACTIONS.ACTION_ID = ACL_ACTIONS.ID
	                and ACL_ROLES_ACTIONS.ROLE_ID   = '5E1B75FC-6885-41CA-8ED9-7A26E72A8FA9'
	                and ACL_ROLES_ACTIONS.DELETED   = 0
	   where MODULES.DELETED  = 0
	     and ACL_ACTIONS.NAME in (N'access', N'view', N'list', N'edit', N'delete', N'import', N'export', N'admin', N'archive')
	     and MODULES.IS_ADMIN = 0
	     and ACL_ROLES_ACTIONS.ID is null
	 ) begin -- then
	exec dbo.spACL_ROLES_InsertOnly '5E1B75FC-6885-41CA-8ED9-7A26E72A8FA9', 'Read-Only Role', 'Read-Only access to core modules.';
	
	-- Access (Enabled = 89, Disabled = -98)
	-- View (All = 90, Owner = 75, None -99)
	-- delete from ACL_ROLES_ACTIONS where ROLE_ID = '5E1B75FC-6885-41CA-8ED9-7A26E72A8FA9';
	insert into ACL_ROLES_ACTIONS
		( ID
		, ROLE_ID
		, ACTION_ID
		, ACCESS_OVERRIDE
		)
	select newid()
	     , '5E1B75FC-6885-41CA-8ED9-7A26E72A8FA9'
	     , ACL_ACTIONS.ID
	     , (case ACL_ACTIONS.NAME
	        when N'access'  then 89
	        when N'view'    then 89
	        when N'list'    then 89
	        when N'edit'    then -99
	        when N'delete'  then -99
	        when N'import'  then -99
	        when N'export'  then -99
	        when N'admin'   then -99
	        when N'archive' then -99
	        end)
	  from            MODULES
	       inner join ACL_ACTIONS
	               on ACL_ACTIONS.CATEGORY = MODULE_NAME
	              and ACL_ACTIONS.DELETED  = 0
	  left outer join ACL_ROLES_ACTIONS
	               on ACL_ROLES_ACTIONS.ACTION_ID = ACL_ACTIONS.ID
	              and ACL_ROLES_ACTIONS.ROLE_ID   = '5E1B75FC-6885-41CA-8ED9-7A26E72A8FA9'
	              and ACL_ROLES_ACTIONS.DELETED   = 0
	 where MODULES.DELETED  = 0
	   and ACL_ACTIONS.NAME in (N'access', N'view', N'list', N'edit', N'delete', N'import', N'export', N'admin', N'archive')
	   and MODULES.IS_ADMIN = 0
	   and ACL_ROLES_ACTIONS.ID is null
	 order by MODULES.MODULE_NAME, ACL_ACTIONS.NAME;
end -- if;
GO


set nocount off;
GO


/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spACL_ROLES_ReadOnly()
/

call dbo.spSqlDropProcedure('spACL_ROLES_ReadOnly')
/

-- #endif IBM_DB2 */



print 'TIMEZONES 2010 Updates';
GO
-- delete TIMEZONES
set nocount on;
GO

-- 04/08/2010 Paul.  2010 time zone update for Microsoft Windows operating systems
-- http://support.microsoft.com/kb/914387

-- 04/08/2010 Paul.  Only update the timezone data that has changed. This is informational as spTIMEZONES_UpdateByName has been modified to only update a record if it has changed. 
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+04:30) Kabul'                                            , 'Afghanistan Standard Time'      , '', 'Afghanistan Daylight Time'      , '', -270, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-09:00) Alaska'                                           , 'Alaskan Standard Time'          , '', 'Alaskan Daylight Time'          , '', 540, 0, -60, 0, 11, 1, 0, 2, 0, 0, 3, 2, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+03:00) Kuwait, Riyadh'                                   , 'Arab Standard Time'             , '', 'Arab Daylight Time'             , '', -180, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+04:00) Abu Dhabi, Muscat'                                , 'Arabian Standard Time'          , '', 'Arabian Daylight Time'          , '', -240, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+03:00) Baghdad'                                          , 'Arabic Standard Time'           , '', 'Arabic Daylight Time'           , '', -180, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-03:00) Buenos Aires'                                     , 'Argentina Standard Time'        , '', 'Argentina Daylight Time'        , '', 180, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+04:00) Yerevan'                                          , 'Armenian Standard Time'         , '', 'Armenian Daylight Time'         , '', -240, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-04:00) Atlantic Time (Canada)'                           , 'Atlantic Standard Time'         , '', 'Atlantic Daylight Time'         , '', 240, 0, -60, 0, 11, 1, 0, 2, 0, 0, 3, 2, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+09:30) Darwin'                                           , 'AUS Central Standard Time'      , '', 'AUS Central Daylight Time'      , '', -570, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+10:00) Canberra, Melbourne, Sydney'                      , 'AUS Eastern Standard Time'      , '', 'AUS Eastern Daylight Time'      , '', -600, 0, -60, 0, 4, 1, 0, 3, 0, 0, 10, 1, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+04:00) Baku'                                             , 'Azerbaijan Standard Time'       , '', 'Azerbaijan Daylight Time'       , '', -240, 0, -60, 0, 10, 5, 0, 5, 0, 0, 3, 5, 0, 4, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-01:00) Azores'                                           , 'Azores Standard Time'           , '', 'Azores Daylight Time'           , '', 60, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+06:00) Dhaka'                                            , 'Bangladesh Standard Time'       , '', 'Bangladesh Daylight Time'       , '', -360, 0, -60, 0, 10, 5, 0, 23, 59, 0, 3, 5, 3, 22, 59;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-06:00) Saskatchewan'                                     , 'Canada Central Standard Time'   , '', 'Canada Central Daylight Time'   , '', 360, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-01:00) Cape Verde Is.'                                   , 'Cape Verde Standard Time'       , '', 'Cape Verde Daylight Time'       , '', 60, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+04:00) Caucasus Standard Time'                           , 'Caucasus Standard Time'         , '', 'Caucasus Daylight Time'         , '', -240, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+09:30) Adelaide'                                         , 'Cen. Australia Standard Time'   , '', 'Cen. Australia Daylight Time'   , '', -570, 0, -60, 0, 4, 1, 0, 3, 0, 0, 10, 1, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-06:00) Central America'                                  , 'Central America Standard Time'  , '', 'Central America Daylight Time'  , '', 360, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+06:00) Astana'                                           , 'Central Asia Standard Time'     , '', 'Central Asia Daylight Time'     , '', -360, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-04:00) Cuiaba'                                           , 'Central Brazilian Standard Time', '', 'Central Brazilian Daylight Time', '', 240, 0, -60, 0, 2, 3, 6, 23, 59, 0, 10, 3, 6, 23, 59;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague', 'Central Europe Standard Time'   , '', 'Central Europe Daylight Time'   , '', -60, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb'                 , 'Central European Standard Time' , '', 'Central European Daylight Time' , '', -60, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+11:00) Magadan, Solomon Is., New Caledonia'              , 'Central Pacific Standard Time'  , '', 'Central Pacific Daylight Time'  , '', -660, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-06:00) Central Time (US & Canada)'                       , 'Central Standard Time'          , '', 'Central Daylight Time'          , '', 360, 0, -60, 0, 11, 1, 0, 2, 0, 0, 3, 2, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-06:00) Guadalajara, Mexico City, Monterrey - New'        , 'Central Standard Time (Mexico)' , '', 'Central Daylight Time (Mexico)' , '', 360, 0, -60, 0, 10, 5, 0, 2, 0, 0, 4, 1, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi'            , 'China Standard Time'            , '', 'China Daylight Time'            , '', -480, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-12:00) International Date Line West'                     , 'Dateline Standard Time'         , '', 'Dateline Daylight Time'         , '', 720, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+03:00) Nairobi'                                          , 'E. Africa Standard Time'        , '', 'E. Africa Daylight Time'        , '', -180, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+10:00) Brisbane'                                         , 'E. Australia Standard Time'     , '', 'E. Australia Daylight Time'     , '', -600, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+02:00) Minsk'                                            , 'E. Europe Standard Time'        , '', 'E. Europe Daylight Time'        , '', -120, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-03:00) Brasilia'                                         , 'E. South America Standard Time' , '', 'E. South America Daylight Time' , '', 180, 0, -60, 0, 2, 3, 6, 23, 59, 0, 10, 3, 6, 23, 59;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-05:00) Eastern Time (US & Canada)'                       , 'Eastern Standard Time'          , '', 'Eastern Daylight Time'          , '', 300, 0, -60, 0, 11, 1, 0, 2, 0, 0, 3, 2, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+02:00) Cairo'                                            , 'Egypt Standard Time'            , '', 'Egypt Daylight Time'            , '', -120, 0, -60, 0, 9, 5, 4, 23, 59, 0, 4, 5, 4, 23, 59;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+05:00) Ekaterinburg'                                     , 'Ekaterinburg Standard Time'     , '', 'Ekaterinburg Daylight Time'     , '', -300, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+12:00) Fiji'                                             , 'Fiji Standard Time'             , '', 'Fiji Daylight Time'             , '', -720, 0, -60, 0, 4, 5, 0, 3, 0, 0, 11, 5, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius'    , 'FLE Standard Time'              , '', 'FLE Daylight Time'              , '', -120, 0, -60, 0, 10, 5, 0, 4, 0, 0, 3, 5, 0, 3, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+04:00) Tbilisi'                                          , 'Georgian Standard Time'         , '', 'Georgian Daylight Time'         , '', -240, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London', 'GMT Standard Time'              , '', 'GMT Daylight Time'              , '', 0, 0, -60, 0, 10, 5, 0, 2, 0, 0, 3, 5, 0, 1, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-03:00) Greenland'                                        , 'Greenland Standard Time'        , '', 'Greenland Daylight Time'        , '', 180, 0, -60, 0, 10, 5, 6, 23, 0, 0, 3, 5, 6, 22, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT) Monrovia, Reykjavik'                                    , 'Greenwich Standard Time'        , '', 'Greenwich Daylight Time'        , '', 0, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+02:00) Athens, Bucharest, Istanbul'                      , 'GTB Standard Time'              , '', 'GTB Daylight Time'              , '', -120, 0, -60, 0, 10, 5, 0, 4, 0, 0, 3, 5, 0, 3, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-10:00) Hawaii'                                           , 'Hawaiian Standard Time'         , '', 'Hawaiian Daylight Time'         , '', 600, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi'              , 'India Standard Time'            , '', 'India Daylight Time'            , '', -330, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+03:30) Tehran'                                           , 'Iran Standard Time'             , '', 'Iran Daylight Time'             , '', -210, 0, -60, 0, 9, 3, 1, 23, 59, 0, 3, 3, 6, 23, 59;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+02:00) Jerusalem'                                        , 'Jerusalem Standard Time'        , '', 'Jerusalem Daylight Time'        , '', -120, 0, -60, 0, 9, 2, 0, 2, 0, 0, 3, 5, 5, 2, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+02:00) Amman'                                            , 'Jordan Standard Time'           , '', 'Jordan Daylight Time'           , '', -120, 0, -60, 0, 10, 5, 5, 1, 0, 0, 3, 5, 4, 23, 59;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+12:00) Petropavlovsk-Kamchatsky'                         , 'Kamchatka Standard Time'        , '', 'Kamchatka Daylight Time'        , '', -720, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+09:00) Seoul'                                            , 'Korea Standard Time'            , '', 'Korea Daylight Time'            , '', -540, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+04:00) Port Louis'                                       , 'Mauritius Standard Time'        , '', 'Mauritius Daylight Time'        , '', -240, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-06:00) Guadalajara, Mexico City, Monterrey - Old'        , 'Mexico Standard Time'           , '', 'Mexico Daylight Time'           , '', 360, 0, -60, 0, 10, 5, 0, 2, 0, 0, 4, 1, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-07:00) Chihuahua, La Paz, Mazatlan - Old'                , 'Mexico Standard Time 2'         , '', 'Mexico Daylight Time 2'         , '', 420, 0, -60, 0, 10, 5, 0, 2, 0, 0, 4, 1, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-02:00) Mid-Atlantic'                                     , 'Mid-Atlantic Standard Time'     , '', 'Mid-Atlantic Daylight Time'     , '', 120, 0, -60, 0, 9, 5, 0, 2, 0, 0, 3, 5, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+02:00) Beirut'                                           , 'Middle East Standard Time'      , '', 'Middle East Daylight Time'      , '', -120, 0, -60, 0, 10, 5, 6, 23, 59, 0, 3, 5, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-03:00) Montevideo'                                       , 'Montevideo Standard Time'       , '', 'Montevideo Daylight Time'       , '', 180, 0, -60, 0, 3, 2, 0, 2, 0, 0, 10, 1, 0, 2, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT) Casablanca'                                             , 'Morocco Standard Time'          , '', 'Morocco Daylight Time'          , '', 0, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-07:00) Mountain Time (US & Canada)'                      , 'Mountain Standard Time'         , '', 'Mountain Daylight Time'         , '', 420, 0, -60, 0, 11, 1, 0, 2, 0, 0, 3, 2, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-07:00) Chihuahua, La Paz, Mazatlan - New'                , 'Mountain Standard Time (Mexico)', '', 'Mountain Daylight Time (Mexico)', '', 420, 0, -60, 0, 10, 5, 0, 2, 0, 0, 4, 1, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+06:30) Yangon (Rangoon)'                                 , 'Myanmar Standard Time'          , '', 'Myanmar Daylight Time'          , '', -390, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+06:00) Novosibirsk'                                      , 'N. Central Asia Standard Time'  , '', 'N. Central Asia Daylight Time'  , '', -360, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+02:00) Windhoek'                                         , 'Namibia Standard Time'          , '', 'Namibia Daylight Time'          , '', -120, 0, 60, 0, 9, 1, 0, 2, 0, 0, 4, 1, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+05:45) Kathmandu'                                        , 'Nepal Standard Time'            , '', 'Nepal Daylight Time'            , '', -345, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+12:00) Auckland, Wellington'                             , 'New Zealand Standard Time'      , '', 'New Zealand Daylight Time'      , '', -720, 0, -60, 0, 4, 1, 0, 3, 0, 0, 9, 5, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-03:30) Newfoundland'                                     , 'Newfoundland Standard Time'     , '', 'Newfoundland Daylight Time'     , '', 210, 0, -60, 0, 11, 1, 0, 0, 1, 0, 3, 2, 0, 0, 1;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+08:00) Irkutsk'                                          , 'North Asia East Standard Time'  , '', 'North Asia East Daylight Time'  , '', -480, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+07:00) Krasnoyarsk'                                      , 'North Asia Standard Time'       , '', 'North Asia Daylight Time'       , '', -420, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-04:00) Santiago'                                         , 'Pacific SA Standard Time'       , '', 'Pacific SA Daylight Time'       , '', 240, 0, -60, 0, 3, 2, 6, 23, 59, 0, 10, 2, 6, 23, 59;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-08:00) Pacific Time (US & Canada)'                       , 'Pacific Standard Time'          , '', 'Pacific Daylight Time'          , '', 480, 0, -60, 0, 11, 1, 0, 2, 0, 0, 3, 2, 0, 2, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-08:00) Baja California'                                  , 'Pacific Standard Time (Mexico)' , '', 'Pacific Daylight Time (Mexico)' , '', 480, 0, -60, 0, 10, 5, 0, 2, 0, 0, 4, 1, 0, 2, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+05:00) Islamabad, Karachi'                               , 'Pakistan Standard Time'         , '', 'Pakistan Daylight Time'         , '', -300, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-04:00) Asuncion'                                         , 'Paraguay Standard Time'         , '', 'Paraguay Daylight Time'         , '', 240, 0, -60, 0, 3, 2, 6, 23, 59, 0, 10, 3, 6, 23, 59;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+01:00) Brussels, Copenhagen, Madrid, Paris'              , 'Romance Standard Time'          , '', 'Romance Daylight Time'          , '', -60, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+03:00) Moscow, St. Petersburg, Volgograd'                , 'Russian Standard Time'          , '', 'Russian Daylight Time'          , '', -180, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-03:00) Cayenne, Fortaleza'                               , 'SA Eastern Standard Time'       , '', 'SA Eastern Daylight Time'       , '', 180, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-05:00) Bogota, Lima, Quito'                              , 'SA Pacific Standard Time'       , '', 'SA Pacific Daylight Time'       , '', 300, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-04:00) Georgetown, La Paz, Manaus, San Juan'             , 'SA Western Standard Time'       , '', 'SA Western Daylight Time'       , '', 240, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-11:00) Samoa'                                            , 'Samoa Standard Time'            , '', 'Samoa Daylight Time'            , '', 660, 0, -60, 0, 1, 1, 5, 0, 0, 0, 9, 5, 6, 23, 59;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+07:00) Bangkok, Hanoi, Jakarta'                          , 'SE Asia Standard Time'          , '', 'SE Asia Daylight Time'          , '', -420, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+08:00) Kuala Lumpur, Singapore'                          , 'Malay Peninsula Standard Time'  , '', 'Malay Peninsula Daylight Time'  , '', -480, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+02:00) Harare, Pretoria'                                 , 'South Africa Standard Time'     , '', 'South Africa Daylight Time'     , '', -120, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+05:30) Sri Jayawardenepura'                              , 'Sri Lanka Standard Time'        , '', 'Sri Lanka Daylight Time'        , '', -330, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+08:00) Taipei'                                           , 'Taipei Standard Time'           , '', 'Taipei Daylight Time'           , '', -480, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+10:00) Hobart'                                           , 'Tasmania Standard Time'         , '', 'Tasmania Daylight Time'         , '', -600, 0, -60, 0, 4, 1, 0, 3, 0, 0, 10, 1, 0, 2, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+09:00) Osaka, Sapporo, Tokyo'                            , 'Tokyo Standard Time'            , '', 'Tokyo Daylight Time'            , '', -540, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+13:00) Nuku''alofa'                                       , 'Tonga Standard Time'            , '', 'Tonga Daylight Time'            , '', -780, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+08:00) Ulaanbaatar'                                      , 'Ulaanbaatar Standard Time'      , '', 'Ulaanbaatar Daylight Time'      , '', -480, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-05:00) Indiana (East)'                                   , 'US Eastern Standard Time'       , '', 'US Eastern Daylight Time'       , '', 300, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT-07:00) Arizona'                                          , 'US Mountain Standard Time'      , '', 'US Mountain Daylight Time'      , '', 420, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT) Coordinated Universal Time'                             , 'Coordinated Universal Time'     , '', 'Coordinated Universal Time'     , '', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+12:00) Coordinated Universal Time+12'                    , 'UTC+12'                         , '', 'UTC+12'                         , '', -720, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-02:00) Coordinated Universal Time-02'                    , 'UTC-02'                         , '', 'UTC-02'                         , '', 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-11:00) Coordinated Universal Time-11'                    , 'UTC-11'                         , '', 'UTC-11'                         , '', 660, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT-04:30) Caracas'                                          , 'Venezuela Standard Time'        , '', 'Venezuela Daylight Time'        , '', 270, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+10:00) Vladivostok'                                      , 'Vladivostok Standard Time'      , '', 'Vladivostok Daylight Time'      , '', -600, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+08:00) Perth'                                            , 'W. Australia Standard Time'     , '', 'W. Australia Daylight Time'     , '', -480, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+01:00) West Central Africa'                              , 'W. Central Africa Standard Time', '', 'W. Central Africa Daylight Time', '', -60, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna' , 'W. Europe Standard Time'        , '', 'W. Europe Daylight Time'        , '', -60, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
exec dbo.spTIMEZONES_UpdateByName null, '(GMT+05:00) Tashkent'                                         , 'West Asia Standard Time'        , '', 'West Asia Daylight Time'        , '', -300, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+10:00) Guam, Port Moresby'                               , 'West Pacific Standard Time'     , '', 'West Pacific Daylight Time'     , '', -600, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
--exec dbo.spTIMEZONES_UpdateByName null, '(GMT+09:00) Yakutsk'                                          , 'Yakutsk Standard Time'          , '', 'Yakutsk Daylight Time'          , '', -540, 0, -60, 0, 10, 5, 0, 3, 0, 0, 3, 5, 0, 2, 0;
GO


set nocount off;
GO


/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTIMEZONES_2010Updates()
/

call dbo.spSqlDropProcedure('spTIMEZONES_2010Updates')
/

-- #endif IBM_DB2 */



-- 12/04/2005 Paul.  Create Admin user with password of admin. 
-- Having a well-known password should not be an issue as most customers are expected to use NTLM. 
-- 04/21/2006 Paul.  IS_GROUP was added in SugarCRM 4.0.
-- 09/13/2010 Paul.  Add values for default parameters for EffiProz. 
-- 07/08/2011 Paul.  Add values for default parameters for EffiProz. 
-- 11/09/2012 Paul.  Format the procedure to identify procedure parameters. 
-- 03/22/2013 Paul.  Admin might have a different ID. 
-- 11/16/2013 Paul.  Add the new fields. Set default theme to Atlantic. 
-- 07/25/2015 Paul.  Set default theme to Seven. 
-- 09/03/2017 Paul.  Add nulls for, PICTURE and MAIL_ fields. 
-- 01/21/2018 Paul.  Leave THEME blank so that the default team will be used. 
if not exists(select * from USERS where ID = '00000000-0000-0000-0000-000000000001' or USER_NAME = 'admin') begin -- then
	print 'USERS admin';
/* -- #if IBM_DB2
	exec dbo.spUSERS_Update
		  in_USER_ID                             -- ID
		, '00000000-0000-0000-0000-000000000001' -- MODIFIED_USER_ID
		, 'admin'         -- USER_NAME                
		, null            -- FIRST_NAME               
		, 'Administrator' -- LAST_NAME                
		, null            -- REPORTS_TO_ID            
		, 1               -- IS_ADMIN                 
		, 1               -- RECEIVE_NOTIFICATIONS    
		, null            -- DESCRIPTION              
		, 'Administrator' -- TITLE                    
		, null            -- DEPARTMENT               
		, null            -- PHONE_HOME               
		, null            -- PHONE_MOBILE             
		, null            -- PHONE_WORK               
		, null            -- PHONE_OTHER              
		, null            -- PHONE_FAX                
		, null            -- EMAIL1                   
		, null            -- EMAIL2                   
		, 'Active'        -- STATUS                   
		, null            -- ADDRESS_STREET           
		, null            -- ADDRESS_CITY             
		, null            -- ADDRESS_STATE            
		, null            -- ADDRESS_POSTALCODE       
		, null            -- ADDRESS_COUNTRY          
		, null            -- USER_PREFERENCES         
		, 0               -- PORTAL_ONLY              
		, null            -- EMPLOYEE_STATUS          
		, null            -- MESSENGER_ID             
		, null            -- MESSENGER_TYPE           
		, null            -- PARENT_TYPE              
		, null            -- PARENT_ID                
		, null            -- IS_GROUP                 
		, null            -- DEFAULT_TEAM             
		, null            -- IS_ADMIN_DELEGATE        
		, null            -- MAIL_SMTPUSER            
		, null            -- MAIL_SMTPPASS            
		, null            -- SYSTEM_GENERATED_PASSWORD
		, null            -- GOOGLEAPPS_SYNC_CONTACTS 
		, null            -- GOOGLEAPPS_SYNC_CALENDAR 
		, null            -- GOOGLEAPPS_USERNAME      
		, null            -- GOOGLEAPPS_PASSWORD      
		, null            -- FACEBOOK_ID              
		, null            -- ICLOUD_SYNC_CONTACTS     
		, null            -- ICLOUD_SYNC_CALENDAR     
		, null            -- ICLOUD_USERNAME          
		, null            -- ICLOUD_PASSWORD          
		, null            -- THEME                    
		, null            -- DATE_FORMAT              
		, null            -- TIME_FORMAT              
		, null            -- LANG                     
		, null            -- CURRENCY_ID              
		, null            -- TIMEZONE_ID              
		, null            -- SAVE_QUERY               
		, null            -- GROUP_TABS               
		, null            -- SUBPANEL_TABS            
		, null            -- EXTENSION                
		, null            -- SMS_OPT_IN               
		, null            -- PICTURE          
		, null            -- MAIL_SMTPSERVER  
		, null            -- MAIL_SMTPPORT    
		, null            -- MAIL_SMTPAUTH_REQ
		, null            -- MAIL_SMTPSSL     
		, null            -- MAIL_SENDTYPE    
		;
-- #endif IBM_DB2 */
/* -- #if Oracle
	exec dbo.spUSERS_Update
		  in_USER_ID                             -- ID
		, '00000000-0000-0000-0000-000000000001' -- MODIFIED_USER_ID
		, 'admin'         -- USER_NAME                
		, null            -- FIRST_NAME               
		, 'Administrator' -- LAST_NAME                
		, null            -- REPORTS_TO_ID            
		, 1               -- IS_ADMIN                 
		, 1               -- RECEIVE_NOTIFICATIONS    
		, null            -- DESCRIPTION              
		, 'Administrator' -- TITLE                    
		, null            -- DEPARTMENT               
		, null            -- PHONE_HOME               
		, null            -- PHONE_MOBILE             
		, null            -- PHONE_WORK               
		, null            -- PHONE_OTHER              
		, null            -- PHONE_FAX                
		, null            -- EMAIL1                   
		, null            -- EMAIL2                   
		, 'Active'        -- STATUS                   
		, null            -- ADDRESS_STREET           
		, null            -- ADDRESS_CITY             
		, null            -- ADDRESS_STATE            
		, null            -- ADDRESS_POSTALCODE       
		, null            -- ADDRESS_COUNTRY          
		, null            -- USER_PREFERENCES         
		, 0               -- PORTAL_ONLY              
		, null            -- EMPLOYEE_STATUS          
		, null            -- MESSENGER_ID             
		, null            -- MESSENGER_TYPE           
		, null            -- PARENT_TYPE              
		, null            -- PARENT_ID                
		, null            -- IS_GROUP                 
		, null            -- DEFAULT_TEAM             
		, null            -- IS_ADMIN_DELEGATE        
		, null            -- MAIL_SMTPUSER            
		, null            -- MAIL_SMTPPASS            
		, null            -- SYSTEM_GENERATED_PASSWORD
		, null            -- GOOGLEAPPS_SYNC_CONTACTS 
		, null            -- GOOGLEAPPS_SYNC_CALENDAR 
		, null            -- GOOGLEAPPS_USERNAME      
		, null            -- GOOGLEAPPS_PASSWORD      
		, null            -- FACEBOOK_ID              
		, null            -- ICLOUD_SYNC_CONTACTS     
		, null            -- ICLOUD_SYNC_CALENDAR     
		, null            -- ICLOUD_USERNAME          
		, null            -- ICLOUD_PASSWORD          
		, null            -- THEME                    
		, null            -- DATE_FORMAT              
		, null            -- TIME_FORMAT              
		, null            -- LANG                     
		, null            -- CURRENCY_ID              
		, null            -- TIMEZONE_ID              
		, null            -- SAVE_QUERY               
		, null            -- GROUP_TABS               
		, null            -- SUBPANEL_TABS            
		, null            -- EXTENSION                
		, null            -- SMS_OPT_IN               
		, null            -- PICTURE          
		, null            -- MAIL_SMTPSERVER  
		, null            -- MAIL_SMTPPORT    
		, null            -- MAIL_SMTPAUTH_REQ
		, null            -- MAIL_SMTPSSL     
		, null            -- MAIL_SENDTYPE    
		;
-- #endif Oracle */
-- #if SQL_Server /*
	exec dbo.spUSERS_Update
		  '00000000-0000-0000-0000-000000000001' -- ID
		, '00000000-0000-0000-0000-000000000001' -- MODIFIED_USER_ID
		, 'admin'         -- USER_NAME                
		, null            -- FIRST_NAME               
		, 'Administrator' -- LAST_NAME                
		, null            -- REPORTS_TO_ID            
		, 1               -- IS_ADMIN                 
		, 1               -- RECEIVE_NOTIFICATIONS    
		, null            -- DESCRIPTION              
		, 'Administrator' -- TITLE                    
		, null            -- DEPARTMENT               
		, null            -- PHONE_HOME               
		, null            -- PHONE_MOBILE             
		, null            -- PHONE_WORK               
		, null            -- PHONE_OTHER              
		, null            -- PHONE_FAX                
		, null            -- EMAIL1                   
		, null            -- EMAIL2                   
		, 'Active'        -- STATUS                   
		, null            -- ADDRESS_STREET           
		, null            -- ADDRESS_CITY             
		, null            -- ADDRESS_STATE            
		, null            -- ADDRESS_POSTALCODE       
		, null            -- ADDRESS_COUNTRY          
		, null            -- USER_PREFERENCES         
		, 0               -- PORTAL_ONLY              
		, null            -- EMPLOYEE_STATUS          
		, null            -- MESSENGER_ID             
		, null            -- MESSENGER_TYPE           
		, null            -- PARENT_TYPE              
		, null            -- PARENT_ID                
		, null            -- IS_GROUP                 
		, null            -- DEFAULT_TEAM             
		, null            -- IS_ADMIN_DELEGATE        
		, null            -- MAIL_SMTPUSER            
		, null            -- MAIL_SMTPPASS            
		, null            -- SYSTEM_GENERATED_PASSWORD
		, null            -- GOOGLEAPPS_SYNC_CONTACTS 
		, null            -- GOOGLEAPPS_SYNC_CALENDAR 
		, null            -- GOOGLEAPPS_USERNAME      
		, null            -- GOOGLEAPPS_PASSWORD      
		, null            -- FACEBOOK_ID              
		, null            -- ICLOUD_SYNC_CONTACTS     
		, null            -- ICLOUD_SYNC_CALENDAR     
		, null            -- ICLOUD_USERNAME          
		, null            -- ICLOUD_PASSWORD          
		, null            -- THEME                    
		, null            -- DATE_FORMAT              
		, null            -- TIME_FORMAT              
		, null            -- LANG                     
		, null            -- CURRENCY_ID              
		, null            -- TIMEZONE_ID              
		, null            -- SAVE_QUERY               
		, null            -- GROUP_TABS               
		, null            -- SUBPANEL_TABS            
		, null            -- EXTENSION                
		, null            -- SMS_OPT_IN               
		, null            -- PICTURE          
		, null            -- MAIL_SMTPSERVER  
		, null            -- MAIL_SMTPPORT    
		, null            -- MAIL_SMTPAUTH_REQ
		, null            -- MAIL_SMTPSSL     
		, null            -- MAIL_SENDTYPE    
		;
-- #endif SQL_Server */
	exec dbo.spUSERS_PasswordUpdate '00000000-0000-0000-0000-000000000001', '00000000-0000-0000-0000-000000000001', '21232f297a57a5a743894a0e4a801fc3';
end -- if;
GO


/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spUSERS_admin()
/

call dbo.spSqlDropProcedure('spUSERS_admin')
/

-- #endif IBM_DB2 */


-- 10/16/2018 Paul.  Moved to BuildAllAuditViews.8.sql







set nocount on;
GO

-- 06/02/2009 Paul.  This view must be run after the data for the MODULES table has been loaded. 
-- 12/19/2017 Paul.  Don't create the audit tables on an Offline Client database. 
if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'SYSTEM_SYNC_CONFIG' and TABLE_TYPE = 'BASE TABLE') begin -- then
	exec dbo.spSqlBuildAllAuditViews ;
end -- if;
GO


set nocount off;
GO

/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spMODULES_BuildAllAuditViews()
/

call dbo.spSqlDropProcedure('spMODULES_BuildAllAuditViews')
/

-- #endif IBM_DB2 */




print 'CONFIG Asterisk';
GO

set nocount on;
GO

-- 07/15/2020 Paul.  We need a module configuration level to determine if we can modify/enable REST flag for React Client. 
exec dbo.spCONFIG_InsertOnly null, 'system', 'Module.Config.Level', '13.0';
GO


set nocount off;
GO

/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spCONFIG_Modules()
/

call dbo.spSqlDropProcedure('spCONFIG_Modules')
/

-- #endif IBM_DB2 */





-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:34 AM.
print 'TERMINOLOGY ACL en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_INSUFFICIENT_ACCESS'                       , N'en-US', N'ACL', null, null, N'Insufficient Access';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NO_ACCESS'                                 , N'en-US', N'ACL', null, null, N'Access denied.';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_ACL_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_ACL_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:35 AM.
print 'TERMINOLOGY ACLActions en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ACCESS_ALL'                                , N'en-US', N'ACLActions', null, null, N'All';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ACCESS_DISABLED'                           , N'en-US', N'ACLActions', null, null, N'Disabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ACCESS_ENABLED'                            , N'en-US', N'ACLActions', null, null, N'Enabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ACCESS_NONE'                               , N'en-US', N'ACLActions', null, null, N'None';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ACCESS_NOT_SET'                            , N'en-US', N'ACLActions', null, null, N'Not Set';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ACCESS_OWNER'                              , N'en-US', N'ACLActions', null, null, N'Owner';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ACTION_ACCESS'                             , N'en-US', N'ACLActions', null, null, N'Access';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ACTION_DELETE'                             , N'en-US', N'ACLActions', null, null, N'Delete';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ACTION_EDIT'                               , N'en-US', N'ACLActions', null, null, N'Edit';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ACTION_EXPORT'                             , N'en-US', N'ACLActions', null, null, N'Export';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ACTION_IMPORT'                             , N'en-US', N'ACLActions', null, null, N'Import';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ACTION_LIST'                               , N'en-US', N'ACLActions', null, null, N'List';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ACTION_VIEW'                               , N'en-US', N'ACLActions', null, null, N'View';
-- 09/26/2017 Paul.  Add Archive access right. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ACTION_ARCHIVE'                            , N'en-US', N'ACLActions', null, null, N'Archive';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ACCESS_ARCHIVE'                            , N'en-US', N'ACLActions', null, null, N'Archive';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ACCESS_VIEW'                               , N'en-US', N'ACLActions', null, null, N'View';

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FIELD_ACCESS_NONE'                         , N'en-US', N'ACLActions', null, null, N'None';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FIELD_ACCESS_NOT_SET'                      , N'en-US', N'ACLActions', null, null, N'Not Set';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FIELD_ACCESS_OWNER_READ_ONLY'              , N'en-US', N'ACLActions', null, null, N'Owner Read Only';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FIELD_ACCESS_OWNER_READ_OWNER_WRITE'       , N'en-US', N'ACLActions', null, null, N'Owner Read/Owner Write';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FIELD_ACCESS_READ_ONLY'                    , N'en-US', N'ACLActions', null, null, N'Read Only';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FIELD_ACCESS_READ_OWNER_WRITE'             , N'en-US', N'ACLActions', null, null, N'Read/Owner Write';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FIELD_ACCESS_READ_WRITE'                   , N'en-US', N'ACLActions', null, null, N'Read/Write';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FIELD_PERMISSION'                          , N'en-US', N'ACLActions', null, null, N'Field Permission';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_ACLActions_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_ACLActions_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:35 AM.
print 'TERMINOLOGY ACLRoles en-us';
GO

set nocount on;
GO

-- 03/28/2019 Paul.  Every module should have a LBL_NEW_FORM_TITLE. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_FORM_TITLE'                            , N'en-US', N'ACLRoles', null, null, N'ACL Roles';

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADMIN_DELEGATION_DISABLED'                 , N'en-US', N'ACLRoles', null, null, N'Admin Delegation is Disabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADMIN_DELEGATION_ENABLED'                  , N'en-US', N'ACLRoles', null, null, N'Admin Delegation is Enabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CREATE_ROLE'                               , N'en-US', N'ACLRoles', null, null, N'Create Role';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DESCRIPTION'                               , N'en-US', N'ACLRoles', null, null, N'Description:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DISABLE_ADMIN_DELEGATION'                  , N'en-US', N'ACLRoles', null, null, N'Disable Delegation';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EDIT_VIEW_DIRECTIONS'                      , N'en-US', N'ACLRoles', null, null, N'Double-click to change.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ENABLE_ADMIN_DELEGATION'                   , N'en-US', N'ACLRoles', null, null, N'Enable Delegation';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FIELD_SECURITY'                            , N'en-US', N'ACLRoles', null, null, N'Field Security';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_COLUMN_NAME'                          , N'en-US', N'ACLRoles', null, null, N'Column Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DESCRIPTION'                          , N'en-US', N'ACLRoles', null, null, N'Description';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FIELD_NAME'                           , N'en-US', N'ACLRoles', null, null, N'Field Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MODULE_NAME'                          , N'en-US', N'ACLRoles', null, null, N'Module Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_NAME'                                 , N'en-US', N'ACLRoles', null, null, N'Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_TABLE_NAME'                           , N'en-US', N'ACLRoles', null, null, N'Table Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_VIEW_NAME'                            , N'en-US', N'ACLRoles', null, null, N'View Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NAME'                                      , N'en-US', N'ACLRoles', null, null, N'Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ROLE'                                      , N'en-US', N'ACLRoles', null, null, N'Role';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SEARCH_FORM_TITLE'                         , N'en-US', N'ACLRoles', null, null, N'Search';
exec dbo.spTERMINOLOGY_InsertOnly N'LIST_ROLES'                                    , N'en-US', N'ACLRoles', null, null, N'List Roles';
exec dbo.spTERMINOLOGY_InsertOnly N'LIST_ROLES_BY_USER'                            , N'en-US', N'ACLRoles', null, null, N'List Roles By User';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'ACLRoles', null, null, N'ACL';
-- 05/05/2016 Paul.  The User Primary Role is used with role-based views. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IS_PRIMARY_ROLE'                           , N'en-US', N'ACLRoles', null, null, N'Is Primary?';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAKE_PRIMARY_ROLE'                         , N'en-US', N'ACLRoles', null, null, N'Make Primary';
-- 08/01/2016 Paul.  Form title needed for BPMN. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FORM_TITLE'                           , N'en-US', N'ACLRoles', null, null, N'Roles';
GO
/* -- #if Oracle
	COMMIT WORK;
END;
/

BEGIN
-- #endif Oracle */
exec dbo.spTERMINOLOGY_InsertOnly N'ACLRoles'                                      , N'en-US', null, N'moduleList'                        ,  80, N'ACL Roles';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_ACLRoles_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_ACLRoles_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:35 AM.
print 'TERMINOLOGY Administration Professional en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_BUILDER'                            , N'en-US', N'Administration', null, null, N'Manage Module Builder.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_BUILDER_TITLE'                      , N'en-US', N'Administration', null, null, N'Module Builder';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEAMS_DESC'                                , N'en-US', N'Administration', null, null, N'Manage Teams.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEAMS_TITLE'                               , N'en-US', N'Administration', null, null, N'Teams';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Administration_Professional_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Administration_Professional_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:35 AM.
print 'TERMINOLOGY Administration en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'DESC_DROPDOWN_EDITOR'                          , N'en-US', N'Administration', null, null, N'Manage Dropdown Lists.';
exec dbo.spTERMINOLOGY_InsertOnly N'DESC_EDIT_CUSTOM_FIELDS'                       , N'en-US', N'Administration', null, null, N'Manage Custom Fields.';
exec dbo.spTERMINOLOGY_InsertOnly N'DESC_IFRAME'                                   , N'en-US', N'Administration', null, null, N'Manage portals.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADD_LANGUAGE'                              , N'en-US', N'Administration', null, null, N'Add Language';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADMIN_WIZARD'                              , N'en-US', N'Administration', null, null, N'Administration Wizard';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADMINISTRATION_HOME_TITLE'                 , N'en-US', N'Administration', null, null, N'System';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ALL'                                       , N'en-US', N'Administration', null, null, N'All';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ALL_COLUMNS'                               , N'en-US', N'Administration', null, null, N'All Columns';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ALL_FUNCTIONS'                             , N'en-US', N'Administration', null, null, N'All Functions';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ALL_PROCEDURES'                            , N'en-US', N'Administration', null, null, N'All Procedures';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ALL_TABLES'                                , N'en-US', N'Administration', null, null, N'All Tables';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ALL_VIEWS'                                 , N'en-US', N'Administration', null, null, N'All Views';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_AUDIT_EVENTS'                              , N'en-US', N'Administration', null, null, N'List and search the audit data.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_AUDIT_EVENTS_TITLE'                        , N'en-US', N'Administration', null, null, N'Audit Events';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BACKUP'                                    , N'en-US', N'Administration', null, null, N'Backup';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BACKUP_DATABASE_INSTRUCTIONS'              , N'en-US', N'Administration', null, null, N'This function will backup the database.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BACKUP_FILENAME'                           , N'en-US', N'Administration', null, null, N'Backup Filename:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BACKUP_FILENAME_ERROR'                     , N'en-US', N'Administration', null, null, N'Backup filename must be specified.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BACKUPS'                                   , N'en-US', N'Administration', null, null, N'Perform a backup';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BACKUPS_TITLE'                             , N'en-US', N'Administration', null, null, N'Backups';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BUG_TITLE'                                 , N'en-US', N'Administration', null, null, N'Bug';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CAMPAIGN_EMAIL_DESC'                       , N'en-US', N'Administration', null, null, N'Manage Email Campaigns.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CAMPAIGN_EMAIL_TITLE'                      , N'en-US', N'Administration', null, null, N'Campaign Email';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CHANGE_NAME_TABS'                          , N'en-US', N'Administration', null, null, N'Change Name Tabs';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CHECK_NOW_LABEL'                           , N'en-US', N'Administration', null, null, N'Check Now';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CHECK_NOW_TITLE'                           , N'en-US', N'Administration', null, null, N'Check Now';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CHOOSE_WHICH'                              , N'en-US', N'Administration', null, null, N'Choose tabs';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CONFIGURE_SETTINGS'                        , N'en-US', N'Administration', null, null, N'Configure Settings';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CONFIGURE_SETTINGS_TITLE'                  , N'en-US', N'Administration', null, null, N'Configure Settings';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CONFIGURE_TABS'                            , N'en-US', N'Administration', null, null, N'Configure Tabs';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CONFIGURE_UPDATER'                         , N'en-US', N'Administration', null, null, N'Configure SplendidCRM Updates';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CURRENCY'                                  , N'en-US', N'Administration', null, null, N'Currency';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DESTINATION_CONNECTION'                    , N'en-US', N'Administration', null, null, N'Destination Connection';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DESTINATION_PROVIDER'                      , N'en-US', N'Administration', null, null, N'Destination Provider';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DOCUMENTATION'                             , N'en-US', N'Administration', null, null, N'Documentation';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DOCUMENTATION_TITLE'                       , N'en-US', N'Administration', null, null, N'Documentation';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DONE'                                      , N'en-US', N'Administration', null, null, N'Done';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DROPDOWN_EDITOR'                           , N'en-US', N'Administration', null, null, N'Dropdown Editor';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EDIT_CUSTOM_FIELDS'                        , N'en-US', N'Administration', null, null, N'Edit Custom Fields';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EDIT_TABS'                                 , N'en-US', N'Administration', null, null, N'Edit Tabs';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EMAIL_TITLE'                               , N'en-US', N'Administration', null, null, N'Email';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EXPORT_DATABASE'                           , N'en-US', N'Administration', null, null, N'Export Database';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EXPORT_DATABASE_TITLE'                     , N'en-US', N'Administration', null, null, N'Export Database';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IFRAME'                                    , N'en-US', N'Administration', null, null, N'My Portal';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_DATABASE'                           , N'en-US', N'Administration', null, null, N'Import an existing database if provided as an XML file';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_DATABASE_ERROR'                     , N'en-US', N'Administration', null, null, N'XML is the only supported format at this time.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_DATABASE_INSTRUCTIONS'              , N'en-US', N'Administration', null, null, N'This import function is used to Import a MySQL database exported using an XML format.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_DATABASE_TITLE'                     , N'en-US', N'Administration', null, null, N'Import Database';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_DATABASE_TRUNCATE'                  , N'en-US', N'Administration', null, null, N'Truncate existing data?';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_FORCE_UTF8'                         , N'en-US', N'Administration', null, null, N'Force UTF8?';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_LANGUAGE_TRUNCATE'                  , N'en-US', N'Administration', null, null, N'Truncate existing data?';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_TERMINOLOGY'                        , N'en-US', N'Administration', null, null, N'Import Language Pack';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_TERMINOLOGY_TITLE'                  , N'en-US', N'Administration', null, null, N'Import Language Pack';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_INBOUND_EMAIL_TITLE'                       , N'en-US', N'Administration', null, null, N'Inbound Email';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LAYOUT'                                    , N'en-US', N'Administration', null, null, N'Layout';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LAYOUT_DETAILVIEW'                         , N'en-US', N'Administration', null, null, N'Rearrange the fields in an Detail View';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LAYOUT_DETAILVIEW_TITLE'                   , N'en-US', N'Administration', null, null, N'Detail View Layout';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LAYOUT_EDIT_RELATIONSHIPS'                 , N'en-US', N'Administration', null, null, N'Rearrange the fields of a Edit View Relationship';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LAYOUT_EDIT_RELATIONSHIPS_TITLE'           , N'en-US', N'Administration', null, null, N'Edit View Relationships Layout';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LAYOUT_EDITVIEW'                           , N'en-US', N'Administration', null, null, N'Rearrange the fields in an Edit View';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LAYOUT_EDITVIEW_TITLE'                     , N'en-US', N'Administration', null, null, N'Edit View Layout';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LAYOUT_GRIDVIEW'                           , N'en-US', N'Administration', null, null, N'Rearrange the fields in an Grid View';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LAYOUT_GRIDVIEW_TITLE'                     , N'en-US', N'Administration', null, null, N'Grid View Layout';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LAYOUT_RELATIONSHIPS'                      , N'en-US', N'Administration', null, null, N'Rearrange the fields of a Detail View Relationship';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LAYOUT_RELATIONSHIPS_TITLE'                , N'en-US', N'Administration', null, null, N'Detail View Relationships Layout';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAIL_SENDTYPE'                             , N'en-US', N'Administration', null, null, N'Mail Sendtype:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAIL_SMTPAUTH_REQ'                         , N'en-US', N'Administration', null, null, N'Use SMTP Authentication?';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAIL_SMTPPASS'                             , N'en-US', N'Administration', null, null, N'SMTP Password:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAIL_SMTPPORT'                             , N'en-US', N'Administration', null, null, N'SMTP Port:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAIL_SMTPSERVER'                           , N'en-US', N'Administration', null, null, N'SMTP Server:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAIL_SMTPUSER'                             , N'en-US', N'Administration', null, null, N'SMTP Username:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAILBOX_DESC'                              , N'en-US', N'Administration', null, null, N'Manage Inbound Mailboxes.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MANAGE_CURRENCIES'                         , N'en-US', N'Administration', null, null, N'Manage Currencies';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MANAGE_DYNAMIC_BUTTONS'                    , N'en-US', N'Administration', null, null, N'Manage Dynamic Buttons';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MANAGE_DYNAMIC_BUTTONS_TITLE'              , N'en-US', N'Administration', null, null, N'Manage Dynamic Buttons';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MANAGE_FIELD_VALIDATORS'                   , N'en-US', N'Administration', null, null, N'Manage Field Validators';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MANAGE_FIELD_VALIDATORS_TITLE'             , N'en-US', N'Administration', null, null, N'Manage Field Validators';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MANAGE_LANGUAGES'                          , N'en-US', N'Administration', null, null, N'Manage Languages';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MANAGE_LAYOUT'                             , N'en-US', N'Administration', null, null, N'Manage Layout';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MANAGE_RELEASES'                           , N'en-US', N'Administration', null, null, N'Manage Releases';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MANAGE_ROLES'                              , N'en-US', N'Administration', null, null, N'Manage Roles';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MANAGE_ROLES_TITLE'                        , N'en-US', N'Administration', null, null, N'Manage Roles';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MANAGE_SHORTCUTS'                          , N'en-US', N'Administration', null, null, N'Manage Shortcuts';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MANAGE_SHORTCUTS_TITLE'                    , N'en-US', N'Administration', null, null, N'Manage Shortcuts';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MANAGE_TERMINOLOGY'                        , N'en-US', N'Administration', null, null, N'Manage Terminology';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MANAGE_TERMINOLOGY_TITLE'                  , N'en-US', N'Administration', null, null, N'Manage Terminology';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MANAGE_USERS'                              , N'en-US', N'Administration', null, null, N'Manage Users';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MANAGE_USERS_TITLE'                        , N'en-US', N'Administration', null, null, N'Manage Users';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MASS_EMAIL_CONFIG_DESC'                    , N'en-US', N'Administration', null, null, N'Manage Email Config.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MASS_EMAIL_CONFIG_TITLE'                   , N'en-US', N'Administration', null, null, N'Mass Email Config';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MASS_EMAIL_MANAGER_DESC'                   , N'en-US', N'Administration', null, null, N'Manage Email Manager.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MASS_EMAIL_MANAGER_TITLE'                  , N'en-US', N'Administration', null, null, N'Mass Email Manager';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MOBILE'                                    , N'en-US', N'Administration', null, null, N'Mobile';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_NAME'                               , N'en-US', N'Administration', null, null, N'Administration';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'Administration', null, null, N'Adm';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_TITLE'                              , N'en-US', N'Administration', null, null, N'Administration';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULES'                                   , N'en-US', N'Administration', null, null, N'Modules';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULES_TITLE'                             , N'en-US', N'Administration', null, null, N'Modules';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NOTIFICATION_ON_DESC'                      , N'en-US', N'Administration', null, null, N'Workflow notifications can be turned off globally with this flag.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NOTIFY_FROMADDRESS'                        , N'en-US', N'Administration', null, null, N'From Address:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NOTIFY_FROMNAME'                           , N'en-US', N'Administration', null, null, N'From Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NOTIFY_ON'                                 , N'en-US', N'Administration', null, null, N'Notify On';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NOTIFY_SEND_BY_DEFAULT'                    , N'en-US', N'Administration', null, null, N'Notify Send By Default';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NOTIFY_TITLE'                              , N'en-US', N'Administration', null, null, N'Notify';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OOTB_IE'                                   , N'en-US', N'Administration', null, null, N'Check Inbound Mailboxes';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PORTAL_ON'                                 , N'en-US', N'Administration', null, null, N'Portal On';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PORTAL_ON_DESC'                            , N'en-US', N'Administration', null, null, N'This flag enables the Portal fields on a Contact record.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PORTAL_TITLE'                              , N'en-US', N'Administration', null, null, N'Portal';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PURGE_DEMO'                                , N'en-US', N'Administration', null, null, N'Purge Demo Data';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RELEASE'                                   , N'en-US', N'Administration', null, null, N'Release';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RENAME_TABS'                               , N'en-US', N'Administration', null, null, N'Rename Tabs';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SEND_STAT'                                 , N'en-US', N'Administration', null, null, N'Send Stat';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SOURCE_CONNECTION'                         , N'en-US', N'Administration', null, null, N'Source Connection';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SOURCE_PROVIDER'                           , N'en-US', N'Administration', null, null, N'Source Provider';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SPLENDIDCRM_NETWORK_TITLE'                 , N'en-US', N'Administration', null, null, N'Splendidcrm Network';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SPLENDIDCRM_UPDATE'                        , N'en-US', N'Administration', null, null, N'SplendidCRM Updates';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SPLENDIDCRM_UPDATE_TITLE'                  , N'en-US', N'Administration', null, null, N'SplendidCRM Updates';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_STUDIO'                                    , N'en-US', N'Administration', null, null, N'Studio';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_STUDIO_TITLE'                              , N'en-US', N'Administration', null, null, N'Studio';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SUGAR_SCHEDULER'                           , N'en-US', N'Administration', null, null, N'Scheduler';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SUGAR_SCHEDULER_TITLE'                     , N'en-US', N'Administration', null, null, N'Scheduler';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SYNC_SCHEMA'                               , N'en-US', N'Administration', null, null, N'Sync Schema';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SYNC_SCHEMA_TITLE'                         , N'en-US', N'Administration', null, null, N'Sync Schema';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SYSTEM_CHECK'                              , N'en-US', N'Administration', null, null, N'System Check';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SYSTEM_CHECK_TITLE'                        , N'en-US', N'Administration', null, null, N'System Check';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SYSTEM_LOG'                                , N'en-US', N'Administration', null, null, N'System Log';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SYSTEM_LOG_TITLE'                          , N'en-US', N'Administration', null, null, N'System Log';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TAB_ORDER'                                 , N'en-US', N'Administration', null, null, N'Tab Order';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TAX_RATES_DESC'                            , N'en-US', N'Administration', null, null, N'Manage Tax Rates.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TAX_RATES_TITLE'                           , N'en-US', N'Administration', null, null, N'Tax Rates';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UNIQUE_COLUMNS'                            , N'en-US', N'Administration', null, null, N'Unique Columns';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UNIQUE_FUNCTIONS'                          , N'en-US', N'Administration', null, null, N'Unique Functions';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UNIQUE_PROCEDURES'                         , N'en-US', N'Administration', null, null, N'Unique Procedures';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UNIQUE_TABLE'                              , N'en-US', N'Administration', null, null, N'Unique Table';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UNIQUE_VIEWS'                              , N'en-US', N'Administration', null, null, N'Unique Views';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UPDATE_CHECK_TYPE'                         , N'en-US', N'Administration', null, null, N'Periodically check for updates.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UPGRADE'                                   , N'en-US', N'Administration', null, null, N'Upgrade';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UPGRADE_TITLE'                             , N'en-US', N'Administration', null, null, N'Upgrade';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UPTODATE'                                  , N'en-US', N'Administration', null, null, N'SplendidCRM is up-to-date.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_USERS_LOGINS'                              , N'en-US', N'Administration', null, null, N'Users Logins';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_USERS_LOGINS_TITLE'                        , N'en-US', N'Administration', null, null, N'Users Logins';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_USERS_TITLE'                               , N'en-US', N'Administration', null, null, N'Users';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_VISIBLE'                                   , N'en-US', N'Administration', null, null, N'Visible';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_DISABLE'                                   , N'en-US', N'Administration', null, null, N'Disable';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_ENABLE'                                    , N'en-US', N'Administration', null, null, N'Enable';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_ENABLED'                                   , N'en-US', N'Administration', null, null, N'Enabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_HIDE'                                      , N'en-US', N'Administration', null, null, N'Hide';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_ACCOUNT'                               , N'en-US', N'Administration', null, null, N'Create Account';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_USER'                                  , N'en-US', N'Administration', null, null, N'Create User';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_SHOW'                                      , N'en-US', N'Administration', null, null, N'Show';
exec dbo.spTERMINOLOGY_InsertOnly N'WARN_UPGRADE'                                  , N'en-US', N'Administration', null, null, N'Warning: Please upgrade ';
-- 04/15/2011 Paul.  Add Facebook to a new Cloud Services panel. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CLOUD_SERVICES_TITLE'                      , N'en-US', N'Administration', null, null, N'Cloud Services';
-- 04/23/2012 Paul.  Add admin page for password requirements. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MANAGE_PASSWORD_TITLE'                     , N'en-US', N'Administration', null, null, N'Password Settings';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MANAGE_PASSWORD'                           , N'en-US', N'Administration', null, null, N'Configure password requirements';
-- 12/27/2012 Paul.  Add link to number sequences. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NUMBER_SEQUENCES'                          , N'en-US', N'Administration', null, null, N'Number Sequences';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MANAGE_NUMBER_SEQUENCES'                   , N'en-US', N'Administration', null, null, N'Manage Number Sequences';
-- 05/01/2013 Paul.  Add Contacts field to support B2C. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BUSINESS_MODE'                             , N'en-US', N'Administration', null, null, N'Change between B2B and B2C.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BUSINESS_MODE_TITLE'                       , N'en-US', N'Administration', null, null, N'Business Mode';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BUSINESS_MODE_INSTRUCTIONS'                , N'en-US', N'Administration', null, null, N'SplendidCRM can operate in Business-to-Business mode, 
where there Account module is the center around which relationships revolve, 
or in Business-to-Consumer mode, where the Contact module is the center around which relationships revolve.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BUSINESS_MODE_B2B'                         , N'en-US', N'Administration', null, null, N'Business-to-Business';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BUSINESS_MODE_B2C'                         , N'en-US', N'Administration', null, null, N'Business-to-Consumer';
-- 07/18/2013 Paul.  Add support for multiple outbound emails. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OUTBOUND_EMAIL_TITLE'                      , N'en-US', N'Administration', null, null, N'Outbound Email';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OUTBOUND_EMAIL_DESC'                       , N'en-US', N'Administration', null, null, N'Manage Outbound Mailboxes.';
-- 01/26/2014 Paul.  Provide easy access to the Configurator. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CONFIGURATOR_TITLE'                        , N'en-US', N'Administration', null, null, N'Configuration Wizard';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CONFIGURATOR'                              , N'en-US', N'Administration', null, null, N'Launch the startup configuration wizard.';
-- 08/27/2014 Paul.  Provide quicker access to ShowSQL. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SHOW_SQL'                                  , N'en-US', N'Administration', null, null, N'Show SQL';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_HIDE_SQL'                                  , N'en-US', N'Administration', null, null, N'Hide SQL';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SHOW_SQL_ENABLED'                          , N'en-US', N'Administration', null, null, N'Show SQL is Enabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SHOW_SQL_DISABLED'                         , N'en-US', N'Administration', null, null, N'Show SQL is Disabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SHOW_SQL_DEBUG_BUILD'                      , N'en-US', N'Administration', null, null, N'Show SQL is always Enabled in debug build';
GO
/* -- #if Oracle
	COMMIT WORK;
END;
/

BEGIN
-- #endif Oracle */
exec dbo.spTERMINOLOGY_InsertOnly N'Administration'                                , N'en-US', null, N'moduleList'                        ,  35, N'Administration';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Administration_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Administration_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:35 AM.
print 'TERMINOLOGY Audit en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_AUDIT_ACTION'                              , N'en-US', N'Audit', null, null, N'Action:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_AUDIT_ITEM'                                , N'en-US', N'Audit', null, null, N'Item:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CHANGED_BY'                                , N'en-US', N'Audit', null, null, N'Changed By:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FIELD_NAME'                                , N'en-US', N'Audit', null, null, N'Field Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_AUDIT_ACTION'                         , N'en-US', N'Audit', null, null, N'Action';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_AUDIT_ITEM'                           , N'en-US', N'Audit', null, null, N'Item';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DATE'                                 , N'en-US', N'Audit', null, null, N'Change Date';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MODULE_NAME'                          , N'en-US', N'Audit', null, null, N'Module';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_NAME'                               , N'en-US', N'Audit', null, null, N'Module:';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'Audit', null, null, N'Aud';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_VALUE'                                 , N'en-US', N'Audit', null, null, N'New Value';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OLD_NAME'                                  , N'en-US', N'Audit', null, null, N'Old Value';
-- 06/28/2018 Paul.  Personal Information popup. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FIELD'                                , N'en-US', N'Audit', null, null, N'Field';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_VALUE'                                , N'en-US', N'Audit', null, null, N'Value';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_LEAD_SOURCE'                          , N'en-US', N'Audit', null, null, N'Source';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_LAST_UPDATED'                         , N'en-US', N'Audit', null, null, N'Last Updated';
GO
/* -- #if Oracle
	COMMIT WORK;
END;
/

BEGIN
-- #endif Oracle */

exec dbo.spTERMINOLOGY_InsertOnly N'-1'                                            , N'en-US', null, N'audit_action_dom'                  ,   1, N'Delete';
exec dbo.spTERMINOLOGY_InsertOnly N'0'                                             , N'en-US', null, N'audit_action_dom'                  ,   2, N'Insert';
exec dbo.spTERMINOLOGY_InsertOnly N'1'                                             , N'en-US', null, N'audit_action_dom'                  ,   3, N'Update';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Audit_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Audit_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:35 AM.
print 'TERMINOLOGY Config en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'ERR_CANNOT_EDIT_MAX_USERS'                     , N'en-US', N'Config', null, null, N'Cannot Edit Max Users.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CATEGORY'                                  , N'en-US', N'Config', null, null, N'Category:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_CATEGORY'                             , N'en-US', N'Config', null, null, N'Category';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FORM_TITLE'                           , N'en-US', N'Config', null, null, N'Config List';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_NAME'                                 , N'en-US', N'Config', null, null, N'Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_VALUE'                                , N'en-US', N'Config', null, null, N'Value';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NAME'                                      , N'en-US', N'Config', null, null, N'Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SEARCH_FORM_TITLE'                         , N'en-US', N'Config', null, null, N'Search';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_VALUE'                                     , N'en-US', N'Config', null, null, N'Value:';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_CONFIG_LIST'                               , N'en-US', N'Config', null, null, N'System Settings';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_CONFIG'                                , N'en-US', N'Config', null, null, N'Create New Setting';
-- 04/09/2019 Paul.  Error when saving a secured value when not changed. 
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_SECURED_VALUE_UNCHANGED'                   , N'en-US', N'Config', null, null, N'Secured value has not changed.';

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_FORM_TITLE'                            , N'en-US', N'Config', null, null, N'Create New Setting';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'Config', null, null, N'Cnf';

GO
/* -- #if Oracle
	COMMIT WORK;
END;
/

BEGIN
-- #endif Oracle */
exec dbo.spTERMINOLOGY_InsertOnly N'Config'                                        , N'en-US', null, N'moduleList'                        ,  38, N'Configuration';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Config_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Config_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:35 AM.
print 'TERMINOLOGY Configurator en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BACK_BUTTON'                               , N'en-US', N'Configurator', null, null, N'< Back';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CLEAR_BUTTON_TITLE'                        , N'en-US', N'Configurator', null, null, N'Clear';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_COMPANY_NAME'                              , N'en-US', N'Configurator', null, null, N'Company Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CONTINUE_BUTTON'                           , N'en-US', N'Configurator', null, null, N'Continue';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EMAIL_TEST_OUTBOUND_SETTINGS'              , N'en-US', N'Configurator', null, null, N'Test';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FINISH_BUTTON'                             , N'en-US', N'Configurator', null, null, N'Finish';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_HEADER_LOGO_HEIGHT'                        , N'en-US', N'Configurator', null, null, N'Header Image Height:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_HEADER_LOGO_IMAGE'                         , N'en-US', N'Configurator', null, null, N'Header Image';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_HEADER_LOGO_STYLE'                         , N'en-US', N'Configurator', null, null, N'Header Image Style:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_HEADER_LOGO_WIDTH'                         , N'en-US', N'Configurator', null, null, N'Header Image Width:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAIL_SMTP_SETTINGS'                        , N'en-US', N'Configurator', null, null, N'Mail Settings';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEXT_BUTTON'                               , N'en-US', N'Configurator', null, null, N'Next >';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SKIP_BUTTON'                               , N'en-US', N'Configurator', null, null, N'Skip';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SMTPTYPE_GMAIL'                            , N'en-US', N'Configurator', null, null, N'Gmail';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SMTPTYPE_OTHER'                            , N'en-US', N'Configurator', null, null, N'Other';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SMTPTYPE_YAHOO'                            , N'en-US', N'Configurator', null, null, N'Yahoo!';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UPLOAD_BUTTON'                             , N'en-US', N'Configurator', null, null, N'Upload';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_WIZARD_LOCALE_DESC'                        , N'en-US', N'Configurator', null, null, N'Please specify the default language, date format and currency format.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_WIZARD_LOCALE_TITLE'                       , N'en-US', N'Configurator', null, null, N'System Locale';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_WIZARD_SMTP_DESC'                          , N'en-US', N'Configurator', null, null, N'Please specify the SMTP settings used to send emails.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_WIZARD_SYSTEM_DESC'                        , N'en-US', N'Configurator', null, null, N'Please specify the title and upload a logo (optional).';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_WIZARD_SYSTEM_TITLE'                       , N'en-US', N'Configurator', null, null, N'System Title';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_WIZARD_USER_LOCALE_DESC'                   , N'en-US', N'Configurator', null, null, N'Please specify your language, date format and currency format.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_WIZARD_USER_LOCALE_TITLE'                  , N'en-US', N'Configurator', null, null, N'Your Locale';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_WIZARD_USER_MAIL_DESC'                     , N'en-US', N'Configurator', null, null, N'Please specify your email account information.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_WIZARD_USER_MAIL_TITLE'                    , N'en-US', N'Configurator', null, null, N'Your Email Settings';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_WIZARD_USER_SETTINGS_DESC'                 , N'en-US', N'Configurator', null, null, N'Please specify your profile information.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_WIZARD_USER_SETTINGS_TITLE'                , N'en-US', N'Configurator', null, null, N'Your Profile';
-- 01/26/2014 Paul.  Atlantic theme header logo. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ATLANTIC_HOME_IMAGE'                       , N'en-US', N'Configurator', null, null, N'Atlantic Header Image:';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Configurator_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Configurator_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:35 AM.
print 'TERMINOLOGY Currencies en-us';
GO

set nocount on;
GO

-- delete from TERMINOLOGY where MODULE_NAME = 'Currencies';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CONVERSION_RATE'                           , N'en-US', N'Currencies', null, null, N'Conversion Rate:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CURRENCY'                                  , N'en-US', N'Currencies', null, null, N'Currency';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ISO4217'                                   , N'en-US', N'Currencies', null, null, N'ISO 4217 Code:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_CONVERSION_RATE'                      , N'en-US', N'Currencies', null, null, N'Conversion Rate';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_FORM_TITLE'                            , N'en-US', N'Currencies', null, null, N'Create Currency';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FORM_TITLE'                           , N'en-US', N'Currencies', null, null, N'Currencies';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ISO4217'                              , N'en-US', N'Currencies', null, null, N'ISO 4217 Code';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_NAME'                                 , N'en-US', N'Currencies', null, null, N'Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_RATE'                                 , N'en-US', N'Currencies', null, null, N'Rate';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_STATUS'                               , N'en-US', N'Currencies', null, null, N'Status';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_SYMBOL'                               , N'en-US', N'Currencies', null, null, N'Symbol';

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_NAME'                               , N'en-US', N'Currencies', null, null, N'Currencies';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_CURRENCY_LIST'                             , N'en-US', N'Currencies', null, null, N'Currencies';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_CURRENCY'                              , N'en-US', N'Currencies', null, null, N'Create Currency';

-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'Currencies', null, null, N'Cur';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NAME'                                      , N'en-US', N'Currencies', null, null, N'Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_STATUS'                                    , N'en-US', N'Currencies', null, null, N'Status:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SYMBOL'                                    , N'en-US', N'Currencies', null, null, N'Symbol:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_US_DOLLAR'                                 , N'en-US', N'Currencies', null, null, N'US Dollar:';
-- 03/19/2019 Paul.  Missing RATE term. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RATE'                                      , N'en-US', N'Currencies', null, null, N'Rate:';

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DEFAULT_CURRENCY'                     , N'en-US', N'Currencies', null, null, N'Default Currency';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_BASE_CURRENCY'                        , N'en-US', N'Currencies', null, null, N'Base Currency';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DEFAULT_CURRENCY'                          , N'en-US', N'Currencies', null, null, N'Default Currency:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BASE_CURRENCY'                             , N'en-US', N'Currencies', null, null, N'Base Currency:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAKE_DEFAULT'                              , N'en-US', N'Currencies', null, null, N'Make Default';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAKE_BASE'                                 , N'en-US', N'Currencies', null, null, N'Make Base';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UPDATE_RATE'                               , N'en-US', N'Currencies', null, null, N'Update Rate';
exec dbo.spTERMINOLOGY_InsertOnly N'NTC_CONFIRM_CHANGE'                            , N'en-US', N'Currencies', null, null, N'Are you sure?';
GO

exec dbo.spTERMINOLOGY_InsertOnly N'Currencies'                                    , N'en-US', null, N'moduleList'                        ,  62, N'Currencies';

-- 10/17/2013 Paul.  currency_status_dom was inadvertantly deleted a while ago. 
exec dbo.spTERMINOLOGY_InsertOnly N'Active'                                        , N'en-US', null, N'currency_status_dom'               ,   1, N'Active';
exec dbo.spTERMINOLOGY_InsertOnly N'Inactive'                                      , N'en-US', null, N'currency_status_dom'               ,   2, N'Inactive';
-- 05/01/2016 Paul.  List names should not include the module name. 
update TERMINOLOGY
   set DELETED           = 1
     , DATE_MODIFIED     = getdate()
     , DATE_MODIFIED_UTC = getutcdate()
 where LIST_NAME         = 'currency_status_dom'
   and MODULE_NAME       = 'Currencies'
   and DELETED           = 0;

GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Currencies_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Currencies_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:36 AM.
print 'TERMINOLOGY Dashboard en-us';
GO

set nocount on;
GO

-- 05/18/2017 Paul.  Change to Create Dashboard. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_FORM_TITLE'                            , N'en-US', N'Dashboard', null, null, N'Create Dashboard';
if exists(select * from TERMINOLOGY where MODULE_NAME = N'Dashboard' and NAME = N'LBL_NEW_FORM_TITLE' and DISPLAY_NAME = N'Dashboard' and DELETED = 0) begin -- then
	update TERMINOLOGY
	   set DISPLAY_NAME      = N'Create Dashboard'
	     , DATE_MODIFIED     = getdate()
	     , DATE_MODIFIED_UTC = getutcdate()
	 where MODULE_NAME       = N'Dashboard'
	   and NAME              = N'LBL_NEW_FORM_TITLE'
	   and DISPLAY_NAME      = N'Dashboard'
	   and DELETED           = 0;
end -- if;
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CREATED_ON'                                , N'en-US', N'Dashboard', null, null, N'Created On';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DATE_END'                                  , N'en-US', N'Dashboard', null, null, N'Date End:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DATE_RANGE'                                , N'en-US', N'Dashboard', null, null, N'Date Range';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DATE_RANGE_TO'                             , N'en-US', N'Dashboard', null, null, N' to ';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DATE_START'                                , N'en-US', N'Dashboard', null, null, N'Date Start:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EDIT'                                      , N'en-US', N'Dashboard', null, null, N'Edit';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LEAD_SOURCE_BY_OUTCOME'                    , N'en-US', N'Dashboard', null, null, N'Lead Source By Outcome';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LEAD_SOURCE_BY_OUTCOME_DESC'               , N'en-US', N'Dashboard', null, null, N'Shows cumulative amounts by lead source by outcome.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LEAD_SOURCE_FORM_DESC'                     , N'en-US', N'Dashboard', null, null, N'Shows cumulative amounts by lead source.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LEAD_SOURCE_FORM_TITLE'                    , N'en-US', N'Dashboard', null, null, N'Lead Source';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LEAD_SOURCE_OTHER'                         , N'en-US', N'Dashboard', null, null, N'Other';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LEAD_SOURCES'                              , N'en-US', N'Dashboard', null, null, N'Lead Sources:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FORM_TITLE'                           , N'en-US', N'Dashboard', null, null, N'Dashboard List';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MONTH_BY_OUTCOME_DESC'                     , N'en-US', N'Dashboard', null, null, N'Shows cumulative amounts by month by outcome.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OPP_SIZE'                                  , N'en-US', N'Dashboard', null, null, N'Size in ';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OPP_THOUSANDS'                             , N'en-US', N'Dashboard', null, null, N'K';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OPPS_IN_LEAD_SOURCE'                       , N'en-US', N'Dashboard', null, null, N' lead source is ';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OPPS_IN_STAGE'                             , N'en-US', N'Dashboard', null, null, N' sales stage is ';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OPPS_OUTCOME'                              , N'en-US', N'Dashboard', null, null, N' outcome is ';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OPPS_WORTH'                                , N'en-US', N'Dashboard', null, null, N'opportunities worth';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PIPELINE_FORM_TITLE_DESC'                  , N'en-US', N'Dashboard', null, null, N'Shows cumulative amounts by sales stages.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REFRESH'                                   , N'en-US', N'Dashboard', null, null, N'Refresh';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ROLLOVER_DETAILS'                          , N'en-US', N'Dashboard', null, null, N'Roll over the graph elements to get more details.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ROLLOVER_WEDGE_DETAILS'                    , N'en-US', N'Dashboard', null, null, N'Roll over the graph elements to get more details.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SALES_STAGE_FORM_TITLE'                    , N'en-US', N'Dashboard', null, null, N'Sales Stage';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SALES_STAGES'                              , N'en-US', N'Dashboard', null, null, N'Sales Stages:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TOTAL_PIPELINE'                            , N'en-US', N'Dashboard', null, null, N'Total Pipeline';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_USERS'                                     , N'en-US', N'Dashboard', null, null, N'Users:';
-- 07/31/2017 Paul.  Add My Team dashlets. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEAMS'                                     , N'en-US', N'Dashboard', null, null, N'Teams:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_YEAR'                                      , N'en-US', N'Dashboard', null, null, N'Year:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_YEAR_BY_OUTCOME'                           , N'en-US', N'Dashboard', null, null, N'Pipeline By Month By Outcome';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_ACCOUNT'                               , N'en-US', N'Dashboard', null, null, N'Create Account';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_BUG'                                   , N'en-US', N'Dashboard', null, null, N'Create Bug';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_CALL'                                  , N'en-US', N'Dashboard', null, null, N'Create Call';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_CASE'                                  , N'en-US', N'Dashboard', null, null, N'Create Case';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_CONTACT'                               , N'en-US', N'Dashboard', null, null, N'Create Contact';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_LEAD'                                  , N'en-US', N'Dashboard', null, null, N'Create Lead';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_MEETING'                               , N'en-US', N'Dashboard', null, null, N'Create Meeting';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_NOTE'                                  , N'en-US', N'Dashboard', null, null, N'Create Note';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_OPPORTUNITY'                           , N'en-US', N'Dashboard', null, null, N'Create Opportunity';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_QUOTE'                                 , N'en-US', N'Dashboard', null, null, N'Create Quote';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_TASK'                                  , N'en-US', N'Dashboard', null, null, N'Create Task';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'Dashboard', null, null, N'Das';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SEARCH_AFTER'                              , N'en-US', N'Dashboard', null, null, N'On or After:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SEARCH_BEFORE'                             , N'en-US', N'Dashboard', null, null, N'Before:';
-- 05/31/2017 Paul.  Dashboard properties. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NAME'                                      , N'en-US', N'Dashboard', null, null, N'Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_NAME'                                 , N'en-US', N'Dashboard', null, null, N'Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ID'                                        , N'en-US', N'Dashboard', null, null, N'ID:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PANEL_TYPE'                                , N'en-US', N'Dashboard', null, null, N'Panel Type:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DASHBOARD_APP_ID'                          , N'en-US', N'Dashboard', null, null, N'Dashboard App ID:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CATEGORY'                                  , N'en-US', N'Dashboard', null, null, N'Category:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_CATEGORY'                             , N'en-US', N'Dashboard', null, null, N'Location';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SETTINGS_EDITVIEW'                         , N'en-US', N'Dashboard', null, null, N'Settings EditView:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IS_ADMIN'                                  , N'en-US', N'Dashboard', null, null, N'Is Admin:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_APP_ENABLED'                               , N'en-US', N'Dashboard', null, null, N'App Enabled:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SCRIPT_URL'                                , N'en-US', N'Dashboard', null, null, N'Script URL:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_NAME'                               , N'en-US', N'Dashboard', null, null, N'Module Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TITLE'                                     , N'en-US', N'Dashboard', null, null, N'Title:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BLANK_TYPE'                                , N'en-US', N'Dashboard', null, null, N'(Blank)';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_BLANK'                                 , N'en-US', N'Dashboard', null, null, N'New Blank';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_ROW'                                   , N'en-US', N'Dashboard', null, null, N'New Row';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_COPY_BUTTON_TITLE'                         , N'en-US', N'Dashboard', null, null, N'Copy';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DELETE_BUTTON_TITLE'                       , N'en-US', N'Dashboard', null, null, N'Delete';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SELECT_ROLE'                               , N'en-US', N'Dashboard', null, null, N'Select Role';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_DELETE_CONFIRM'                            , N'en-US', N'Dashboard', null, null, N'Are you sure?';
-- 06/17/2017 Paul.  Dashboard popup. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_HOME_PAGE_DASHBOARDS'                      , N'en-US', N'Dashboard', null, null, N'Home Page Dashboards';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DASHBOARDS'                                , N'en-US', N'Dashboard', null, null, N'Dashboards';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CREATE_NEW_DASHBOARD'                      , N'en-US', N'Dashboard', null, null, N'Create New Dashboard';
-- 06/15/2019 Paul.  Missing term DEFAULT_SETTINGS. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DEFAULT_SETTINGS'                          , N'en-US', N'Dashboard', null, null, N'Default Settings:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NAME_REQUIRED'                             , N'en-US', N'Dashboard', null, null, N'A name is required.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PANELS_EMPTY'                              , N'en-US', N'Dashboard', null, null, N'Panels cannot be empty.';
-- 06/09/2021 Paul.  
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DASHBOARD_TAB_EDIT'                        , N'en-US', N'Dashboard', null, null, N'Edit Dashboard';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DASHBOARD_TAB_CREATE'                      , N'en-US', N'Dashboard', null, null, N'Create New Dashboard';
GO
/* -- #if Oracle
	COMMIT WORK;
END;
/

BEGIN
-- #endif Oracle */
exec dbo.spTERMINOLOGY_InsertOnly N'Dashboard'                                     , N'en-US', null, N'moduleList'                        ,   2, N'Dashboard';
exec dbo.spTERMINOLOGY_InsertOnly N'Dashboard'                                     , N'en-US', null, N'moduleListSingular'                ,   2, N'Dashboard';
-- select * from TERMINOLOGY where list_name = 'modulelist' order by list_order desc
-- 08/10/2017 Paul.  Need label for DashboardPanels and Images.  They appear on ACL Access View. 
exec dbo.spTERMINOLOGY_InsertOnly N'DashboardPanels'                               , N'en-US', null, N'moduleList'                        , 170, N'Dashboard Panels';
exec dbo.spTERMINOLOGY_InsertOnly N'Images'                                        , N'en-US', null, N'moduleList'                        , 171, N'Images';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Dashboard_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Dashboard_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:36 AM.
print 'TERMINOLOGY Dashlets en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CONTROL_NAME'                              , N'en-US', N'Dashlets', null, null, N'Control Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DASHLET_ENABLED'                           , N'en-US', N'Dashlets', null, null, N'Dashlet Enabled:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DASHLET_ORDER'                             , N'en-US', N'Dashlets', null, null, N'Dashlet Order:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_CONTROL_NAME'                         , N'en-US', N'Dashlets', null, null, N'Control Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DASHLET_ENABLED'                      , N'en-US', N'Dashlets', null, null, N'Dashlet Enabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DASHLET_ORDER'                        , N'en-US', N'Dashlets', null, null, N'Dashlet Order';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MODULE_NAME'                          , N'en-US', N'Dashlets', null, null, N'Module Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_TITLE'                                , N'en-US', N'Dashlets', null, null, N'Title';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_NAME'                               , N'en-US', N'Dashlets', null, null, N'Module Name:';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'Dashlets', null, null, N'Dsl';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TITLE'                                     , N'en-US', N'Dashlets', null, null, N'Title:';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_DISABLE'                                   , N'en-US', N'Dashlets', null, null, N'Disable';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_DOWN'                                      , N'en-US', N'Dashlets', null, null, N'Down';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_ENABLE'                                    , N'en-US', N'Dashlets', null, null, N'Enable';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_UP'                                        , N'en-US', N'Dashlets', null, null, N'Up';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Dashlets_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Dashlets_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:36 AM.
print 'TERMINOLOGY Dropdown en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DROPDOWN'                                  , N'en-US', N'Dropdown', null, null, N'Dropdown:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_KEY'                                       , N'en-US', N'Dropdown', null, null, N'Key';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LANGUAGE'                                  , N'en-US', N'Dropdown', null, null, N'Language:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FORM_TITLE'                           , N'en-US', N'Dropdown', null, null, N'Dropdown List';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SEARCH_FORM_TITLE'                         , N'en-US', N'Dropdown', null, null, N'Dropdown Select';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_VALUE'                                     , N'en-US', N'Dropdown', null, null, N'Value';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_DELETE'                                    , N'en-US', N'Dropdown', null, null, N'Delete';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_DOWN'                                      , N'en-US', N'Dropdown', null, null, N'Down';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_DROPDOWNS'                                 , N'en-US', N'Dropdown', null, null, N'Dropdowns';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_EDIT'                                      , N'en-US', N'Dropdown', null, null, N'Edit';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_INS'                                       , N'en-US', N'Dropdown', null, null, N'Ins';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_DROPDOWN'                              , N'en-US', N'Dropdown', null, null, N'Create Dropdown';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_UP'                                        , N'en-US', N'Dropdown', null, null, N'Up';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'Dropdown', null, null, N'Drp';
GO
/* -- #if Oracle
	COMMIT WORK;
END;
/

BEGIN
-- #endif Oracle */
exec dbo.spTERMINOLOGY_InsertOnly N'Dropdown'                                      , N'en-US', null, N'moduleList'                        ,  34, N'Dropdown';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Dropdown_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Dropdown_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:36 AM.
print 'TERMINOLOGY DynamicButtons en-us';
GO

set nocount on;
GO

-- 03/28/2019 Paul.  Every module should have a LBL_NEW_FORM_TITLE. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_FORM_TITLE'                            , N'en-US', N'DynamicButtons', null, null, N'Dynamic Buttons';

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADMIN_ONLY'                                , N'en-US', N'DynamicButtons', null, null, N'Admin Only:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ARGUMENT_FIELD'                            , N'en-US', N'DynamicButtons', null, null, N'Argument Field:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_COMMAND_NAME'                              , N'en-US', N'DynamicButtons', null, null, N'Command Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CONTROL_ACCESSKEY'                         , N'en-US', N'DynamicButtons', null, null, N'Control Accesskey:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CONTROL_CSSCLASS'                          , N'en-US', N'DynamicButtons', null, null, N'Control Cssclass:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CONTROL_INDEX'                             , N'en-US', N'DynamicButtons', null, null, N'Control Index:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CONTROL_TEXT'                              , N'en-US', N'DynamicButtons', null, null, N'Control Text:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CONTROL_TOOLTIP'                           , N'en-US', N'DynamicButtons', null, null, N'Control Tooltip:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CONTROL_TYPE'                              , N'en-US', N'DynamicButtons', null, null, N'Control Type:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DEFAULT_VIEW'                              , N'en-US', N'DynamicButtons', null, null, N'Default View:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EXCLUDE_MOBILE'                            , N'en-US', N'DynamicButtons', null, null, N'Exclude Mobile:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ADMIN_ONLY'                           , N'en-US', N'DynamicButtons', null, null, N'Admin Only';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ARGUMENT_FIELD'                       , N'en-US', N'DynamicButtons', null, null, N'Argument Field';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_COMMAND_NAME'                         , N'en-US', N'DynamicButtons', null, null, N'Command Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_CONTROL_ACCESSKEY'                    , N'en-US', N'DynamicButtons', null, null, N'Control Accesskey';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_CONTROL_CSSCLASS'                     , N'en-US', N'DynamicButtons', null, null, N'Control Cssclass';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_CONTROL_INDEX'                        , N'en-US', N'DynamicButtons', null, null, N'Control Index';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_CONTROL_NAME'                         , N'en-US', N'DynamicButtons', null, null, N'Control Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_CONTROL_TEXT'                         , N'en-US', N'DynamicButtons', null, null, N'Control Text';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_CONTROL_TOOLTIP'                      , N'en-US', N'DynamicButtons', null, null, N'Control Tooltip';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_CONTROL_TYPE'                         , N'en-US', N'DynamicButtons', null, null, N'Control Type';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DEFAULT_VIEW'                         , N'en-US', N'DynamicButtons', null, null, N'Default View';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_EXCLUDE_MOBILE'                       , N'en-US', N'DynamicButtons', null, null, N'Exclude Mobile';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FORM_TITLE'                           , N'en-US', N'DynamicButtons', null, null, N'Dynamic Button List';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MOBILE_ONLY'                          , N'en-US', N'DynamicButtons', null, null, N'Mobile Only';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MODULE_ACCESS_TYPE'                   , N'en-US', N'DynamicButtons', null, null, N'Module Access Type';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MODULE_NAME'                          , N'en-US', N'DynamicButtons', null, null, N'Module Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ONCLICK_SCRIPT'                       , N'en-US', N'DynamicButtons', null, null, N'Onclick Script';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_TARGET_ACCESS_TYPE'                   , N'en-US', N'DynamicButtons', null, null, N'Target Access Type';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_TARGET_NAME'                          , N'en-US', N'DynamicButtons', null, null, N'Target Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_TEXT_FIELD'                           , N'en-US', N'DynamicButtons', null, null, N'Text Field';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_URL_FORMAT'                           , N'en-US', N'DynamicButtons', null, null, N'Url Format';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_URL_TARGET'                           , N'en-US', N'DynamicButtons', null, null, N'Url Target';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_VIEW_NAME'                            , N'en-US', N'DynamicButtons', null, null, N'View Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MOBILE_ONLY'                               , N'en-US', N'DynamicButtons', null, null, N'Mobile Only:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ACCESS_TYPE'                        , N'en-US', N'DynamicButtons', null, null, N'Module Access Type:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_NAME'                               , N'en-US', N'DynamicButtons', null, null, N'Module Name:';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'DynamicButtons', null, null, N'DyB';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ONCLICK_SCRIPT'                            , N'en-US', N'DynamicButtons', null, null, N'Onclick Script:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TARGET_ACCESS_TYPE'                        , N'en-US', N'DynamicButtons', null, null, N'Target Access Type:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TARGET_NAME'                               , N'en-US', N'DynamicButtons', null, null, N'Target Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEXT_FIELD'                                , N'en-US', N'DynamicButtons', null, null, N'Text Field:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_URL_FORMAT'                                , N'en-US', N'DynamicButtons', null, null, N'Url Format:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_URL_TARGET'                                , N'en-US', N'DynamicButtons', null, null, N'Url Target:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_VIEW_NAME'                                 , N'en-US', N'DynamicButtons', null, null, N'View Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_DOWN'                                      , N'en-US', N'DynamicButtons', null, null, N'Down';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_DYNAMIC_BUTTON_LIST'                       , N'en-US', N'DynamicButtons', null, null, N'Dynamic Buttons';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_INS'                                       , N'en-US', N'DynamicButtons', null, null, N'Ins';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_DYNAMIC_BUTTON'                        , N'en-US', N'DynamicButtons', null, null, N'Create Dynamic Button';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_UP'                                        , N'en-US', N'DynamicButtons', null, null, N'Up';
-- 03/14/2014 Paul.  Allow hidden buttons to be created. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_HIDDEN'                                    , N'en-US', N'DynamicButtons', null, null, N'Hidden:';
-- 08/16/2017 Paul.  Add ability to apply a business rule to a button. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BUSINESS_RULE'                            , N'en-US', N'DynamicButtons', null, null, N'Business Rule:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BUSINESS_SCRIPT'                          , N'en-US', N'DynamicButtons', null, null, N'Business Script:';
GO
/* -- #if Oracle
	COMMIT WORK;
END;
/

BEGIN
-- #endif Oracle */
exec dbo.spTERMINOLOGY_InsertOnly N'DynamicButtons'                                , N'en-US', null, N'moduleList'                        ,  62, N'Dynamic Buttons';

exec dbo.spTERMINOLOGY_InsertOnly N'Button'                                        , N'en-US', null, N'dynamic_button_type_dom'           ,   1, N'Button';
exec dbo.spTERMINOLOGY_InsertOnly N'ButtonLink'                                    , N'en-US', null, N'dynamic_button_type_dom'           ,   2, N'Buttonlink';
exec dbo.spTERMINOLOGY_InsertOnly N'HyperLink'                                     , N'en-US', null, N'dynamic_button_type_dom'           ,   3, N'Hyperlink';

exec dbo.spTERMINOLOGY_InsertOnly N'view'                                          , N'en-US', null, N'module_access_type_dom'            ,   1, N'View';
exec dbo.spTERMINOLOGY_InsertOnly N'list'                                          , N'en-US', null, N'module_access_type_dom'            ,   2, N'List';
exec dbo.spTERMINOLOGY_InsertOnly N'edit'                                          , N'en-US', null, N'module_access_type_dom'            ,   3, N'Edit';
exec dbo.spTERMINOLOGY_InsertOnly N'delete'                                        , N'en-US', null, N'module_access_type_dom'            ,   4, N'Delete';
exec dbo.spTERMINOLOGY_InsertOnly N'import'                                        , N'en-US', null, N'module_access_type_dom'            ,   5, N'Import';
exec dbo.spTERMINOLOGY_InsertOnly N'export'                                        , N'en-US', null, N'module_access_type_dom'            ,   6, N'Export';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_DynamicButtons_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_DynamicButtons_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:36 AM.
print 'TERMINOLOGY DynamicLayout en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_COLSPAN'                                   , N'en-US', N'DynamicLayout', null, null, N'Column Span:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DATA_FIELD'                                , N'en-US', N'DynamicLayout', null, null, N'Data Field:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DATA_FORMAT'                               , N'en-US', N'DynamicLayout', null, null, N'Data Format:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DATA_LABEL'                                , N'en-US', N'DynamicLayout', null, null, N'Data Label:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DATA_REQUIRED'                             , N'en-US', N'DynamicLayout', null, null, N'Data Required:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DETAIL_VIEW_FIELD'                         , N'en-US', N'DynamicLayout', null, null, N'Detail View Fields';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DETAIL_VIEW_LAYOUT'                        , N'en-US', N'DynamicLayout', null, null, N'Detail View Layout';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DISPLAY_FIELD'                             , N'en-US', N'DynamicLayout', null, null, N'Display Field:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EDIT_RELATIONSHIPS_LAYOUT'                 , N'en-US', N'DynamicLayout', null, null, N'Edit View Relationships Layout';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EDIT_VIEW_FIELD'                           , N'en-US', N'DynamicLayout', null, null, N'Layout View Fields';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EDIT_VIEW_LAYOUT'                          , N'en-US', N'DynamicLayout', null, null, N'Edit View Layout';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FIELD_INDEX'                               , N'en-US', N'DynamicLayout', null, null, N'Field Index:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FIELD_TYPE'                                , N'en-US', N'DynamicLayout', null, null, N'Field Type:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FIELD_VALIDATOR'                           , N'en-US', N'DynamicLayout', null, null, N'Field Validator:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FIELD_VALIDATOR_MESSAGE'                   , N'en-US', N'DynamicLayout', null, null, N'Field Validator Message:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FORMAT_COLUMNS'                            , N'en-US', N'DynamicLayout', null, null, N'Text Columns:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FORMAT_MAX_LENGTH'                         , N'en-US', N'DynamicLayout', null, null, N'Max Length:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FORMAT_ROWS'                               , N'en-US', N'DynamicLayout', null, null, N'Text Rows:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FORMAT_SCRIPT'                             , N'en-US', N'DynamicLayout', null, null, N'Script:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FORMAT_SIZE'                               , N'en-US', N'DynamicLayout', null, null, N'Size:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FORMAT_TAB_INDEX'                          , N'en-US', N'DynamicLayout', null, null, N'Tab Index:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FREE_FORM_DATA'                            , N'en-US', N'DynamicLayout', null, null, N'Free Form Data';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_GRID_VIEW_FIELD'                           , N'en-US', N'DynamicLayout', null, null, N'Grid View Fields';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_GRID_VIEW_LAYOUT'                          , N'en-US', N'DynamicLayout', null, null, N'Grid View Layout';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IFRAME_HEIGHT'                             , N'en-US', N'DynamicLayout', null, null, N'IFrame Height:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ITEMSTYLE_CSSCLASS'                        , N'en-US', N'DynamicLayout', null, null, N'Style:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ITEMSTYLE_HORIZONTAL_ALIGN'                , N'en-US', N'DynamicLayout', null, null, N'Horizontal Align:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ITEMSTYLE_VERTICAL_ALIGN'                  , N'en-US', N'DynamicLayout', null, null, N'Vertical Align:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ITEMSTYLE_WIDTH'                           , N'en-US', N'DynamicLayout', null, null, N'Column Width:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ITEMSTYLE_WRAP'                            , N'en-US', N'DynamicLayout', null, null, N'Column Wrap:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LAYOUT_VIEW'                               , N'en-US', N'DynamicLayout', null, null, N'Layout View';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MODULE_NAME'                          , N'en-US', N'DynamicLayout', null, null, N'Module Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_NAME'                                 , N'en-US', N'DynamicLayout', null, null, N'List Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_TITLE'                                , N'en-US', N'DynamicLayout', null, null, N'Title';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_TYPE'                               , N'en-US', N'DynamicLayout', null, null, N'Module Type:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_FORM_TITLE'                            , N'en-US', N'DynamicLayout', null, null, N'Create Dynamic Layout';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ONCLICK_SCRIPT'                            , N'en-US', N'DynamicLayout', null, null, N'Onclick Script:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PARENT_FIELD'                              , N'en-US', N'DynamicLayout', null, null, N'Parent Field:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RELATED_DISPLAY_FIELD'                     , N'en-US', N'DynamicLayout', null, null, N'Related Display Field:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RELATED_ID_FIELD'                          , N'en-US', N'DynamicLayout', null, null, N'Related ID Field:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RELATED_JOIN_FIELD'                        , N'en-US', N'DynamicLayout', null, null, N'Related Join Field:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RELATED_NAME_FIELD'                        , N'en-US', N'DynamicLayout', null, null, N'Related Name Field:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RELATED_SOURCE_DISPLAY_FIELD'              , N'en-US', N'DynamicLayout', null, null, N'Related Source Display Field:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RELATED_SOURCE_ID_FIELD'                   , N'en-US', N'DynamicLayout', null, null, N'Related Source ID Field:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RELATED_SOURCE_MODULE_NAME'                , N'en-US', N'DynamicLayout', null, null, N'Related Source Module Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RELATED_SOURCE_NAME_FIELD'                 , N'en-US', N'DynamicLayout', null, null, N'Related Source Name Field:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RELATED_SOURCE_VIEW_NAME'                  , N'en-US', N'DynamicLayout', null, null, N'Related Source View Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RELATED_VIEW_NAME'                         , N'en-US', N'DynamicLayout', null, null, N'Related View Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RELATIONSHIPS_LAYOUT'                      , N'en-US', N'DynamicLayout', null, null, N'Detail View Relationships Layout';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ROWSPAN'                                   , N'en-US', N'DynamicLayout', null, null, N'Row Span:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SORT_EXPRESSION'                           , N'en-US', N'DynamicLayout', null, null, N'Sort Expression:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TOOL_TIP'                                  , N'en-US', N'DynamicLayout', null, null, N'Tool Tip:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UI_REQUIRED'                               , N'en-US', N'DynamicLayout', null, null, N'Ui Required:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_URL_ASSIGNED_FIELD'                        , N'en-US', N'DynamicLayout', null, null, N'Url Assigned Field:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_URL_FIELD'                                 , N'en-US', N'DynamicLayout', null, null, N'Url Field:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_URL_FORMAT'                                , N'en-US', N'DynamicLayout', null, null, N'Url Format:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_URL_MODULE'                                , N'en-US', N'DynamicLayout', null, null, N'Url Module:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_URL_TARGET'                                , N'en-US', N'DynamicLayout', null, null, N'Url Target:';

exec dbo.spTERMINOLOGY_InsertOnly N'LNK_LAYOUT_DETAILVIEWS'                        , N'en-US', N'DynamicLayout', null, null, N'Select Detail View';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_LAYOUT_EDITVIEWS'                          , N'en-US', N'DynamicLayout', null, null, N'Select Edit View';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_LAYOUT_GRIDVIEWS'                          , N'en-US', N'DynamicLayout', null, null, N'Select Grid View';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_LAYOUT_RELATIONSHIPS'                      , N'en-US', N'DynamicLayout', null, null, N'Select Detail View Relationships';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_LAYOUT_EDIT_RELATIONSHIPS'                 , N'en-US', N'DynamicLayout', null, null, N'Select Edit View Relationships';
if exists(select * from vwTERMINOLOGY where MODULE_NAME = N'DynamicLayout' and LANG = 'en-US' and NAME = 'LNK_LAYOUT_DETAILVIEWS' and DISPLAY_NAME = N'Select Detail View') begin -- then
	print N'Change name to Detail View Editor (Classic)';
	update TERMINOLOGY
	   set DISPLAY_NAME      = N'Detail View Editor (Classic)'
	     , DATE_MODIFIED     = getdate()
	     , DATE_MODIFIED_UTC = getutcdate()
	 where MODULE_NAME       = N'DynamicLayout'
	   and LANG              = N'en-US'
	   and NAME              = 'LNK_LAYOUT_DETAILVIEWS'
	   and DISPLAY_NAME      = N'Select Detail View';
end -- if;
if exists(select * from vwTERMINOLOGY where MODULE_NAME = N'DynamicLayout' and LANG = 'en-US' and NAME = 'LNK_LAYOUT_EDITVIEWS' and DISPLAY_NAME = N'Select Edit View') begin -- then
	print N'Change name to Edit View Editor (Classic)';
	update TERMINOLOGY
	   set DISPLAY_NAME      = N'Edit View Editor (Classic)'
	     , DATE_MODIFIED     = getdate()
	     , DATE_MODIFIED_UTC = getutcdate()
	 where MODULE_NAME       = N'DynamicLayout'
	   and LANG              = N'en-US'
	   and NAME              = 'LNK_LAYOUT_EDITVIEWS'
	   and DISPLAY_NAME      = N'Select Edit View';
end -- if;
if exists(select * from vwTERMINOLOGY where MODULE_NAME = N'DynamicLayout' and LANG = 'en-US' and NAME = 'LNK_LAYOUT_GRIDVIEWS' and DISPLAY_NAME = N'Select Grid View') begin -- then
	print N'Change name to Grid View Editor (Classic)';
	update TERMINOLOGY
	   set DISPLAY_NAME      = N'Grid View Editor (Classic)'
	     , DATE_MODIFIED     = getdate()
	     , DATE_MODIFIED_UTC = getutcdate()
	 where MODULE_NAME       = N'DynamicLayout'
	   and LANG              = N'en-US'
	   and NAME              = 'LNK_LAYOUT_GRIDVIEWS'
	   and DISPLAY_NAME      = N'Select Grid View';
end -- if;
if exists(select * from vwTERMINOLOGY where MODULE_NAME = N'DynamicLayout' and LANG = 'en-US' and NAME = 'LNK_LAYOUT_RELATIONSHIPS' and DISPLAY_NAME = N'Select Detail View Relationships') begin -- then
	print N'Change name to Detail View Relationships Editor (Classic)';
	update TERMINOLOGY
	   set DISPLAY_NAME      = N'Detail View Relationships Editor (Classic)'
	     , DATE_MODIFIED     = getdate()
	     , DATE_MODIFIED_UTC = getutcdate()
	 where MODULE_NAME       = N'DynamicLayout'
	   and LANG              = N'en-US'
	   and NAME              = 'LNK_LAYOUT_RELATIONSHIPS'
	   and DISPLAY_NAME      = N'Select Detail View Relationships';
end -- if;
if exists(select * from vwTERMINOLOGY where MODULE_NAME = N'DynamicLayout' and LANG = 'en-US' and NAME = 'LNK_LAYOUT_EDIT_RELATIONSHIPS' and DISPLAY_NAME = N'Select Edit View Relationships') begin -- then
	print N'Change name to Edit View Relationships Editor (Classic)';
	update TERMINOLOGY
	   set DISPLAY_NAME      = N'Edit View Relationships Editor (Classic)'
	     , DATE_MODIFIED     = getdate()
	     , DATE_MODIFIED_UTC = getutcdate()
	 where MODULE_NAME       = N'DynamicLayout'
	   and LANG              = N'en-US'
	   and NAME              = 'LNK_LAYOUT_EDIT_RELATIONSHIPS'
	   and DISPLAY_NAME      = N'Select Edit View Relationships';
end -- if;
GO

-- 04/11/2011 Paul.  Add support for Dynamic Layout popups. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PREVIEW'                                   , N'en-US', N'DynamicLayout', null, null, N'Preview';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_COPY_BUTTON_LABEL'                         , N'en-US', N'DynamicLayout', null, null, N'Copy';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_COPY_BUTTON_TITLE'                         , N'en-US', N'DynamicLayout', null, null, N'Copy';
-- 05/05/2016 Paul.  Provide a way to delete a layout copy. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DELETE_BUTTON_LABEL'                       , N'en-US', N'DynamicLayout', null, null, N'Delete';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DELETE_BUTTON_TITLE'                       , N'en-US', N'DynamicLayout', null, null, N'Delete';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DETAIL_NAME'                               , N'en-US', N'DynamicLayout', null, null, N'DetailView Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EDIT_NAME'                                 , N'en-US', N'DynamicLayout', null, null, N'EditView Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_GRID_NAME'                                 , N'en-US', N'DynamicLayout', null, null, N'GridView Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DETAIL_NAME'                          , N'en-US', N'DynamicLayout', null, null, N'DetailView Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_EDIT_NAME'                            , N'en-US', N'DynamicLayout', null, null, N'EditView Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_GRID_NAME'                            , N'en-US', N'DynamicLayout', null, null, N'GridView Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FIELD_INDEX'                          , N'en-US', N'DynamicLayout', null, null, N'Field Index';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_COLUMN_INDEX'                         , N'en-US', N'DynamicLayout', null, null, N'Column Index';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DATA_LABEL'                           , N'en-US', N'DynamicLayout', null, null, N'Data Label';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_HEADER_TEXT'                          , N'en-US', N'DynamicLayout', null, null, N'Header Text';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DATA_FIELD'                           , N'en-US', N'DynamicLayout', null, null, N'Data Field';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_COLUMN_TYPE'                          , N'en-US', N'DynamicLayout', null, null, N'Column Type';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DATA_FORMAT'                          , N'en-US', N'DynamicLayout', null, null, N'Data Format';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FIELD_TYPE'                           , N'en-US', N'DynamicLayout', null, null, N'Field Type';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_LIST_NAME'                            , N'en-US', N'DynamicLayout', null, null, N'List Name';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'DynamicLayout', null, null, N'DyL';
-- 02/14/2016 Paul.  New layout editor. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_USER_MODULES'                              , N'en-US', N'DynamicLayout', null, null, N'User Modules';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADMIN_MODULES'                             , N'en-US', N'DynamicLayout', null, null, N'Admin Modules';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EDIT_VIEWS'                                , N'en-US', N'DynamicLayout', null, null, N'Edit Views';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SEARCH_EDIT_VIEWS'                         , N'en-US', N'DynamicLayout', null, null, N'Search Edit Views';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DETAIL_VIEWS'                              , N'en-US', N'DynamicLayout', null, null, N'Detail Views';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_GRID_VIEWS'                                , N'en-US', N'DynamicLayout', null, null, N'Grid Views';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SUBPANEL_GRID_VIEWS'                       , N'en-US', N'DynamicLayout', null, null, N'Subpanel Grid Views';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SUBPANEL_RELATIONSHIPS'                    , N'en-US', N'DynamicLayout', null, null, N'Subpanel Relationships';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_ROW'                                   , N'en-US', N'DynamicLayout', null, null, N'New Row';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_SEPARATOR'                             , N'en-US', N'DynamicLayout', null, null, N'New Separator';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_HEADER'                                , N'en-US', N'DynamicLayout', null, null, N'New Header';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_BLANK'                                 , N'en-US', N'DynamicLayout', null, null, N'New Blank';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_BOUND_COLUMN'                          , N'en-US', N'DynamicLayout', null, null, N'New Bound Column';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_TEMPLATE_COLUMN'                       , N'en-US', N'DynamicLayout', null, null, N'New Template Column';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EVENTS'                                    , N'en-US', N'DynamicLayout', null, null, N'Events';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BLANK_TYPE'                                , N'en-US', N'DynamicLayout', null, null, N'(Blank)';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BOUND_COLUMN_TYPE'                         , N'en-US', N'DynamicLayout', null, null, N'(BoundColumn)';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEMPLATE_COLUMN_TYPE'                      , N'en-US', N'DynamicLayout', null, null, N'(TemplateColumn)';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_HIDDEN_TYPE'                               , N'en-US', N'DynamicLayout', null, null, N'(Hidden)';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_HEADER_TYPE'                               , N'en-US', N'DynamicLayout', null, null, N'(Header)';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SEPARATOR_TYPE'                            , N'en-US', N'DynamicLayout', null, null, N'(Separator)';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_HOVER_TYPE'                                , N'en-US', N'DynamicLayout', null, null, N'(Hover)';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMAGE_BUTTON_TYPE'                         , N'en-US', N'DynamicLayout', null, null, N'(ImageButton)';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_JAVASCRIPT_TYPE'                           , N'en-US', N'DynamicLayout', null, null, N'(JavaScript)';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADDRESS_BUTTONS_TYPE'                      , N'en-US', N'DynamicLayout', null, null, N'(AddressButtons)';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SYNC_TO_DETAILVIEW'                        , N'en-US', N'DynamicLayout', null, null, N'Sync to DetailView';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_HEADER_TEXT'                               , N'en-US', N'DynamicLayout', null, null, N'Header Text:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_COLUMN_TYPE'                               , N'en-US', N'DynamicLayout', null, null, N'Column Type:';

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_NAME'                               , N'en-US', N'DynamicLayout', null, null, N'Module Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TITLE'                                     , N'en-US', N'DynamicLayout', null, null, N'Title:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CONTROL_NAME'                              , N'en-US', N'DynamicLayout', null, null, N'Control Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TABLE_NAME'                                , N'en-US', N'DynamicLayout', null, null, N'Table Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PRIMARY_FIELD'                             , N'en-US', N'DynamicLayout', null, null, N'Primary Field:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SORT_FIELD'                                , N'en-US', N'DynamicLayout', null, null, N'Sort Field:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SORT_DIRECTION'                            , N'en-US', N'DynamicLayout', null, null, N'Sort Direction:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RELATIONSHIP_ENABLED'                      , N'en-US', N'DynamicLayout', null, null, N'Relationship Enabled:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ENABLED'                                   , N'en-US', N'DynamicLayout', null, null, N'Enabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DISABLED'                                  , N'en-US', N'DynamicLayout', null, null, N'Disabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TERMINOLOGY'                               , N'en-US', N'DynamicLayout', null, null, N'Terminology';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FIELD_TERMS'                               , N'en-US', N'DynamicLayout', null, null, N'Field Terms';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ALL_TERMS'                                 , N'en-US', N'DynamicLayout', null, null, N'All Terms';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SAVE_COMPLETE'                             , N'en-US', N'DynamicLayout', null, null, N'Save complete.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NO_CHANGES'                                , N'en-US', N'DynamicLayout', null, null, N'No changes to save.';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_LAYOUT_EDITOR'                             , N'en-US', N'DynamicLayout', null, null, N'Layout Editor';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_GLOBAL'                                    , N'en-US', N'DynamicLayout', null, null, N'Global';

-- 05/04/2016 Paul.  HTML5 layout header terms. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TOOLBOX'                                   , N'en-US', N'DynamicLayout', null, null, N'Toolbox';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LAYOUT'                                    , N'en-US', N'DynamicLayout', null, null, N'Layout';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PROPERTIES'                                , N'en-US', N'DynamicLayout', null, null, N'Properties';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SELECT_ROLE'                               , N'en-US', N'DynamicLayout', null, null, N'Select Role';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_NEW_LAYOUT_NAME'                           , N'en-US', N'DynamicLayout', null, null, N'Please specify a new layout name';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_DELETE_CONFIRM'                            , N'en-US', N'DynamicLayout', null, null, N'Are you sure?';
-- 03/16/2020 Paul.  Missing terms needed by React Client. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ALTERNATE_VIEW'                            , N'en-US', N'DynamicLayout', null, null, N'Alternate View:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_RECORD_ENABLED'                        , N'en-US', N'DynamicLayout', null, null, N'New Record Enabled:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EXISTING_RECORD_ENABLED'                   , N'en-US', N'DynamicLayout', null, null, N'Existing Record Enabled:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TERMINOLOGY_LIST'                          , N'en-US', N'DynamicLayout', null, null, N'Terminology Lists';

exec dbo.spTERMINOLOGY_InsertOnly N'DynamicLayout'                                 , N'en-US', null, N'moduleList'                        ,  36, N'Dynamic Layout';
GO


set nocount off;
GO

/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_DynamicLayout_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_DynamicLayout_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:36 AM.
print 'TERMINOLOGY EditCustomFields en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'COLUMN_TITLE_AUDIT'                            , N'en-US', N'EditCustomFields', null, null, N'Audit';
exec dbo.spTERMINOLOGY_InsertOnly N'COLUMN_TITLE_DATA_TYPE'                        , N'en-US', N'EditCustomFields', null, null, N'Data Type';
exec dbo.spTERMINOLOGY_InsertOnly N'COLUMN_TITLE_DEFAULT_VALUE'                    , N'en-US', N'EditCustomFields', null, null, N'Default Value';
exec dbo.spTERMINOLOGY_InsertOnly N'COLUMN_TITLE_DROPDOWN'                         , N'en-US', N'EditCustomFields', null, null, N'Dropdown';
exec dbo.spTERMINOLOGY_InsertOnly N'COLUMN_TITLE_LABEL'                            , N'en-US', N'EditCustomFields', null, null, N'Field Label';
exec dbo.spTERMINOLOGY_InsertOnly N'COLUMN_TITLE_MAX_SIZE'                         , N'en-US', N'EditCustomFields', null, null, N'Max Size';
exec dbo.spTERMINOLOGY_InsertOnly N'COLUMN_TITLE_NAME'                             , N'en-US', N'EditCustomFields', null, null, N'Field Name';
exec dbo.spTERMINOLOGY_InsertOnly N'COLUMN_TITLE_REQUIRED_OPTION'                  , N'en-US', N'EditCustomFields', null, null, N'Required Field';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADD_FIELD'                                 , N'en-US', N'EditCustomFields', null, null, N'Add Field:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CUSTOM_FIELDS'                             , N'en-US', N'EditCustomFields', null, null, N'Custom Fields';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DROPDOWN_LIST'                             , N'en-US', N'EditCustomFields', null, null, N'Dropdown List:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_INVALID_FIELD_NAME'                        , N'en-US', N'EditCustomFields', null, null, N'Invalid Field Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FORM_TITLE'                           , N'en-US', N'EditCustomFields', null, null, N'Custom Fields';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE'                                    , N'en-US', N'EditCustomFields', null, null, N'Module';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_NAME'                               , N'en-US', N'EditCustomFields', null, null, N'Edit Custom Fields';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'EditCustomFields', null, null, N'ECF';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_SELECT'                             , N'en-US', N'EditCustomFields', null, null, N'Module to Edit';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_TITLE'                              , N'en-US', N'EditCustomFields', null, null, N'Edit Custom Fields';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SEARCH_FORM_TITLE'                         , N'en-US', N'EditCustomFields', null, null, N'Search';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_SELECT_CUSTOM_FIELD'                       , N'en-US', N'EditCustomFields', null, null, N'Select Custom Field';

-- 01/30/2021 Paul.  Add EditCustomFields support to React Client. 
exec dbo.spTERMINOLOGY_InsertOnly N'varchar'                                       , N'en-US', null, N'custom_field_type_dom',  1, N'Text';
exec dbo.spTERMINOLOGY_InsertOnly N'text'                                          , N'en-US', null, N'custom_field_type_dom',  2, N'Text Area';
exec dbo.spTERMINOLOGY_InsertOnly N'int'                                           , N'en-US', null, N'custom_field_type_dom',  3, N'Integer';
exec dbo.spTERMINOLOGY_InsertOnly N'float'                                         , N'en-US', null, N'custom_field_type_dom',  4, N'Decimal';
exec dbo.spTERMINOLOGY_InsertOnly N'bool'                                          , N'en-US', null, N'custom_field_type_dom',  5, N'Checkbox';
exec dbo.spTERMINOLOGY_InsertOnly N'date'                                          , N'en-US', null, N'custom_field_type_dom',  6, N'Date';
exec dbo.spTERMINOLOGY_InsertOnly N'enum'                                          , N'en-US', null, N'custom_field_type_dom',  7, N'Dropdown';
exec dbo.spTERMINOLOGY_InsertOnly N'guid'                                          , N'en-US', null, N'custom_field_type_dom',  8, N'Guid';
exec dbo.spTERMINOLOGY_InsertOnly N'guid'                                          , N'en-US', null, N'custom_field_type_dom',  9, N'Image';
exec dbo.spTERMINOLOGY_InsertOnly N'money'                                         , N'en-US', null, N'custom_field_type_dom', 10, N'Money';

GO
/* -- #if Oracle
	COMMIT WORK;
END;
/

BEGIN
-- #endif Oracle */
exec dbo.spTERMINOLOGY_InsertOnly N'EditCustomFields'                              , N'en-US', null, N'moduleList'                        ,  69, N'Edit Custom Fields';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_EditCustomFields_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_EditCustomFields_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:37 AM.
print 'TERMINOLOGY Export en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FORM_TITLE'                           , N'en-US', N'Export', null, null, N'Export List';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RECORDS'                                   , N'en-US', N'Export', null, null, N'{0} records';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SEARCH_FORM_TITLE'                         , N'en-US', N'Export', null, null, N'Search';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TABLE_NAME'                                , N'en-US', N'Export', null, null, N'Table Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TABLE_STATUS'                              , N'en-US', N'Export', null, null, N'Table Status';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'Export', null, null, N'Exp';
GO
/* -- #if Oracle
	COMMIT WORK;
END;
/

BEGIN
-- #endif Oracle */
exec dbo.spTERMINOLOGY_InsertOnly N'Export'                                        , N'en-US', null, N'moduleList'                        ,  68, N'Export';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Export_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Export_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:37 AM.
print 'TERMINOLOGY FieldValidators en-us';
GO

set nocount on;
GO

-- 03/28/2019 Paul.  Every module should have a LBL_NEW_FORM_TITLE. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_FORM_TITLE'                            , N'en-US', N'FieldValidators', null, null, N'Field Validators';

exec dbo.spTERMINOLOGY_InsertOnly N'ERR_FIELD_VALIDATOR_NOT_FOUND'                 , N'en-US', N'FieldValidators', null, null, N'Field Validator Not Found.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_COMPARE_OPERATOR'                          , N'en-US', N'FieldValidators', null, null, N'Compare Operator:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DATA_TYPE'                                 , N'en-US', N'FieldValidators', null, null, N'Data Type:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_COMPARE_OPERATOR'                     , N'en-US', N'FieldValidators', null, null, N'Compare Operator';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DATA_TYPE'                            , N'en-US', N'FieldValidators', null, null, N'Data Type';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FORM_TITLE'                           , N'en-US', N'FieldValidators', null, null, N'Field Validator List';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MAXIMUM_VALUE'                        , N'en-US', N'FieldValidators', null, null, N'Maximum Value';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MININUM_VALUE'                        , N'en-US', N'FieldValidators', null, null, N'Mininum Value';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_NAME'                                 , N'en-US', N'FieldValidators', null, null, N'Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_REGULAR_EXPRESSION'                   , N'en-US', N'FieldValidators', null, null, N'Regular Expression';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_VALIDATION_TYPE'                      , N'en-US', N'FieldValidators', null, null, N'Validation Type';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAXIMUM_VALUE'                             , N'en-US', N'FieldValidators', null, null, N'Maximum Value:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MININUM_VALUE'                             , N'en-US', N'FieldValidators', null, null, N'Mininum Value:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NAME'                                      , N'en-US', N'FieldValidators', null, null, N'Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REGULAR_EXPRESSION'                        , N'en-US', N'FieldValidators', null, null, N'Regular Expression:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_VALIDATION_TYPE'                           , N'en-US', N'FieldValidators', null, null, N'Validation Type:';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_FIELD_VALIDATOR_LIST'                      , N'en-US', N'FieldValidators', null, null, N'Field Validators';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_FIELD_VALIDATOR'                       , N'en-US', N'FieldValidators', null, null, N'Create Field Validator';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_REPORTS'                                   , N'en-US', N'FieldValidators', null, null, N'Field Validator Reports';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'FieldValidators', null, null, N'FV';
GO
/* -- #if Oracle
	COMMIT WORK;
END;
/

BEGIN
-- #endif Oracle */
exec dbo.spTERMINOLOGY_InsertOnly N'FieldValidators'                               , N'en-US', null, N'moduleList'                        ,  82, N'Field Validators';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_FieldValidators_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_FieldValidators_en_us')
/
-- #endif IBM_DB2 */


print 'TERMINOLOGY FullTextSearch en-us';
GO

set nocount on;
GO

-- delete from TERMINOLOGY where MODULE_NAME = 'FullTextSearch';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MANAGE_FULLTEXT_SEARCH_TITLE'                    , N'en-US', N'FullTextSearch', null, null, N'Full-Text Search';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MANAGE_FULLTEXT_SEARCH'                          , N'en-US', N'FullTextSearch', null, null, N'Manage Full-Text Search';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FULLTEXTSEARCH_SETTINGS'                         , N'en-US', N'FullTextSearch', null, null, N'Full-Text Search Settings';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FORM_TITLE'                                 , N'en-US', N'FullTextSearch', null, null, N'Full-Text Search';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SEARCH_FORM_TITLE'                               , N'en-US', N'FullTextSearch', null, null, N'Search';

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_NAME'                                       , N'en-US', N'FullTextSearch', null, null, N'Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TABLE_NAME'                                      , N'en-US', N'FullTextSearch', null, null, N'Table Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SEARCH_TEXT'                                     , N'en-US', N'FullTextSearch', null, null, N'Search Text:';

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FULLTEXT_SUPPORTED'                              , N'en-US', N'FullTextSearch', null, null, N'Is Full-Text Search Supported?';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SUPPORTED_INSTRUCTIONS'                          , N'en-US', N'FullTextSearch', null, null, N'Full-Text Search is only supported with SQL Server.  You may need to upgrade to SQL Server Express with Advanced Services, Standard, Enterprise, Business or Web Editions.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FULLTEXT_INSTALLED'                              , N'en-US', N'FullTextSearch', null, null, N'Is Full-Text Service Installed?';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_INSTALLED_INSTRUCTIONS'                          , N'en-US', N'FullTextSearch', null, null, N'The Full-Text Service is not typically installed with SQL Server Express, so you may need to upgrade the SQL Server edition to include it.';
-- 10/19/2016 Paul.  sp_fulltext_database is only needed for SQL Server 2005. 
--exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FULLTEXT_ENABLED'                                , N'en-US', N'FullTextSearch', null, null, N'Is Database Enable?';
--exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ENABLED_INSTRUCTIONS'                            , N'en-US', N'FullTextSearch', null, null, N'The database will need to be enabled in order to support Full-Text Search.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FULLTEXT_CATALOG_EXISTS'                         , N'en-US', N'FullTextSearch', null, null, N'Does the Catalog Exist?';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CATALOG_INSTRUCTIONS'                            , N'en-US', N'FullTextSearch', null, null, N'The catalog is where the Full-Text Search data is stored.  It will be created when the feature is enabled.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OFFICE_SUPPORTED'                                , N'en-US', N'FullTextSearch', null, null, N'Is Office 2010 Filter Pack Installed?';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OFFICE_INSTRUCTIONS'                             , N'en-US', N'FullTextSearch', null, null, N'The Office 2010 Filter Pack can be downloaded from <a href="https://www.microsoft.com/en-us/download/details.aspx?id=17062">https://www.microsoft.com/en-us/download/details.aspx?id=17062</a>.  It must be installed on the SQL Server computer.
After installation, you may need to click the Enable button again and restart the SQL Server service.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PDF_SUPPORTED'                                   , N'en-US', N'FullTextSearch', null, null, N'Is Adobe PDF iFilter Installed?';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PDF_INSTRUCTIONS'                                , N'en-US', N'FullTextSearch', null, null, N'PDF support is included in the SQL Server 2016 OS.  For older versions of Windows, 
the Adobe PDF iFilter can be downloaded from <a href="http://www.adobe.com/support/downloads/thankyou.jsp?ftpID=5542&fileID=5550">http://www.adobe.com/support/downloads/thankyou.jsp?ftpID=5542&fileID=5550</a>.  It must be installed on the SQL Server computer.
After installation, you may need to click the Enable button again above and restart the SQL Server service.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SUPPORTED_DOCUMENT_TYPES'                        , N'en-US', N'FullTextSearch', null, null, N'Supported Document Types:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_INDEXED_TABLES'                                  , N'en-US', N'FullTextSearch', null, null, N'Indexed Tables:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_POPULATION_STATUS'                               , N'en-US', N'FullTextSearch', null, null, N'Population Status:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_POPULATION_COUNT'                                , N'en-US', N'FullTextSearch', null, null, N'Population Item Count:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LAST_POPULATION_DATE'                            , N'en-US', N'FullTextSearch', null, null, N'Population Date:';

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ENABLE_BUTTON'                                   , N'en-US', N'FullTextSearch', null, null, N'Enable';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DISABLE_BUTTON'                                  , N'en-US', N'FullTextSearch', null, null, N'Disable';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEST_BUTTON'                                     , N'en-US', N'FullTextSearch', null, null, N'Test';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REBUILD_INDEX_BUTTON'                            , N'en-US', N'FullTextSearch', null, null, N'Rebuild Index';

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                             , N'en-US', N'FullTextSearch', null, null, N'FTS';
exec dbo.spTERMINOLOGY_InsertOnly N'FullTextSearch'                                      , N'en-US', null, N'moduleList',  166, N'FullTextSearch';
GO

set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_FullTextSearch_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_FullTextSearch_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:37 AM.
print 'TERMINOLOGY Help en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_HELP_BOOKMARK'                             , N'en-US', N'Help', null, null, N'Bookmark this page';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_HELP_EMAIL'                                , N'en-US', N'Help', null, null, N'Email';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_HELP_PRINT'                                , N'en-US', N'Help', null, null, N'Print';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FORM_TITLE'                           , N'en-US', N'Help', null, null, N'Help List';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_LANG'                                 , N'en-US', N'Help', null, null, N'Language';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MODULE_NAME'                          , N'en-US', N'Help', null, null, N'Module Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_NAME'                                 , N'en-US', N'Help', null, null, N'Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TOPICS'                                    , N'en-US', N'Help', null, null, N'Topics';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEST'                                      , N'en-US', N'Help', null, null, N'Test';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'Help', null, null, N'Hlp';
GO
/* -- #if Oracle
	COMMIT WORK;
END;
/

BEGIN
-- #endif Oracle */
exec dbo.spTERMINOLOGY_InsertOnly N'Help'                                          , N'en-US', null, N'moduleList'                        ,  65, N'Help';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Help_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Help_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:37 AM.
print 'TERMINOLOGY Home en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'ERR_ONE_CHAR'                                  , N'en-US', N'Home', null, null, N'Please provide text to search.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADD_DASHLETS'                              , N'en-US', N'Home', null, null, N'Add Dashlets';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADD_NEW_DASHLETS'                          , N'en-US', N'Home', null, null, N'Add New Dashlets';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CLOSE_DASHLETS'                            , N'en-US', N'Home', null, null, N'Close Dashlets';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PIPELINE_FORM_TITLE'                       , N'en-US', N'Home', null, null, N'My Pipeline';
-- 07/31/2017 Paul.  Add My Team dashlets. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MY_TEAM_PIPELINE'                          , N'en-US', N'Home', null, null, N'My Team Pipeline';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REMOVE_DASHLET_CONFIRM'                    , N'en-US', N'Home', null, null, N'Are you sure?';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SEARCH_RESULTS'                            , N'en-US', N'Home', null, null, N'Search Results';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEAM_NOTICES_TITLE'                        , N'en-US', N'Home', null, null, N'Team Notices';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_ACCOUNT'                               , N'en-US', N'Home', null, null, N'Create Account';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_BUG'                                   , N'en-US', N'Home', null, null, N'Create Bug';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_CALL'                                  , N'en-US', N'Home', null, null, N'Create Call';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_CASE'                                  , N'en-US', N'Home', null, null, N'Create Case';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_CONTACT'                               , N'en-US', N'Home', null, null, N'Create Contact';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_EMAIL'                                 , N'en-US', N'Home', null, null, N'Create Email';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_LEAD'                                  , N'en-US', N'Home', null, null, N'Create Lead';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_MEETING'                               , N'en-US', N'Home', null, null, N'Create Meeting';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_NOTE'                                  , N'en-US', N'Home', null, null, N'Create Note';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_OPPORTUNITY'                           , N'en-US', N'Home', null, null, N'Create Opportunity';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_SEND_EMAIL'                            , N'en-US', N'Home', null, null, N'Create Send Email';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_TASK'                                  , N'en-US', N'Home', null, null, N'Create Task';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'Home', null, null, N'Hom';
-- 06/14/2017 Paul.  Add Home/My Dashboard. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FORM_TITLE'                           , N'en-US', N'Home', null, null, N'Home';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_FORM_TITLE'                            , N'en-US', N'Home', null, null, N'Create Dashboard';
GO
/* -- #if Oracle
	COMMIT WORK;
END;
/

BEGIN
-- #endif Oracle */
exec dbo.spTERMINOLOGY_InsertOnly N'Home'                                          , N'en-US', null, N'moduleList'                        ,   1, N'Home';
exec dbo.spTERMINOLOGY_InsertOnly N'Home'                                          , N'en-US', null, N'moduleListSingular'                ,   1, N'Home';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Home_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Home_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:37 AM.
print 'TERMINOLOGY Import en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'ERR_DUPLICATE_FIELDS'                          , N'en-US', N'Import', null, null, N'Duplicate Fields.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_MISSING_REQUIRED_FIELDS'                   , N'en-US', N'Import', null, null, N'Missing Required Fields.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_MULTIPLE'                                  , N'en-US', N'Import', null, null, N'Multiple columns defined.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ACCOUNTS_NOTE_1'                           , N'en-US', N'Import', null, null, N'Account Name must be mapped.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ACCOUNTS_NOTE_2'                           , N'en-US', N'Import', null, null, N'Street fields are combined into a single field.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ACT'                                       , N'en-US', N'Import', null, null, N'Act!';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ACT_2005'                                  , N'en-US', N'Import', null, null, N'Act! 2005';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_AVAILABLE_COLUMNS'                         , N'en-US', N'Import', null, null, N'Available Columns';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CONTACTS_NOTE_1'                           , N'en-US', N'Import', null, null, N'Either Last Name or Full Name must be mapped.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CONTACTS_NOTE_2'                           , N'en-US', N'Import', null, null, N'First and Last are ignored if Full Name is mapped.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CONTACTS_NOTE_3'                           , N'en-US', N'Import', null, null, N'The Full Name will be split into First and Last.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CONTACTS_NOTE_4'                           , N'en-US', N'Import', null, null, N'Street fields are combined into a single field.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CUSTOM'                                    , N'en-US', N'Import', null, null, N'Custom';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CUSTOM_CSV'                                , N'en-US', N'Import', null, null, N'Comma Delimited File';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CUSTOM_DELIMETED'                          , N'en-US', N'Import', null, null, N'Custom Delimited File';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CUSTOM_DELIMETER'                          , N'en-US', N'Import', null, null, N'Custom Delimter:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CUSTOM_TAB'                                , N'en-US', N'Import', null, null, N'Tab Delimited File';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DATABASE_FIELD'                            , N'en-US', N'Import', null, null, N'Database Field';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DBASE'                                     , N'en-US', N'Import', null, null, N'dBase';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DONT_MAP'                                  , N'en-US', N'Import', null, null, N'-- Do not map this field --';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DUPLICATE_FILTER'                          , N'en-US', N'Import', null, null, N'Duplicate Filter';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DUPLICATES_IGNORED'                        , N'en-US', N'Import', null, null, N'Duplicates Ignored';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ERROR'                                     , N'en-US', N'Import', null, null, N'Error:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EXCEL'                                     , N'en-US', N'Import', null, null, N'Excel Workbook (2003 or later)';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FAIL'                                      , N'en-US', N'Import', null, null, N'Fail:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FAILED_IMPORT'                             , N'en-US', N'Import', null, null, N'Failed Import';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FILTER_COLUMNS'                            , N'en-US', N'Import', null, null, N'Filter Columns';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_HAS_HEADER'                                , N'en-US', N'Import', null, null, N'Has Header:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_HEADER_ROW'                                , N'en-US', N'Import', null, null, N'Header Row';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_ACT_TITLE'                          , N'en-US', N'Import', null, null, N'An ACT! backup zip file can imported directly.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_CUSTOM_TITLE'                       , N'en-US', N'Import', null, null, N'Comma delimited files can be imported with, or without a header.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_DBASE'                              , N'en-US', N'Import', null, null, N'dBase files can be imported directly.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_DBASE_TITLE'                        , N'en-US', N'Import', null, null, N'dBase Import';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_EXCEL_TITLE'                        , N'en-US', N'Import', null, null, N'An Excel spreadsheet can only be import if it is on the first worksheet and must start at cell A1.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_SF_TITLE'                           , N'en-US', N'Import', null, null, N'To import Salesforce data, you will first need to export as comma-separated variable.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_STEP_DUPLICATE_FILTER'              , N'en-US', N'Import', null, null, N'Duplicate Filter';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_STEP_MAP_FIELDS'                    , N'en-US', N'Import', null, null, N'Map Fields';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_STEP_RESULTS'                       , N'en-US', N'Import', null, null, N'Results';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_STEP_SELECT_SOURCE'                 , N'en-US', N'Import', null, null, N'Select Source';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_STEP_SPECIFY_DEFAULTS'              , N'en-US', N'Import', null, null, N'Specify Defaults';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_STEP_UPLOAD_FILE'                   , N'en-US', N'Import', null, null, N'Upload File';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_STEP_BUSINESS_RULES'                , N'en-US', N'Import', null, null, N'Business Rules';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_TAB_TITLE'                          , N'en-US', N'Import', null, null, N'Tab delimited files can be imported with, or without a header.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_XML_SPREADSHEET_TITLE'              , N'en-US', N'Import', null, null, N'An Excel spreadsheet saved as an XML Spreadsheet can only be imported if it is the first worksheet and must start at cell A1.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_XML_TITLE'                          , N'en-US', N'Import', null, null, N'The format of the XML should have a node for the module and a node for the field.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORTED'                                  , N'en-US', N'Import', null, null, N'Imported';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LAST_IMPORTED'                             , N'en-US', N'Import', null, null, N'Last Imported';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_NAME'                                 , N'en-US', N'Import', null, null, N'Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAX_ERRORS'                                , N'en-US', N'Import', null, null, N'Import stopped after too many errors';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE'                                    , N'en-US', N'Import', null, null, N'Module:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_NAME'                               , N'en-US', N'Import', null, null, N'Import';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'Import', null, null, N'Imp';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MY_SAVED'                                  , N'en-US', N'Import', null, null, N'My Saved Sources:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NAME'                                      , N'en-US', N'Import', null, null, N'Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NOTES'                                     , N'en-US', N'Import', null, null, N'Notes:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NOTHING'                                   , N'en-US', N'Import', null, null, N'Nothing to import.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OPPORTUNITIES_NOTE_1'                      , N'en-US', N'Import', null, null, N'Opportunity Name, Account Name, Date Closed and Sales Stage are all required fields.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PREVIEW_BUTTON_LABEL'                      , N'en-US', N'Import', null, null, N'Preview';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PREVIEW_BUTTON_TITLE'                      , N'en-US', N'Import', null, null, N'Preview';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ROW'                                       , N'en-US', N'Import', null, null, N'Row';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ROW_STATUS'                                , N'en-US', N'Import', null, null, N'Row Status';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RUN_BUTTON_LABEL'                          , N'en-US', N'Import', null, null, N'Import Now';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RUN_BUTTON_TITLE'                          , N'en-US', N'Import', null, null, N'Import Now';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SAVE_BUTTON_LABEL'                         , N'en-US', N'Import', null, null, N'Save';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SAVE_BUTTON_TITLE'                         , N'en-US', N'Import', null, null, N'Save';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SELECT_FIELDS_TO_MAP'                      , N'en-US', N'Import', null, null, N'Select Fields To Map:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SELECT_FILE'                               , N'en-US', N'Import', null, null, N'Select File:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SUCCESS'                                   , N'en-US', N'Import', null, null, N'Success:';
-- 01/11/2016 Paul.  Fix spelling of Successfully. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SUCCESSFULLY'                              , N'en-US', N'Import', null, null, N'Successfully Imported';
update TERMINOLOGY
   set DISPLAY_NAME      = 'Successfully Imported'
     , DATE_MODIFIED     = getdate()
     , DATE_MODIFIED_UTC = getutcdate()
 where NAME              = 'LBL_SUCCESSFULLY'
   and DISPLAY_NAME      = 'Succesfully Imported'
   and DELETED           = 0;

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TAB'                                       , N'en-US', N'Import', null, null, N'Tab Delimited File';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UPLOAD_BUTTON_LABEL'                       , N'en-US', N'Import', null, null, N'Upload';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UPLOAD_BUTTON_TITLE'                       , N'en-US', N'Import', null, null, N'Upload';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_USE_TRANSACTION'                           , N'en-US', N'Import', null, null, N'Use transaction across all records:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_WHAT_IS'                                   , N'en-US', N'Import', null, null, N'What is the source?';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_XML'                                       , N'en-US', N'Import', null, null, N'Xml';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_XML_SPREADSHEET'                           , N'en-US', N'Import', null, null, N'Excel XML Spreadsheet';

-- 04/08/2012 Paul.  Allow import of LinkedIn data. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_STEP_CONNECT'                       , N'en-US', N'Import', null, null, N'Connect';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SIGNIN_BUTTON_LABEL'                       , N'en-US', N'Import', null, null, N'Sign In';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SIGNIN_BUTTON_TITLE'                       , N'en-US', N'Import', null, null, N'Sign In';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SIGNOUT_BUTTON_LABEL'                      , N'en-US', N'Import', null, null, N'Sign Out';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SIGNOUT_BUTTON_TITLE'                      , N'en-US', N'Import', null, null, N'Sign Out';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CONNECT_BUTTON_LABEL'                      , N'en-US', N'Import', null, null, N'Connect';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CONNECT_BUTTON_TITLE'                      , N'en-US', N'Import', null, null, N'Connect';

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LINKEDIN'                                  , N'en-US', N'Import', null, null, N'LinkedIn &reg;';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_LINKEDIN_TITLE'                     , N'en-US', N'Import', null, null, N'You will first need to sign-in to LinkedIn &reg; in order to connect and retrieve the connections.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TWITTER'                                   , N'en-US', N'Import', null, null, N'Twitter &reg;';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_TWITTER_TITLE'                      , N'en-US', N'Import', null, null, N'You will first need to sign-in to Twitter &reg; in order to connect and retrieve the connections.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FACEBOOK'                                  , N'en-US', N'Import', null, null, N'facebook &reg;';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_FACEBOOK_TITLE'                     , N'en-US', N'Import', null, null, N'You will first need to sign-in to facebook &reg; in order to connect and retrieve the connections.';

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SALESFORCE'                                , N'en-US', N'Import', null, null, N'Salesforce.com &reg;';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_SALESFORCE_TITLE'                   , N'en-US', N'Import', null, null, N'You will first need to sign-in to Salesforce.com &reg; in order to connect and retrieve the connections.';

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_QUICKBOOKS'                                , N'en-US', N'Import', null, null, N'QuickBooks &reg;';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_QUICKBOOKS_TITLE'                   , N'en-US', N'Import', null, null, N'In order to sync with QuickBooks, you install RSSBus ADO.NET Data Provider for QuickBooks on the computer running QuickBooks.';
-- 06/03/2014 Paul.  QuickBooks Online is going to use a different API than standard QuickBooks. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_QUICKBOOKS_ONLINE'                         , N'en-US', N'Import', null, null, N'QuickBooks &reg; Online';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_QUICKBOOKS_ONLINE'                  , N'en-US', N'Import', null, null, N'You will first need to sign-in to QuickBooks &reg; in order to connect and retreive data.';

-- 09/06/2012 Paul.  Allow direct import into prospect list. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_INTO'                               , N'en-US', N'Import', null, null, N'Import into {0}';
-- 08/15/2017 Paul.  Provide a way to export errors. 
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_EXPORT_ERRORS'                             , N'en-US', N'Import', null, null, N'Export Errors';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_NO_ERRORS'                                 , N'en-US', N'Import', null, null, N'No errors were found.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_NO_PROCESSED_TABLE'                        , N'en-US', N'Import', null, null, N'No processed table found in temp file.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_NO_PROCESSED_FILE'                         , N'en-US', N'Import', null, null, N'No process file was found.';
GO
/* -- #if Oracle
	COMMIT WORK;
END;
/

BEGIN
-- #endif Oracle */
exec dbo.spTERMINOLOGY_InsertOnly N'Import'                                        , N'en-US', null, N'moduleList'                        ,  64, N'Import';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Import_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Import_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:38 AM.
print 'TERMINOLOGY Languages en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ACTIVE'                                    , N'en-US', N'Languages', null, null, N'Active:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DISPLAY_NAME'                              , N'en-US', N'Languages', null, null, N'Display Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LCID'                                      , N'en-US', N'Languages', null, null, N'LCID:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ACTIVE'                               , N'en-US', N'Languages', null, null, N'Active';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DISPLAY_NAME'                         , N'en-US', N'Languages', null, null, N'Display Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_LCID'                                 , N'en-US', N'Languages', null, null, N'LCID';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_NAME'                                 , N'en-US', N'Languages', null, null, N'Language';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_NATIVE_NAME'                          , N'en-US', N'Languages', null, null, N'Native Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NAME'                                      , N'en-US', N'Languages', null, null, N'Language:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NATIVE_NAME'                               , N'en-US', N'Languages', null, null, N'Native Name:';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'Languages', null, null, N'Lan';

-- 02/03/2021 Paul.  The React client requires the title. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FORM_TITLE'                           , N'en-US', N'Languages', null, null, N'Languages';
GO

exec dbo.spTERMINOLOGY_InsertOnly N'Languages'                                     , N'en-US', null, N'moduleList'         , 104, N'Languages';
GO

set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Languages_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Languages_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:38 AM.
print 'TERMINOLOGY Merge en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CHANGE_PARENT'                             , N'en-US', N'Merge', null, null, N'Set As Primary';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DIFF_COL_VALUES'                           , N'en-US', N'Merge', null, null, N'Diff Col Values:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MERGE_RECORDS_WITH'                        , N'en-US', N'Merge', null, null, N'Merge Records With';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REMOVE_FROM_MERGE'                         , N'en-US', N'Merge', null, null, N'Remove From Merge';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SAME_COL_VALUES'                           , N'en-US', N'Merge', null, null, N'Same Col Values:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SAVE_MERGED_RECORD_BUTTON_LABEL'           , N'en-US', N'Merge', null, null, N'Save Merged Record';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SAVE_MERGED_RECORD_BUTTON_TITLE'           , N'en-US', N'Merge', null, null, N'Save Merged Record';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SELECT_ERROR'                              , N'en-US', N'Merge', null, null, N'Select Error';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Merge_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Merge_en_us')
/
-- #endif IBM_DB2 */


print 'TERMINOLOGY ModuleBuilder en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SELECT_TEMPLATE_LABEL' , N'en-US', N'ModuleBuilder', null, null, N'Select from Template';
GO

set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_ModuleBuilder_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_ModuleBuilder_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:38 AM.
print 'TERMINOLOGY ModuleBuilder en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CREATE_CODE_BEHIND'                        , N'en-US', N'ModuleBuilder', null, null, N'Code-Behind:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CREATE_CODE_BEHIND_INSTRUCTIONS'           , N'en-US', N'ModuleBuilder', null, null, N'Generate code-behind files and require a rebuild to deploy.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CUSTOM_ENABLED'                            , N'en-US', N'ModuleBuilder', null, null, N'Custom Enabled:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CUSTOM_ENABLED_INSTRUCTIONS'               , N'en-US', N'ModuleBuilder', null, null, N'Can custom fields be added to the module?';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DISPLAY_NAME'                              , N'en-US', N'ModuleBuilder', null, null, N'Display Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DISPLAY_NAME_INSTRUCTIONS'                 , N'en-US', N'ModuleBuilder', null, null, N'The display name can contain spaces.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_GENERATE_BUTTON_LABEL'                     , N'en-US', N'ModuleBuilder', null, null, N'Generate';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_GENERATE_BUTTON_TITLE'                     , N'en-US', N'ModuleBuilder', null, null, N'Generate';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_ENABLED'                            , N'en-US', N'ModuleBuilder', null, null, N'Import Enabled:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_ENABLED_INSTRUCTIONS'               , N'en-US', N'ModuleBuilder', null, null, N'Can data be imported into the module?';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_INCLUDE_ASSIGNED_USER_ID'                  , N'en-US', N'ModuleBuilder', null, null, N'Include Assigned User ID:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_INCLUDE_ASSIGNED_USER_ID_INSTRUCTIONS'     , N'en-US', N'ModuleBuilder', null, null, N'Should the ASSIGNED_USER_ID field be added to the table?';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_INCLUDE_TEAM_ID'                           , N'en-US', N'ModuleBuilder', null, null, N'Include Team ID:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_INCLUDE_TEAM_ID_INSTRUCTIONS'              , N'en-US', N'ModuleBuilder', null, null, N'Should the TEAM_ID field be added to the table?';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IS_ADMIN'                                  , N'en-US', N'ModuleBuilder', null, null, N'Is Admin:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IS_ADMIN_INSTRUCTIONS'                     , N'en-US', N'ModuleBuilder', null, null, N'Does this module belong in the Administration area?';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DATA_TYPE'                            , N'en-US', N'ModuleBuilder', null, null, N'Data Type';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_EDIT_LABEL'                           , N'en-US', N'ModuleBuilder', null, null, N'Edit Label';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FIELD_NAME'                           , N'en-US', N'ModuleBuilder', null, null, N'Field Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FORM_TITLE'                           , N'en-US', N'ModuleBuilder', null, null, N'Module Builder';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_LIST_LABEL'                           , N'en-US', N'ModuleBuilder', null, null, N'List Label';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MAX_SIZE'                             , N'en-US', N'ModuleBuilder', null, null, N'Max Size';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_REQUIRED'                             , N'en-US', N'ModuleBuilder', null, null, N'Required';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MOBILE_ENABLED'                            , N'en-US', N'ModuleBuilder', null, null, N'Mobile Enabled:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MOBILE_ENABLED_INSTRUCTIONS'               , N'en-US', N'ModuleBuilder', null, null, N'Should the module appear on mobile devices?';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_BUILDER_DISABLED'                   , N'en-US', N'ModuleBuilder', null, null, N'The Module Builder has been disabled in the Web.config.';
-- 03/05/2011 Paul.  LBL_MODULE_NAME is a reserved name, so just use LBL_NAME. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NAME'                                      , N'en-US', N'ModuleBuilder', null, null, N'Module Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_NAME'                               , N'en-US', N'ModuleBuilder', null, null, N'Module Builder';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'ModuleBuilder', null, null, N'MB';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_NAME_INSTRUCTIONS'                  , N'en-US', N'ModuleBuilder', null, null, N'The module name should be a valid folder name, so it should not contain spaces.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OVERWRITE_EXISTING'                        , N'en-US', N'ModuleBuilder', null, null, N'Overwrite Existing:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OVERWRITE_EXISTING_INSTRUCTIONS'           , N'en-US', N'ModuleBuilder', null, null, N'Should existing files be over-written?  Read-only files will still be preserved.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REPORT_ENABLED'                            , N'en-US', N'ModuleBuilder', null, null, N'Report Enabled:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REPORT_ENABLED_INSTRUCTIONS'               , N'en-US', N'ModuleBuilder', null, null, N'Can reports be generated for the module?';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TAB_ENABLED'                               , N'en-US', N'ModuleBuilder', null, null, N'Tab Enabled:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TAB_ENABLED_INSTRUCTIONS'                  , N'en-US', N'ModuleBuilder', null, null, N'Should the module appear on the tab menu?';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TABLE_NAME'                                , N'en-US', N'ModuleBuilder', null, null, N'Table Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TABLE_NAME_INSTRUCTIONS'                   , N'en-US', N'ModuleBuilder', null, null, N'The table name cannot contain spaces or dashes, so they are replaces with underscores.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_WIZARD_STEP1'                              , N'en-US', N'ModuleBuilder', null, null, N'Module Definition';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_WIZARD_STEP2'                              , N'en-US', N'ModuleBuilder', null, null, N'Fields';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_WIZARD_STEP3'                              , N'en-US', N'ModuleBuilder', null, null, N'Related Modules';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_WIZARD_STEP4'                              , N'en-US', N'ModuleBuilder', null, null, N'Generation';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULEBUILDER'                             , N'en-US', N'ModuleBuilder', null, null, N'Module Builder';
-- 09/12/2011 Paul.  REST_ENABLED provides a way to enable/disable a module in the REST API. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REST_ENABLED'                              , N'en-US', N'ModuleBuilder', null, null, N'REST Enabled:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REST_ENABLED_INSTRUCTIONS'                 , N'en-US', N'ModuleBuilder', null, null, N'Is this module accessible via the REST API?';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REACT_ONLY'                                , N'en-US', N'ModuleBuilder', null, null, N'REACT Only:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REACT_ONLY_INSTRUCTIONS'                   , N'en-US', N'ModuleBuilder', null, null, N'Build only for REACT Client.  No ASP.NET files will be created.';
GO

exec dbo.spTERMINOLOGY_InsertOnly N'ModuleBuilder'                                 , N'en-US', null, N'moduleList'         , 103, N'Module Builder';
GO

set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_ModuleBuilder_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_ModuleBuilder_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:38 AM.
print 'TERMINOLOGY Modules en-us';
GO

set nocount on;
GO

-- 06/18/2011 Paul.  REST_ENABLED provides a way to enable/disable a module in the REST API. 
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_MODULE_NOT_FOUND'                          , N'en-US', N'Modules', null, null, N'Module Not Found.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CUSTOM_ENABLED'                            , N'en-US', N'Modules', null, null, N'Custom Enabled:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CUSTOM_PAGING'                             , N'en-US', N'Modules', null, null, N'Custom Paging:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CUSTOM_PAGING_DISABLED'                    , N'en-US', N'Modules', null, null, N'Custom Paging is disabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CUSTOM_PAGING_ENABLED'                     , N'en-US', N'Modules', null, null, N'Custom Paging is enabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DEFAULT_SEARCH_ENABLED'                    , N'en-US', N'Modules', null, null, N'Default Search:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DISABLE'                                   , N'en-US', N'Modules', null, null, N'Disable Paging';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DISPLAY_NAME'                              , N'en-US', N'Modules', null, null, N'Display Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ENABLE'                                    , N'en-US', N'Modules', null, null, N'Enable Paging';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EXCHANGE_CREATE_PARENT'                    , N'en-US', N'Modules', null, null, N'Exchange Create Parent:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EXCHANGE_FOLDERS'                          , N'en-US', N'Modules', null, null, N'Exchange Folders:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EXCHANGE_SYNC'                             , N'en-US', N'Modules', null, null, N'Exchange Sync:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_ENABLED'                            , N'en-US', N'Modules', null, null, N'Import Enabled:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IS_ADMIN'                                  , N'en-US', N'Modules', null, null, N'Is Admin:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_CUSTOM_ENABLED'                       , N'en-US', N'Modules', null, null, N'Custom Enabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_CUSTOM_PAGING'                        , N'en-US', N'Modules', null, null, N'Custom Paging';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DEFAULT_SEARCH_ENABLED'               , N'en-US', N'Modules', null, null, N'Default Search';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DISPLAY_NAME'                         , N'en-US', N'Modules', null, null, N'Display Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_EXCHANGE_CREATE_PARENT'               , N'en-US', N'Modules', null, null, N'Create Parent';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_EXCHANGE_FOLDERS'                     , N'en-US', N'Modules', null, null, N'Exchange Folders';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_EXCHANGE_SYNC'                        , N'en-US', N'Modules', null, null, N'Exchange Sync';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FORM_TITLE'                           , N'en-US', N'Modules', null, null, N'Module List';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_IMPORT_ENABLED'                       , N'en-US', N'Modules', null, null, N'Import Enabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_IS_ADMIN'                             , N'en-US', N'Modules', null, null, N'Is Admin';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MASS_UPDATE_ENABLED'                  , N'en-US', N'Modules', null, null, N'Mass Update Enabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MOBILE_ENABLED'                       , N'en-US', N'Modules', null, null, N'Mobile Enabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MODULE_ENABLED'                       , N'en-US', N'Modules', null, null, N'Module Enabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MODULE_NAME'                          , N'en-US', N'Modules', null, null, N'Module Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_PORTAL_ENABLED'                       , N'en-US', N'Modules', null, null, N'Portal Enabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_RELATIVE_PATH'                        , N'en-US', N'Modules', null, null, N'Relative Path';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_REPORT_ENABLED'                       , N'en-US', N'Modules', null, null, N'Report Enabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_REST_ENABLED'                         , N'en-US', N'Modules', null, null, N'REST Enabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_SYNC_ENABLED'                         , N'en-US', N'Modules', null, null, N'Sync Enabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_TAB_ENABLED'                          , N'en-US', N'Modules', null, null, N'Tab Enabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_TAB_ORDER'                            , N'en-US', N'Modules', null, null, N'Tab Order';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_TABLE_NAME'                           , N'en-US', N'Modules', null, null, N'Table Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MASS_UPDATE_ENABLED'                       , N'en-US', N'Modules', null, null, N'Mass Update Enabled:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MOBILE_ENABLED'                            , N'en-US', N'Modules', null, null, N'Mobile Enabled:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ENABLED'                            , N'en-US', N'Modules', null, null, N'Module Enabled:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_NAME'                               , N'en-US', N'Modules', null, null, N'Module Name:';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'Modules', null, null, N'Mod';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PORTAL_ENABLED'                            , N'en-US', N'Modules', null, null, N'Portal Enabled:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RELATIVE_PATH'                             , N'en-US', N'Modules', null, null, N'Relative Path:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REPORT_ENABLED'                            , N'en-US', N'Modules', null, null, N'Report Enabled:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REST_ENABLED'                              , N'en-US', N'Modules', null, null, N'REST Enabled:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SYNC_ENABLED'                              , N'en-US', N'Modules', null, null, N'Sync Enabled:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TAB_ENABLED'                               , N'en-US', N'Modules', null, null, N'Tab Enabled:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TAB_ORDER'                                 , N'en-US', N'Modules', null, null, N'Tab Order:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TABLE_NAME'                                , N'en-US', N'Modules', null, null, N'Table Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_MODULE_LIST'                               , N'en-US', N'Modules', null, null, N'Modules';
exec dbo.spTERMINOLOGY_InsertOnly N'Modules.ERR_MODULE_NOT_FOUND'                  , N'en-US', N'Modules', null, null, N'Modules.err Module Not Found';

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_FORM_TITLE'                            , N'en-US', N'Modules', null, null, N'Create Module';

-- 03/14/2014 Paul.  DUPLICATE_CHECHING_ENABLED enables duplicate checking. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DUPLICATE_CHECHING_ENABLED'                , N'en-US', N'Modules', null, null, N'Duplicate Checking Enabled:';
-- 09/26/2017 Paul.  Add Archive access right. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BUILD_ARCHIVE_TABLE'                       , N'en-US', N'Modules', null, null, N'Build Archive Table';
-- 11/01/2017 Paul.  Use a module-based flag so that Record Level Security is only enabled when needed. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RECORD_LEVEL_SECURITY_ENABLED'             , N'en-US', N'Modules', null, null, N'Record Level Security Enabled:';
-- 07/06/2021 Paul.  Provide an quick and easy way to enable/disable React client. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REACT_CLIENT_ENABLE'                       , N'en-US', N'Modules', null, null, N'Enable React';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REACT_CLIENT_IS_ENABLED'                   , N'en-US', N'Modules', null, null, N'React Client is Enabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REACT_CLIENT_DISABLE'                      , N'en-US', N'Modules', null, null, N'Disable React';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REACT_CLIENT_IS_DISABLED'                  , N'en-US', N'Modules', null, null, N'React Client is Disabled';

GO
/* -- #if Oracle
	COMMIT WORK;
END;
/

BEGIN
-- #endif Oracle */
exec dbo.spTERMINOLOGY_InsertOnly N'Modules'                                       , N'en-US', null, N'moduleList'                        ,  81, N'Modules';

exec dbo.spTERMINOLOGY_InsertOnly N'Accounts'                                      , N'en-US', null, N'record_type_display'               ,   1, N'Account';
exec dbo.spTERMINOLOGY_InsertOnly N'Opportunities'                                 , N'en-US', null, N'record_type_display'               ,   2, N'Opportunity';
exec dbo.spTERMINOLOGY_InsertOnly N'Cases'                                         , N'en-US', null, N'record_type_display'               ,   3, N'Case';
exec dbo.spTERMINOLOGY_InsertOnly N'Leads'                                         , N'en-US', null, N'record_type_display'               ,   4, N'Lead';
exec dbo.spTERMINOLOGY_InsertOnly N'Contacts'                                      , N'en-US', null, N'record_type_display'               ,   5, N'Contact';
exec dbo.spTERMINOLOGY_InsertOnly N'Bugs'                                          , N'en-US', null, N'record_type_display'               ,   6, N'Bug';
exec dbo.spTERMINOLOGY_InsertOnly N'Project'                                       , N'en-US', null, N'record_type_display'               ,   7, N'Project';
exec dbo.spTERMINOLOGY_InsertOnly N'ProjectTask'                                   , N'en-US', null, N'record_type_display'               ,   8, N'Project Task';
exec dbo.spTERMINOLOGY_InsertOnly N'Tasks'                                         , N'en-US', null, N'record_type_display'               ,   9, N'Task';
exec dbo.spTERMINOLOGY_InsertOnly N'Prospects'                                     , N'en-US', null, N'record_type_display'               ,  10, N'Target';
exec dbo.spTERMINOLOGY_InsertOnly N'Calls'                                         , N'en-US', null, N'record_type_display'               ,  11, N'Call';
exec dbo.spTERMINOLOGY_InsertOnly N'Users'                                         , N'en-US', null, N'record_type_display'               ,  12, N'User';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Modules_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Modules_en_us')
/
-- #endif IBM_DB2 */


print 'TERMINOLOGY OAuth en-us';
GO

set nocount on;
GO

-- delete from TERMINOLOGY where MODULE_NAME = 'OAuth';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEST_SUCCESSFUL'                           , N'en-US', N'OAuth', null, null, N'Connection successful.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEST_FAILED'                               , N'en-US', N'OAuth', null, null, N'Connection failed.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEST_BUTTON_LABEL'                         , N'en-US', N'OAuth', null, null, N'Test';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DELETE_BUTTON_LABEL'                       , N'en-US', N'OAuth', null, null, N'Delete';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_AUTHORIZE_BUTTON_LABEL'                    , N'en-US', N'OAuth', null, null, N'Authorize';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REFRESH_TOKEN_LABEL'                       , N'en-US', N'OAuth', null, null, N'Refresh Token';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_AUTHORIZED'                                , N'en-US', N'OAuth', null, null, N'Authorized';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_MISSING_AUTHORIZATION'                     , N'en-US', N'OAuth', null, null, N'An authorization token does not exist for service {0}';
-- 03/25/201 Paul.  React client displays an authorizing message.  
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_AUTHORIZING'                               , N'en-US', N'OAuth', null, null, N'Authorizing . . .';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TESTING'                                   , N'en-US', N'OAuth', null, null, N'Testing . . .';

GO

set nocount off;
GO

/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_OAuth_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_OAuth_en_us')
/
-- #endif IBM_DB2 */


print 'TERMINOLOGY PasswordManager en-us';
GO

set nocount on;
GO

-- delete from TERMINOLOGY where MODULE_NAME = 'PasswordManager';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PREFERRED_PASSWORD_LENGTH'                 , N'en-US', N'PasswordManager', null, null, N'Preferred Password Length:'   ;
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MINIMUM_LOWER_CASE_CHARACTERS'             , N'en-US', N'PasswordManager', null, null, N'Minimum LowerCase Characters:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MINIMUM_UPPER_CASE_CHARACTERS'             , N'en-US', N'PasswordManager', null, null, N'Minimum UpperCase Characters:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MINIMUM_NUMERIC_CHARACTERS'                , N'en-US', N'PasswordManager', null, null, N'Minimum Numeric Characters:'  ;
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MINIMUM_SYMBOL_CHARACTERS'                 , N'en-US', N'PasswordManager', null, null, N'Minimum Symbol Characters:'   ;
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SYMBOL_CHARACTERS'                         , N'en-US', N'PasswordManager', null, null, N'Symbol Characters:'           ;
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_COMPLEXITY_NUMBER'                         , N'en-US', N'PasswordManager', null, null, N'Complexity Number:'           ;
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_HISTORY_MAXIMUM'                           , N'en-US', N'PasswordManager', null, null, N'History Maximum:'             ;
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LOGIN_LOCKOUT_COUNT'                       , N'en-US', N'PasswordManager', null, null, N'Login Lockout Count:'         ;
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EXPIRATION_DAYS'                           , N'en-US', N'PasswordManager', null, null, N'Expiration Days:'             ;
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SYMBOL_CHARACTERS_DEFAULT'                 , N'en-US', N'PasswordManager', null, null, N'Default symbols:'             ;
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'PasswordManager', null, null, N'Pwd';
GO

exec dbo.spTERMINOLOGY_InsertOnly N'Password Manager'                              , N'en-US', null, N'moduleList', 104, N'PasswordManager';
GO

set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_PasswordManager_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_PasswordManager_en_us')
/
-- #endif IBM_DB2 */


print 'TERMINOLOGY QueryBuilder en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_NAME'                               , N'en-US', N'Reports', null, null, N'Module Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RELATED'                                   , N'en-US', N'Reports', null, null, N'Related:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FILTERS'                                   , N'en-US', N'Reports', null, null, N'Filters:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADD_FILTER_BUTTON_LABEL'                   , N'en-US', N'Reports', null, null, N'Add Filter';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SHOW_QUERY'                                , N'en-US', N'Reports', null, null, N'Show Query:';
GO

exec dbo.spTERMINOLOGY_InsertOnly N'equals'                                        , N'en-US', null, N'ansistring_operator_dom'           ,   1, N'Equals';
exec dbo.spTERMINOLOGY_InsertOnly N'contains'                                      , N'en-US', null, N'ansistring_operator_dom'           ,   2, N'Contains';
exec dbo.spTERMINOLOGY_InsertOnly N'starts_with'                                   , N'en-US', null, N'ansistring_operator_dom'           ,   3, N'Starts With';
exec dbo.spTERMINOLOGY_InsertOnly N'ends_with'                                     , N'en-US', null, N'ansistring_operator_dom'           ,   4, N'Ends With';
exec dbo.spTERMINOLOGY_InsertOnly N'not_equals_str'                                , N'en-US', null, N'ansistring_operator_dom'           ,   5, N'Does Not Equal';
exec dbo.spTERMINOLOGY_InsertOnly N'empty'                                         , N'en-US', null, N'ansistring_operator_dom'           ,   6, N'Is Empty';
exec dbo.spTERMINOLOGY_InsertOnly N'not_empty'                                     , N'en-US', null, N'ansistring_operator_dom'           ,   7, N'Is Not Empty';

exec dbo.spTERMINOLOGY_InsertOnly N'equals'                                        , N'en-US', null, N'bool_operator_dom'                 ,   1, N'Equals';
exec dbo.spTERMINOLOGY_InsertOnly N'empty'                                         , N'en-US', null, N'bool_operator_dom'                 ,   2, N'Is Empty';
exec dbo.spTERMINOLOGY_InsertOnly N'not_empty'                                     , N'en-US', null, N'bool_operator_dom'                 ,   3, N'Is Not Empty';

exec dbo.spTERMINOLOGY_InsertOnly N'on'                                            , N'en-US', null, N'datetime_operator_dom'             ,   1, N'On';
exec dbo.spTERMINOLOGY_InsertOnly N'before'                                        , N'en-US', null, N'datetime_operator_dom'             ,   2, N'Before';
exec dbo.spTERMINOLOGY_InsertOnly N'after'                                         , N'en-US', null, N'datetime_operator_dom'             ,   3, N'After';
exec dbo.spTERMINOLOGY_InsertOnly N'between_dates'                                 , N'en-US', null, N'datetime_operator_dom'             ,   4, N'Is Between';
exec dbo.spTERMINOLOGY_InsertOnly N'not_equals_str'                                , N'en-US', null, N'datetime_operator_dom'             ,   5, N'Does Not Equal';
exec dbo.spTERMINOLOGY_InsertOnly N'empty'                                         , N'en-US', null, N'datetime_operator_dom'             ,   6, N'Is Empty';
exec dbo.spTERMINOLOGY_InsertOnly N'not_empty'                                     , N'en-US', null, N'datetime_operator_dom'             ,   7, N'Is Not Empty';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_yesterday'                                  , N'en-US', null, N'datetime_operator_dom'             ,   8, N'Yesterday';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_today'                                      , N'en-US', null, N'datetime_operator_dom'             ,   9, N'Today';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_tomorrow'                                   , N'en-US', null, N'datetime_operator_dom'             ,  10, N'Tomorrow';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_last_7_days'                                , N'en-US', null, N'datetime_operator_dom'             ,  11, N'Last 7 Days';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_next_7_days'                                , N'en-US', null, N'datetime_operator_dom'             ,  12, N'Next 7 Days';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_last_month'                                 , N'en-US', null, N'datetime_operator_dom'             ,  13, N'Last Month';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_this_month'                                 , N'en-US', null, N'datetime_operator_dom'             ,  14, N'This Month';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_next_month'                                 , N'en-US', null, N'datetime_operator_dom'             ,  15, N'Next Month';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_last_30_days'                               , N'en-US', null, N'datetime_operator_dom'             ,  16, N'Last 30 Days';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_next_30_days'                               , N'en-US', null, N'datetime_operator_dom'             ,  17, N'Next 30 Days';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_last_year'                                  , N'en-US', null, N'datetime_operator_dom'             ,  18, N'Last Year';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_this_year'                                  , N'en-US', null, N'datetime_operator_dom'             ,  19, N'This Year';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_next_year'                                  , N'en-US', null, N'datetime_operator_dom'             ,  20, N'Next Year';
exec dbo.spTERMINOLOGY_InsertOnly N'is_before'                                     , N'en-US', null, N'datetime_operator_dom'             ,  21, N'Is Before';
exec dbo.spTERMINOLOGY_InsertOnly N'is_after'                                      , N'en-US', null, N'datetime_operator_dom'             ,  22, N'Is After';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_minutes_after'                              , N'en-US', null, N'datetime_operator_dom'             ,  23, N'Minutes After';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_hours_after'                                , N'en-US', null, N'datetime_operator_dom'             ,  24, N'Hours After';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_days_after'                                 , N'en-US', null, N'datetime_operator_dom'             ,  25, N'Days After';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_weeks_after'                                , N'en-US', null, N'datetime_operator_dom'             ,  26, N'Weeks After';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_months_after'                               , N'en-US', null, N'datetime_operator_dom'             ,  27, N'Months After';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_years_after'                                , N'en-US', null, N'datetime_operator_dom'             ,  28, N'Years After';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_minutes_before'                             , N'en-US', null, N'datetime_operator_dom'             ,  29, N'Minutes Before';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_hours_before'                               , N'en-US', null, N'datetime_operator_dom'             ,  30, N'Hours Before';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_days_before'                                , N'en-US', null, N'datetime_operator_dom'             ,  31, N'Days Before';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_weeks_before'                               , N'en-US', null, N'datetime_operator_dom'             ,  32, N'Weeks Before';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_months_before'                              , N'en-US', null, N'datetime_operator_dom'             ,  33, N'Months Before';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_years_before'                               , N'en-US', null, N'datetime_operator_dom'             ,  34, N'Years Before';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_days_old'                                   , N'en-US', null, N'datetime_operator_dom'             ,  35, N'Days Old';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_weeks_old'                                  , N'en-US', null, N'datetime_operator_dom'             ,  36, N'Weeks Old';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_months_old'                                 , N'en-US', null, N'datetime_operator_dom'             ,  37, N'Months Old';
exec dbo.spTERMINOLOGY_InsertOnly N'tp_years_old'                                  , N'en-US', null, N'datetime_operator_dom'             ,  38, N'Years Old';

exec dbo.spTERMINOLOGY_InsertOnly N'equals'                                        , N'en-US', null, N'decimal_operator_dom'              ,   1, N'Equals';
exec dbo.spTERMINOLOGY_InsertOnly N'less'                                          , N'en-US', null, N'decimal_operator_dom'              ,   2, N'Less Than';
exec dbo.spTERMINOLOGY_InsertOnly N'greater'                                       , N'en-US', null, N'decimal_operator_dom'              ,   3, N'Greater Than';
exec dbo.spTERMINOLOGY_InsertOnly N'between'                                       , N'en-US', null, N'decimal_operator_dom'              ,   4, N'Is Between';
exec dbo.spTERMINOLOGY_InsertOnly N'not_equals'                                    , N'en-US', null, N'decimal_operator_dom'              ,   5, N'Does Not Equal';
exec dbo.spTERMINOLOGY_InsertOnly N'empty'                                         , N'en-US', null, N'decimal_operator_dom'              ,   6, N'Is Empty';
exec dbo.spTERMINOLOGY_InsertOnly N'not_empty'                                     , N'en-US', null, N'decimal_operator_dom'              ,   7, N'Is Not Empty';

exec dbo.spTERMINOLOGY_InsertOnly N'tabular'                                       , N'en-US', null, N'dom_report_types'                  ,   1, N'Tabular';
exec dbo.spTERMINOLOGY_InsertOnly N'summary'                                       , N'en-US', null, N'dom_report_types'                  ,   2, N'Summary';
exec dbo.spTERMINOLOGY_InsertOnly N'detailed_summary'                              , N'en-US', null, N'dom_report_types'                  ,   3, N'Detailed Summary';
exec dbo.spTERMINOLOGY_InsertOnly N'Freeform'                                      , N'en-US', null, N'dom_report_types'                  ,   4, N'Freeform';

exec dbo.spTERMINOLOGY_InsertOnly N'is'                                            , N'en-US', null, N'enum_operator_dom'                 ,   1, N'Is';
exec dbo.spTERMINOLOGY_InsertOnly N'one_of'                                        , N'en-US', null, N'enum_operator_dom'                 ,   2, N'One Of';
exec dbo.spTERMINOLOGY_InsertOnly N'empty'                                         , N'en-US', null, N'enum_operator_dom'                 ,   3, N'Is Empty';
exec dbo.spTERMINOLOGY_InsertOnly N'not_empty'                                     , N'en-US', null, N'enum_operator_dom'                 ,   4, N'Is Not Empty';

exec dbo.spTERMINOLOGY_InsertOnly N'equals'                                        , N'en-US', null, N'float_operator_dom'                ,   1, N'Equals';
exec dbo.spTERMINOLOGY_InsertOnly N'less'                                          , N'en-US', null, N'float_operator_dom'                ,   2, N'Less Than';
exec dbo.spTERMINOLOGY_InsertOnly N'greater'                                       , N'en-US', null, N'float_operator_dom'                ,   3, N'Greater Than';
exec dbo.spTERMINOLOGY_InsertOnly N'between'                                       , N'en-US', null, N'float_operator_dom'                ,   4, N'Is Between';
exec dbo.spTERMINOLOGY_InsertOnly N'not_equals'                                    , N'en-US', null, N'float_operator_dom'                ,   5, N'Does Not Equal';
exec dbo.spTERMINOLOGY_InsertOnly N'empty'                                         , N'en-US', null, N'float_operator_dom'                ,   6, N'Is Empty';
exec dbo.spTERMINOLOGY_InsertOnly N'not_empty'                                     , N'en-US', null, N'float_operator_dom'                ,   7, N'Is Not Empty';

exec dbo.spTERMINOLOGY_InsertOnly N'is'                                            , N'en-US', null, N'guid_operator_dom'                 ,   1, N'Is';
exec dbo.spTERMINOLOGY_InsertOnly N'one_of'                                        , N'en-US', null, N'guid_operator_dom'                 ,   2, N'One Of';
exec dbo.spTERMINOLOGY_InsertOnly N'equals'                                        , N'en-US', null, N'guid_operator_dom'                 ,   3, N'Equals';
exec dbo.spTERMINOLOGY_InsertOnly N'contains'                                      , N'en-US', null, N'guid_operator_dom'                 ,   4, N'Contains';
exec dbo.spTERMINOLOGY_InsertOnly N'starts_with'                                   , N'en-US', null, N'guid_operator_dom'                 ,   5, N'Starts With';
exec dbo.spTERMINOLOGY_InsertOnly N'ends_with'                                     , N'en-US', null, N'guid_operator_dom'                 ,   6, N'Ends With';
exec dbo.spTERMINOLOGY_InsertOnly N'not_equals_str'                                , N'en-US', null, N'guid_operator_dom'                 ,   7, N'Does Not Equal';
exec dbo.spTERMINOLOGY_InsertOnly N'empty'                                         , N'en-US', null, N'guid_operator_dom'                 ,   8, N'Is Empty';
exec dbo.spTERMINOLOGY_InsertOnly N'not_empty'                                     , N'en-US', null, N'guid_operator_dom'                 ,   9, N'Is Not Empty';

exec dbo.spTERMINOLOGY_InsertOnly N'equals'                                        , N'en-US', null, N'int32_operator_dom'                ,   1, N'Equals';
exec dbo.spTERMINOLOGY_InsertOnly N'less'                                          , N'en-US', null, N'int32_operator_dom'                ,   2, N'Less Than';
exec dbo.spTERMINOLOGY_InsertOnly N'greater'                                       , N'en-US', null, N'int32_operator_dom'                ,   3, N'Greater Than';
exec dbo.spTERMINOLOGY_InsertOnly N'between'                                       , N'en-US', null, N'int32_operator_dom'                ,   4, N'Is Between';
exec dbo.spTERMINOLOGY_InsertOnly N'not_equals'                                    , N'en-US', null, N'int32_operator_dom'                ,   5, N'Does Not Equal';
exec dbo.spTERMINOLOGY_InsertOnly N'empty'                                         , N'en-US', null, N'int32_operator_dom'                ,   6, N'Is Empty';
exec dbo.spTERMINOLOGY_InsertOnly N'not_empty'                                     , N'en-US', null, N'int32_operator_dom'                ,   7, N'Is Not Empty';

exec dbo.spTERMINOLOGY_InsertOnly N''                                              , N'en-US', null, N'published_reports_dom'             ,   1, N'All Published Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Contacts'                                      , N'en-US', null, N'published_reports_dom'             ,   2, N'Published Contact Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Accounts'                                      , N'en-US', null, N'published_reports_dom'             ,   3, N'Published Account Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Opportunities'                                 , N'en-US', null, N'published_reports_dom'             ,   4, N'Published Opportunity Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Cases'                                         , N'en-US', null, N'published_reports_dom'             ,   5, N'Published Case Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Notes'                                         , N'en-US', null, N'published_reports_dom'             ,   6, N'Published Note Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Calls'                                         , N'en-US', null, N'published_reports_dom'             ,   7, N'Published Call Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Emails'                                        , N'en-US', null, N'published_reports_dom'             ,   8, N'Published Email Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Meetings'                                      , N'en-US', null, N'published_reports_dom'             ,   9, N'Published Meeting Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Tasks'                                         , N'en-US', null, N'published_reports_dom'             ,  10, N'Published Task Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Leads'                                         , N'en-US', null, N'published_reports_dom'             ,  11, N'Published Lead Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Bugs'                                          , N'en-US', null, N'published_reports_dom'             ,  12, N'Published Bug Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Quotes'                                        , N'en-US', null, N'published_reports_dom'             ,  13, N'Published Quote Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Contracts'                                     , N'en-US', null, N'published_reports_dom'             ,  15, N'Published Contract Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Orders'                                        , N'en-US', null, N'published_reports_dom'             ,  16, N'Published Order Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Invoices'                                      , N'en-US', null, N'published_reports_dom'             ,  17, N'Published Invoice Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'ProjectTask'                                   , N'en-US', null, N'published_reports_dom'             ,  18, N'Published Project Task Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Prospects'                                     , N'en-US', null, N'published_reports_dom'             ,  19, N'Published Target Reports';

exec dbo.spTERMINOLOGY_InsertOnly N''                                              , N'en-US', null, N'saved_reports_dom'                 ,   1, N'My Saved Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Contacts'                                      , N'en-US', null, N'saved_reports_dom'                 ,   2, N'My Contact Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Accounts'                                      , N'en-US', null, N'saved_reports_dom'                 ,   3, N'My Account Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Opportunities'                                 , N'en-US', null, N'saved_reports_dom'                 ,   4, N'My Opportunity Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Cases'                                         , N'en-US', null, N'saved_reports_dom'                 ,   5, N'My Case Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Notes'                                         , N'en-US', null, N'saved_reports_dom'                 ,   6, N'My Note Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Calls'                                         , N'en-US', null, N'saved_reports_dom'                 ,   7, N'My Call Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Emails'                                        , N'en-US', null, N'saved_reports_dom'                 ,   8, N'My Email Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Meetings'                                      , N'en-US', null, N'saved_reports_dom'                 ,   9, N'My Meeting Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Tasks'                                         , N'en-US', null, N'saved_reports_dom'                 ,  10, N'My Task Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Leads'                                         , N'en-US', null, N'saved_reports_dom'                 ,  11, N'My Lead Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Bugs'                                          , N'en-US', null, N'saved_reports_dom'                 ,  12, N'My Bug Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Quotes'                                        , N'en-US', null, N'saved_reports_dom'                 ,  13, N'My Quote Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Contracts'                                     , N'en-US', null, N'saved_reports_dom'                 ,  15, N'My Contract Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Orders'                                        , N'en-US', null, N'saved_reports_dom'                 ,  16, N'My Order Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Invoices'                                      , N'en-US', null, N'saved_reports_dom'                 ,  17, N'My Invoice Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'ProjectTask'                                   , N'en-US', null, N'saved_reports_dom'                 ,  18, N'My Project Task Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'Prospects'                                     , N'en-US', null, N'saved_reports_dom'                 ,  19, N'My Target Reports';

exec dbo.spTERMINOLOGY_InsertOnly N'equals'                                        , N'en-US', null, N'string_operator_dom'               ,   1, N'Equals';
exec dbo.spTERMINOLOGY_InsertOnly N'contains'                                      , N'en-US', null, N'string_operator_dom'               ,   2, N'Contains';
exec dbo.spTERMINOLOGY_InsertOnly N'starts_with'                                   , N'en-US', null, N'string_operator_dom'               ,   3, N'Starts With';
exec dbo.spTERMINOLOGY_InsertOnly N'ends_with'                                     , N'en-US', null, N'string_operator_dom'               ,   4, N'Ends With';
exec dbo.spTERMINOLOGY_InsertOnly N'not_equals_str'                                , N'en-US', null, N'string_operator_dom'               ,   5, N'Does Not Equal';
exec dbo.spTERMINOLOGY_InsertOnly N'empty'                                         , N'en-US', null, N'string_operator_dom'               ,   6, N'Is Empty';
exec dbo.spTERMINOLOGY_InsertOnly N'not_empty'                                     , N'en-US', null, N'string_operator_dom'               ,   7, N'Is Not Empty';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_QueryBuilder_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_QueryBuilder_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:42 AM.
print 'TERMINOLOGY Roles en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ALLOWED_MODULES'                           , N'en-US', N'Roles', null, null, N'Allowed Modules';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ASSIGN_MODULES'                            , N'en-US', N'Roles', null, null, N'Assign Modules';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DESCRIPTION'                               , N'en-US', N'Roles', null, null, N'Description';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DISALLOWED_MODULES'                        , N'en-US', N'Roles', null, null, N'Disallowed Modules';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DESCRIPTION'                          , N'en-US', N'Roles', null, null, N'Description';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FORM_TITLE'                           , N'en-US', N'Roles', null, null, N'Role List';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MODULES'                              , N'en-US', N'Roles', null, null, N'Modules';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_NAME'                                 , N'en-US', N'Roles', null, null, N'Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_NAME'                               , N'en-US', N'Roles', null, null, N'Roles';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'Roles', null, null, N'Rol';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULES'                                   , N'en-US', N'Roles', null, null, N'Modules:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NAME'                                      , N'en-US', N'Roles', null, null, N'Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ROLE'                                      , N'en-US', N'Roles', null, null, N'Role';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SEARCH_FORM_TITLE'                         , N'en-US', N'Roles', null, null, N'Search';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_ROLE'                                  , N'en-US', N'Roles', null, null, N'Create Role';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_ROLES'                                     , N'en-US', N'Roles', null, null, N'Roles';
GO
/* -- #if Oracle
	COMMIT WORK;
END;
/

BEGIN
-- #endif Oracle */
exec dbo.spTERMINOLOGY_InsertOnly N'Roles'                                         , N'en-US', null, N'moduleList'                        ,  23, N'Roles';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Roles_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Roles_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:42 AM.
print 'TERMINOLOGY SavedSearch en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ASCENDING'                                 , N'en-US', N'SavedSearch', null, null, N'Ascending';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DESCENDING'                                , N'en-US', N'SavedSearch', null, null, N'Descending';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DIRECTION'                                 , N'en-US', N'SavedSearch', null, null, N'Direction:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODIFY_CURRENT_SEARCH'                     , N'en-US', N'SavedSearch', null, null, N'Modify current search:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ORDER_BY_COLUMNS'                          , N'en-US', N'SavedSearch', null, null, N'Order By Column:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SAVE_SEARCH_AS'                            , N'en-US', N'SavedSearch', null, null, N'Save this search as:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SEARCH_AFTER'                              , N'en-US', N'SavedSearch', null, null, N'On or After:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SEARCH_BEFORE'                             , N'en-US', N'SavedSearch', null, null, N'Before:';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'SavedSearch', null, null, N'Sav';
GO
/* -- #if Oracle
	COMMIT WORK;
END;
/

BEGIN
-- #endif Oracle */
exec dbo.spTERMINOLOGY_InsertOnly N'SavedSearch'                                   , N'en-US', null, N'moduleList'                        ,  32, N'Saved Searches';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_SavedSearch_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_SavedSearch_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:42 AM.
print 'TERMINOLOGY Schedulers en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADV_OPTIONS'                               , N'en-US', N'Schedulers', null, null, N'Adv Options';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ALWAYS'                                    , N'en-US', N'Schedulers', null, null, N'Always';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_AND'                                       , N'en-US', N'Schedulers', null, null, N' and ';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BASIC_OPTIONS'                             , N'en-US', N'Schedulers', null, null, N'Basic Options';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CATCH_UP'                                  , N'en-US', N'Schedulers', null, null, N'Catch Up:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CATCH_UP_WARNING'                          , N'en-US', N'Schedulers', null, null, N'';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CRONTAB_EXAMPLES'                          , N'en-US', N'Schedulers', null, null, N'';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DATE_TIME_END'                             , N'en-US', N'Schedulers', null, null, N'Date & Time End:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DATE_TIME_START'                           , N'en-US', N'Schedulers', null, null, N'Date & Time Start:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DAY_OF_MONTH'                              , N'en-US', N'Schedulers', null, null, N'date';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DAY_OF_WEEK'                               , N'en-US', N'Schedulers', null, null, N'day';
-- 05/02/2016 Paul.  Add space to the end of the From term. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FROM'                                      , N'en-US', N'Schedulers', null, null, N'From ';
update TERMINOLOGY
   set DISPLAY_NAME      = 'From '
     , DATE_MODIFIED     = getdate()
     , DATE_MODIFIED_UTC = getutcdate()
 where NAME              = 'LBL_FROM'
   and LANG              = 'en-US'
   and '[' + DISPLAY_NAME + ']' = '[From]';

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_HOUR'                                      , N'en-US', N'Schedulers', null, null, N' hours';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_HOUR_SING'                                 , N'en-US', N'Schedulers', null, null, N' hour';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_HOURS'                                     , N'en-US', N'Schedulers', null, null, N'hrs';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DAYS'                                      , N'en-US', N'Schedulers', null, null, N'days';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SECONDS'                                   , N'en-US', N'Schedulers', null, null, N'seconds';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IN'                                        , N'en-US', N'Schedulers', null, null, N' in ';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_INTERVAL'                                  , N'en-US', N'Schedulers', null, null, N'Interval';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_JOB'                                       , N'en-US', N'Schedulers', null, null, N'Job:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_JOB_INTERVAL'                              , N'en-US', N'Schedulers', null, null, N'Job Interval:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LAST_RUN'                                  , N'en-US', N'Schedulers', null, null, N'Last Run:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_CATCH_UP'                             , N'en-US', N'Schedulers', null, null, N'Catch Up';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DATE_TIME_END'                        , N'en-US', N'Schedulers', null, null, N'Date & Time End';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DATE_TIME_START'                      , N'en-US', N'Schedulers', null, null, N'Date & Time Start';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_JOB'                                  , N'en-US', N'Schedulers', null, null, N'Job';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_JOB_INTERVAL'                         , N'en-US', N'Schedulers', null, null, N'Job Interval';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_LAST_RUN'                             , N'en-US', N'Schedulers', null, null, N'Last Run';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_NAME'                                 , N'en-US', N'Schedulers', null, null, N'Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_RANGE'                                , N'en-US', N'Schedulers', null, null, N'Range';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_STATUS'                               , N'en-US', N'Schedulers', null, null, N'Status';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_TIME_FROM'                            , N'en-US', N'Schedulers', null, null, N'Time From';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_TIME_TO'                              , N'en-US', N'Schedulers', null, null, N'Time To';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_TITLE'                                , N'en-US', N'Schedulers', null, null, N'Title';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MIN_MARK'                                  , N'en-US', N'Schedulers', null, null, N' minute mark';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MINS'                                      , N'en-US', N'Schedulers', null, null, N'min';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_TITLE'                              , N'en-US', N'Schedulers', null, null, N'Schedulers';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MON'                                       , N'en-US', N'Schedulers', null, null, N'Monday';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MONTH'                                     , N'en-US', N'Schedulers', null, null, N' month';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MONTHS'                                    , N'en-US', N'Schedulers', null, null, N'mo';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NAME'                                      , N'en-US', N'Schedulers', null, null, N'Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEVER'                                     , N'en-US', N'Schedulers', null, null, N'Never';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OFTEN'                                     , N'en-US', N'Schedulers', null, null, N' As often as possible.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ON_THE'                                    , N'en-US', N'Schedulers', null, null, N'On The';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PERENNIAL'                                 , N'en-US', N'Schedulers', null, null, N'perpetual';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RANGE'                                     , N'en-US', N'Schedulers', null, null, N' to ';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RUN'                                       , N'en-US', N'Schedulers', null, null, N'Run';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SCHEDULER'                                 , N'en-US', N'Schedulers', null, null, N'Scheduler:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_STATUS'                                    , N'en-US', N'Schedulers', null, null, N'Status:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TIME_FROM'                                 , N'en-US', N'Schedulers', null, null, N'Time From:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TIME_TO'                                   , N'en-US', N'Schedulers', null, null, N'Time To:';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_LIST_SCHEDULER'                            , N'en-US', N'Schedulers', null, null, N'Schedulers';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_SCHEDULER'                             , N'en-US', N'Schedulers', null, null, N'Create Scheduler';
-- 01/24/2012 Paul.  Missing terms. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CRONTAB_EXAMPLES'                          , N'en-US', N'Schedulers', null, null, N'CRONTAB Examples';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'Schedulers', null, null, N'Sch';
-- 10/30/2020 Paul.  The React Client requires LBL_LIST_FORM_TITLE. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FORM_TITLE'                           , N'en-US', N'Schedulers', null, null, N'Schedulers';
GO
/* -- #if Oracle
	COMMIT WORK;
END;
/

BEGIN
-- #endif Oracle */
exec dbo.spTERMINOLOGY_InsertOnly N'Schedulers'                                    , N'en-US', null, N'moduleList'                        ,  60, N'Schedulers';

exec dbo.spTERMINOLOGY_InsertOnly N'0'                                             , N'en-US', null, N'scheduler_day_dom'                 ,   0, N'Sunday';
exec dbo.spTERMINOLOGY_InsertOnly N'1'                                             , N'en-US', null, N'scheduler_day_dom'                 ,   1, N'Monday';
exec dbo.spTERMINOLOGY_InsertOnly N'2'                                             , N'en-US', null, N'scheduler_day_dom'                 ,   2, N'Tuesday';
exec dbo.spTERMINOLOGY_InsertOnly N'3'                                             , N'en-US', null, N'scheduler_day_dom'                 ,   3, N'Wednesday';
exec dbo.spTERMINOLOGY_InsertOnly N'4'                                             , N'en-US', null, N'scheduler_day_dom'                 ,   4, N'Thursday';
exec dbo.spTERMINOLOGY_InsertOnly N'5'                                             , N'en-US', null, N'scheduler_day_dom'                 ,   5, N'Friday';
exec dbo.spTERMINOLOGY_InsertOnly N'6'                                             , N'en-US', null, N'scheduler_day_dom'                 ,   6, N'Saturday';

exec dbo.spTERMINOLOGY_InsertOnly N'Daily'                                         , N'en-US', null, N'scheduler_frequency_dom'           ,   1, N'Daily';
exec dbo.spTERMINOLOGY_InsertOnly N'Weekly'                                        , N'en-US', null, N'scheduler_frequency_dom'           ,   2, N'Weekly';
exec dbo.spTERMINOLOGY_InsertOnly N'Monthly'                                       , N'en-US', null, N'scheduler_frequency_dom'           ,   3, N'Monthly';
exec dbo.spTERMINOLOGY_InsertOnly N'Yearly'                                        , N'en-US', null, N'scheduler_frequency_dom'           ,   4, N'Yearly';

exec dbo.spTERMINOLOGY_InsertOnly N'1'                                             , N'en-US', null, N'scheduler_month_dom'               ,   1, N'January';
exec dbo.spTERMINOLOGY_InsertOnly N'2'                                             , N'en-US', null, N'scheduler_month_dom'               ,   2, N'February';
exec dbo.spTERMINOLOGY_InsertOnly N'3'                                             , N'en-US', null, N'scheduler_month_dom'               ,   3, N'March';
exec dbo.spTERMINOLOGY_InsertOnly N'4'                                             , N'en-US', null, N'scheduler_month_dom'               ,   4, N'April';
exec dbo.spTERMINOLOGY_InsertOnly N'5'                                             , N'en-US', null, N'scheduler_month_dom'               ,   5, N'May';
exec dbo.spTERMINOLOGY_InsertOnly N'6'                                             , N'en-US', null, N'scheduler_month_dom'               ,   6, N'June';
exec dbo.spTERMINOLOGY_InsertOnly N'7'                                             , N'en-US', null, N'scheduler_month_dom'               ,   7, N'July';
exec dbo.spTERMINOLOGY_InsertOnly N'8'                                             , N'en-US', null, N'scheduler_month_dom'               ,   8, N'August';
exec dbo.spTERMINOLOGY_InsertOnly N'9'                                             , N'en-US', null, N'scheduler_month_dom'               ,   9, N'September';
exec dbo.spTERMINOLOGY_InsertOnly N'10'                                            , N'en-US', null, N'scheduler_month_dom'               ,  10, N'October';
exec dbo.spTERMINOLOGY_InsertOnly N'11'                                            , N'en-US', null, N'scheduler_month_dom'               ,  11, N'November';
exec dbo.spTERMINOLOGY_InsertOnly N'12'                                            , N'en-US', null, N'scheduler_month_dom'               ,  12, N'December';

exec dbo.spTERMINOLOGY_InsertOnly N'Active'                                        , N'en-US', null, N'scheduler_status_dom'              ,   1, N'Active';
exec dbo.spTERMINOLOGY_InsertOnly N'Inactive'                                      , N'en-US', null, N'scheduler_status_dom'              ,   2, N'Inactive';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Schedulers_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Schedulers_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:42 AM.
print 'TERMINOLOGY Shortcuts en-us';
GO

set nocount on;
GO

-- 03/28/2019 Paul.  Every module should have a LBL_NEW_FORM_TITLE. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_FORM_TITLE'                            , N'en-US', N'Shortcuts', null, null, N'Shortcuts';

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DISPLAY_NAME'                              , N'en-US', N'Shortcuts', null, null, N'Display Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMAGE_NAME'                                , N'en-US', N'Shortcuts', null, null, N'Image Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DISPLAY_NAME'                         , N'en-US', N'Shortcuts', null, null, N'Display Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FORM_TITLE'                           , N'en-US', N'Shortcuts', null, null, N'Shortcut List';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_IMAGE_NAME'                           , N'en-US', N'Shortcuts', null, null, N'Image Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MODULE_NAME'                          , N'en-US', N'Shortcuts', null, null, N'Module Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_RELATIVE_PATH'                        , N'en-US', N'Shortcuts', null, null, N'Relative Path';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_SHORTCUT_ACLTYPE'                     , N'en-US', N'Shortcuts', null, null, N'ACL Type';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_SHORTCUT_ENABLED'                     , N'en-US', N'Shortcuts', null, null, N'Enabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_SHORTCUT_MODULE'                      , N'en-US', N'Shortcuts', null, null, N'ACL Module';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_SHORTCUT_ORDER'                       , N'en-US', N'Shortcuts', null, null, N'Order';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_NAME'                               , N'en-US', N'Shortcuts', null, null, N'Module Name:';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'Shortcuts', null, null, N'Sho';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RELATIVE_PATH'                             , N'en-US', N'Shortcuts', null, null, N'Relative Path:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SHORTCUT_ACLTYPE'                          , N'en-US', N'Shortcuts', null, null, N'ACL Type:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SHORTCUT_ENABLED'                          , N'en-US', N'Shortcuts', null, null, N'Enabled:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SHORTCUT_MODULE'                           , N'en-US', N'Shortcuts', null, null, N'ACL Module:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SHORTCUT_ORDER'                            , N'en-US', N'Shortcuts', null, null, N'Order:';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_DOWN'                                      , N'en-US', N'Shortcuts', null, null, N'Down';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_SHORTCUT'                              , N'en-US', N'Shortcuts', null, null, N'Create Shortcut';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_SHORTCUT_LIST'                             , N'en-US', N'Shortcuts', null, null, N'Shortcuts';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_UP'                                        , N'en-US', N'Shortcuts', null, null, N'Up';
GO

exec dbo.spTERMINOLOGY_InsertOnly N'Shortcuts'                                     , N'en-US', null, N'moduleList'                        ,  66, N'Shortcuts';

-- 04/01/2019 Paul.  List needed for Admin API. 
exec dbo.spTERMINOLOGY_InsertOnly N'edit'                                          , N'en-US', null, N'shortcuts_acltype_dom'             ,   0, N'edit';
exec dbo.spTERMINOLOGY_InsertOnly N'list'                                          , N'en-US', null, N'shortcuts_acltype_dom'             ,   1, N'list';
exec dbo.spTERMINOLOGY_InsertOnly N'import'                                        , N'en-US', null, N'shortcuts_acltype_dom'             ,   2, N'import';
exec dbo.spTERMINOLOGY_InsertOnly N'view'                                          , N'en-US', null, N'shortcuts_acltype_dom'             ,   3, N'view';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Shortcuts_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Shortcuts_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:42 AM.
print 'TERMINOLOGY SystemLog en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ASPNET_SESSIONID'                          , N'en-US', N'SystemLog', null, null, N'ASP.NET Session ID:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ERROR_TYPE'                                , N'en-US', N'SystemLog', null, null, N'Error Type:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FILE_NAME'                                 , N'en-US', N'SystemLog', null, null, N'File Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LINE_NUMBER'                               , N'en-US', N'SystemLog', null, null, N'Line Number:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ASPNET_SESSIONID'                     , N'en-US', N'SystemLog', null, null, N'ASP.NET Session ID';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ERROR_TYPE'                           , N'en-US', N'SystemLog', null, null, N'Error Type';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FILE_NAME'                            , N'en-US', N'SystemLog', null, null, N'File Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_LINE_NUMBER'                          , N'en-US', N'SystemLog', null, null, N'Line Number';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MACHINE'                              , N'en-US', N'SystemLog', null, null, N'Machine';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MESSAGE'                              , N'en-US', N'SystemLog', null, null, N'Message';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_METHOD'                               , N'en-US', N'SystemLog', null, null, N'Method';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_PARAMETERS'                           , N'en-US', N'SystemLog', null, null, N'Parameters';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_RELATIVE_PATH'                        , N'en-US', N'SystemLog', null, null, N'Relative Path';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_REMOTE_HOST'                          , N'en-US', N'SystemLog', null, null, N'Remote Host';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_SERVER_HOST'                          , N'en-US', N'SystemLog', null, null, N'Server Host';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_TARGET'                               , N'en-US', N'SystemLog', null, null, N'Target';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_USER_ID'                              , N'en-US', N'SystemLog', null, null, N'User ID';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_USER_NAME'                            , N'en-US', N'SystemLog', null, null, N'User Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MACHINE'                                   , N'en-US', N'SystemLog', null, null, N'Machine:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MESSAGE'                                   , N'en-US', N'SystemLog', null, null, N'Message:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_METHOD'                                    , N'en-US', N'SystemLog', null, null, N'Method:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PARAMETERS'                                , N'en-US', N'SystemLog', null, null, N'Parameters:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RELATIVE_PATH'                             , N'en-US', N'SystemLog', null, null, N'Relative Path:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REMOTE_HOST'                               , N'en-US', N'SystemLog', null, null, N'Remote Host:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SERVER_HOST'                               , N'en-US', N'SystemLog', null, null, N'Server Host:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TARGET'                                    , N'en-US', N'SystemLog', null, null, N'Target:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_USER_ID'                                   , N'en-US', N'SystemLog', null, null, N'User ID:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_USER_NAME'                                 , N'en-US', N'SystemLog', null, null, N'User Name:';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'SystemLog', null, null, N'SyL';
-- 08/11/2020 Paul.  The React Client needs a LBL_LIST_FORM_TITLE. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FORM_TITLE'                           , N'en-US', N'SystemLog', null, null, N'System Log List';
-- 12/09/2020 Paul.  Every module should have a name. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NAME'                                      , N'en-US', N'SystemLog', null, null, N'Name:';

GO
/* -- #if Oracle
	COMMIT WORK;
END;
/

BEGIN
-- #endif Oracle */
exec dbo.spTERMINOLOGY_InsertOnly N'SystemLog'                                     , N'en-US', null, N'moduleList'                        ,  98, N'SystemLog';

exec dbo.spTERMINOLOGY_InsertOnly N'Warning'                                       , N'en-US', null, N'system_log_type_dom'               ,   1, N'Warning';
exec dbo.spTERMINOLOGY_InsertOnly N'Error'                                         , N'en-US', null, N'system_log_type_dom'               ,   2, N'Error';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_SystemLog_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_SystemLog_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:42 AM.
print 'TERMINOLOGY Teams en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'ERR_INVALID_TEAM'                              , N'en-US', N'Teams', null, null, N'Invalid Team.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_TEAM_NOT_FOUND'                            , N'en-US', N'Teams', null, null, N'Team Not Found.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADD_TEAM_SET'                              , N'en-US', N'Teams', null, null, N'Add';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DESCRIPTION'                               , N'en-US', N'Teams', null, null, N'Description:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DISABLE'                                   , N'en-US', N'Teams', null, null, N'Disable';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DYNAMIC'                                   , N'en-US', N'Teams', null, null, N'Dynamic';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ENABLE'                                    , N'en-US', N'Teams', null, null, N'Enable';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DESCRIPTION'                          , N'en-US', N'Teams', null, null, N'Description';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FORM_TITLE'                           , N'en-US', N'Teams', null, null, N'Team List';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MEMBERSHIP'                           , N'en-US', N'Teams', null, null, N'Membership';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_NAME'                                 , N'en-US', N'Teams', null, null, N'Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_PRIMARY_TEAM'                         , N'en-US', N'Teams', null, null, N'Primary';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_PRIVATE'                              , N'en-US', N'Teams', null, null, N'Private';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_TEAM'                                 , N'en-US', N'Teams', null, null, N'Team';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NAME'                                      , N'en-US', N'Teams', null, null, N'Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OPTIONAL'                                  , N'en-US', N'Teams', null, null, N'Optional';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PRIVATE'                                   , N'en-US', N'Teams', null, null, N'Private:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PRIVATE_TEAM_DESC'                         , N'en-US', N'Teams', null, null, N'Private team for ';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REPLACE_TEAM_SET'                          , N'en-US', N'Teams', null, null, N'Replace';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REQUIRE'                                   , N'en-US', N'Teams', null, null, N'Require';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SEARCH_FORM_TITLE'                         , N'en-US', N'Teams', null, null, N'Search';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SINGULAR'                                  , N'en-US', N'Teams', null, null, N'Singular';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEAM'                                      , N'en-US', N'Teams', null, null, N'Team:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEAMS'                                     , N'en-US', N'Teams', null, null, N'Teams';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEAMS_DISABLED'                            , N'en-US', N'Teams', null, null, N'Currently Disabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEAMS_DYNAMIC'                             , N'en-US', N'Teams', null, null, N' and Dynamic';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEAMS_ENABLED'                             , N'en-US', N'Teams', null, null, N'Currently Enabled';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEAMS_NOT_DYNAMIC'                         , N'en-US', N'Teams', null, null, N' and Not Dynamic';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEAMS_NOT_REQUIRED'                        , N'en-US', N'Teams', null, null, N' and Not Required';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEAMS_REQUIRED'                            , N'en-US', N'Teams', null, null, N' and Required';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_TEAM'                                  , N'en-US', N'Teams', null, null, N'Create Team';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_TEAM_LIST'                                 , N'en-US', N'Teams', null, null, N'Teams';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'Teams', null, null, N'Tm';
-- 04/12/2016 Paul.  Add parent team and custom fields. 
-- 04/28/2016 Paul.  Rename parent to PARENT_ID. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PARENT_NAME'                               , N'en-US', N'Teams', null, null, N'Parent Team:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PARENT_ID'                                 , N'en-US', N'Teams', null, null, N'Parent Team:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_PARENT_NAME'                          , N'en-US', N'Teams', null, null, N'Parent Team';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEAM_HIERARCHY'                            , N'en-US', N'Teams', null, null, N'Team Hierarchy';
-- 10/16/2020 Paul.  LBL_HIERARCHY is used on the Team DetailView page. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_HIERARCHY'                                 , N'en-US', N'Teams', null, null, N'Team Hierarchy';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_HIERARCHICAL'                              , N'en-US', N'Teams', null, null, N'Hierarchical';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NON_HIERARCHICAL'                          , N'en-US', N'Teams', null, null, N'Non-hierarchical';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEAMS_HIERARCHICAL'                        , N'en-US', N'Teams', null, null, N' and Hierarchical';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEAMS_NON_HIERARCHICAL'                    , N'en-US', N'Teams', null, null, N' and Non-hierarchical';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CURRENT'                                   , N'en-US', N'Teams', null, null, N'Current:';
-- 01/08/2018 Paul.  Change the name from Teams. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEAM_TREE_ROOT'                            , N'en-US', N'Teams', null, null, N'Teams';
GO
/* -- #if Oracle
	COMMIT WORK;
END;
/

BEGIN
-- #endif Oracle */
exec dbo.spTERMINOLOGY_InsertOnly N'Teams'                                         , N'en-US', null, N'moduleList'                        ,  44, N'Teams';
-- 03/27/2018 Paul.  This is used for Undelete Team. 
exec dbo.spTERMINOLOGY_InsertOnly N'Teams'                                         , N'en-US', null, N'moduleListSingular'                ,  44, N'Team';

exec dbo.spTERMINOLOGY_InsertOnly N'Member'                                        , N'en-US', null, N'team_membership_dom'               ,   1, N'Member';
exec dbo.spTERMINOLOGY_InsertOnly N'Member Reports-to'                             , N'en-US', null, N'team_membership_dom'               ,   2, N'Member reports-to';

-- 02/22/2017 Paul.  Convert to ctlSearchView. 
exec dbo.spTERMINOLOGY_InsertOnly N'0'                                             , N'en-US', null, N'team_private_dom'                  ,   1, N'No';
exec dbo.spTERMINOLOGY_InsertOnly N'1'                                             , N'en-US', null, N'team_private_dom'                  ,   2, N'Yes';

-- 10/14/2020 Paul.  Easier to create list for EXPLICIT_ASSIGN than to create custom view. 
exec dbo.spTERMINOLOGY_InsertOnly N'0'                                             , N'en-US', null, N'team_explicit_assign'              ,   2, N'Member reports-to';
exec dbo.spTERMINOLOGY_InsertOnly N'1'                                             , N'en-US', null, N'team_explicit_assign'              ,   1, N'Member';

GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Teams_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Teams_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:42 AM.
print 'TERMINOLOGY Terminology en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DISPLAY_NAME'                              , N'en-US', N'Terminology', null, null, N'Display Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_GLOBAL_TERMS'                              , N'en-US', N'Terminology', null, null, N'Global Terms';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_TERMINOLOGY_INSTRUCTIONS'           , N'en-US', N'Terminology', null, null, N'SplendidCRM can import a SugarCRM language pack.  The language pack is expected to be a zipped collection of PHP files.  Some files, such as Japanese, require the UTF8 option.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_INCLUDE_LISTS'                             , N'en-US', N'Terminology', null, null, N'Include Lists';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LANG'                                      , N'en-US', N'Terminology', null, null, N'Language:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DISPLAY_NAME'                         , N'en-US', N'Terminology', null, null, N'Display Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FORM_TITLE'                           , N'en-US', N'Terminology', null, null, N'Terminology List';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_LANG'                                 , N'en-US', N'Terminology', null, null, N'Language';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_LIST_NAME'                            , N'en-US', N'Terminology', null, null, N'List Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_LIST_ORDER'                           , N'en-US', N'Terminology', null, null, N'List Order';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MODULE_NAME'                          , N'en-US', N'Terminology', null, null, N'Module Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_NAME'                                 , N'en-US', N'Terminology', null, null, N'List Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_NAME_LABEL'                           , N'en-US', N'Terminology', null, null, N'Name Label';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_NAME_NAME'                            , N'en-US', N'Terminology', null, null, N'Name Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ORDER'                                , N'en-US', N'Terminology', null, null, N'List Order:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_NAME'                               , N'en-US', N'Terminology', null, null, N'Module Name:';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'Terminology', null, null, N'Ter';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NAME'                                      , N'en-US', N'Terminology', null, null, N'Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_FORM_TITLE'                            , N'en-US', N'Terminology', null, null, N'Create Terminology';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SEARCH_FORM_TITLE'                         , N'en-US', N'Terminology', null, null, N'Search';
-- 09/11/2021 Paul.  The React client requires relationship. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SUGARCRM_LANGUAGE_PACKS'                   , N'en-US', N'Terminology', null, null, N'SugarCRM Language Packs';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SPLENDIDCRM_LANGUAGE_PACKS'                , N'en-US', N'Terminology', null, null, N'SplendidCRM Language Packs';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_IMPORT_NAME'                          , N'en-US', N'Terminology', null, null, N'Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_IMPORT_DATE'                          , N'en-US', N'Terminology', null, null, N'Date';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_IMPORT_DESCRIPTION'                   , N'en-US', N'Terminology', null, null, N'Description';
GO

GO
/* -- #if Oracle
	COMMIT WORK;
END;
/

BEGIN
-- #endif Oracle */
exec dbo.spTERMINOLOGY_InsertOnly N'Terminology'                                   , N'en-US', null, N'moduleList'                        ,  37, N'Terminology';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Terminology_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Terminology_en_us')
/
-- #endif IBM_DB2 */


print 'TERMINOLOGY_ALIASES defaults';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_CREATED_BY_ID'                 , 'Accounts'     , null, 'LBL_CREATED_BY_ID'            , null           , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_ID_C'                          , 'Accounts'     , null, 'LBL_ID_C'                     , null           , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_ASSIGNED_USER_ID'              , 'Accounts'     , null, 'LBL_ASSIGNED_USER_ID'         , null           , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_MODIFIED_BY'                   , 'Accounts'     , null, 'LBL_MODIFIED_BY'              , null           , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_MODIFIED_USER_ID'              , 'Accounts'     , null, 'LBL_MODIFIED_USER_ID'         , null           , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_TEAM_ID'                       , 'Accounts'     , null, 'LBL_TEAM_ID'                  , null           , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_TEAM_NAME'                     , 'Accounts'     , null, 'LBL_TEAM_NAME'                , null           , null;

exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_NAME'                          , 'Bugs'         , null, 'LBL_SUBJECT'                  , 'Bugs'         , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_DATE_START'                    , 'Calls'        , null, 'LBL_DATE_TIME'                , 'Calls'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PARENT_TYPE'                   , 'Calls'        , null, 'LBL_PARENT_TYPE'              , 'Notes'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PARENT_NAME'                   , 'Calls'        , null, 'LBL_PARENT_NAME'              , 'Accounts'     , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_START_DATE'                    , 'Campaigns'    , null, 'LBL_CAMPAIGN_START_DATE'      , 'Campaigns'    , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_END_DATE'                      , 'Campaigns'    , null, 'LBL_CAMPAIGN_END_DATE'        , 'Campaigns'    , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_STATUS'                        , 'Campaigns'    , null, 'LBL_CAMPAIGN_STATUS'          , 'Campaigns'    , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_BUDGET'                        , 'Campaigns'    , null, 'LBL_CAMPAIGN_BUDGET'          , 'Campaigns'    , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_EXPECTED_COST'                 , 'Campaigns'    , null, 'LBL_CAMPAIGN_EXPECTED_COST'   , 'Campaigns'    , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_ACTUAL_COST'                   , 'Campaigns'    , null, 'LBL_CAMPAIGN_ACTUAL_COST'     , 'Campaigns'    , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_EXPECTED_REVENUE'              , 'Campaigns'    , null, 'LBL_CAMPAIGN_EXPECTED_REVENUE', 'Campaigns'    , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_CURRENCY_NAME'                 , 'Campaigns'    , null, 'LBL_CURRENCY'                 , 'Campaigns'    , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_CURRENCY_SYMBOL'               , 'Campaigns'    , null, 'LBL_LIST_SYMBOL'              , 'Currencies'   , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_CURRENCY_CONVERSION_RATE'      , 'Campaigns'    , null, 'LBL_LIST_RATE'                , 'Currencies'   , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_NAME'                          , 'Cases'        , null, 'LBL_SUBJECT'                  , 'Cases'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_CURRENCY_NAME'                 , 'Contracts'    , null, 'LBL_CURRENCY'                 , 'Contracts'    , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_CURRENCY_SYMBOL'               , 'Contracts'    , null, 'LBL_LIST_SYMBOL'              , 'Currencies'   , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_CURRENCY_CONVERSION_RATE'      , 'Contracts'    , null, 'LBL_LIST_RATE'                , 'Currencies'   , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_TOTAL_CONTRACT_VALUE'          , 'Contracts'    , null, 'LBL_CONTRACT_VALUE'           , 'Contracts'    , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_TOTAL_CONTRACT_VALUE_USDOLLAR' , 'Contracts'    , null, 'LBL_US_DOLLAR'                , 'Currencies'   , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_DOCUMENT_NAME'                 , 'Documents'    , null, 'LBL_DOC_NAME'                 , 'Documents'    , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_EXP_DATE'                      , 'Documents'    , null, 'LBL_DOC_EXP_DATE'             , 'Documents'    , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_FILE_MIME_TYPE'                , 'Documents'    , null, 'LBL_FILE_MIME_TYPE'           , 'Notes'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_REVISION_DATE_ENTERED'         , 'Documents'    , null, 'LBL_LAST_REV_DATE'            , 'Documents'    , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_REVISION_DATE_MODIFIED'        , 'Documents'    , null, 'LBL_DATE_MODIFIED'            , null           , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_REVISION_CREATED_BY'           , 'Documents'    , null, 'LBL_LAST_REV_CREATOR'         , 'Documents'    , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_REVISION_MODIFIED_BY'          , 'Documents'    , null, 'LBL_MODIFIED_BY'              , null           , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_NAME'                          , 'Emails'       , null, 'LBL_SUBJECT'                  , 'Emails'       , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_DATE_START'                    , 'Emails'       , null, 'LBL_DATE_AND_TIME'            , 'Emails'       , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_TIME_START'                    , 'Emails'       , null, 'LBL_DATE_AND_TIME'            , 'Emails'       , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PARENT_TYPE'                   , 'Emails'       , null, 'LBL_PARENT_TYPE'              , 'Notes'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_FROM_ADDR'                     , 'Emails'       , null, 'LBL_FROM'                     , 'Emails'       , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_REPLY_TO_ADDR'                 , 'Emails'       , null, 'LBL_TO'                       , 'Emails'       , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PARENT_NAME'                   , 'Emails'       , null, 'LBL_PARENT_NAME'              , 'Accounts'     , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PHONE_HOME'                    , 'Leads'        , null, 'LBL_HOME_PHONE'               , 'Leads'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PHONE_MOBILE'                  , 'Leads'        , null, 'LBL_MOBILE_PHONE'             , 'Leads'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PHONE_WORK'                    , 'Leads'        , null, 'LBL_OFFICE_PHONE'             , 'Leads'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PHONE_OTHER'                   , 'Leads'        , null, 'LBL_OTHER_PHONE'              , 'Leads'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PHONE_FAX'                     , 'Leads'        , null, 'LBL_FAX_PHONE'                , 'Leads'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_EMAIL1'                        , 'Leads'        , null, 'LBL_EMAIL_ADDRESS'            , 'Leads'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_EMAIL2'                        , 'Leads'        , null, 'LBL_OTHER_EMAIL_ADDRESS'      , 'Leads'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_CONVERTED_CONTACT_NAME'        , 'Leads'        , null, 'LBL_CONVERTED_CONTACT'        , 'Leads'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_CONVERTED_ACCOUNT_NAME'        , 'Leads'        , null, 'LBL_CONVERTED_ACCOUNT'        , 'Leads'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_CAMPAIGN_NAME'                 , 'Leads'        , null, 'LBL_NAME'                     , 'Campaigns'    , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_DATE_START'                    , 'Meetings'     , null, 'LBL_DATE_TIME'                , 'Meetings'     , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PARENT_TYPE'                   , 'Meetings'     , null, 'LBL_PARENT_TYPE'              , 'Notes'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PARENT_NAME'                   , 'Meetings'     , null, 'LBL_PARENT_NAME'              , 'Accounts'     , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_OPPORTUNITY_TYPE'              , 'Opportunities', null, 'LBL_TYPE'                     , 'Opportunities', null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_AMOUNT_USDOLLAR'               , 'Opportunities', null, 'LBL_AMOUNT'                   , 'Opportunities', null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PHONE_HOME'                    , 'Prospects'    , null, 'LBL_HOME_PHONE'               , 'Prospects'    , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PHONE_MOBILE'                  , 'Prospects'    , null, 'LBL_MOBILE_PHONE'             , 'Prospects'    , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PHONE_WORK'                    , 'Prospects'    , null, 'LBL_OFFICE_PHONE'             , 'Prospects'    , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PHONE_OTHER'                   , 'Prospects'    , null, 'LBL_OTHER_PHONE'              , 'Prospects'    , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PHONE_FAX'                     , 'Prospects'    , null, 'LBL_FAX_PHONE'                , 'Prospects'    , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_EMAIL1'                        , 'Prospects'    , null, 'LBL_EMAIL_ADDRESS'            , 'Prospects'    , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_EMAIL2'                        , 'Prospects'    , null, 'LBL_OTHER_EMAIL_ADDRESS'      , 'Prospects'    , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_CONVERTED_LEAD_NAME'           , 'Prospects'    , null, 'LBL_CONVERTED_LEAD'           , 'Prospects'    , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_DATE_DUE'                      , 'Tasks'        , null, 'LBL_DUE_DATE_AND_TIME'        , 'Tasks'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_TIME_DUE'                      , 'Tasks'        , null, 'LBL_DUE_DATE_AND_TIME'        , 'Tasks'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_DATE_START'                    , 'Tasks'        , null, 'LBL_START_DATE_AND_TIME'      , 'Tasks'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_TIME_START'                    , 'Tasks'        , null, 'LBL_START_DATE_AND_TIME'      , 'Tasks'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PARENT_TYPE'                   , 'Tasks'        , null, 'LBL_PARENT_TYPE'              , 'Notes'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PARENT_NAME'                   , 'Tasks'        , null, 'LBL_PARENT_NAME'              , 'Accounts'     , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_CONTACT_PHONE'                 , 'Tasks'        , null, 'LBL_PHONE'                    , 'Tasks'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_CONTACT_EMAIL'                 , 'Tasks'        , null, 'LBL_EMAIL'                    , 'Tasks'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_FULL_NAME'                     , 'Users'        , null, 'LBL_NAME'                     , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PHONE_HOME'                    , 'Users'        , null, 'LBL_HOME_PHONE'               , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PHONE_MOBILE'                  , 'Users'        , null, 'LBL_MOBILE_PHONE'             , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PHONE_WORK'                    , 'Users'        , null, 'LBL_OFFICE_PHONE'             , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PHONE_OTHER'                   , 'Users'        , null, 'LBL_OTHER'                    , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PHONE_FAX'                     , 'Users'        , null, 'LBL_FAX'                      , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_EMAIL1'                        , 'Users'        , null, 'LBL_EMAIL'                    , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_EMAIL2'                        , 'Users'        , null, 'LBL_OTHER_EMAIL'              , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_EMAIL1'                        , 'Campaigns'    , null, 'LBL_LIST_EMAIL_ADDRESS'       , 'Contacts'     , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_RELATED_NAME'                  , 'Campaigns'    , null, 'LBL_LIST_CONTACT_NAME'        , 'Contacts'     , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_RELATED_TYPE'                  , 'Campaigns'    , null, 'LBL_LIST_LIST_TYPE'           , 'ProspectLists', null;


exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_FULL_NAME'                     , 'UserLogins'   , null, 'LBL_NAME'                     , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_IS_ADMIN'                      , 'UserLogins'   , null, 'LBL_IS_ADMIN'                 , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_STATUS'                        , 'UserLogins'   , null, 'LBL_STATUS'                   , 'Users'        , null;
GO

exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_STATUS'                        , 'Employees'    , null, 'LBL_STATUS'                   , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_REPORTS_TO_NAME'               , 'Employees'    , null, 'LBL_REPORTS_TO_NAME'          , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_RECEIVE_NOTIFICATIONS'         , 'Employees'    , null, 'LBL_RECEIVE_NOTIFICATIONS'    , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PORTAL_ONLY'                   , 'Employees'    , null, 'LBL_PORTAL_ONLY'              , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PHONE_WORK'                    , 'Employees'    , null, 'LBL_PHONE_WORK'               , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PHONE_OTHER'                   , 'Employees'    , null, 'LBL_PHONE_OTHER'              , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PHONE_MOBILE'                  , 'Employees'    , null, 'LBL_PHONE_MOBILE'             , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PHONE_HOME'                    , 'Employees'    , null, 'LBL_PHONE_HOME'               , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_PHONE_FAX'                     , 'Employees'    , null, 'LBL_PHONE_FAX'                , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_IS_ADMIN'                      , 'Employees'    , null, 'LBL_IS_ADMIN'                 , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_FULL_NAME'                     , 'Employees'    , null, 'LBL_FULL_NAME'                , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_EMAIL2'                        , 'Employees'    , null, 'LBL_EMAIL2'                   , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_EMAIL1'                        , 'Employees'    , null, 'LBL_EMAIL1'                   , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_DESCRIPTION'                   , 'Employees'    , null, 'LBL_DESCRIPTION'              , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_ADDRESS_STREET'                , 'Employees'    , null, 'LBL_ADDRESS_STREET'           , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_ADDRESS_STATE'                 , 'Employees'    , null, 'LBL_ADDRESS_STATE'            , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_ADDRESS_POSTALCODE'            , 'Employees'    , null, 'LBL_ADDRESS_POSTALCODE'       , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_ADDRESS_COUNTRY'               , 'Employees'    , null, 'LBL_ADDRESS_COUNTRY'          , 'Users'        , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_ADDRESS_CITY'                  , 'Employees'    , null, 'LBL_ADDRESS_CITY'             , 'Users'        , null;

-- 08/10/2012 Paul.  LBL_EXCHANGE_FOLDER is a global. 
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_EXCHANGE_FOLDER'               , 'Accounts'     , null, 'LBL_EXCHANGE_FOLDER'          , null           , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_EXCHANGE_FOLDER'               , 'Bugs'         , null, 'LBL_EXCHANGE_FOLDER'          , null           , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_EXCHANGE_FOLDER'               , 'Cases'        , null, 'LBL_EXCHANGE_FOLDER'          , null           , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_EXCHANGE_FOLDER'               , 'Contacts'     , null, 'LBL_EXCHANGE_FOLDER'          , null           , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_EXCHANGE_FOLDER'               , 'Leads'        , null, 'LBL_EXCHANGE_FOLDER'          , null           , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_EXCHANGE_FOLDER'               , 'Opportunities', null, 'LBL_EXCHANGE_FOLDER'          , null           , null;
exec dbo.spTERMINOLOGY_ALIASES_InsertOnly null, 'LBL_EXCHANGE_FOLDER'               , 'Project'      , null, 'LBL_EXCHANGE_FOLDER'          , null           , null;
GO

set nocount off;
GO

/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_ALIASES_Defaults()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_ALIASES_Defaults')
/

-- #endif IBM_DB2 */



print 'TERMINOLOGY Undelete en-us';
GO

set nocount on;
GO

-- delete from TERMINOLOGY where MODULE_NAME = 'Undelete';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_NAME'                                 , N'en-US', N'Undelete', null, null, N'Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_AUDIT_TOKEN'                          , N'en-US', N'Undelete', null, null, N'Audit Token';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MODIFIED_BY'                          , N'en-US', N'Undelete', null, null, N'Deleted By';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_AUDIT_DATE'                           , N'en-US', N'Undelete', null, null, N'Date Deleted';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NAME'                                      , N'en-US', N'Undelete', null, null, N'Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_AUDIT_TOKEN'                               , N'en-US', N'Undelete', null, null, N'Audit Token:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_NAME'                               , N'en-US', N'Undelete', null, null, N'Module Name:';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'Undelete', null, null, N'Und';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODIFIED_BY'                               , N'en-US', N'Undelete', null, null, N'Deleted By:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_AUDIT_DATE'                                , N'en-US', N'Undelete', null, null, N'Date:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UNDELETING'                                , N'en-US', N'Undelete', null, null, N'Undeleting in the background.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NOTHING_SELECTED'                          , N'en-US', N'Undelete', null, null, N'Nothing was selected.';

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_TITLE'                              , N'en-US', N'Undelete', null, null, N'Undelete';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FORM_TITLE'                           , N'en-US', N'Undelete', null, null, N'Undelete List';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UNDELETE_BUTTON_LABEL'                     , N'en-US', N'Undelete', null, null, N'Undelete';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UNDELETE_BUTTON_TITLE'                     , N'en-US', N'Undelete', null, null, N'Undelete';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BACKGROUND_OPERATION'                      , N'en-US', N'Undelete', null, null, N'Perform operation in background.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UNDELETE_COMPLETE'                         , N'en-US', N'Undelete', null, null, N'Undeleted {0} {1}.';

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UNDELETE_TITLE'                            , N'en-US', N'Administration', null, null, N'Undelete';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UNDELETE'                                  , N'en-US', N'Administration', null, null, N'Undelete records.';

exec dbo.spTERMINOLOGY_InsertOnly N'Undelete'                                      , N'en-US', null, N'moduleList', 115, N'Undelete';
GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Undelete_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Undelete_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:42 AM.
print 'TERMINOLOGY UserLogins en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ASPNET_SESSIONID'                          , N'en-US', N'UserLogins', null, null, N'ASP.NET Session ID:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ASPNET_SESSIONID'                     , N'en-US', N'UserLogins', null, null, N'ASP.NET Session ID';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_LOGIN_DATE'                           , N'en-US', N'UserLogins', null, null, N'Login Date';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_LOGIN_STATUS'                         , N'en-US', N'UserLogins', null, null, N'Login Status';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_LOGIN_TYPE'                           , N'en-US', N'UserLogins', null, null, N'Login Type';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_LOGOUT_DATE'                          , N'en-US', N'UserLogins', null, null, N'Logout Date';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_RELATIVE_PATH'                        , N'en-US', N'UserLogins', null, null, N'Relative Path';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_REMOTE_HOST'                          , N'en-US', N'UserLogins', null, null, N'Remote Host';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_SERVER_HOST'                          , N'en-US', N'UserLogins', null, null, N'Server Host';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_TARGET'                               , N'en-US', N'UserLogins', null, null, N'Target';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_USER_AGENT'                           , N'en-US', N'UserLogins', null, null, N'User Agent';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_USER_ID'                              , N'en-US', N'UserLogins', null, null, N'User ID';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_USER_NAME'                            , N'en-US', N'UserLogins', null, null, N'User Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LOGIN_DATE'                                , N'en-US', N'UserLogins', null, null, N'Login Date:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LOGIN_STATUS'                              , N'en-US', N'UserLogins', null, null, N'Login Status:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LOGIN_TYPE'                                , N'en-US', N'UserLogins', null, null, N'Login Type:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LOGOUT_DATE'                               , N'en-US', N'UserLogins', null, null, N'Logout Date:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RELATIVE_PATH'                             , N'en-US', N'UserLogins', null, null, N'Relative Path:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REMOTE_HOST'                               , N'en-US', N'UserLogins', null, null, N'Remote Host:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SERVER_HOST'                               , N'en-US', N'UserLogins', null, null, N'Server Host:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TARGET'                                    , N'en-US', N'UserLogins', null, null, N'Target:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_USER_AGENT'                                , N'en-US', N'UserLogins', null, null, N'User Agent:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_USER_ID'                                   , N'en-US', N'UserLogins', null, null, N'User ID:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_USER_NAME'                                 , N'en-US', N'UserLogins', null, null, N'User Name:';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'UserLogins', null, null, N'UsL';
-- 10/30/2020 Paul.  The React Client requires LBL_LIST_FORM_TITLE. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FORM_TITLE'                           , N'en-US', N'UserLogins', null, null, N'User Logins';
GO
/* -- #if Oracle
	COMMIT WORK;
END;
/

BEGIN
-- #endif Oracle */

-- 03/02/2019 Paul.  Missing term. 
exec dbo.spTERMINOLOGY_InsertOnly N'UserLogins'                                    , N'en-US', null, N'moduleList'                        , 100, N'User Logins';

exec dbo.spTERMINOLOGY_InsertOnly N'Succeeded'                                     , N'en-US', null, N'login_status_dom'                  ,   1, N'Succeeded';
exec dbo.spTERMINOLOGY_InsertOnly N'Failed'                                        , N'en-US', null, N'login_status_dom'                  ,   2, N'Failed';

exec dbo.spTERMINOLOGY_InsertOnly N'Windows'                                       , N'en-US', null, N'login_type_dom'                    ,   1, N'Windows';
exec dbo.spTERMINOLOGY_InsertOnly N'Anonymous'                                     , N'en-US', null, N'login_type_dom'                    ,   2, N'Anonymous';
-- 08/07/2013 Paul.  Should have added Impersonate when feature was added. 
exec dbo.spTERMINOLOGY_InsertOnly N'Impersonate'                                   , N'en-US', null, N'login_type_dom'                    ,   3, N'Impersonate';

GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_UserLogins_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_UserLogins_en_us')
/
-- #endif IBM_DB2 */


-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 2:12:43 AM.
print 'TERMINOLOGY Users en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'ERR_ENTER_CONFIRMATION_PASSWORD'               , N'en-US', N'Users', null, null, N'Are you sure?';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_ENTER_NEW_PASSWORD'                        , N'en-US', N'Users', null, null, N'Enter New Password.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_ENTER_OLD_PASSWORD'                        , N'en-US', N'Users', null, null, N'Enter Old Password.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_INVALID_FORGOT_PASSWORD'                   , N'en-US', N'Users', null, null, N'Invalid User Name and Email Address.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_INVALID_PASSWORD'                          , N'en-US', N'Users', null, null, N'Invalid User Name and Password.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_MAX_USERS'                                 , N'en-US', N'Users', null, null, N'Max Users.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_PASSWORD_INCORRECT_OLD'                    , N'en-US', N'Users', null, null, N'Old password does not match.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_REASS_DIFF_USERS'                          , N'en-US', N'Users', null, null, N'You must select a different user.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_REASS_SELECT_MODULE'                       , N'en-US', N'Users', null, null, N'You must select at least one module.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_REENTER_PASSWORDS'                         , N'en-US', N'Users', null, null, N'Reenter Passwords.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_USER_NAME_EXISTS_1'                        , N'en-US', N'Users', null, null, N'The User Name ';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_USER_NAME_EXISTS_2'                        , N'en-US', N'Users', null, null, N' alredy exists.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_USER_NOT_FOUND'                            , N'en-US', N'Users', null, null, N'User Not Found.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_CANNOT_REUSE_PASSWORD'                     , N'en-US', N'Users', null, null, N'Cannot reuse password.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_USER_LOCKED_OUT'                           , N'en-US', N'Users', null, null, N'This user has been locked out.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_FACEBOOK_LOGIN'                            , N'en-US', N'Users', null, null, N'Invalid facebook user.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_INVALID_USER'                              , N'en-US', N'Users', null, null, N'Invalid user.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_FACEBOOK_SIGNATURE'                        , N'en-US', N'Users', null, null, N'facebook arguments failed signature validation.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_FACEBOOK_COOKIE'                           , N'en-US', N'Users', null, null, N'facebook cookie is missing.';

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FACEBOOK_GET_ID'                           , N'en-US', N'Users', null, null, N'Get facebook ID';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FACEBOOK_ID'                               , N'en-US', N'Users', null, null, N'facebook ID:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SEND_SUCCESSFUL'                           , N'en-US', N'Users', null, null, N'Send was successful.';
-- 08/09/2018 Paul.  Allow translation of connection success. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CONNECTION_SUCCESSFUL'                     , N'en-US', N'Users', null, null, N'Connection successful. {0} items in {1}';

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADDRESS'                                   , N'en-US', N'Users', null, null, N'Address';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADDRESS_CITY'                              , N'en-US', N'Users', null, null, N'City:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADDRESS_COUNTRY'                           , N'en-US', N'Users', null, null, N'Country:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADDRESS_INFORMATION'                       , N'en-US', N'Users', null, null, N'Address Information';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADDRESS_POSTALCODE'                        , N'en-US', N'Users', null, null, N'Postal Code:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADDRESS_STATE'                             , N'en-US', N'Users', null, null, N'State:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADDRESS_STREET'                            , N'en-US', N'Users', null, null, N'Street:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADMIN'                                     , N'en-US', N'Users', null, null, N'Admin';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADMIN_DELEGATE'                            , N'en-US', N'Users', null, null, N'Admin Delegate:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADMIN_DELEGATE_TEXT'                       , N'en-US', N'Users', null, null, N'Allows user to perform some admin functions.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADMIN_TEXT'                                , N'en-US', N'Users', null, null, N'Grant admin rights to this user.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ANY_EMAIL'                                 , N'en-US', N'Users', null, null, N'Any Email';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ANY_PHONE'                                 , N'en-US', N'Users', null, null, N'Any Phone';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ASPNET_SESSIONID'                          , N'en-US', N'Users', null, null, N'ASP.NET Session ID:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CALENDAR_OPTIONS'                          , N'en-US', N'Users', null, null, N'Calendar Options';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CHANGE_PASSWORD'                           , N'en-US', N'Users', null, null, N'Change Password';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CHANGE_PASSWORD_BUTTON_LABEL'              , N'en-US', N'Users', null, null, N'Change Password';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CHANGE_PASSWORD_BUTTON_TITLE'              , N'en-US', N'Users', null, null, N'Change Password';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CHOOSE_A_KEY'                              , N'en-US', N'Users', null, null, N'Choose A Key';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CITY'                                      , N'en-US', N'Users', null, null, N'City';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CONFIRM_PASSWORD'                          , N'en-US', N'Users', null, null, N'Confirm Password:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_COUNTRY'                                   , N'en-US', N'Users', null, null, N'Country';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CURRENCY'                                  , N'en-US', N'Users', null, null, N'Currency';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CURRENCY_ID'                               , N'en-US', N'Users', null, null, N'Currency ID';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CURRENCY_TEXT'                             , N'en-US', N'Users', null, null, N'Set default currency.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DATE_FORMAT'                               , N'en-US', N'Users', null, null, N'Date Format';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DATE_FORMAT_TEXT'                          , N'en-US', N'Users', null, null, N'Set date format.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DECIMAL_SEP'                               , N'en-US', N'Users', null, null, N'Decimal symbol';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DECIMAL_SEP_TEXT'                          , N'en-US', N'Users', null, null, N'Set decimal separator.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DEFAULT_TEAM'                              , N'en-US', N'Users', null, null, N'Default Team:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DEFAULT_TEAM_NAME'                         , N'en-US', N'Users', null, null, N'Default Team Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DEPARTMENT'                                , N'en-US', N'Users', null, null, N'Department:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DESCRIPTION'                               , N'en-US', N'Users', null, null, N'Description:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EMAIL'                                     , N'en-US', N'Users', null, null, N'Email address';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EMAIL1'                                    , N'en-US', N'Users', null, null, N'Email:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EMAIL2'                                    , N'en-US', N'Users', null, null, N'Other Email:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EMPLOYEE_STATUS'                           , N'en-US', N'Users', null, null, N'Employee Status:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ERROR'                                     , N'en-US', N'Users', null, null, N'Error';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FAX'                                       , N'en-US', N'Users', null, null, N'Fax';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FIRST_NAME'                                , N'en-US', N'Users', null, null, N'First Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FORGOT_PASSWORD'                           , N'en-US', N'Users', null, null, N'Forgot Password';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FULL_NAME'                                 , N'en-US', N'Users', null, null, N'Full Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_GRIDLINE'                                  , N'en-US', N'Users', null, null, N'Gridline';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_GRIDLINE_TEXT'                             , N'en-US', N'Users', null, null, N'Show gridlines.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_GROUP'                                     , N'en-US', N'Users', null, null, N'Group:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_GROUP_TABS'                                , N'en-US', N'Users', null, null, N'Show Group Tabs:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_GROUP_TABS_TEXT'                           , N'en-US', N'Users', null, null, N'Display the tab menu in groups.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_HOME_PHONE'                                , N'en-US', N'Users', null, null, N'Home Phone';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_INVALID_DECIMAL'                           , N'en-US', N'Users', null, null, N'Invalid Decimal';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IS_ADMIN'                                  , N'en-US', N'Users', null, null, N'Is Admin:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IS_ADMIN_DELEGATE'                         , N'en-US', N'Users', null, null, N'Is Admin Delegate:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IS_GROUP'                                  , N'en-US', N'Users', null, null, N'Is Group:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LANGUAGE'                                  , N'en-US', N'Users', null, null, N'Language';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LANGUAGE_TEXT'                             , N'en-US', N'Users', null, null, N'Select language.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LAST_NAME'                                 , N'en-US', N'Users', null, null, N'Last Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ADDRESS_CITY'                         , N'en-US', N'Users', null, null, N'City';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ADDRESS_COUNTRY'                      , N'en-US', N'Users', null, null, N'Country';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ADDRESS_POSTALCODE'                   , N'en-US', N'Users', null, null, N'Postal Code';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ADDRESS_STATE'                        , N'en-US', N'Users', null, null, N'State';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ADDRESS_STREET'                       , N'en-US', N'Users', null, null, N'Street';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ADMIN'                                , N'en-US', N'Users', null, null, N'Admin';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ASPNET_SESSIONID'                     , N'en-US', N'Users', null, null, N'ASP.NET Session ID';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DEFAULT_TEAM'                         , N'en-US', N'Users', null, null, N'Default Team';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DEFAULT_TEAM_NAME'                    , N'en-US', N'Users', null, null, N'Default Team Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DEPARTMENT'                           , N'en-US', N'Users', null, null, N'Department';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DESCRIPTION'                          , N'en-US', N'Users', null, null, N'Description';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_EMAIL'                                , N'en-US', N'Users', null, null, N'Email';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_EMAIL1'                               , N'en-US', N'Users', null, null, N'Email';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_EMAIL2'                               , N'en-US', N'Users', null, null, N'Other Email';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_EMPLOYEE_STATUS'                      , N'en-US', N'Users', null, null, N'Employee Status';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FIRST_NAME'                           , N'en-US', N'Users', null, null, N'First Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_FORM_TITLE'                           , N'en-US', N'Users', null, null, N'User List';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_GROUP'                                , N'en-US', N'Users', null, null, N'Group';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_IS_ADMIN'                             , N'en-US', N'Users', null, null, N'Is Admin';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_IS_ADMIN_DELEGATE'                    , N'en-US', N'Users', null, null, N'Is Admin Delegate';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_IS_GROUP'                             , N'en-US', N'Users', null, null, N'Is Group';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_LAST_NAME'                            , N'en-US', N'Users', null, null, N'Last Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_LOGIN_DATE'                           , N'en-US', N'Users', null, null, N'Login Date';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_LOGIN_STATUS'                         , N'en-US', N'Users', null, null, N'Login Status';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_LOGIN_TYPE'                           , N'en-US', N'Users', null, null, N'Login Type';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_LOGOUT_DATE'                          , N'en-US', N'Users', null, null, N'Logout Date';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MAIL_SMTPPASS'                        , N'en-US', N'Users', null, null, N'Mail Smtppass';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MAIL_SMTPUSER'                        , N'en-US', N'Users', null, null, N'Mail Smtpuser';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MESSENGER_ID'                         , N'en-US', N'Users', null, null, N'Messenger ID';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MESSENGER_TYPE'                       , N'en-US', N'Users', null, null, N'Messenger Type';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_NAME'                                 , N'en-US', N'Users', null, null, N'Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_PHONE_FAX'                            , N'en-US', N'Users', null, null, N'Phone Fax';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_PHONE_HOME'                           , N'en-US', N'Users', null, null, N'Phone Home';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_PHONE_MOBILE'                         , N'en-US', N'Users', null, null, N'Phone Mobile';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_PHONE_OTHER'                          , N'en-US', N'Users', null, null, N'Phone Other';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_PHONE_WORK'                           , N'en-US', N'Users', null, null, N'Phone Work';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_PORTAL_ONLY'                          , N'en-US', N'Users', null, null, N'Portal Only';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_PRIMARY_PHONE'                        , N'en-US', N'Users', null, null, N'Primary Phone';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_PWD_LAST_CHANGED'                     , N'en-US', N'Users', null, null, N'Pwd Last Changed';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_RECEIVE_NOTIFICATIONS'                , N'en-US', N'Users', null, null, N'Receive Notifications';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_REMOTE_HOST'                          , N'en-US', N'Users', null, null, N'Remote Host';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_REPORTS_TO_ID'                        , N'en-US', N'Users', null, null, N'Reports To ID';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_REPORTS_TO_NAME'                      , N'en-US', N'Users', null, null, N'Reports To Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_STATUS'                               , N'en-US', N'Users', null, null, N'Status';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_SYSTEM_GENERATED_PASSWORD'            , N'en-US', N'Users', null, null, N'System Generated Password';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_TARGET'                               , N'en-US', N'Users', null, null, N'Target';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_TITLE'                                , N'en-US', N'Users', null, null, N'Title';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_USER_HASH'                            , N'en-US', N'Users', null, null, N'User Hash';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_USER_NAME'                            , N'en-US', N'Users', null, null, N'User Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_USER_PASSWORD'                        , N'en-US', N'Users', null, null, N'User Password';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_USER_PREFERENCES'                     , N'en-US', N'Users', null, null, N'User Preferences';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LOGIN'                                     , N'en-US', N'Users', null, null, N'User Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LOGIN_BUTTON_LABEL'                        , N'en-US', N'Users', null, null, N'Login';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LOGIN_BUTTON_TITLE'                        , N'en-US', N'Users', null, null, N'Login';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LOGIN_DATE'                                , N'en-US', N'Users', null, null, N'Login Date:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LOGIN_OPTIONS'                             , N'en-US', N'Users', null, null, N'Login Options';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LOGIN_STATUS'                              , N'en-US', N'Users', null, null, N'Login Status:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LOGINS'                                    , N'en-US', N'Users', null, null, N'Logins';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LOGOUT_DATE'                               , N'en-US', N'Users', null, null, N'Logout Date:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAIL_FROMADDRESS'                          , N'en-US', N'Users', null, null, N'Mail Fromaddress';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAIL_FROMNAME'                             , N'en-US', N'Users', null, null, N'Mail Fromname';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAIL_OPTIONS_TITLE'                        , N'en-US', N'Users', null, null, N'Mail Options';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAIL_SMTPPASS'                             , N'en-US', N'Users', null, null, N'SMTP Password:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAIL_SMTPUSER'                             , N'en-US', N'Users', null, null, N'SMTP Username:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MESSENGER_ID'                              , N'en-US', N'Users', null, null, N'Messenger ID:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MESSENGER_TYPE'                            , N'en-US', N'Users', null, null, N'Messenger Type:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MOBILE_PHONE'                              , N'en-US', N'Users', null, null, N'Mobile Phone';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_NAME'                               , N'en-US', N'Users', null, null, N'Users';
-- 06/04/2015 Paul.  Add module abbreviation. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', N'Users', null, null, N'Usr';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MY_TEAMS'                                  , N'en-US', N'Users', null, null, N'My Teams';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NAME'                                      , N'en-US', N'Users', null, null, N'Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_PASSWORD'                              , N'en-US', N'Users', null, null, N'New Password';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NOTES'                                     , N'en-US', N'Users', null, null, N'Notes';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NUMBER_GROUPING_SEP'                       , N'en-US', N'Users', null, null, N'1000s separator';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NUMBER_GROUPING_SEP_TEXT'                  , N'en-US', N'Users', null, null, N'Group separator.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OFFICE_PHONE'                              , N'en-US', N'Users', null, null, N'Office Phone';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OLD_PASSWORD'                              , N'en-US', N'Users', null, null, N'Old Password';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OPTIONAL'                                  , N'en-US', N'Users', null, null, N'Optional';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OTHER'                                     , N'en-US', N'Users', null, null, N'Other';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OTHER_EMAIL'                               , N'en-US', N'Users', null, null, N'Other Email';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PARENT_ID'                                 , N'en-US', N'Users', null, null, N'Parent ID:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PARENT_NAME'                               , N'en-US', N'Users', null, null, N'Parent Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PARENT_TYPE'                               , N'en-US', N'Users', null, null, N'Parent Type:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PASSWORD'                                  , N'en-US', N'Users', null, null, N'Password';
-- 02/19/2011 Paul.  Messages are now external. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PASSWORD_REMAINING_CHARACTERS'             , N'en-US', N'Users', null, null, N'{0} more character(s)';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PASSWORD_REMAINING_NUMBERS'                , N'en-US', N'Users', null, null, N'{0} more number(s)';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PASSWORD_REMAINING_LOWERCASE'              , N'en-US', N'Users', null, null, N'{0} more lower case character(s)';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PASSWORD_REMAINING_UPPERCASE'              , N'en-US', N'Users', null, null, N'{0} more upper case character(s)';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PASSWORD_REMAINING_SYMBOLS'                , N'en-US', N'Users', null, null, N'{0} symbol character(s)';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PASSWORD_REMAINING_MIXEDCASE'              , N'en-US', N'Users', null, null, N'{0} more mixed case character(s)';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PASSWORD_SATISFIED'                        , N'en-US', N'Users', null, null, N'Nothing more required';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PASSWORD_EXPIRED'                          , N'en-US', N'Users', null, null, N'Password expired.  You must change it.';

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PHONE_FAX'                                 , N'en-US', N'Users', null, null, N'Phone Fax:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PHONE_HOME'                                , N'en-US', N'Users', null, null, N'Phone Home:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PHONE_MOBILE'                              , N'en-US', N'Users', null, null, N'Phone Mobile:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PHONE_OTHER'                               , N'en-US', N'Users', null, null, N'Phone Other:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PHONE_WORK'                                , N'en-US', N'Users', null, null, N'Phone Work:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PICK_TZ_DESCRIPTION'                       , N'en-US', N'Users', null, null, N'Please select your time zone.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PICK_TZ_WELCOME'                           , N'en-US', N'Users', null, null, N'Welcome to SplendidCRM.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PORT'                                      , N'en-US', N'Users', null, null, N'Port';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PORTAL_ONLY'                               , N'en-US', N'Users', null, null, N'Portal Only:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PORTAL_ONLY_TEXT'                          , N'en-US', N'Users', null, null, N'Show on portal only.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_POSTAL_CODE'                               , N'en-US', N'Users', null, null, N'Postal Code';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PRIMARY_ADDRESS'                           , N'en-US', N'Users', null, null, N'Primary Address';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PUBLISH_KEY'                               , N'en-US', N'Users', null, null, N'Publish Key';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PWD_LAST_CHANGED'                          , N'en-US', N'Users', null, null, N'Pwd Last Changed:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REASS_ASSESSING'                           , N'en-US', N'Users', null, null, N'Assessing {0}';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REASS_BUTTON_CLEAR'                        , N'en-US', N'Users', null, null, N'Clear';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REASS_BUTTON_CONTINUE'                     , N'en-US', N'Users', null, null, N'Continue';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REASS_BUTTON_GO_BACK'                      , N'en-US', N'Users', null, null, N'Go Back';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REASS_BUTTON_RESTART'                      , N'en-US', N'Users', null, null, N'Restart';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REASS_BUTTON_RETURN'                       , N'en-US', N'Users', null, null, N'Return';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REASS_BUTTON_SUBMIT'                       , N'en-US', N'Users', null, null, N'Submit';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REASS_DESC_PART1'                          , N'en-US', N'Users', null, null, N'Reassign records from one user to another.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REASS_FILTERS'                             , N'en-US', N'Users', null, null, N'{0} Filters';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REASS_MOD_REASSIGN'                        , N'en-US', N'Users', null, null, N'Modules:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REASS_NO_CHANGE'                           , N'en-US', N'Users', null, null, N'-- No Change --';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REASS_NOTES_TITLE'                         , N'en-US', N'Users', null, null, N'Note: Workflows will fire as usual.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REASS_SCRIPT_TITLE'                        , N'en-US', N'Users', null, null, N'Record Reassignment';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REASS_SELECT_USER'                         , N'en-US', N'Users', null, null, N'Select User.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REASS_SUCCESSFUL'                          , N'en-US', N'Users', null, null, N'Update complete: {0} affected';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REASS_USER_FROM'                           , N'en-US', N'Users', null, null, N'From:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REASS_USER_TEAM'                           , N'en-US', N'Users', null, null, N'Set Team:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REASS_USER_TO'                             , N'en-US', N'Users', null, null, N'To:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REASS_WILL_BE_UPDATED'                     , N'en-US', N'Users', null, null, N'{0} records from {1} will be updated.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REASS_WORK_NOTIF_AUDIT'                    , N'en-US', N'Users', null, null, N'Reassign workflows';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REASSIGN_TITLE'                            , N'en-US', N'Users', null, null, N'Reassignment';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RECEIVE_NOTIFICATIONS'                     , N'en-US', N'Users', null, null, N'Receive Notifications:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RECEIVE_NOTIFICATIONS_TEXT'                , N'en-US', N'Users', null, null, N'Show notifications.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REMINDER'                                  , N'en-US', N'Users', null, null, N'Reminder';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REMINDER_TEXT'                             , N'en-US', N'Users', null, null, N'Show reminders.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REMOTE_HOST'                               , N'en-US', N'Users', null, null, N'Remote Host:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REPORTS_TO_ID'                             , N'en-US', N'Users', null, null, N'Reports To ID:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REPORTS_TO_NAME'                           , N'en-US', N'Users', null, null, N'Reports To Name:';
-- 10/12/2020 Paul.  Employees module may be disabled, so make sure to define LBL_REPORTS_TO for use on Users.EditView. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REPORTS_TO'                                , N'en-US', N'Users', null, null, N'Reports To:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REQUIRE'                                   , N'en-US', N'Users', null, null, N'Require';
-- 02/16/2011 Paul.  Fix URL for ChangePassword.  It had a single " and not enclosing double quotes. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RESET_PASSWORD_BODY'                       , N'en-US', N'Users', null, null, N'<p>A password reset was requested.</p><p>Please click the following link to reset your password:</p><p><a href="{0}">{0}</a></p>';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RESET_PASSWORD_STATUS'                     , N'en-US', N'Users', null, null, N'A Reset Password request has been emailed to the user.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RESET_PASSWORD_SUBJECT'                    , N'en-US', N'Users', null, null, N'Reset your password';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SAVE_QUERY'                                , N'en-US', N'Users', null, null, N'Save Query';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SAVE_QUERY_TEXT'                           , N'en-US', N'Users', null, null, N'Save search panel filters.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SEARCH_URL'                                , N'en-US', N'Users', null, null, N'Search Url';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_STATE'                                     , N'en-US', N'Users', null, null, N'State';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_STATUS'                                    , N'en-US', N'Users', null, null, N'Status:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SUBPANEL_TABS'                             , N'en-US', N'Users', null, null, N'Show SubPanel Tabs:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SUBPANEL_TABS_TEXT'                        , N'en-US', N'Users', null, null, N'Display the SubPanels in groups.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SYSTEM_GENERATED_PASSWORD'                 , N'en-US', N'Users', null, null, N'System Generated Password:';
-- 03/04/2011 Paul.  We need to allow the admin to set the flag to force a password change. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SYSTEM_GENERATED_PASSWORD_TEXT'            , N'en-US', N'Users', null, null, N'User must change password at next login.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TARGET'                                    , N'en-US', N'Users', null, null, N'Target:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_THEME'                                     , N'en-US', N'Users', null, null, N'Theme';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_THEME_TEXT'                                , N'en-US', N'Users', null, null, N'Select theme.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TIME_FORMAT'                               , N'en-US', N'Users', null, null, N'Time Format';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TIME_FORMAT_TEXT'                          , N'en-US', N'Users', null, null, N'Set time format.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TIMEZONE'                                  , N'en-US', N'Users', null, null, N'Timezone';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TIMEZONE_ID'                               , N'en-US', N'Users', null, null, N'Timezone ID';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TIMEZONE_TEXT'                             , N'en-US', N'Users', null, null, N'Set time zone.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TITLE'                                     , N'en-US', N'Users', null, null, N'Title:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_USER'                                      , N'en-US', N'Users', null, null, N'User';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_USER_ASSIGNMENT_OPTIONAL'                  , N'en-US', N'Users', null, null, N'User Assignment Optional';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_USER_ASSIGNMENT_REQUIRED'                  , N'en-US', N'Users', null, null, N'User Assignment Required';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_USER_HASH'                                 , N'en-US', N'Users', null, null, N'User Hash:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_USER_INFORMATION'                          , N'en-US', N'Users', null, null, N'User Information';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_USER_NAME'                                 , N'en-US', N'Users', null, null, N'User Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_USER_PASSWORD'                             , N'en-US', N'Users', null, null, N'User Password:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_USER_PREFERENCES'                          , N'en-US', N'Users', null, null, N'User Preferences:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_USER_SETTINGS'                             , N'en-US', N'Users', null, null, N'User Settings';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_YOUR_PUBLISH_URL'                          , N'en-US', N'Users', null, null, N'Your Publish Url';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_NEW_USER'                                  , N'en-US', N'Users', null, null, N'Create User';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_REASSIGN_RECORDS'                          , N'en-US', N'Users', null, null, N'Reassign Records';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_USER_LIST'                                 , N'en-US', N'Users', null, null, N'Users';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPERSONATE'                               , N'en-US', N'Users', null, null, N'Impersonate';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPERSONATING'                             , N'en-US', N'Users', null, null, N'Impersonating';
GO

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_GOOGLEAPPS_SYNC_CONTACTS'                  , N'en-US', N'Users', null, null, N'Sync Google Contacts:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_GOOGLEAPPS_SYNC_CALENDAR'                  , N'en-US', N'Users', null, null, N'Sync Google Calendar:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_GOOGLEAPPS_USERNAME'                       , N'en-US', N'Users', null, null, N'Google Apps Username:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_GOOGLEAPPS_PASSWORD'                       , N'en-US', N'Users', null, null, N'Google Apps Password:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_GOOGLEAPPS_USERNAME_TIP'                   , N'en-US', N'Users', null, null, N'Only when different from SMTP Username';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_GOOGLEAPPS_PASSWORD_TIP'                   , N'en-US', N'Users', null, null, N'Only when different from SMTP Password';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_GOOGLEAPPS_OPTIONS_TITLE'                  , N'en-US', N'Users', null, null, N'Google Apps Settings';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_GOOGLEAPPS_TEST_SUCCESSFUL'                , N'en-US', N'Users', null, null, N'Google Apps authentication was successful.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_GOOGLEAPPS_SYNC'                           , N'en-US', N'Users', null, null, N'Google Apps Sync';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_GOOGLEAPPS_SYNC_ALL'                       , N'en-US', N'Users', null, null, N'Google Apps Sync All';
GO

-- 12/13/2011 Paul.  Add support for Apple iCloud. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ICLOUD_SYNC_CONTACTS'                      , N'en-US', N'Users', null, null, N'Sync iCloud Contacts:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ICLOUD_SYNC_CALENDAR'                      , N'en-US', N'Users', null, null, N'Sync iCloud Calendar:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ICLOUD_USERNAME'                           , N'en-US', N'Users', null, null, N'iCloud Username:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ICLOUD_PASSWORD'                           , N'en-US', N'Users', null, null, N'iCloud Password:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ICLOUD_OPTIONS_TITLE'                      , N'en-US', N'Users', null, null, N'iCloud Settings';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ICLOUD_TEST_SUCCESSFUL'                    , N'en-US', N'Users', null, null, N'iCloud authentication was successful.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ICLOUD_SYNC'                               , N'en-US', N'Users', null, null, N'iCloud Sync';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ICLOUD_SYNC_ALL'                           , N'en-US', N'Users', null, null, N'iCloud Sync All';
-- 07/11/2020 Paul.  iCloud now uses 2 factor authentication, so we need to prompt for the security code. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ICLOUD_SECURITY_CODE'                      , N'en-US', N'Users', null, null, N'Security Code:';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_ICLOUD_SECURITY_CODE_REQUIRED'             , N'en-US', N'Users', null, null, N'Security Code is required.';

exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EXCHANGE_SYNC'                             , N'en-US', N'Users', null, null, N'Exchange Sync';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EXCHANGE_SYNC_ALL'                         , N'en-US', N'Users', null, null, N'Exchange Sync All';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SYNC_BACKGROUND'                           , N'en-US', N'Users', null, null, N'Sync will be performed in a background thread.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_FORM_TITLE'                            , N'en-US', N'Users', null, null, N'Create User';

-- 04/16/2013 Paul.  Allow system to be restricted by IP Address. 
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_INVALID_IP_ADDRESS'                        , N'en-US', N'Users', null, null, N'Invalid IP Address.';

-- 04/17/2013 Paul.  New page to distribute records. 
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_REDISTRIBUTE_RECORDS'                      , N'en-US', N'Users', null, null, N'Redistribute Records';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REDISTRIBUTE_TITLE'                        , N'en-US', N'Users', null, null, N'Redistribute Records';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REDISTRIBUTE_DESCRIPTION'                  , N'en-US', N'Users', null, null, N'Redistribute records from one user to many users, with dependent records following the parent.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REDISTRIBUTE_SELECT_USERS'                 , N'en-US', N'Users', null, null, N'Select one or more users.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REDISTRIBUTE_WILL_BE_UPDATED'              , N'en-US', N'Users', null, null, N'{0} records from {1} will be distributed to the following users: {2}';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_REDISTRIBUTE_SELECT_USERS'                 , N'en-US', N'Users', null, null, N'You must select at least one user.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_REDISTRIBUTE_DIFF_USERS'                   , N'en-US', N'Users', null, null, N'Records cannot be redistributed to the same user.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REDISTRIBUTE_SUCCESSFUL'                   , N'en-US', N'Users', null, null, N'Update complete: {0} affected';

-- 09/20/2013 Paul.  Move EXTENSION to the main table. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EXTENSION'                                 , N'en-US', N'Users', null, null, N'Extension:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_EXTENSION'                            , N'en-US', N'Users', null, null, N'Extension';
-- 09/22/2013 Paul.  Add SmsMessages module. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SMS_OPT_IN'                                , N'en-US', N'Users', null, null, N'SMS Opt In:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_SMS_OPT_IN'                           , N'en-US', N'Users', null, null, N'SMS Opt In';
-- 11/21/2014 Paul.  Add User Picture. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PICTURE'                                   , N'en-US', N'Users', null, null, N'Picture:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_PICTURE'                              , N'en-US', N'Users', null, null, N'Picture';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ACCESS_RIGHTS'                             , N'en-US', N'Users', null, null, N'Access Rights';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OFFICE365_OPTIONS_TITLE'                   , N'en-US', N'Users', null, null, N'Office 365 Settings';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ICLOUD_NOT_ENABLED'                        , N'en-US', N'Users', null, null, N'iCloud has not been enabled.';

-- 11/30/2017 Paul.  Add ASSIGNED_SET_ID for Dynamic User Assignment. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DYNAMIC'                                   , N'en-US', N'Users', null, null, N'Dynamic';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SINGULAR'                                  , N'en-US', N'Users', null, null, N'Singular';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ASSIGNMENT_DYNAMIC'                        , N'en-US', N'Users', null, null, N' and Dynamic';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ASSIGNMENT_NOT_DYNAMIC'                    , N'en-US', N'Users', null, null, N' and Not Dynamic';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UPDATING_MODULES_DYNAMIC_ASSIGNMENT'       , N'en-US', N'Users', null, null, N'Updating all modules to Dynamic Assignment in the background.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UPDATING_MODULES_DYNAMIC_TEAMS'            , N'en-US', N'Users', null, null, N'Updating all modules to Dynamic Teams in the background.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_PRIMARY_USER'                         , N'en-US', N'Users', null, null, N'Primary';
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/

BEGIN
-- #endif Oracle */
exec dbo.spTERMINOLOGY_InsertOnly N'Users'                                         , N'en-US', null, N'moduleList'                        ,  25, N'Users';
exec dbo.spTERMINOLOGY_InsertOnly N'Users'                                         , N'en-US', null, N'moduleListSingular'                ,  24, N'User';

exec dbo.spTERMINOLOGY_InsertOnly N'Active'                                        , N'en-US', null, N'employee_status_dom'               ,   1, N'Active';
exec dbo.spTERMINOLOGY_InsertOnly N'Terminated'                                    , N'en-US', null, N'employee_status_dom'               ,   2, N'Terminated';
exec dbo.spTERMINOLOGY_InsertOnly N'Leave of Absence'                              , N'en-US', null, N'employee_status_dom'               ,   3, N'Leave of absence';

exec dbo.spTERMINOLOGY_InsertOnly N'MSN'                                           , N'en-US', null, N'messenger_type_dom'                ,   1, N'Msn';
exec dbo.spTERMINOLOGY_InsertOnly N'Yahoo!'                                        , N'en-US', null, N'messenger_type_dom'                ,   2, N'Yahoo!';
exec dbo.spTERMINOLOGY_InsertOnly N'AOL'                                           , N'en-US', null, N'messenger_type_dom'                ,   3, N'Aol';

exec dbo.spTERMINOLOGY_InsertOnly N'sendmail'                                      , N'en-US', null, N'notifymail_sendtype'               ,   1, N'Sendmail';
exec dbo.spTERMINOLOGY_InsertOnly N'SMTP'                                          , N'en-US', null, N'notifymail_sendtype'               ,   2, N'Smtp';

exec dbo.spTERMINOLOGY_InsertOnly N'Active'                                        , N'en-US', null, N'user_status_dom'                   ,   1, N'Active';
exec dbo.spTERMINOLOGY_InsertOnly N'Inactive'                                      , N'en-US', null, N'user_status_dom'                   ,   2, N'Inactive';

-- 01/31/2017 Paul.  Add support for Exchange using Username/Password. 
-- delete from TERMINOLOGY where LIST_NAME = 'user_mail_send_type';
exec dbo.spTERMINOLOGY_InsertOnly N'smtp'                                          , N'en-US', null, N'user_mail_send_type', 1, N'SMTP';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAIL_SENDTYPE'                             , N'en-US', N'Users', null, null, N'Send Type:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SMTP_TITLE'                                , N'en-US', N'Users', null, null, N'SMTP Settings';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAIL_SMTPSERVER'                           , N'en-US', N'Users', null, null, N'SMTP Server:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAIL_SMTPPORT'                             , N'en-US', N'Users', null, null, N'Port:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAIL_SMTPUSER'                             , N'en-US', N'Users', null, null, N'Login:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAIL_SMTPPASS'                             , N'en-US', N'Users', null, null, N'Password:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAIL_SMTPAUTH_REQ'                         , N'en-US', N'Users', null, null, N'Use SMTP Authentication?';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAIL_SMTPSSL'                              , N'en-US', N'Users', null, null, N'Enable SMTP over SSL:';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_EMAIL_REQUIRED_TO_TEST'                    , N'en-US', N'Users', null, null, N'Email is required to test.';
-- 04/02/2018 Paul.  MassUpdate has special rules, such as no fields are required and Assigned or Team fields do not get initialized. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADD_USER_SET'                              , N'en-US', N'Users', null, null, N'Add';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REPLACE_USER_SET'                          , N'en-US', N'Users', null, null, N'Replace';
-- 02/18/2020 Paul. Allow React Client to forget password. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADFS_AUTHENTICATION_REQUIRED'              , N'en-US', N'Users', null, null, N'ADFS Authentication Required.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_AZURE_AUTHENTICATION_REQUIRED'             , N'en-US', N'Users', null, null, N'Azure Authentication Required.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_WINDOWS_AUTHENTICATION_REQUIRED'           , N'en-US', N'Users', null, null, N'Windows Authentication Required.';
-- 07/04/2020 Paul.  Configurator.LBL_EMAIL_TEST_OUTBOUND_SETTINGS may not be available to the React Client. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EMAIL_TEST'                                , N'en-US', N'Users', null, null, N'Test';
-- 08/11/2020 Paul.  Employees module may be disabled, so create a Users version of LBL_RESET_PREFERENCES. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RESET_PREFERENCES'                         , N'en-US', N'Users', null, null, N'Reset Preferences';

GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Users_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Users_en_us')
/
-- #endif IBM_DB2 */



-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:34 AM.
print 'TERMINOLOGY Global en-us';
GO

set nocount on;
GO

-- 09/14/2012 Paul.  Fix spelling for ERR_CONCURRENCY_EXCEPTION. 
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_CONCURRENCY_EXCEPTION'                     , N'en-US', null, null, null, N'This record was last edited on {0}.  Please reload and reapply your changes.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_CONCURRENCY_OVERRIDE'                      , N'en-US', null, null, null, N'This record was last edited on {0}.  Do you want to override the changes?';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_INVALID_DATE'                              , N'en-US', null, null, null, N'Invalid Date.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_INVALID_DECIMAL'                           , N'en-US', null, null, null, N'Invalid Decimal Value.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_INVALID_EMAIL_ADDRESS'                     , N'en-US', null, null, null, N'Invalid Email Address.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_INVALID_INTEGER'                           , N'en-US', null, null, null, N'Invalid Integer Value.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_INVALID_PHONE_NUMBER'                      , N'en-US', null, null, null, N'Invalid Phone Number.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_INVALID_TIME'                              , N'en-US', null, null, null, N'Invalid Time.';
-- 07/06/2017 Paul.  Missing field validator messages. 
-- select * from vwFIELD_VALIDATORS order by NAME
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_INVALID_POSITIVE_DECIMAL'                  , N'en-US', null, null, null, N'Invalid Positive Decimal.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_INVALID_POSITIVE_DECIMAL_COMMAS'           , N'en-US', null, null, null, N'Invalid Positive Decimal with Comma.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_INVALID_INTEGER'                           , N'en-US', null, null, null, N'Invalid Integer.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_TWITTER_TRACK'                             , N'en-US', null, null, null, N'Invalid Twitter Track.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_TWITTER_MESSAGE'                           , N'en-US', null, null, null, N'Invalid Twitter Message.';

exec dbo.spTERMINOLOGY_InsertOnly N'ERR_MISSING_REQUIRED_FIELDS'                   , N'en-US', null, null, null, N'Missing Required Fields.';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_REQUIRED_FIELD'                            , N'en-US', null, null, null, N'Required Field.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ACCOUNT'                                   , N'en-US', null, null, null, N'Account';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ACTIONS'                                   , N'en-US', null, null, null, N'Actions';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADD_BUTTON'                                , N'en-US', null, null, null, N'Add';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADD_BUTTON_LABEL'                          , N'en-US', null, null, null, N'Add';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADD_BUTTON_TITLE'                          , N'en-US', null, null, null, N'Add';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADMIN'                                     , N'en-US', null, null, null, N'Admin';
-- 04/16/2021 Paul.  Provide quick access to old admin system. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADMIN_CLASSIC'                             , N'en-US', null, null, null, N'Admin (Classic)';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ALT_HOT_KEY'                               , N'en-US', null, null, null, N'Alt Hot Key';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ASSIGNED_TO'                               , N'en-US', null, null, null, N'Assigned To:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ASSIGNED_TO_NAME'                          , N'en-US', null, null, null, N'Assigned To Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ASSIGNED_TO_USER'                          , N'en-US', null, null, null, N'Assigned To User';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ASSIGNED_USER_ID'                          , N'en-US', null, null, null, N'Assigned User ID:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_AUDIT_ACTION'                              , N'en-US', null, null, null, N'Audit Action:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_AUDIT_COLUMNS'                             , N'en-US', null, null, null, N'Audit Columns:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_AUDIT_DATE'                                , N'en-US', null, null, null, N'Audit Date:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_AUDIT_ID'                                  , N'en-US', null, null, null, N'Audit ID:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_AUDIT_TOKEN'                               , N'en-US', null, null, null, N'Audit Token:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BACK'                                      , N'en-US', null, null, null, N'Back';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BACK_BUTTON_LABEL'                         , N'en-US', null, null, null, N'Back';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BACK_BUTTON_TITLE'                         , N'en-US', null, null, null, N'Back';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BROWSER_TITLE'                             , N'en-US', null, null, null, N'SplendidCRM';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BY'                                        , N'en-US', null, null, null, N'By';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CAMPAIGNS_SEND_QUEUED'                     , N'en-US', null, null, null, N'Campaigns Send Queued';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CANCEL_BUTTON_LABEL'                       , N'en-US', null, null, null, N'Cancel';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CANCEL_BUTTON_TITLE'                       , N'en-US', null, null, null, N'Cancel';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CHANGE_BUTTON_LABEL'                       , N'en-US', null, null, null, N'Change';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CHANGE_BUTTON_TITLE'                       , N'en-US', null, null, null, N'Change';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CHECKALL'                                  , N'en-US', null, null, null, N'Check All';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CLEAR_BUTTON_LABEL'                        , N'en-US', null, null, null, N'Clear';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CLEAR_BUTTON_TITLE'                        , N'en-US', null, null, null, N'Clear';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CLEARALL'                                  , N'en-US', null, null, null, N'Clear All';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_COMPOSE_EMAIL_BUTTON_LABEL'                , N'en-US', null, null, null, N'Compose Email';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_COMPOSE_EMAIL_BUTTON_TITLE'                , N'en-US', null, null, null, N'Compose Email';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CREATE_BUTTON_LABEL'                       , N'en-US', null, null, null, N'Create';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CREATE_BUTTON_TITLE'                       , N'en-US', null, null, null, N'Create';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CREATED_BY'                                , N'en-US', null, null, null, N'Created By:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CREATED_BY_ID'                             , N'en-US', null, null, null, N'Created By:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CREATED_BY_NAME'                           , N'en-US', null, null, null, N'Created By Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CREATED_BY_USER'                           , N'en-US', null, null, null, N'Created By User';
-- 03/31/2012 Paul.  Change current user to My Items. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CURRENT_USER_FILTER'                       , N'en-US', null, null, null, N'My Items:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DATE_ENTERED'                              , N'en-US', null, null, null, N'Date Entered:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DATE_MODIFIED'                             , N'en-US', null, null, null, N'Date Modified:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DATE_MODIFIED_UTC'                         , N'en-US', null, null, null, N'Date Modified UTC';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DEFAULT'                                   , N'en-US', null, null, null, N'Default';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DEFAULTS_BUTTON_LABEL'                     , N'en-US', null, null, null, N'Restore Defaults';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DEFAULTS_BUTTON_TITLE'                     , N'en-US', null, null, null, N'Restore Defaults';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DELETE'                                    , N'en-US', null, null, null, N'Delete';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DELETE_BUTTON_LABEL'                       , N'en-US', null, null, null, N'Delete';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DELETE_BUTTON_TITLE'                       , N'en-US', null, null, null, N'Delete';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DELETED'                                   , N'en-US', null, null, null, N'Deleted:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DESELECT_ALL'                              , N'en-US', null, null, null, N'Deselect All';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DONE_BUTTON_LABEL'                         , N'en-US', null, null, null, N'Done';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DONE_BUTTON_TITLE'                         , N'en-US', null, null, null, N'Done';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DUPLICATE_BUTTON_LABEL'                    , N'en-US', null, null, null, N'Duplicate';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DUPLICATE_BUTTON_TITLE'                    , N'en-US', null, null, null, N'Duplicate';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EDIT_BUTTON_LABEL'                         , N'en-US', null, null, null, N'Edit';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EDIT_BUTTON_TITLE'                         , N'en-US', null, null, null, N'Edit';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EMAIL_SEARCH_NO_RESULTS'                   , N'en-US', null, null, null, N'No results were found.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EMPLOYEES'                                 , N'en-US', null, null, null, N'Employees';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ENTER_DATE'                                , N'en-US', null, null, null, N'Enter Date';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EXCHANGE_FOLDER'                           , N'en-US', null, null, null, N'Create Exchange Folder:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EXCHANGE_SYNC'                             , N'en-US', null, null, null, N'Sync Exchange';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EXCHANGE_UNSYNC'                           , N'en-US', null, null, null, N'Unsync Exchange';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EXPORT'                                    , N'en-US', null, null, null, N'Export';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EXPORT_BUTTON_LABEL'                       , N'en-US', null, null, null, N'Export';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EXPORT_BUTTON_TITLE'                       , N'en-US', null, null, null, N'Export';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EXPORT_DATABASE'                           , N'en-US', null, null, null, N'Export Database';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EXPORT_DATABASE_TITLE'                     , N'en-US', null, null, null, N'Export all database tables';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_EXPORT_VCARD'                              , N'en-US', null, null, null, N'Export vCard';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FULL_FORM_BUTTON_LABEL'                    , N'en-US', null, null, null, N'Full Form';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FULL_FORM_BUTTON_TITLE'                    , N'en-US', null, null, null, N'Full Form';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_GO_BUTTON_LABEL'                           , N'en-US', null, null, null, N'Go';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ID'                                        , N'en-US', null, null, null, N'ID:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ID_C'                                      , N'en-US', null, null, null, N'ID_C:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT'                                    , N'en-US', null, null, null, N'Import';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_IMPORT_VCARD'                              , N'en-US', null, null, null, N'Import vCard';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LAST_VIEWED'                               , N'en-US', null, null, null, N'Last Viewed';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LINK_NONE'                                 , N'en-US', null, null, null, N'None';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ASSIGNED_TO'                          , N'en-US', null, null, null, N'Assigned To';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ASSIGNED_TO_NAME'                     , N'en-US', null, null, null, N'Assigned To Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ASSIGNED_USER'                        , N'en-US', null, null, null, N'Assigned User';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ASSIGNED_USER_ID'                     , N'en-US', null, null, null, N'Assigned User ID';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_AUDIT_ACTION'                         , N'en-US', null, null, null, N'Audit Action';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_AUDIT_COLUMNS'                        , N'en-US', null, null, null, N'Audit Columns';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_AUDIT_DATE'                           , N'en-US', null, null, null, N'Audit Date';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_AUDIT_ID'                             , N'en-US', null, null, null, N'Audit ID';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_AUDIT_TOKEN'                          , N'en-US', null, null, null, N'Audit Token';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_CONTACT_NAME'                         , N'en-US', null, null, null, N'Contact Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_CREATED'                              , N'en-US', null, null, null, N'Created';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_CREATED_BY'                           , N'en-US', null, null, null, N'Created By';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_CREATED_BY_ID'                        , N'en-US', null, null, null, N'Created By';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_CREATED_BY_NAME'                      , N'en-US', null, null, null, N'Created By Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_CREATED_BY_USER'                      , N'en-US', null, null, null, N'Created By ID';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DATE_ENTERED'                         , N'en-US', null, null, null, N'Date Entered';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DATE_MODIFIED'                        , N'en-US', null, null, null, N'Date Modified';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DATE_MODIFIED_UTC'                    , N'en-US', null, null, null, N'Date Modified UTC';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DEFAULT'                              , N'en-US', null, null, null, N'Default';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_DELETED'                              , N'en-US', null, null, null, N'Deleted';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ID'                                   , N'en-US', null, null, null, N'ID';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ID_C'                                 , N'en-US', null, null, null, N'ID_C';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MODIFIED_BY'                          , N'en-US', null, null, null, N'Modified By';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MODIFIED_BY_ID'                       , N'en-US', null, null, null, N'Modified By';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MODIFIED_BY_NAME'                     , N'en-US', null, null, null, N'Modified By Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_MODIFIED_USER_ID'                     , N'en-US', null, null, null, N'Modified User ID';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_OF'                                   , N'en-US', null, null, null, N'Of';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_PHONE'                                , N'en-US', null, null, null, N'Phone';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_TEAM_ID'                              , N'en-US', null, null, null, N'Team ID';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_TEAM_NAME'                            , N'en-US', null, null, null, N'Team Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_TEAM_SET_NAME'                        , N'en-US', null, null, null, N'Team Set Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LISTVIEW_NO_SELECTED'                      , N'en-US', null, null, null, N'No Selected';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LISTVIEW_OPTION_CURRENT'                   , N'en-US', null, null, null, N'Current Page';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LISTVIEW_OPTION_ENTIRE'                    , N'en-US', null, null, null, N'Entire List';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LISTVIEW_OPTION_SELECTED'                  , N'en-US', null, null, null, N'Selected Records';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LISTVIEW_TWO_REQUIRED'                     , N'en-US', null, null, null, N'Two Required';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LOGOUT'                                    , N'en-US', null, null, null, N'Logout';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MAILMERGE'                                 , N'en-US', null, null, null, N'Mail Merge';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MASS_UPDATE_TITLE'                         , N'en-US', null, null, null, N'Mass Update';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MERGE'                                     , N'en-US', null, null, null, N'Merge';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODIFIED_BY'                               , N'en-US', null, null, null, N'Modified By:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODIFIED_BY_ID'                            , N'en-US', null, null, null, N'Modified By:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODIFIED_BY_NAME'                          , N'en-US', null, null, null, N'Modified By Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODIFIED_BY_USER'                          , N'en-US', null, null, null, N'Modified By User';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODIFIED_USER_ID'                          , N'en-US', null, null, null, N'Modified User ID:';
-- 08/07/2013 Paul.  Change My Account to Profile. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MY_ACCOUNT'                                , N'en-US', null, null, null, N'Profile';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_BUTTON_LABEL'                          , N'en-US', null, null, null, N'Create';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEW_BUTTON_TITLE'                          , N'en-US', null, null, null, N'Create';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEXT_BUTTON_LABEL'                         , N'en-US', null, null, null, N'Next';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NEXT_BUTTON_TITLE'                         , N'en-US', null, null, null, N'Next';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NO'                                        , N'en-US', null, null, null, N'No';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NONE'                                      , N'en-US', null, null, null, N'--None--';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NONE_VALUE'                                , N'en-US', null, null, null, N'None';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OR'                                        , N'en-US', null, null, null, N'Or';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PARENT_ID'                                 , N'en-US', null, null, null, N'Parent ID';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PREVIOUS_BUTTON_LABEL'                     , N'en-US', null, null, null, N'Previous';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PREVIOUS_BUTTON_TITLE'                     , N'en-US', null, null, null, N'Previous';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RELATED_RECORDS'                           , N'en-US', null, null, null, N'Related Records';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REMOVE'                                    , N'en-US', null, null, null, N'Remove';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REQUIRED_SYMBOL'                           , N'en-US', null, null, null, N'*';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SAVE_BUTTON_LABEL'                         , N'en-US', null, null, null, N'Save';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SAVE_BUTTON_TITLE'                         , N'en-US', null, null, null, N'Save';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SAVE_NEW_BUTTON_LABEL'                     , N'en-US', null, null, null, N'Save & Create New';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SAVE_NEW_BUTTON_TITLE'                     , N'en-US', null, null, null, N'Save & Create New';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SAVED_SEARCH_SHORTCUT'                     , N'en-US', null, null, null, N'Saved Searches';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SEARCH'                                    , N'en-US', null, null, null, N'Search';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SEARCH_BUTTON_LABEL'                       , N'en-US', null, null, null, N'Search';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SEARCH_BUTTON_TITLE'                       , N'en-US', null, null, null, N'Search';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SELECT_ALL'                                , N'en-US', null, null, null, N'Select All';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SELECT_BUTTON_LABEL'                       , N'en-US', null, null, null, N'Select';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SELECT_BUTTON_TITLE'                       , N'en-US', null, null, null, N'Select';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SELECT_CHECKED_BUTTON_LABEL'               , N'en-US', null, null, null, N'Select Checked';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SELECT_CHECKED_BUTTON_TITLE'               , N'en-US', null, null, null, N'Select Checked';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SELECT_PAGE'                               , N'en-US', null, null, null, N'Select Page';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SELECTED'                                  , N'en-US', null, null, null, N'Selected: {0}';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SHORTCUTS'                                 , N'en-US', null, null, null, N'Shortcuts';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SUBMIT_BUTTON_LABEL'                       , N'en-US', null, null, null, N'Submit';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SUBMIT_BUTTON_TITLE'                       , N'en-US', null, null, null, N'Submit';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SYNC'                                      , N'en-US', null, null, null, N'Sync';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TABGROUP_ACTIVITIES'                       , N'en-US', null, null, null, N'Activities';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TABGROUP_ALL'                              , N'en-US', null, null, null, N'All';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TABGROUP_COLLABORATION'                    , N'en-US', null, null, null, N'Collaboration';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TABGROUP_HOME'                             , N'en-US', null, null, null, N'Home';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TABGROUP_MARKETING'                        , N'en-US', null, null, null, N'Marketing';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TABGROUP_OTHER'                            , N'en-US', null, null, null, N'Other';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TABGROUP_REPORTS'                          , N'en-US', null, null, null, N'Reports';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TABGROUP_SALES'                            , N'en-US', null, null, null, N'Sales';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TABGROUP_SUPPORT'                          , N'en-US', null, null, null, N'Support';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TABGROUP_TOOLS'                            , N'en-US', null, null, null, N'Tools';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEAM_ID'                                   , N'en-US', null, null, null, N'Team ID';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEAM_NAME'                                 , N'en-US', null, null, null, N'Team Name:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEAM_SET_ID'                               , N'en-US', null, null, null, N'Team Set ID:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEAM_SET_LIST'                             , N'en-US', null, null, null, N'Teams:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEAM_SET_NAME'                             , N'en-US', null, null, null, N'Teams:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TOO_MANY_RECORDS'                          , N'en-US', null, null, null, N'A maximum of 200 records can be modified at one time.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TRAINING'                                  , N'en-US', null, null, null, N'Training';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TYPE_TO_SEARCH'                            , N'en-US', null, null, null, N'Type To Search';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UNAUTH_ADMIN'                              , N'en-US', null, null, null, N'Unauthorized access';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UNSYNC'                                    , N'en-US', null, null, null, N'Unsync';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UPDATE'                                    , N'en-US', null, null, null, N'Update';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UPDATE_BUTTON_LABEL'                       , N'en-US', null, null, null, N'Update';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_UPDATE_BUTTON_TITLE'                       , N'en-US', null, null, null, N'Update';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_VCARD'                                     , N'en-US', null, null, null, N'vCard';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_YES'                                       , N'en-US', null, null, null, N'Yes';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_ABOUT'                                     , N'en-US', null, null, null, N'About';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_ADVANCED_SEARCH'                           , N'en-US', null, null, null, N'Advanced Search';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_BASIC_SEARCH'                              , N'en-US', null, null, null, N'Basic Search';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_CLEAR_DEFAULT'                             , N'en-US', null, null, null, N'Clear Default';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_DELETE'                                    , N'en-US', null, null, null, N'del';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_DUPLICATE_SEARCH'                          , N'en-US', null, null, null, N'Duplicate Search';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_EDIT'                                      , N'en-US', null, null, null, N'Edit';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_GET_LATEST'                                , N'en-US', null, null, null, N'Get Latest';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_HELP'                                      , N'en-US', null, null, null, N'Help';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_HELP_WIKI'                                 , N'en-US', null, null, null, N'Help Wiki';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_IMPORT_VCARD'                              , N'en-US', null, null, null, N'Import vCard';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_LIST_END'                                  , N'en-US', null, null, null, N'End';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_LIST_NEXT'                                 , N'en-US', null, null, null, N'Next';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_LIST_PREVIOUS'                             , N'en-US', null, null, null, N'Previous';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_LIST_RETURN'                               , N'en-US', null, null, null, N'Return to List';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_LIST_START'                                , N'en-US', null, null, null, N'Start';
-- 12/31/2017 Paul.  First and Last are used on HTML5 client. 
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_LIST_FIRST'                                , N'en-US', null, null, null, N'First';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_LIST_LAST'                                 , N'en-US', null, null, null, N'Last';

exec dbo.spTERMINOLOGY_InsertOnly N'LNK_MAKE_DEFAULT'                              , N'en-US', null, null, null, N'Make Default';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_PRINT'                                     , N'en-US', null, null, null, N'Print';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_REMOVE'                                    , N'en-US', null, null, null, N'rem';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_SAVED_VIEWS'                               , N'en-US', null, null, null, N'Saved Views';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_SORT'                                      , N'en-US', null, null, null, N'Sort';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_VIEW'                                      , N'en-US', null, null, null, N'View';
-- 06/30/2018 Paul.  Rename to Audit Log. 
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_VIEW_CHANGE_LOG'                           , N'en-US', null, null, null, N'View Audit Log';
exec dbo.spTERMINOLOGY_InsertOnly N'NTC_DELETE_CONFIRMATION'                       , N'en-US', null, null, null, N'Are you sure?';
-- 09/16/2012 Paul.  Global remove flag. 
exec dbo.spTERMINOLOGY_InsertOnly N'NTC_REMOVE_CONFIRMATION'                       , N'en-US', null, null, null, N'Are you sure?';
exec dbo.spTERMINOLOGY_InsertOnly N'NTC_LOGIN_MESSAGE'                             , N'en-US', null, null, null, N'Please login.';
exec dbo.spTERMINOLOGY_InsertOnly N'NTC_NO_ITEMS_DISPLAY'                          , N'en-US', null, null, null, N'none';
exec dbo.spTERMINOLOGY_InsertOnly N'NTC_REQUIRED'                                  , N'en-US', null, null, null, N'Required.';
exec dbo.spTERMINOLOGY_InsertOnly N'NTC_WELCOME'                                   , N'en-US', null, null, null, N'Welcome.';
-- 10/02/2011 Paul.  HTML5 will support offline access. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ENABLE_OFFLINE'                            , N'en-US', null, null, null, N'Enable Offline Access';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ONLINE'                                    , N'en-US', null, null, null, N'Online';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_OFFLINE'                                   , N'en-US', null, null, null, N'Offline';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CACHE_SELECTED'                            , N'en-US', null, null, null, N'Cache Selected';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_HTML5_OFFLINE_CLIENT'                      , N'en-US', null, null, null, N'HTML5 Offline Client';
-- 10/16/2016 Paul.  Remove offline ability. 
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_MOBILE_CLIENT'                             , N'en-US', null, null, null, N'Mobile Client';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CACHE_ALL'                                 , N'en-US', null, null, null, N'Cache All';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_STOP_CACHING'                              , N'en-US', null, null, null, N'Stop Caching';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SYSTEM_LOG'                                , N'en-US', null, null, null, N'System Log';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SPLENDID_STORAGE'                          , N'en-US', null, null, null, N'Splendid Storage';
-- 12/30/2011 Paul.  Was previously displaying delete confirmation message. 
exec dbo.spTERMINOLOGY_InsertOnly N'NTC_CACHE_CONFIRMATION'                        , N'en-US', null, null, null, N'Are you sure you want to cache all records?';
-- 03/29/2012 Paul.  New menu has more text. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MORE'                                      , N'en-US', null, null, null, N'More';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RELOAD'                                    , N'en-US', null, null, null, N'( Reload )';
-- 03/31/2012 Paul.  Add support for favorites. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FAVORITES'                                 , N'en-US', null, null, null, N'Favorites';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FAVORITES_FILTER'                          , N'en-US', null, null, null, N'My Favorites:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_REMOVE_FROM_FAVORITES'                     , N'en-US', null, null, null, N'Remove from Favorites';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ADD_TO_FAVORITES'                          , N'en-US', null, null, null, N'Add to Favorites';

-- 05/23/2012 Paul.  Test and Sync are very common. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEST_BUTTON_LABEL'                         , N'en-US', null, null, null, N'Test';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_TEST_BUTTON_TITLE'                         , N'en-US', null, null, null, N'Test';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SYNC_BUTTON_LABEL'                         , N'en-US', null, null, null, N'Sync';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SYNC_BUTTON_TITLE'                         , N'en-US', null, null, null, N'Sync';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SYNC_ALL_BUTTON_LABEL'                     , N'en-US', null, null, null, N'Sync All';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SYNC_ALL_BUTTON_TITLE'                     , N'en-US', null, null, null, N'Sync All';

-- 09/01/2012 Paul.  Add LAST_ACTIVITY_DATE. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LAST_ACTIVITY_DATE'                        , N'en-US', null, null, null, N'Last Activity Date:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_LAST_ACTIVITY_DATE'                   , N'en-US', null, null, null, N'Last Activity';

-- 11/30/2012 Paul.  Provide a way to go from Mobile theme to Full Site. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FULL_SITE'                                 , N'en-US', null, null, null, N'Full Site';

-- 12/24/2012 Paul.  Add popup reminder to top of master page. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DISMISS_BUTTON_LABEL'                      , N'en-US', null, null, null, N'Dismiss';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DISMISS_BUTTON_TITLE'                      , N'en-US', null, null, null, N'Dismiss';

-- 10/10/2013 Paul.  LNK_INS is used in the Admin layout views. 
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_INS'                                       , N'en-US', null, null, null, N'Ins';
-- 03/01/2014 Paul.  Add Preview button. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PREVIEW'                                   , N'en-US', null, null, null, N'Preview';
-- 03/06/2014 Paul.  Add Dashboard panel. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_DASHBOARD'                                 , N'en-US', null, null, null, N'Dashboard';
-- 03/14/2014 Paul.  Add Save Duplicate button to most module save operations. 
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_DUPLICATE_EXCEPTION'                       , N'en-US', null, null, null, N'A record with that name already exists.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SAVE_DUPLICATE_LABEL'                      , N'en-US', null, null, null, N'Save Duplicate';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SAVE_DUPLICATE_TITLE'                      , N'en-US', null, null, null, N'Save Duplicate';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SAVE_CONCURRENCY_LABEL'                    , N'en-US', null, null, null, N'Overwrite Changes';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SAVE_CONCURRENCY_TITLE'                    , N'en-US', null, null, null, N'Overwrite Changes';

-- 12/19/2014 Paul.  This message needs to be globally available. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CLEAR_ERROR'                               , N'en-US', null, null, null, N'Clear Error';
-- 06/09/2015 Paul.  Define the unspecified abbreviation.
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_MODULE_ABBREVIATION'                       , N'en-US', null, null, null, N'';
-- 10/09/2015 Paul.  Add support for subscriptions. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FOLLOW'                                    , N'en-US', null, null, null, N'Follow';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FOLLOWING'                                 , N'en-US', null, null, null, N'Following';
-- 01/05/2016 Paul.  Provide a way to run a report from mass update. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NOTHING_SELECTED'                          , N'en-US', null, null, null, N'Nothing was selected.';
-- 04/04/2016 Paul.  Add link to core modules for related activities. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_VIEW_RELATED_ACTIVITIES'                   , N'en-US', null, null, null, N'View Related Activities';
-- 08/29/2016 Paul.  New Process term. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PENDING_PROCESS_ID'                        , N'en-US', null, null, null, N'Pending Process ID';
-- 09/26/2017 Paul.  Add Archive access right. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ARCHIVE_DATA'                              , N'en-US', null, null, null, N'Archive Data';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_RECOVER_DATA'                              , N'en-US', null, null, null, N'Recover Data';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BACKGROUND_OPERATION'                      , N'en-US', null, null, null, N'Operation will be performed in the background.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ARCHIVE_VIEW'                              , N'en-US', null, null, null, N'Archive View';
-- 10/19/2017 Paul.  Archive fields. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ARCHIVE_DATE_UTC'                          , N'en-US', null, null, null, N'Archive Date:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ARCHIVE_DATE_UTC'                     , N'en-US', null, null, null, N'Archive Date';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ARCHIVE_USER_ID'                           , N'en-US', null, null, null, N'Archive User:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ARCHIVE_BY'                                , N'en-US', null, null, null, N'Archive User:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ARCHIVE_BY'                           , N'en-US', null, null, null, N'Archive User';
exec dbo.spTERMINOLOGY_InsertOnly N'ERR_ARCHIVE_OFFLINE_CLIENT'                    , N'en-US', null, null, null, N'Cannot archive on Offline Client.';
-- 07/01/2019 Paul.  Perform archive lookup to see if record is archived. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ARCHIVED_RECORD'                           , N'en-US', null, null, null, N'This record has been archived.';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_VIEW_ARCHIVED_DATA'                        , N'en-US', null, null, null, N'View Archived Data';
-- 11/30/2017 Paul.  Add ASSIGNED_SET_ID for Dynamic User Assignment. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LIST_ASSIGNED_SET_NAME'                    , N'en-US', null, null, null, N'Assigned Set Name';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ASSIGNED_SET_ID'                           , N'en-US', null, null, null, N'Assigned Set ID:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ASSIGNED_SET_LIST'                         , N'en-US', null, null, null, N'Assigned Users:';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ASSIGNED_SET_NAME'                         , N'en-US', null, null, null, N'Assigned Users:';
-- 01/06/2018 Paul.  Add DATA_FORMAT to ListBox support multi-select CSV. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_ALL_SELECTED'                              , N'en-US', null, null, null, N'All selected';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_COUNT_SELECTED'                            , N'en-US', null, null, null, N'# of % selected';
-- 06/28/2018 Paul.  Show data privacy fields. 
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_PERSONAL_INFO'                             , N'en-US', null, null, null, N'View Personal Information';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_PERSONAL_INFO_FOR'                         , N'en-US', null, null, null, N'Personal Information for {0}';
-- 07/16/2019 Paul.  React Client has some unsupported features. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_FEATURE_NOT_SUPPORTED'                     , N'en-US', null, null, null, N'This feature is not supported at this time.';
-- 08/19/2019 Paul.  React Client uses Close in popups. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CLOSE_BUTTON_LABEL'                        , N'en-US', null, null, null, N'Close';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_CLOSE_BUTTON_TITLE'                        , N'en-US', null, null, null, N'Close';
-- 03/25/2022 Paul.  Allow Available columns to be added to SplendidGrid at runtime. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_AVAILABLE_COLUMNS'                         , N'en-US', null, null, null, N'Columns';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_AVAILABLE_CHOOSE_COLUMNS'                  , N'en-US', null, null, null, N'Choose Columns';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_AVAILABLE_DISPLAYED'                       , N'en-US', null, null, null, N'Displayed';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_AVAILABLE_HIDDEN'                          , N'en-US', null, null, null, N'Hidden';
-- 03/30/2022 Paul.  Add Insight fields. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_SELECT_SUBPANELS'                          , N'en-US', null, null, null, N'Select which subpanels to view';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_INSIGHT_TOTAL'                             , N'en-US', null, null, null, N'Total';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_INSIGHT_TOTAL_VALUE'                       , N'en-US', null, null, null, N'Total Value';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_INSIGHT_NEXT_EXPIRATION_DATE'              , N'en-US', null, null, null, N'Next Expiration Date';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_INSIGHT_NEXT_ACTIVITY_DATE'                , N'en-US', null, null, null, N'Next Activity Date';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_INSIGHT_LAST_TOUCHPOINT'                   , N'en-US', null, null, null, N'Last Touchpoint';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_INSIGHT_LAST_PARTICIPATED'                 , N'en-US', null, null, null, N'Last Participated';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_INSIGHT_OPEN_CASES_TOTAL'                  , N'en-US', null, null, null, N'Open Cases | Total';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_INSIGHT_RENEWAL_DATE'                      , N'en-US', null, null, null, N'Renewal Date';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_INSIGHT_TOTAL_OVERDUE_TOTAL'               , N'en-US', null, null, null, N'Total Overdue | Total';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_INSIGHT_LAST_ACTIVITY_DATE'                , N'en-US', null, null, null, N'Last Activity Date';
-- 04/06/2022 Paul.  Quick Search dropdown. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_QUICK_SEARCH_NEW_BUTTON'                   , N'en-US', null, null, null, N'New';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_QUICK_SEARCH_PLACEHOLDER'                  , N'en-US', null, null, null, N'Search...';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BULK_ACTION'                               , N'en-US', null, null, null, N'Bulk Action';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_SEARCH_FILTER'                             , N'en-US', null, null, null, N'Filter';

GO
/* -- #if Oracle
	COMMIT WORK;
END;
/

BEGIN
-- #endif Oracle */

exec dbo.spTERMINOLOGY_InsertOnly N'AL'                                            , N'en-US', null, N'states_dom'                        ,   1, N'Alabama';
exec dbo.spTERMINOLOGY_InsertOnly N'AK'                                            , N'en-US', null, N'states_dom'                        ,   2, N'Alaska';
exec dbo.spTERMINOLOGY_InsertOnly N'AZ'                                            , N'en-US', null, N'states_dom'                        ,   3, N'Arizona';
exec dbo.spTERMINOLOGY_InsertOnly N'AR'                                            , N'en-US', null, N'states_dom'                        ,   4, N'Arkansas';
exec dbo.spTERMINOLOGY_InsertOnly N'CA'                                            , N'en-US', null, N'states_dom'                        ,   5, N'California';
exec dbo.spTERMINOLOGY_InsertOnly N'CO'                                            , N'en-US', null, N'states_dom'                        ,   6, N'Colorado';
exec dbo.spTERMINOLOGY_InsertOnly N'CT'                                            , N'en-US', null, N'states_dom'                        ,   7, N'Connecticut';
exec dbo.spTERMINOLOGY_InsertOnly N'DE'                                            , N'en-US', null, N'states_dom'                        ,   8, N'Delaware';
exec dbo.spTERMINOLOGY_InsertOnly N'FL'                                            , N'en-US', null, N'states_dom'                        ,   9, N'Florida';
exec dbo.spTERMINOLOGY_InsertOnly N'GA'                                            , N'en-US', null, N'states_dom'                        ,  10, N'Georgia';
exec dbo.spTERMINOLOGY_InsertOnly N'HI'                                            , N'en-US', null, N'states_dom'                        ,  11, N'Hawaii';
exec dbo.spTERMINOLOGY_InsertOnly N'ID'                                            , N'en-US', null, N'states_dom'                        ,  12, N'Idaho';
exec dbo.spTERMINOLOGY_InsertOnly N'IL'                                            , N'en-US', null, N'states_dom'                        ,  13, N'Illinois';
exec dbo.spTERMINOLOGY_InsertOnly N'IN'                                            , N'en-US', null, N'states_dom'                        ,  14, N'Indiana';
exec dbo.spTERMINOLOGY_InsertOnly N'IA'                                            , N'en-US', null, N'states_dom'                        ,  15, N'Iowa';
exec dbo.spTERMINOLOGY_InsertOnly N'KS'                                            , N'en-US', null, N'states_dom'                        ,  16, N'Kansas';
exec dbo.spTERMINOLOGY_InsertOnly N'KY'                                            , N'en-US', null, N'states_dom'                        ,  17, N'Kentucky';
exec dbo.spTERMINOLOGY_InsertOnly N'LA'                                            , N'en-US', null, N'states_dom'                        ,  18, N'Louisiana';
exec dbo.spTERMINOLOGY_InsertOnly N'ME'                                            , N'en-US', null, N'states_dom'                        ,  19, N'Maine';
exec dbo.spTERMINOLOGY_InsertOnly N'MD'                                            , N'en-US', null, N'states_dom'                        ,  20, N'Maryland';
exec dbo.spTERMINOLOGY_InsertOnly N'MA'                                            , N'en-US', null, N'states_dom'                        ,  21, N'Massachusetts';
exec dbo.spTERMINOLOGY_InsertOnly N'MI'                                            , N'en-US', null, N'states_dom'                        ,  22, N'Michigan';
exec dbo.spTERMINOLOGY_InsertOnly N'MN'                                            , N'en-US', null, N'states_dom'                        ,  23, N'Minnesota';
exec dbo.spTERMINOLOGY_InsertOnly N'MS'                                            , N'en-US', null, N'states_dom'                        ,  24, N'Mississippi';
exec dbo.spTERMINOLOGY_InsertOnly N'MO'                                            , N'en-US', null, N'states_dom'                        ,  25, N'Missouri';
exec dbo.spTERMINOLOGY_InsertOnly N'MT'                                            , N'en-US', null, N'states_dom'                        ,  26, N'Montana';
exec dbo.spTERMINOLOGY_InsertOnly N'NE'                                            , N'en-US', null, N'states_dom'                        ,  27, N'Nebraska';
exec dbo.spTERMINOLOGY_InsertOnly N'NV'                                            , N'en-US', null, N'states_dom'                        ,  28, N'Nevada';
exec dbo.spTERMINOLOGY_InsertOnly N'NH'                                            , N'en-US', null, N'states_dom'                        ,  29, N'New Hampshire';
exec dbo.spTERMINOLOGY_InsertOnly N'NJ'                                            , N'en-US', null, N'states_dom'                        ,  30, N'New Jersey';
exec dbo.spTERMINOLOGY_InsertOnly N'NM'                                            , N'en-US', null, N'states_dom'                        ,  31, N'New Mexico';
exec dbo.spTERMINOLOGY_InsertOnly N'NY'                                            , N'en-US', null, N'states_dom'                        ,  32, N'New York';
exec dbo.spTERMINOLOGY_InsertOnly N'NC'                                            , N'en-US', null, N'states_dom'                        ,  33, N'North Carolina';
exec dbo.spTERMINOLOGY_InsertOnly N'ND'                                            , N'en-US', null, N'states_dom'                        ,  34, N'North Dakota';
exec dbo.spTERMINOLOGY_InsertOnly N'OH'                                            , N'en-US', null, N'states_dom'                        ,  35, N'Ohio';
exec dbo.spTERMINOLOGY_InsertOnly N'OK'                                            , N'en-US', null, N'states_dom'                        ,  36, N'Oklahoma';
exec dbo.spTERMINOLOGY_InsertOnly N'OR'                                            , N'en-US', null, N'states_dom'                        ,  37, N'Oregon';
exec dbo.spTERMINOLOGY_InsertOnly N'PA'                                            , N'en-US', null, N'states_dom'                        ,  38, N'Pennsylvania';
exec dbo.spTERMINOLOGY_InsertOnly N'RI'                                            , N'en-US', null, N'states_dom'                        ,  39, N'Rhode Island';
exec dbo.spTERMINOLOGY_InsertOnly N'SC'                                            , N'en-US', null, N'states_dom'                        ,  40, N'South Carolina';
exec dbo.spTERMINOLOGY_InsertOnly N'SD'                                            , N'en-US', null, N'states_dom'                        ,  41, N'South Dakota';
exec dbo.spTERMINOLOGY_InsertOnly N'TN'                                            , N'en-US', null, N'states_dom'                        ,  42, N'Tennessee';
exec dbo.spTERMINOLOGY_InsertOnly N'TX'                                            , N'en-US', null, N'states_dom'                        ,  43, N'Texas';
exec dbo.spTERMINOLOGY_InsertOnly N'UT'                                            , N'en-US', null, N'states_dom'                        ,  44, N'Utah';
exec dbo.spTERMINOLOGY_InsertOnly N'VT'                                            , N'en-US', null, N'states_dom'                        ,  45, N'Vermont';
exec dbo.spTERMINOLOGY_InsertOnly N'VA'                                            , N'en-US', null, N'states_dom'                        ,  46, N'Virginia';
exec dbo.spTERMINOLOGY_InsertOnly N'WA'                                            , N'en-US', null, N'states_dom'                        ,  47, N'Washington';
exec dbo.spTERMINOLOGY_InsertOnly N'WV'                                            , N'en-US', null, N'states_dom'                        ,  48, N'West Virginia';
exec dbo.spTERMINOLOGY_InsertOnly N'WI'                                            , N'en-US', null, N'states_dom'                        ,  49, N'Wisconsin';
exec dbo.spTERMINOLOGY_InsertOnly N'WY'                                            , N'en-US', null, N'states_dom'                        ,  50, N'Wyoming';
exec dbo.spTERMINOLOGY_InsertOnly N'AS'                                            , N'en-US', null, N'states_dom'                        ,  51, N'American Samoa';
exec dbo.spTERMINOLOGY_InsertOnly N'DC'                                            , N'en-US', null, N'states_dom'                        ,  52, N'District of Columbia';
exec dbo.spTERMINOLOGY_InsertOnly N'FM'                                            , N'en-US', null, N'states_dom'                        ,  53, N'Federated States of Micronesia';
exec dbo.spTERMINOLOGY_InsertOnly N'GU'                                            , N'en-US', null, N'states_dom'                        ,  54, N'Guam';
exec dbo.spTERMINOLOGY_InsertOnly N'MH'                                            , N'en-US', null, N'states_dom'                        ,  55, N'Marshall Islands';
exec dbo.spTERMINOLOGY_InsertOnly N'MP'                                            , N'en-US', null, N'states_dom'                        ,  56, N'Northern Mariana Islands';
exec dbo.spTERMINOLOGY_InsertOnly N'PW'                                            , N'en-US', null, N'states_dom'                        ,  57, N'Palau';
exec dbo.spTERMINOLOGY_InsertOnly N'PR'                                            , N'en-US', null, N'states_dom'                        ,  58, N'Puerto Rico';
exec dbo.spTERMINOLOGY_InsertOnly N'VI'                                            , N'en-US', null, N'states_dom'                        ,  59, N'Virgin Islands';
GO

-- 01/03/2016 Paul.  Add Yes/No and True/False. 
-- delete from TERMINOLOGY where LIST_NAME in ('yesno_dom', 'truefalse_dom');
exec dbo.spTERMINOLOGY_InsertOnly N'1'                                             , N'en-US', null, N'yesno_dom'                         ,   1, N'Yes';
exec dbo.spTERMINOLOGY_InsertOnly N'0'                                             , N'en-US', null, N'yesno_dom'                         ,   2, N'No';
exec dbo.spTERMINOLOGY_InsertOnly N'1'                                             , N'en-US', null, N'truefalse_dom'                     ,   1, N'True';
exec dbo.spTERMINOLOGY_InsertOnly N'0'                                             , N'en-US', null, N'truefalse_dom'                     ,   2, N'False';
-- 09/15/2019 Paul.  The React Client sees True/False and the ASP.NET client sees 1/0.  Need a list that supports both, simultaneously. 
exec dbo.spTERMINOLOGY_InsertOnly N'1'                                             , N'en-US', null, N'yesno_list'                        ,   1, N'Yes';
exec dbo.spTERMINOLOGY_InsertOnly N'0'                                             , N'en-US', null, N'yesno_list'                        ,   2, N'No';
exec dbo.spTERMINOLOGY_InsertOnly N'True'                                          , N'en-US', null, N'yesno_list'                        ,   1, N'Yes';
exec dbo.spTERMINOLOGY_InsertOnly N'False'                                         , N'en-US', null, N'yesno_list'                        ,   2, N'No';

-- 03/02/2019 Paul.  Missing term. DetailViewsRelationships should be treated as a module so that the merge modules can be retrieved by the Word Plug-in. 
exec dbo.spTERMINOLOGY_InsertOnly N'DetailViewsRelationships'                      , N'en-US', null, N'moduleList'                        , 100, N'Detail Views Relationships';

-- 10/27/2019 Paul.  React Client needs to have a list for business mode. 
exec dbo.spTERMINOLOGY_InsertOnly N'B2B'                                           , N'en-US', null, N'business_mode_dom'                 ,   1, N'Business-to-Business';
exec dbo.spTERMINOLOGY_InsertOnly N'B2C'                                           , N'en-US', null, N'business_mode_dom'                 ,   2, N'Business-to-Consumer';
exec dbo.spTERMINOLOGY_InsertOnly N'Opportunities'                                 , N'en-US', null, N'opportunities_mode_dom'            ,   1, N'Opportunities';
exec dbo.spTERMINOLOGY_InsertOnly N'Revenue'                                       , N'en-US', null, N'opportunities_mode_dom'            ,   2, N'Opportunities with Revenue Line Items';
-- 05/25/2020 Paul.  React Client link on old login page. 
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_REACT_CLIENT'                              , N'en-US', null, null, null, N'React Client';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_INSUFFICIENT_ACCESS'                       , N'en-US', null, null, null, N'Insufficient Access';
-- 04/13/2022 Paul.  Add LayoutTabs to Pacific theme. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LAYOUT_TAB_OVERVIEW'                       , N'en-US', null, null, null, N'Overview';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LAYOUT_TAB_MORE_INFORMATION'               , N'en-US', null, null, null, N'More Information';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LAYOUT_TAB_OTHER'                          , N'en-US', null, null, null, N'Other';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_LAYOUT_TAB_BASIC'                          , N'en-US', null, null, null, N'Basic';
-- 04/23/2022 Paul.  Empy grid should indicate no data. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_NO_DATA'                                   , N'en-US', null, null, null, N'No Data';
-- 04/06/2022 Paul.  Quick Search dropdown. 
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_QUICK_SEARCH_NEW_BUTTON'                   , N'en-US', null, null, null, N'New';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_QUICK_SEARCH_PLACEHOLDER'                  , N'en-US', null, null, null, N'Search...';
exec dbo.spTERMINOLOGY_InsertOnly N'LBL_BULK_ACTION'                               , N'en-US', null, null, null, N'Bulk Action';
exec dbo.spTERMINOLOGY_InsertOnly N'LNK_SEARCH_FILTER'                             , N'en-US', null, null, null, N'Filter';
GO

set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Global_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Global_en_us')
/
-- #endif IBM_DB2 */



-- Terminology generated from database [SplendidCRM5_50] on 11/18/2010 1:19:34 AM.
print 'TERMINOLOGY Countries en-us';
GO

set nocount on;
GO

exec dbo.spTERMINOLOGY_InsertOnly N'United States'                                 , N'en-US', null, N'countries_dom'                         ,    1, N'United States';
exec dbo.spTERMINOLOGY_InsertOnly N'Afghanistan'                                   , N'en-US', null, N'countries_dom'                         ,    2, N'Afghanistan';
exec dbo.spTERMINOLOGY_InsertOnly N'Albania'                                       , N'en-US', null, N'countries_dom'                         ,    3, N'Albania';
exec dbo.spTERMINOLOGY_InsertOnly N'Algeria'                                       , N'en-US', null, N'countries_dom'                         ,    4, N'Algeria';
exec dbo.spTERMINOLOGY_InsertOnly N'American Samoa'                                , N'en-US', null, N'countries_dom'                         ,    5, N'American Samoa';
exec dbo.spTERMINOLOGY_InsertOnly N'Andorra'                                       , N'en-US', null, N'countries_dom'                         ,    6, N'Andorra';
exec dbo.spTERMINOLOGY_InsertOnly N'Angola'                                        , N'en-US', null, N'countries_dom'                         ,    7, N'Angola';
exec dbo.spTERMINOLOGY_InsertOnly N'Anguilla'                                      , N'en-US', null, N'countries_dom'                         ,    8, N'Anguilla';
exec dbo.spTERMINOLOGY_InsertOnly N'Antigua'                                       , N'en-US', null, N'countries_dom'                         ,    9, N'Antigua';
exec dbo.spTERMINOLOGY_InsertOnly N'Argentina'                                     , N'en-US', null, N'countries_dom'                         ,   10, N'Argentina';
exec dbo.spTERMINOLOGY_InsertOnly N'Armenia'                                       , N'en-US', null, N'countries_dom'                         ,   11, N'Armenia';
exec dbo.spTERMINOLOGY_InsertOnly N'Aruba'                                         , N'en-US', null, N'countries_dom'                         ,   12, N'Aruba';
exec dbo.spTERMINOLOGY_InsertOnly N'Ascension Island'                              , N'en-US', null, N'countries_dom'                         ,   13, N'Ascension Island';
exec dbo.spTERMINOLOGY_InsertOnly N'Australia'                                     , N'en-US', null, N'countries_dom'                         ,   14, N'Australia';
exec dbo.spTERMINOLOGY_InsertOnly N'Austria'                                       , N'en-US', null, N'countries_dom'                         ,   15, N'Austria';
exec dbo.spTERMINOLOGY_InsertOnly N'Azerbaijan'                                    , N'en-US', null, N'countries_dom'                         ,   16, N'Azerbaijan';
exec dbo.spTERMINOLOGY_InsertOnly N'Bahamas'                                       , N'en-US', null, N'countries_dom'                         ,   17, N'Bahamas';
exec dbo.spTERMINOLOGY_InsertOnly N'Bahrain'                                       , N'en-US', null, N'countries_dom'                         ,   18, N'Bahrain';
exec dbo.spTERMINOLOGY_InsertOnly N'Bangladesh'                                    , N'en-US', null, N'countries_dom'                         ,   19, N'Bangladesh';
exec dbo.spTERMINOLOGY_InsertOnly N'Barbados'                                      , N'en-US', null, N'countries_dom'                         ,   20, N'Barbados';
exec dbo.spTERMINOLOGY_InsertOnly N'Barbuda'                                       , N'en-US', null, N'countries_dom'                         ,   21, N'Barbuda';
exec dbo.spTERMINOLOGY_InsertOnly N'Belarus'                                       , N'en-US', null, N'countries_dom'                         ,   22, N'Belarus';
exec dbo.spTERMINOLOGY_InsertOnly N'Belgium'                                       , N'en-US', null, N'countries_dom'                         ,   23, N'Belgium';
exec dbo.spTERMINOLOGY_InsertOnly N'Belize'                                        , N'en-US', null, N'countries_dom'                         ,   24, N'Belize';
exec dbo.spTERMINOLOGY_InsertOnly N'Benin'                                         , N'en-US', null, N'countries_dom'                         ,   25, N'Benin';
exec dbo.spTERMINOLOGY_InsertOnly N'Bermuda'                                       , N'en-US', null, N'countries_dom'                         ,   26, N'Bermuda';
exec dbo.spTERMINOLOGY_InsertOnly N'Bhutan'                                        , N'en-US', null, N'countries_dom'                         ,   27, N'Bhutan';
exec dbo.spTERMINOLOGY_InsertOnly N'Bolivia'                                       , N'en-US', null, N'countries_dom'                         ,   28, N'Bolivia';
exec dbo.spTERMINOLOGY_InsertOnly N'Bosnia'                                        , N'en-US', null, N'countries_dom'                         ,   29, N'Bosnia';
exec dbo.spTERMINOLOGY_InsertOnly N'Botswana'                                      , N'en-US', null, N'countries_dom'                         ,   30, N'Botswana';
exec dbo.spTERMINOLOGY_InsertOnly N'Brazil'                                        , N'en-US', null, N'countries_dom'                         ,   31, N'Brazil';
exec dbo.spTERMINOLOGY_InsertOnly N'Brunei'                                        , N'en-US', null, N'countries_dom'                         ,   32, N'Brunei';
exec dbo.spTERMINOLOGY_InsertOnly N'Bulgaria'                                      , N'en-US', null, N'countries_dom'                         ,   33, N'Bulgaria';
exec dbo.spTERMINOLOGY_InsertOnly N'Burkina Faso'                                  , N'en-US', null, N'countries_dom'                         ,   34, N'Burkina Faso';
exec dbo.spTERMINOLOGY_InsertOnly N'Burundi'                                       , N'en-US', null, N'countries_dom'                         ,   35, N'Burundi';
exec dbo.spTERMINOLOGY_InsertOnly N'Caicos Islands'                                , N'en-US', null, N'countries_dom'                         ,   36, N'Caicos Islands';
exec dbo.spTERMINOLOGY_InsertOnly N'Cambodia'                                      , N'en-US', null, N'countries_dom'                         ,   37, N'Cambodia';
exec dbo.spTERMINOLOGY_InsertOnly N'Cameroon'                                      , N'en-US', null, N'countries_dom'                         ,   38, N'Cameroon';
exec dbo.spTERMINOLOGY_InsertOnly N'Canada'                                        , N'en-US', null, N'countries_dom'                         ,   39, N'Canada';
exec dbo.spTERMINOLOGY_InsertOnly N'Cape Verde'                                    , N'en-US', null, N'countries_dom'                         ,   40, N'Cape Verde';
exec dbo.spTERMINOLOGY_InsertOnly N'Cayman Islands'                                , N'en-US', null, N'countries_dom'                         ,   41, N'Cayman Islands';
exec dbo.spTERMINOLOGY_InsertOnly N'Central African Republic'                      , N'en-US', null, N'countries_dom'                         ,   42, N'Central African Republic';
exec dbo.spTERMINOLOGY_InsertOnly N'Chad'                                          , N'en-US', null, N'countries_dom'                         ,   43, N'Chad';
exec dbo.spTERMINOLOGY_InsertOnly N'Chile'                                         , N'en-US', null, N'countries_dom'                         ,   44, N'Chile';
exec dbo.spTERMINOLOGY_InsertOnly N'China'                                         , N'en-US', null, N'countries_dom'                         ,   45, N'China';
exec dbo.spTERMINOLOGY_InsertOnly N'Cocos Islands'                                 , N'en-US', null, N'countries_dom'                         ,   46, N'Cocos Islands';
exec dbo.spTERMINOLOGY_InsertOnly N'Colombia'                                      , N'en-US', null, N'countries_dom'                         ,   47, N'Colombia';
exec dbo.spTERMINOLOGY_InsertOnly N'Comoros'                                       , N'en-US', null, N'countries_dom'                         ,   48, N'Comoros';
exec dbo.spTERMINOLOGY_InsertOnly N'Congo'                                         , N'en-US', null, N'countries_dom'                         ,   49, N'Congo';
exec dbo.spTERMINOLOGY_InsertOnly N'Cook Islands'                                  , N'en-US', null, N'countries_dom'                         ,   50, N'Cook Islands';
exec dbo.spTERMINOLOGY_InsertOnly N'Costa Rica'                                    , N'en-US', null, N'countries_dom'                         ,   51, N'Costa Rica';
exec dbo.spTERMINOLOGY_InsertOnly N'Côte d’Ivoire'                                 , N'en-US', null, N'countries_dom'                         ,   52, N'Côte d’Ivoire';
exec dbo.spTERMINOLOGY_InsertOnly N'Croatia'                                       , N'en-US', null, N'countries_dom'                         ,   53, N'Croatia';
exec dbo.spTERMINOLOGY_InsertOnly N'Cuba'                                          , N'en-US', null, N'countries_dom'                         ,   54, N'Cuba';
exec dbo.spTERMINOLOGY_InsertOnly N'Cyprus'                                        , N'en-US', null, N'countries_dom'                         ,   55, N'Cyprus';
exec dbo.spTERMINOLOGY_InsertOnly N'Czech Republic'                                , N'en-US', null, N'countries_dom'                         ,   56, N'Czech Republic';
exec dbo.spTERMINOLOGY_InsertOnly N'Denmark'                                       , N'en-US', null, N'countries_dom'                         ,   57, N'Denmark';
exec dbo.spTERMINOLOGY_InsertOnly N'Diego Garcia'                                  , N'en-US', null, N'countries_dom'                         ,   58, N'Diego Garcia';
exec dbo.spTERMINOLOGY_InsertOnly N'Djibouti'                                      , N'en-US', null, N'countries_dom'                         ,   59, N'Djibouti';
exec dbo.spTERMINOLOGY_InsertOnly N'Dominica'                                      , N'en-US', null, N'countries_dom'                         ,   60, N'Dominica';
exec dbo.spTERMINOLOGY_InsertOnly N'Dominican Republic'                            , N'en-US', null, N'countries_dom'                         ,   61, N'Dominican Republic';
exec dbo.spTERMINOLOGY_InsertOnly N'Ecuador'                                       , N'en-US', null, N'countries_dom'                         ,   62, N'Ecuador';
exec dbo.spTERMINOLOGY_InsertOnly N'Egypt'                                         , N'en-US', null, N'countries_dom'                         ,   63, N'Egypt';
exec dbo.spTERMINOLOGY_InsertOnly N'El Salvador'                                   , N'en-US', null, N'countries_dom'                         ,   64, N'El Salvador';
exec dbo.spTERMINOLOGY_InsertOnly N'Equatorial Guinea'                             , N'en-US', null, N'countries_dom'                         ,   65, N'Equatorial Guinea';
exec dbo.spTERMINOLOGY_InsertOnly N'Eritrea'                                       , N'en-US', null, N'countries_dom'                         ,   66, N'Eritrea';
exec dbo.spTERMINOLOGY_InsertOnly N'Estonia'                                       , N'en-US', null, N'countries_dom'                         ,   67, N'Estonia';
exec dbo.spTERMINOLOGY_InsertOnly N'Ethiopia'                                      , N'en-US', null, N'countries_dom'                         ,   68, N'Ethiopia';
exec dbo.spTERMINOLOGY_InsertOnly N'Falkland Islands'                              , N'en-US', null, N'countries_dom'                         ,   69, N'Falkland Islands';
exec dbo.spTERMINOLOGY_InsertOnly N'Faroe Islands'                                 , N'en-US', null, N'countries_dom'                         ,   70, N'Faroe Islands';
exec dbo.spTERMINOLOGY_InsertOnly N'Fiji Islands'                                  , N'en-US', null, N'countries_dom'                         ,   71, N'Fiji Islands';
exec dbo.spTERMINOLOGY_InsertOnly N'Finland'                                       , N'en-US', null, N'countries_dom'                         ,   72, N'Finland';
exec dbo.spTERMINOLOGY_InsertOnly N'France'                                        , N'en-US', null, N'countries_dom'                         ,   73, N'France';
exec dbo.spTERMINOLOGY_InsertOnly N'French Guiana'                                 , N'en-US', null, N'countries_dom'                         ,   74, N'French Guiana';
exec dbo.spTERMINOLOGY_InsertOnly N'French Polynesia'                              , N'en-US', null, N'countries_dom'                         ,   75, N'French Polynesia';
exec dbo.spTERMINOLOGY_InsertOnly N'Futuna'                                        , N'en-US', null, N'countries_dom'                         ,   76, N'Futuna';
exec dbo.spTERMINOLOGY_InsertOnly N'Gabon'                                         , N'en-US', null, N'countries_dom'                         ,   77, N'Gabon';
exec dbo.spTERMINOLOGY_InsertOnly N'Gambia'                                        , N'en-US', null, N'countries_dom'                         ,   78, N'Gambia';
exec dbo.spTERMINOLOGY_InsertOnly N'Georgia'                                       , N'en-US', null, N'countries_dom'                         ,   79, N'Georgia';
exec dbo.spTERMINOLOGY_InsertOnly N'Germany'                                       , N'en-US', null, N'countries_dom'                         ,   80, N'Germany';
exec dbo.spTERMINOLOGY_InsertOnly N'Ghana'                                         , N'en-US', null, N'countries_dom'                         ,   81, N'Ghana';
exec dbo.spTERMINOLOGY_InsertOnly N'Gibraltar'                                     , N'en-US', null, N'countries_dom'                         ,   82, N'Gibraltar';
exec dbo.spTERMINOLOGY_InsertOnly N'Greece'                                        , N'en-US', null, N'countries_dom'                         ,   83, N'Greece';
exec dbo.spTERMINOLOGY_InsertOnly N'Greenland'                                     , N'en-US', null, N'countries_dom'                         ,   84, N'Greenland';
exec dbo.spTERMINOLOGY_InsertOnly N'Grenada'                                       , N'en-US', null, N'countries_dom'                         ,   85, N'Grenada';
exec dbo.spTERMINOLOGY_InsertOnly N'Grenadines'                                    , N'en-US', null, N'countries_dom'                         ,   86, N'Grenadines';
exec dbo.spTERMINOLOGY_InsertOnly N'Guadeloupe'                                    , N'en-US', null, N'countries_dom'                         ,   87, N'Guadeloupe';
exec dbo.spTERMINOLOGY_InsertOnly N'Guam'                                          , N'en-US', null, N'countries_dom'                         ,   88, N'Guam';
exec dbo.spTERMINOLOGY_InsertOnly N'Guantanamo Bay'                                , N'en-US', null, N'countries_dom'                         ,   89, N'Guantanamo Bay';
exec dbo.spTERMINOLOGY_InsertOnly N'Guatemala'                                     , N'en-US', null, N'countries_dom'                         ,   90, N'Guatemala';
exec dbo.spTERMINOLOGY_InsertOnly N'Guinea'                                        , N'en-US', null, N'countries_dom'                         ,   91, N'Guinea';
exec dbo.spTERMINOLOGY_InsertOnly N'Guinea-Bissau'                                 , N'en-US', null, N'countries_dom'                         ,   92, N'Guinea-Bissau';
exec dbo.spTERMINOLOGY_InsertOnly N'Guyana'                                        , N'en-US', null, N'countries_dom'                         ,   93, N'Guyana';
exec dbo.spTERMINOLOGY_InsertOnly N'Haiti'                                         , N'en-US', null, N'countries_dom'                         ,   94, N'Haiti';
exec dbo.spTERMINOLOGY_InsertOnly N'Herzegovina'                                   , N'en-US', null, N'countries_dom'                         ,   95, N'Herzegovina';
exec dbo.spTERMINOLOGY_InsertOnly N'Honduras'                                      , N'en-US', null, N'countries_dom'                         ,   96, N'Honduras';
exec dbo.spTERMINOLOGY_InsertOnly N'Hong Kong'                                     , N'en-US', null, N'countries_dom'                         ,   97, N'Hong Kong';
exec dbo.spTERMINOLOGY_InsertOnly N'Hungary'                                       , N'en-US', null, N'countries_dom'                         ,   98, N'Hungary';
exec dbo.spTERMINOLOGY_InsertOnly N'Iceland'                                       , N'en-US', null, N'countries_dom'                         ,   99, N'Iceland';
exec dbo.spTERMINOLOGY_InsertOnly N'India'                                         , N'en-US', null, N'countries_dom'                         ,  100, N'India';
exec dbo.spTERMINOLOGY_InsertOnly N'Indonesia'                                     , N'en-US', null, N'countries_dom'                         ,  101, N'Indonesia';
exec dbo.spTERMINOLOGY_InsertOnly N'Iran'                                          , N'en-US', null, N'countries_dom'                         ,  102, N'Iran';
exec dbo.spTERMINOLOGY_InsertOnly N'Iraq'                                          , N'en-US', null, N'countries_dom'                         ,  103, N'Iraq';
exec dbo.spTERMINOLOGY_InsertOnly N'Ireland'                                       , N'en-US', null, N'countries_dom'                         ,  104, N'Ireland';
exec dbo.spTERMINOLOGY_InsertOnly N'Israel'                                        , N'en-US', null, N'countries_dom'                         ,  105, N'Israel';
exec dbo.spTERMINOLOGY_InsertOnly N'Italy'                                         , N'en-US', null, N'countries_dom'                         ,  106, N'Italy';
exec dbo.spTERMINOLOGY_InsertOnly N'Jamaica'                                       , N'en-US', null, N'countries_dom'                         ,  107, N'Jamaica';
exec dbo.spTERMINOLOGY_InsertOnly N'Japan'                                         , N'en-US', null, N'countries_dom'                         ,  108, N'Japan';
exec dbo.spTERMINOLOGY_InsertOnly N'Jordan'                                        , N'en-US', null, N'countries_dom'                         ,  109, N'Jordan';
exec dbo.spTERMINOLOGY_InsertOnly N'Kazakhstan'                                    , N'en-US', null, N'countries_dom'                         ,  110, N'Kazakhstan';
exec dbo.spTERMINOLOGY_InsertOnly N'Kenya'                                         , N'en-US', null, N'countries_dom'                         ,  111, N'Kenya';
exec dbo.spTERMINOLOGY_InsertOnly N'Kiribati'                                      , N'en-US', null, N'countries_dom'                         ,  112, N'Kiribati';
exec dbo.spTERMINOLOGY_InsertOnly N'Korea'                                         , N'en-US', null, N'countries_dom'                         ,  113, N'Korea';
exec dbo.spTERMINOLOGY_InsertOnly N'Kuwait'                                        , N'en-US', null, N'countries_dom'                         ,  114, N'Kuwait';
exec dbo.spTERMINOLOGY_InsertOnly N'Kyrgyzstan'                                    , N'en-US', null, N'countries_dom'                         ,  115, N'Kyrgyzstan';
exec dbo.spTERMINOLOGY_InsertOnly N'Laos'                                          , N'en-US', null, N'countries_dom'                         ,  116, N'Laos';
exec dbo.spTERMINOLOGY_InsertOnly N'Latvia'                                        , N'en-US', null, N'countries_dom'                         ,  117, N'Latvia';
exec dbo.spTERMINOLOGY_InsertOnly N'Lebanon'                                       , N'en-US', null, N'countries_dom'                         ,  118, N'Lebanon';
exec dbo.spTERMINOLOGY_InsertOnly N'Lesotho'                                       , N'en-US', null, N'countries_dom'                         ,  119, N'Lesotho';
exec dbo.spTERMINOLOGY_InsertOnly N'Liberia'                                       , N'en-US', null, N'countries_dom'                         ,  120, N'Liberia';
exec dbo.spTERMINOLOGY_InsertOnly N'Libya'                                         , N'en-US', null, N'countries_dom'                         ,  121, N'Libya';
exec dbo.spTERMINOLOGY_InsertOnly N'Liechtenstein'                                 , N'en-US', null, N'countries_dom'                         ,  122, N'Liechtenstein';
exec dbo.spTERMINOLOGY_InsertOnly N'Lithuania'                                     , N'en-US', null, N'countries_dom'                         ,  123, N'Lithuania';
exec dbo.spTERMINOLOGY_InsertOnly N'Luxembourg'                                    , N'en-US', null, N'countries_dom'                         ,  124, N'Luxembourg';
exec dbo.spTERMINOLOGY_InsertOnly N'Macao'                                         , N'en-US', null, N'countries_dom'                         ,  125, N'Macao';
exec dbo.spTERMINOLOGY_InsertOnly N'Macedonia'                                     , N'en-US', null, N'countries_dom'                         ,  126, N'Macedonia';
exec dbo.spTERMINOLOGY_InsertOnly N'Madagascar'                                    , N'en-US', null, N'countries_dom'                         ,  127, N'Madagascar';
exec dbo.spTERMINOLOGY_InsertOnly N'Malawi'                                        , N'en-US', null, N'countries_dom'                         ,  128, N'Malawi';
exec dbo.spTERMINOLOGY_InsertOnly N'Malaysia'                                      , N'en-US', null, N'countries_dom'                         ,  129, N'Malaysia';
exec dbo.spTERMINOLOGY_InsertOnly N'Maldives'                                      , N'en-US', null, N'countries_dom'                         ,  130, N'Maldives';
exec dbo.spTERMINOLOGY_InsertOnly N'Mali'                                          , N'en-US', null, N'countries_dom'                         ,  131, N'Mali';
exec dbo.spTERMINOLOGY_InsertOnly N'Malta'                                         , N'en-US', null, N'countries_dom'                         ,  132, N'Malta';
exec dbo.spTERMINOLOGY_InsertOnly N'Marshall Islands'                              , N'en-US', null, N'countries_dom'                         ,  133, N'Marshall Islands';
exec dbo.spTERMINOLOGY_InsertOnly N'Martinique'                                    , N'en-US', null, N'countries_dom'                         ,  134, N'Martinique';
exec dbo.spTERMINOLOGY_InsertOnly N'Mauritania'                                    , N'en-US', null, N'countries_dom'                         ,  135, N'Mauritania';
exec dbo.spTERMINOLOGY_InsertOnly N'Mauritius'                                     , N'en-US', null, N'countries_dom'                         ,  136, N'Mauritius';
exec dbo.spTERMINOLOGY_InsertOnly N'Mayotte'                                       , N'en-US', null, N'countries_dom'                         ,  137, N'Mayotte';
exec dbo.spTERMINOLOGY_InsertOnly N'Mexico'                                        , N'en-US', null, N'countries_dom'                         ,  138, N'Mexico';
exec dbo.spTERMINOLOGY_InsertOnly N'Micronesia'                                    , N'en-US', null, N'countries_dom'                         ,  139, N'Micronesia';
exec dbo.spTERMINOLOGY_InsertOnly N'Miquelon'                                      , N'en-US', null, N'countries_dom'                         ,  140, N'Miquelon';
exec dbo.spTERMINOLOGY_InsertOnly N'Moldova'                                       , N'en-US', null, N'countries_dom'                         ,  141, N'Moldova';
exec dbo.spTERMINOLOGY_InsertOnly N'Monaco'                                        , N'en-US', null, N'countries_dom'                         ,  142, N'Monaco';
exec dbo.spTERMINOLOGY_InsertOnly N'Mongolia'                                      , N'en-US', null, N'countries_dom'                         ,  143, N'Mongolia';
exec dbo.spTERMINOLOGY_InsertOnly N'Montenegro'                                    , N'en-US', null, N'countries_dom'                         ,  144, N'Montenegro';
exec dbo.spTERMINOLOGY_InsertOnly N'Montserrat'                                    , N'en-US', null, N'countries_dom'                         ,  145, N'Montserrat';
exec dbo.spTERMINOLOGY_InsertOnly N'Morocco'                                       , N'en-US', null, N'countries_dom'                         ,  146, N'Morocco';
exec dbo.spTERMINOLOGY_InsertOnly N'Mozambique'                                    , N'en-US', null, N'countries_dom'                         ,  147, N'Mozambique';
exec dbo.spTERMINOLOGY_InsertOnly N'Myanmar'                                       , N'en-US', null, N'countries_dom'                         ,  148, N'Myanmar';
exec dbo.spTERMINOLOGY_InsertOnly N'Namibia'                                       , N'en-US', null, N'countries_dom'                         ,  149, N'Namibia';
exec dbo.spTERMINOLOGY_InsertOnly N'Nauru'                                         , N'en-US', null, N'countries_dom'                         ,  150, N'Nauru';
exec dbo.spTERMINOLOGY_InsertOnly N'Nepal'                                         , N'en-US', null, N'countries_dom'                         ,  151, N'Nepal';
exec dbo.spTERMINOLOGY_InsertOnly N'Netherlands'                                   , N'en-US', null, N'countries_dom'                         ,  152, N'Netherlands';
exec dbo.spTERMINOLOGY_InsertOnly N'Netherlands Antilles'                          , N'en-US', null, N'countries_dom'                         ,  153, N'Netherlands Antilles';
exec dbo.spTERMINOLOGY_InsertOnly N'Nevis'                                         , N'en-US', null, N'countries_dom'                         ,  154, N'Nevis';
exec dbo.spTERMINOLOGY_InsertOnly N'New Caledonia'                                 , N'en-US', null, N'countries_dom'                         ,  155, N'New Caledonia';
exec dbo.spTERMINOLOGY_InsertOnly N'New Zealand'                                   , N'en-US', null, N'countries_dom'                         ,  156, N'New Zealand';
exec dbo.spTERMINOLOGY_InsertOnly N'Nicaragua'                                     , N'en-US', null, N'countries_dom'                         ,  157, N'Nicaragua';
exec dbo.spTERMINOLOGY_InsertOnly N'Niger'                                         , N'en-US', null, N'countries_dom'                         ,  158, N'Niger';
exec dbo.spTERMINOLOGY_InsertOnly N'Nigeria'                                       , N'en-US', null, N'countries_dom'                         ,  159, N'Nigeria';
exec dbo.spTERMINOLOGY_InsertOnly N'Niue'                                          , N'en-US', null, N'countries_dom'                         ,  160, N'Niue';
exec dbo.spTERMINOLOGY_InsertOnly N'Norfolk Island'                                , N'en-US', null, N'countries_dom'                         ,  161, N'Norfolk Island';
exec dbo.spTERMINOLOGY_InsertOnly N'North Korea'                                   , N'en-US', null, N'countries_dom'                         ,  162, N'North Korea';
exec dbo.spTERMINOLOGY_InsertOnly N'Norway'                                        , N'en-US', null, N'countries_dom'                         ,  163, N'Norway';
exec dbo.spTERMINOLOGY_InsertOnly N'Oman'                                          , N'en-US', null, N'countries_dom'                         ,  164, N'Oman';
exec dbo.spTERMINOLOGY_InsertOnly N'Pakistan'                                      , N'en-US', null, N'countries_dom'                         ,  165, N'Pakistan';
exec dbo.spTERMINOLOGY_InsertOnly N'Palau'                                         , N'en-US', null, N'countries_dom'                         ,  166, N'Palau';
exec dbo.spTERMINOLOGY_InsertOnly N'Panama'                                        , N'en-US', null, N'countries_dom'                         ,  167, N'Panama';
exec dbo.spTERMINOLOGY_InsertOnly N'Papua New Guinea'                              , N'en-US', null, N'countries_dom'                         ,  168, N'Papua New Guinea';
exec dbo.spTERMINOLOGY_InsertOnly N'Paraguay'                                      , N'en-US', null, N'countries_dom'                         ,  169, N'Paraguay';
exec dbo.spTERMINOLOGY_InsertOnly N'Peru'                                          , N'en-US', null, N'countries_dom'                         ,  170, N'Peru';
exec dbo.spTERMINOLOGY_InsertOnly N'Philippines'                                   , N'en-US', null, N'countries_dom'                         ,  171, N'Philippines';
exec dbo.spTERMINOLOGY_InsertOnly N'Poland'                                        , N'en-US', null, N'countries_dom'                         ,  172, N'Poland';
exec dbo.spTERMINOLOGY_InsertOnly N'Portugal'                                      , N'en-US', null, N'countries_dom'                         ,  173, N'Portugal';
exec dbo.spTERMINOLOGY_InsertOnly N'Príncipe'                                      , N'en-US', null, N'countries_dom'                         ,  174, N'Príncipe';
exec dbo.spTERMINOLOGY_InsertOnly N'Puerto Rico'                                   , N'en-US', null, N'countries_dom'                         ,  175, N'Puerto Rico';
exec dbo.spTERMINOLOGY_InsertOnly N'Qatar'                                         , N'en-US', null, N'countries_dom'                         ,  176, N'Qatar';
exec dbo.spTERMINOLOGY_InsertOnly N'Reunion'                                       , N'en-US', null, N'countries_dom'                         ,  177, N'Reunion';
exec dbo.spTERMINOLOGY_InsertOnly N'Romania'                                       , N'en-US', null, N'countries_dom'                         ,  178, N'Romania';
exec dbo.spTERMINOLOGY_InsertOnly N'Russia'                                        , N'en-US', null, N'countries_dom'                         ,  179, N'Russia';
exec dbo.spTERMINOLOGY_InsertOnly N'Rwanda'                                        , N'en-US', null, N'countries_dom'                         ,  180, N'Rwanda';
exec dbo.spTERMINOLOGY_InsertOnly N'Samoa'                                         , N'en-US', null, N'countries_dom'                         ,  181, N'Samoa';
exec dbo.spTERMINOLOGY_InsertOnly N'San Marino'                                    , N'en-US', null, N'countries_dom'                         ,  182, N'San Marino';
exec dbo.spTERMINOLOGY_InsertOnly N'São Tomé'                                      , N'en-US', null, N'countries_dom'                         ,  183, N'São Tomé';
exec dbo.spTERMINOLOGY_InsertOnly N'Saudi Arabia'                                  , N'en-US', null, N'countries_dom'                         ,  184, N'Saudi Arabia';
exec dbo.spTERMINOLOGY_InsertOnly N'Senegal'                                       , N'en-US', null, N'countries_dom'                         ,  185, N'Senegal';
exec dbo.spTERMINOLOGY_InsertOnly N'Serbia'                                        , N'en-US', null, N'countries_dom'                         ,  186, N'Serbia';
exec dbo.spTERMINOLOGY_InsertOnly N'Seychelles'                                    , N'en-US', null, N'countries_dom'                         ,  187, N'Seychelles';
exec dbo.spTERMINOLOGY_InsertOnly N'Sierra Leone'                                  , N'en-US', null, N'countries_dom'                         ,  188, N'Sierra Leone';
exec dbo.spTERMINOLOGY_InsertOnly N'Singapore'                                     , N'en-US', null, N'countries_dom'                         ,  189, N'Singapore';
exec dbo.spTERMINOLOGY_InsertOnly N'Slovakia'                                      , N'en-US', null, N'countries_dom'                         ,  190, N'Slovakia';
exec dbo.spTERMINOLOGY_InsertOnly N'Slovenia'                                      , N'en-US', null, N'countries_dom'                         ,  191, N'Slovenia';
exec dbo.spTERMINOLOGY_InsertOnly N'Solomon Islands'                               , N'en-US', null, N'countries_dom'                         ,  192, N'Solomon Islands';
exec dbo.spTERMINOLOGY_InsertOnly N'Somalia'                                       , N'en-US', null, N'countries_dom'                         ,  193, N'Somalia';
exec dbo.spTERMINOLOGY_InsertOnly N'South Africa'                                  , N'en-US', null, N'countries_dom'                         ,  194, N'South Africa';
exec dbo.spTERMINOLOGY_InsertOnly N'Spain'                                         , N'en-US', null, N'countries_dom'                         ,  195, N'Spain';
exec dbo.spTERMINOLOGY_InsertOnly N'Sri Lanka'                                     , N'en-US', null, N'countries_dom'                         ,  196, N'Sri Lanka';
exec dbo.spTERMINOLOGY_InsertOnly N'St. Helena'                                    , N'en-US', null, N'countries_dom'                         ,  197, N'St. Helena';
exec dbo.spTERMINOLOGY_InsertOnly N'St. Kitts'                                     , N'en-US', null, N'countries_dom'                         ,  198, N'St. Kitts ';
exec dbo.spTERMINOLOGY_InsertOnly N'St. Lucia'                                     , N'en-US', null, N'countries_dom'                         ,  199, N'St. Lucia';
exec dbo.spTERMINOLOGY_InsertOnly N'St. Pierre'                                    , N'en-US', null, N'countries_dom'                         ,  200, N'St. Pierre';
exec dbo.spTERMINOLOGY_InsertOnly N'St. Vincent'                                   , N'en-US', null, N'countries_dom'                         ,  201, N'St. Vincent';
exec dbo.spTERMINOLOGY_InsertOnly N'Sudan'                                         , N'en-US', null, N'countries_dom'                         ,  202, N'Sudan';
exec dbo.spTERMINOLOGY_InsertOnly N'Suriname'                                      , N'en-US', null, N'countries_dom'                         ,  203, N'Suriname';
exec dbo.spTERMINOLOGY_InsertOnly N'Swaziland'                                     , N'en-US', null, N'countries_dom'                         ,  204, N'Swaziland';
exec dbo.spTERMINOLOGY_InsertOnly N'Sweden'                                        , N'en-US', null, N'countries_dom'                         ,  205, N'Sweden';
exec dbo.spTERMINOLOGY_InsertOnly N'Switzerland'                                   , N'en-US', null, N'countries_dom'                         ,  206, N'Switzerland';
exec dbo.spTERMINOLOGY_InsertOnly N'Syria'                                         , N'en-US', null, N'countries_dom'                         ,  207, N'Syria';
exec dbo.spTERMINOLOGY_InsertOnly N'Taiwan'                                        , N'en-US', null, N'countries_dom'                         ,  208, N'Taiwan';
exec dbo.spTERMINOLOGY_InsertOnly N'Tajikistan'                                    , N'en-US', null, N'countries_dom'                         ,  209, N'Tajikistan';
exec dbo.spTERMINOLOGY_InsertOnly N'Tanzania'                                      , N'en-US', null, N'countries_dom'                         ,  210, N'Tanzania';
exec dbo.spTERMINOLOGY_InsertOnly N'Thailand'                                      , N'en-US', null, N'countries_dom'                         ,  211, N'Thailand';
exec dbo.spTERMINOLOGY_InsertOnly N'Timor-Leste'                                   , N'en-US', null, N'countries_dom'                         ,  212, N'Timor-Leste';
exec dbo.spTERMINOLOGY_InsertOnly N'Tobago'                                        , N'en-US', null, N'countries_dom'                         ,  213, N'Tobago';
exec dbo.spTERMINOLOGY_InsertOnly N'Togo'                                          , N'en-US', null, N'countries_dom'                         ,  214, N'Togo';
exec dbo.spTERMINOLOGY_InsertOnly N'Tokelau'                                       , N'en-US', null, N'countries_dom'                         ,  215, N'Tokelau';
exec dbo.spTERMINOLOGY_InsertOnly N'Tonga'                                         , N'en-US', null, N'countries_dom'                         ,  216, N'Tonga';
exec dbo.spTERMINOLOGY_InsertOnly N'Trinidad'                                      , N'en-US', null, N'countries_dom'                         ,  217, N'Trinidad';
exec dbo.spTERMINOLOGY_InsertOnly N'Tunisia'                                       , N'en-US', null, N'countries_dom'                         ,  218, N'Tunisia';
exec dbo.spTERMINOLOGY_InsertOnly N'Turkey'                                        , N'en-US', null, N'countries_dom'                         ,  219, N'Turkey';
exec dbo.spTERMINOLOGY_InsertOnly N'Turkmenistan'                                  , N'en-US', null, N'countries_dom'                         ,  220, N'Turkmenistan';
exec dbo.spTERMINOLOGY_InsertOnly N'Turks'                                         , N'en-US', null, N'countries_dom'                         ,  221, N'Turks';
exec dbo.spTERMINOLOGY_InsertOnly N'Tuvalu'                                        , N'en-US', null, N'countries_dom'                         ,  222, N'Tuvalu';
exec dbo.spTERMINOLOGY_InsertOnly N'Uganda'                                        , N'en-US', null, N'countries_dom'                         ,  223, N'Uganda';
exec dbo.spTERMINOLOGY_InsertOnly N'Ukraine'                                       , N'en-US', null, N'countries_dom'                         ,  224, N'Ukraine';
exec dbo.spTERMINOLOGY_InsertOnly N'United Arab Emirates'                          , N'en-US', null, N'countries_dom'                         ,  225, N'United Arab Emirates';
exec dbo.spTERMINOLOGY_InsertOnly N'United Kingdom'                                , N'en-US', null, N'countries_dom'                         ,  226, N'United Kingdom';
exec dbo.spTERMINOLOGY_InsertOnly N'Uruguay'                                       , N'en-US', null, N'countries_dom'                         ,  227, N'Uruguay';
exec dbo.spTERMINOLOGY_InsertOnly N'Uzbekistan'                                    , N'en-US', null, N'countries_dom'                         ,  228, N'Uzbekistan';
exec dbo.spTERMINOLOGY_InsertOnly N'Vanuatu'                                       , N'en-US', null, N'countries_dom'                         ,  229, N'Vanuatu';
exec dbo.spTERMINOLOGY_InsertOnly N'Vatican City'                                  , N'en-US', null, N'countries_dom'                         ,  230, N'Vatican City';
exec dbo.spTERMINOLOGY_InsertOnly N'Venezuela'                                     , N'en-US', null, N'countries_dom'                         ,  231, N'Venezuela';
exec dbo.spTERMINOLOGY_InsertOnly N'Vietnam'                                       , N'en-US', null, N'countries_dom'                         ,  232, N'Vietnam';
exec dbo.spTERMINOLOGY_InsertOnly N'Virgin Islands'                                , N'en-US', null, N'countries_dom'                         ,  233, N'Virgin Islands';
exec dbo.spTERMINOLOGY_InsertOnly N'Wallis'                                        , N'en-US', null, N'countries_dom'                         ,  234, N'Wallis';
exec dbo.spTERMINOLOGY_InsertOnly N'Yemen'                                         , N'en-US', null, N'countries_dom'                         ,  235, N'Yemen';
exec dbo.spTERMINOLOGY_InsertOnly N'Zambia'                                        , N'en-US', null, N'countries_dom'                         ,  236, N'Zambia';
exec dbo.spTERMINOLOGY_InsertOnly N'Zimbabwe'                                      , N'en-US', null, N'countries_dom'                         ,  237, N'Zimbabwe';


GO


set nocount off;
GO

/* -- #if Oracle
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_Countries_en_us()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_Countries_en_us')
/
-- #endif IBM_DB2 */



if not exists(select * from TERMINOLOGY where NAME = 'LBL_BROWSER_TITLE' and LANG = 'en-US' and MODULE_NAME is null and DISPLAY_NAME = 'SplendidCRM' and DELETED = 0) begin -- then
	exec dbo.spTERMINOLOGY_Update 'LBL_BROWSER_TITLE', 'en-US', null, null, null, 'SplendidCRM';
end -- if;
GO


/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_browser_title()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_browser_title')
/

-- #endif IBM_DB2 */




exec dbo.spTERMINOLOGY_LIST_ReorderAll null;
GO


/* -- #if Oracle
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			RAISE;
	END;
	COMMIT WORK;
END;
/
-- #endif Oracle */

/* -- #if IBM_DB2
	commit;
  end
/

call dbo.spTERMINOLOGY_LIST_ReorderAll_Defaults()
/

call dbo.spSqlDropProcedure('spTERMINOLOGY_LIST_ReorderAll_Defaults')
/

-- #endif IBM_DB2 */







